{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///external \"@grafana/data\"","webpack:///./style/CoordinateSpace.css?a586","webpack:///./style/CoordinateSpace.css","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///./style/SimpleEditor.css?9203","webpack:///./style/SimpleEditor.css","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./Models/CoordinateSpaceClass.tsx","webpack:///./Models/PointClass.tsx","webpack:///./Models/PositionParameterClass.tsx","webpack:///./Models/OrientedLinkClass.tsx","webpack:///./Models/TextObjectClass.tsx","webpack:///./Models/LinkURLClass.tsx","webpack:///./Functions/fetchMetrics.tsx","webpack:///./Functions/getResultQuery.tsx","webpack:///./Models/RegionClass.tsx","webpack:///./Functions/initRegionCoordinateSpace.tsx","webpack:///./Functions/initPoint.tsx","webpack:///./Functions/initOrientedLink.tsx","webpack:///./Models/ArrayInputClass.tsx","webpack:///./Functions/Input/inputButton.tsx","webpack:///./Functions/Input/inputText.tsx","webpack:///./Models/InputClass.tsx","webpack:///./Functions/CreateInput/createInputCoor.tsx","webpack:///./Functions/EditParameter/editGoodParameter.tsx","webpack:///./Models/LowerLimitClass.tsx","webpack:///./Functions/Input/inputSeriesColorPicker.tsx","webpack:///./components/Parametrage/fixColor.tsx","webpack:///./components/Parametrage/VariableColor.tsx","webpack:///./components/Parametrage/manageLowerLimit.tsx","webpack:///./components/CoordinateSpace/manageQuery.tsx","webpack:///./components/Parametrage/manageLink.tsx","webpack:///./components/Parametrage/styleComponent.tsx","webpack:///./components/Parametrage/textObjects.tsx","webpack:///./components/Parametrage/parametresGeneriques.tsx","webpack:///./components/CoordinateSpace/manageAuxiliaryQuery.tsx","webpack:///./components/CoordinateSpace/coordinateSpace.tsx","webpack:///./Functions/searchIDLimit.tsx","webpack:///./Models/InputSelectableClass.tsx","webpack:///./Functions/CreateInput/createInputsPoint.tsx","webpack:///./Functions/Input/inputTextPoint.tsx","webpack:///./Models/ArrayInputSelectableClass.tsx","webpack:///./Functions/EditParameter/editGoodParameterPoint.tsx","webpack:///./Functions/Input/inputSelectPoint.tsx","webpack:///./components/Parametrage/positionParameters.tsx","webpack:///./components/CoordinateSpace/point/point.tsx","webpack:///./Functions/Input/inputTextOrientedLink.tsx","webpack:///./Functions/Input/inputSelectOrientedLink.tsx","webpack:///./Functions/CreateInput/createInputsOrientedLink.tsx","webpack:///./Functions/EditParameter/editGoodParameterOrientedLink.tsx","webpack:///./components/CoordinateSpace/orientedLink/orientedLink.tsx","webpack:///./components/CoordinateSpace/addCoordinate.tsx","webpack:///./Functions/isNumFloat.tsx","webpack:///./Functions/parseColor.tsx","webpack:///./components/Draw/drawRectangleExtend.tsx","webpack:///./Functions/getLowerLimit.tsx","webpack:///./components/Draw/drawRectangle.tsx","webpack:///./components/Draw/drawPoint.tsx","webpack:///./components/Draw/drawOrientedLink.tsx","webpack:///./components/legend.tsx","webpack:///./SimplePanel.tsx","webpack:///./components/coordinateSpaceInitial.tsx","webpack:///./Models/dropZone.tsx","webpack:///./components/importInput.tsx","webpack:///./components/CoordinateSpace/editCoordinateSpace.tsx","webpack:///./components/CoordinateSpace/point/editPoint.tsx","webpack:///./components/CoordinateSpace/orientedLink/editOrientedLink.tsx","webpack:///./components/CoordinateSpace/manageCoordinateSpace.tsx","webpack:///./Functions/Input/inputSelect.tsx","webpack:///./components/display.tsx","webpack:///./Functions/loaderGabarit.tsx","webpack:///./components/gabarit.tsx","webpack:///./components/metadataComponent.tsx","webpack:///./SimpleEditor.tsx","webpack:///./module.ts","webpack:///./types.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","__WEBPACK_EXTERNAL_MODULE__5__","locals","___CSS_LOADER_API_IMPORT___","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","constructor","__assign","assign","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","__values","linkURL","meta","lowerLimit","textObj","mainMetric","metrics","colorMode","traceBack","traceBorder","positionParameter","lowerLimitClass","valueMetric","drawGraphicMarker","shape","sizeWidth","sizeHeight","rotateArrow","positionShapeX","positionShapeY","color","associateOrientedLinksIn","associateOrientedLinksOut","widthInitialSpaceDefault","heightInitialSpaceDefault","positionXDefault","positionYDefault","CoordinateSpaceClass","labelAPositionX","labelAPositionY","labelBPositionX","labelBPositionY","tooltipPositionA","tooltipPositionB","orientationLink","size","pointAPositionX","pointAPositionY","colorCoordinateA","pointBPositionX","pointBPositionY","colorCoordinateB","valueMainMetricA","valueMainMetricB","pointIn","pointOut","regionIn","regionOut","zIndex","pointCPositionX","pointCPositionY","isIncurved","mainMetricB","metricsB","pointAPositionXDefault","pointAPositionYDefault","pointBPositionXDefault","pointBPositionYDefault","pointCPositionXDefault","pointCPositionYDefault","isTextTooltip","colorBack","colorText","generateObjectText","valueGenerateObjectText","generateAuxiliaryElement","followLink","hoveringTooltipLink","hoveringTooltipText","region","props","series","line","refId","returnQuery","metric","point","orientedLink","dataB","query","keyValue","nameQuery","split","flatMap","res","filters","cnt","debug","countValue","sizeQuery","fields","values","manageValue","idSVG","coords","coordsDefault","img","newId","initTextObject","TextObject","bold","italic","underline","legendElement","numericFormatElement","unit","displayObjectInTooltip","addColorTextElement","colorTextElement","addColorBackElement","colorBackElement","LinkURLClass","PositionParameterClass","format","xMin","xMax","yMin","yMax","xMinInitialSpace","xMaxInitialSpace","widthBackground","yMinInitialSpace","yMaxInitialSpace","heightBackground","expr","widthInitialSpace","parseInt","heightInitialSpace","newZIndex","num","linkUrl","initPositionParameter","uneClassInput","getId","setId","getUneClassInput","setUneClassInput","required","_handleChange","withLabel","labelWidth","inputWidth","onClick","variant","placeholder","disabled","onChange","inputType","getLabel","setLabel","getName","setName","getInputType","setInputType","getRequired","setRequired","getPlaceholder","setPlaceholder","getValue","setValue","isInitial","l10n","newFieldLabel","InputClass","basics","newFieldPositionXMin","inputCoordinate","minXPosition","newFieldPositionXMax","maxXPosition","newFieldPositionYMin","minYPosition","newFieldPositionYMax","maxYPosition","editGoodParameter","editCoor","newValue","heigthBackground","startsWith","coordinate","limitValueInitialSpace","coorInitialSpace","position","lowerLimitMin","lowerLimitMax","backColor","borderColor","sizeBorder","couleur","keyInt","text","_onChange","width","className","margin","padding","backgroundColor","border","newColor","setStateAsyncSeuil","state","setState","callBack","lowerLimitCallBack","onChangeColorFond","newSeuil","initComponent","onChangeColorContour","onChangeSzContour","addButtonColor","textInputColor","colorVariable","switchOutlineColor","labelSize","thicknessOutline","placeHolderSize","console","log","switchBackgroundColor","event","currentTarget","htmlResult","componentDidMount","LowerLimitClass","componentDidUpdate","prevProps","render","Component","setStateAsyncArrayInputClass","setStateAsyncLowerLimit","setStateAsyncIndex","setStateAsyncNbVariation","fillVarInput","saveData","addInput","newLowerLimit","arrayInputClass","slice","ArrayInputClass","handleValueChange","idInput","idLine","cpy","keyFondColorPicker","keyContourDiv","nameInputSize","isLink","onChangeVariation","nbVariation","arrayInput","pSeuil","addMultipleVariation","nb","seuil","addVariation","onClickVariation","displayInput","dynamicInput","newKey","infoSeuil","variationNumber","number","addColor","setStateAsyncCoordinate","setStateAsyncOpenLowerLimit","onSave","onSwitchFond","onSwitchContour","onSwitchColorMode","defaultSizeBorder","onToggleLowerLimit","isOpen","openLowerLimit","onToggle","display","genericParameter","variableColor","checked","traceBackground","traceContour","onOptionsChange","callBackToParent","callBackB","callBackToParentMainMetricB","getMainMetricB","arrayOrientedLink","arrayOrientedLinks","idCoordinate","onChangeSelectManageValue","newMainMetric","onChangeSelectManageValueB","_handleChangeKey","_handleChangeKeyB","_handleChangeKeyValue","_handleChangeKeyValueB","onChangeSelectQuery","selectQueryDefault","onChangeSelectQueryB","onToggleMainMetric","collapseMainMetric","onToggleLinkA","collapseLinkA","onToggleLinkB","collapseLinkB","getDefaultQueryB","defaultValue","selectQuery","getDefaultManageValue","selectManageValue","getDefaultManageValueB","fillSelectQuery","valueSelect","duplicate","newSelectManageValue","selectDefaultManageValue","setStateAsyncMainMetric","setStateAsyncMainMetricB","displayHtml","currentOrientedLink","allowCustomValue","marginTop","setStateAsyncFollowLink","setStateAsyncHoveringTooltipLink","setStateAsyncHoveringTooltipText","onChangeFollowLink","onChangeHoveringTooltipLink","onChangeHoveringTooltipText","coordinateSpace","metricPrincipalSetting","linkTooltip","textInTooltip","saveParent","onChangeBold","onChangeItalic","onChangeUnderline","oldStyle","stateAsyncTextObject","textObject","onChangeValeur","newTextObject","onChangeBackColor","onChangeColorText","onSwitchGenerateObjectText","onChangeLegendElement","onChangeunit","onChangeFormatageNumeriqueTextObject","onSwitchdisplayObjectInTooltip","onSwitchAddColorTextElement","onSwitchAddColorBackElement","onSwitchisTextTooltip","onChangeColorTextElement","onChangeColorBackElement","onChangeValueGenerateObjectTextLegendElement","onChangeValueGenerateObjectTextunit","onChangeValueGenerateObjectTextFormatageNumeriqueTextObject","onSwitchValueGenerateObjectTextdisplayObjectInTooltip","onSwitchValueGenerateObjectTextAddColorTextElement","onSwitchValueGenerateObjectTextAddColorBackElement","onChangeValueGenerateObjectTextColorTextElement","onChangeValueGenerateObjectTextColorBackElement","newText","principalMetric","hidden","textRegion","textBubble","colorBackground","generateTextObject","legend","digitalFormatting","mesureUnit","objectDisplayTextTooltip","colorTextOptional","optionalBackgroundColor","auxiliaryElement","onToggleLinkCollapse","collapseLink","onToggleTextObject","collapseTextObject","saveAuxMetrics","newAuxMetrics","isLinkB","idCurrentCoordinateSpace","isPoint","newArrayPoints","arrayPoints","newArrayLink","isRegion","newArrayRegion","regionCoordinateSpace","getAuxiliaryMetrics","auxiliaryMetrics","arrayRegions","onToggleCollapse","collapse","onToggleCollapseLinkA","onToggleCollapseLinkB","getAllQuery","allQuery","getCurrentQuery","getCurrentQueryB","newAuxiliaryMetrics","onChangeKey","idCurrentAuxMetrics","onChangeKeyB","onChangeValueKey","onChangeValueKeyB","onChangeManageValue","onChangeManageValueB","addAuxiliaryMetric","displayInputs","addAuxiliaryMetricB","deleteAuxiliaryMetric","deleteAuxiliaryMetricB","getAllManageValue","getCurrentManageValue","auxMetrics","generateInputs","idCoordinateSpace","styleTitle","textAlign","styleMainDiv","styleContent","flexDirection","justifyContent","marginBottom","styleSelect","mapItems","currentRefQuery","currentRefQueryB","styleButtonAdd","setStateAsyncArrayCoor","setStateAsyncArrayInput","deleteOwnInput","confirm","arrayCoor","onChangeSelectSVG","selectedDefaultSVG","isAddCoordinate","newArrayCoor","coordinateSpaceInitial","severityAlert","titleAlert","hiddenAlert","setTimeout","callBackToOther","oldCoor","callBackManageLowerLimit","coordiante","callBackLowerLimit","callBackMainMetric","onChangeRadioMode","selectedRadio","fillSelectSVG","selectedIDSvg","allIDSelected","defaultSVG","baseMap","modeSVG","setInterval","arrId","arrIdVerif","listElement","getElementById","querySelectorAll","from","localName","sort","a","error","returnAllId","clearInterval","getDataInInput","fillInputEspaceCoor","prevState","height","htmlInput","tmp","newCoordDefault","editGoodParameterExtend","getGoodValue","param","finalItem","divKey","newInput","bottom","right","title","severity","marginRight","input_type","optionValues","defaultValueColor","getOptionValues","setOptionValues","getDefaultValueColor","setDefaultValueColor","newFieldDrawGraphicMarker","InputSelectableClass","newFieldShape","newFieldSizeWidthShape","newFieldSizeHeightShape","newFieldRotateArrow","newFieldPositionXShape","newFieldPositionYShape","editGoodParameterPoint","newValueSelect","savePositionParameter","newPositionParameter","newArrayOrientedLink","getPositionParameter","handleChangeLabelAPositionX","handleChangeLabelAPositionY","handleChangeLabelBPositionX","handleChangeLabelBPositionY","handleChangeTooltipPositionA","handleChangeTooltipPositionB","handleChangeSelectOrientedLinkToUpgrade","newOrientedLinkComparedToToUpgrade","orientedLinkComparedToUpgrade","handleChangeSelectOrientedLinkToDowngrade","newOrientedLinkComaparedToDowngrade","orientedLinkComparedToDowngrade","downgradeLayerLevel","callBackZIndex","upgradeLayerLevel","defineListOrientedLink","listOptions","selectableValue","defineLabelPositionInputs","defineTooltipPositionInputs","optionsSelectTooltipPosition","defineLayerLevel","collapseLayerLevel","collapsepositionParameter","collapseLabel","collapseTooltip","callBackToParentZIndex","ArrayInputSelectableClass","isAddPoint","generateInputsPoint","arrayPointClass","newPoint","newInputList","dataCoordinateSpace","dataPoint","newFieldOrientationLink","newFieldSize","newFieldPointAPositionX","newFieldPointAPositionY","newFieldPointBPositionX","newFieldPointBPositionY","newFieldLabelLink","newFieldRegionIn","newFieldRegionOut","editGoodParameterOrientedLink","setStateAsyncOrientedLink","defineDataRegion","defineDataPoint","updateAssociatePointAndRegion","newOrientedLink","arrayPoint","arrayRegion","isAddLink","callBackMainMetricB","generateInputsOrientedLink","arrayOptionsRegion","optionRegion","arrayOptionsPoint","valueLabel","optionPoint","zIndexUpdated","searchNewId","allCoordinateSpace","defineIdPoint","defineIdOrientedLink","lastId","allRegion","zIndexOrientedLink","setAsyncOption","newIdx","indexRegion","indexPoint","indexOrientedLink","newCoordinate","returnEditMode","callBackPoint","callBackOrientedLink","isNumFloat","String","match","parseColor","colorEdit","transparency","arrayColor","editColorSvgZone","colorSVG","colorBorderSVG","changeColorElement","fill","fillOpacity","stroke","strokeOpacity","strokeWidth","generateValueMetricElement","valueQuery","converValueQuery","roundMetrics","toPrecision","setStateTooltip","styleTooltip","styleMetrics","valueQueryResult","tooltipValue","displayValuesAuxMetrics","colorBorder","displayValueQuery","getPositionTextObjectRegionSVG","elementSVG","coor","top","left","isUploaded","xSVG","ySVG","widthSVG","heightSVG","arrayAllValues","attributes","nodeValue","iX","iY","valueToCheck","rX","rY","generateTooltipAndEditColor","stateIsFill","min","minFloat","parseFloat","maxFloat","resultTooltip","coordinateTextObject","styleWrite","styleLabelTooltipSVG","textDecoration","defineTextDecoration","fontStyle","defineFontStyle","fontWeight","defineFontWeight","fontSize","fontFamily","police","styleMainMetricTooltipSVG","reqMetrics","uneCoor","getValuesAuxiliaryMetrics","valueAuxiliaryMetric","countTotalValues","resultTotalValues","numberLoop","labels","countValues","getConvertValueAuxMetrics","valueBrut","roundValue","html","valuesAuxMetrics","addColorText","addColorBack","styleTitle2","marginLeft","valueAuxMetric","isNaN","getCoordinatePxAdaptToInitialSpace","coorRegion","coorRegionDefault","rightPx","topPx","initialSpace","leftPx","bottomPx","ratioLeft","ratioRight","ratioTop","ratioBottom","Math","round","defineLimitX","defineLimitY","currentRegion","leftToDraw","rightToDraw","bottomToDraw","renduFinal","pBorder","textColor","coorHTML","styleDiv","background","backgroundSize","cursor","styleTextDiv","verticalAlign","styleMetricsDiv","buttonAddLinkIsActive","buttonAddIncurvedLinkIsActive","fillState","mainStyle","coordinateX","coordinateY","transformCoordonneesToPx","isMax","limitValueBorder","getPositionBorder","fillCoordinate","useLimit","limit","createRectangle","pLeft","pRight","pTop","pBottom","coordinateInitial","displayArea","resultHTML","defineBorderRadius","defineRotate","definePositionLabelX","positionLabel","labelPositionX","definePositionLabelY","labelPositionY","defineMainMetric","decimal","defineAuxMetric","auxMetric","defineTextObject","htmlTextObject","htmlMainMetric","dislayTextObjectInTooltip","textColorTextObject","backColoTextObject","displayMainMetric","displayMainMetricInTooltip","addTextColorMainMetric","addBackColorMainMetric","textColorMainMetric","backColorMainMetric","legendMainMetric","styleLabel","styleMainMetric","whiteSpace","toUpperCase","defineHtmlLinkTooltip","definePositionX","positionX","ratioX","widthImage","x","newArrayPoint","defineBorderSize","definePositionY","positionY","shapeGraphicMarker","ratioY","heightImage","defineSizeGraphicMarkerPx","drawPoint","valueToolTip","defineContentTooltip","linkUrlPoint","borderRadius","rotate","defineBorderColor","defineBackgroundColor","idPoint","placement","tooltipPosition","displayLabel","sizePolice","valueMainMetric","localisation","contentTooltip","contentTooltipMainMetric","contentTooltipAuxMetric","contentTooltipAssociateLink","arrayOrientedLinksIn","associateOrientedLinkIn","arrayOrientedLinksOut","associateOrientedLinkOut","refMainMetric","displayAuxMetricInTooltip","addTextColorAuxMetric","addBackColorAuxMetric","textColorAuxMetric","backColorAuxMetric","legendAuxMetric","styleMainTitle","styleTitleMainMetric","styleTitleAuxMetric","styleTitle2AuxMetric","styleContentMainMetrics","styleContentAuxMetrics","styleTitleAssociateLink","styleContentAssociateLink","valuesAuxiliaryMetrics","orientedLinkIn","nameOrientedLink","orientedLinkOut","level","substring","valuePositionX","valuePositionY","labelSynchroX","whatLabel","labelMainMetric","offsetWidth","labelSynchroY","offsetHeight","defineParallelOrientedLinks","listParallelOrientedLinks","associateRegionIn","associateRegionOut","associatePointIn","associatePointOut","defineCoor4DRegion","heightPanel","widthPanel","xMinPx","yMinPx","regionSVGHtml","xMinSVG","xMaxSVG","yMaxSVG","yMinSVG","xMinSVGCoor","xMaxSVGCoor","yMinSVGCoor","yMaxSVGCoor","getPaddingPoint","idMultiLink","pointHtml","isIn","xMidIn","xMidOut","yMidIn","yMidOut","xResult","xMinIn","xMaxIn","xMinOut","xMaxOut","yMinIn","yMaxIn","yMinOut","yMaxOut","paddingPoint","positionXADefault","positionYADefault","positionXBDefault","positionYBDefault","ratioXin","ratioXout","yResult","defineValueTooptip","typeLink","refMainMetricA","refMainMetricB","styleTitle2MainMetric","auxiliaryMetricsB","metricB","valuesAuxiliaryMetricsB","defineColorTextLabel","defineSizeLink","synchroLinkX","synchroLinkY","drawLink","xA0","yA0","xB0","yB0","xCByClick0","yCByClick0","xA","yA","xB","yB","xCByClick","yCByClick","xC","yC","distanceAC","sqrt","angleDegreeAC","atan2","PI","xMidAC","yMidAC","xArrowAC","yArrowAC","distanceBC","angleDegreeBC","xMidBC","yMidBC","xArrowBC","yArrowBC","distanceAB","angleDegreeAB","xMidAB","yMidAB","xArrowAB","yArrowAB","valueTooltipMonodirectional","valueTooltipBidirectionalA","valueTooltipBidirectionalB","linkUrlOrientedLink","first","sizeArrowTriangle","alignContent","borderLeft","borderRight","borderBottom","defineBackColor","second","xCoordinateA","yCoordinateA","xCoordinateB","yCoordinateB","xCoordinateC","positionXCDefault","yCoordinateC","positionYCDefault","setStateAsyncFinalHTML","fillLowerLimit","allLimit","max","lower","listStyleType","fillRegion","rendu","ownElement","closeLegend","callBackClose","fillPoint","allPoint","fillLink","allLinks","renduState","maxWidth","hiddenLegend","overflowY","scrollbarColor","scrollbarWidth","resize","backgroundImage","paddingLeft","lineHeight","finalHTML","setStateLegendAsync","defineLimit","jsxItems","image","getCoordinatesToDrawPointWithClick","clickX","nativeEvent","clientX","layerY","createPointToClick","updatePositionOrientedLink","addAssociateOrientedLinkToPoint","namePointIn","namePointOut","indexOrientedLinkAssociate","updateAssociateOrientedLinkInToPoint","newAssociateLinkIn","namePoint","updateAssociateOrientedLinkOutToPoint","resetCoordinatesToDrawLinkWithClick","coordinatesToDrawLinkWithClick","labelPoint","labelRegion","getCoordinatesToDrawOrientedLinkWithClick","coordinates","objectIn","objectOut","pointC","xDefault","yDefault","createOrientedLinkToClick","charAt","xMinDefault","xMaxDefault","yMinDefault","yMaxDefault","positionXdefault","positionYdefault","substr","offsetParent","getCoordinatesToDrawIncurvedOrientedLinkWithClick","pointA","pointB","defineValueX","defaultPosition","defineValueY","getValuesAuxiliaryMetricsPoint","getValuesAuxiliaryMetricsOrientedLink","getValuesAuxiliaryMetricsOrientedLinkB","changeValueButtonToLink","valueButton","changeValueButtonToIncurvedLink","changeValueButtonToPoint","getCoordinates","numberClickDiv","callInFunc","resetButtonManage","updateButtonCss","buttonManage","addNode","addPoint","addLink","addIncurvedLink","ZoomSVG","allActionButton","callMethod","setAsyncButtonManage","oldValue","nbClickButton","positionLegend","newLegend","offsetX","offsetY","handleClick","tt","chargeRegion","displayRegion","editIdString","str","strSplit","newStr","checkIfDisplayButton","arrayUrl","canDisplayButton","displayButton","currentImage","svg","exec","resultWidth","resultHeight","newBaseMap","layerImage","fetch","documentId","getAttribute","elmnt","addEventListener","evt","keyCode","displayTooltipSVG","newDataSVG","dataTooltipSVG","tooltipSVG","hideTooltipSVG","SVG_PathImage","parentElementSVG","aElement","createElementNS","styleRegion","getValuesAuxiliaryMetricsRegionSVG","displayAuxiliaryMetricsRegionSVG","stopDisplayLegend","htmlTooltipRegionSVG","regionSVG","styleMainTooltipSVG","styleElementTooltipSVG","onMouseOver","parentElement","onMouseOut","tooltip","displayPoint","getValuesMainMetricPoint","displayOrientedLink","getValuesMainMetricOrientedLink","getValuesMainMetricOrientedLinkB","pointAX","pointDefaultAX","pointBX","pointDefaultBX","pointAY","pointDefaultAY","pointBY","pointDefaultBY","colorA","colorB","NaN","updateOnlyInitialSpace","styleBackground","backgroundRepeat","opacity","styleSVG_2","defaultStyle","autoHide","hideHorizontalTrack","autoHeightMax","onDismiss","onClickBackdrop","dangerouslySetInnerHTML","__html","onChangeSwitchDisplayInitialSpace","newInitialSpace","fileReader","onChangeHandler","selectedFile","files","readerFile","FileReader","upload","onload","saveImportFile","extensionFile","readAsDataURL","readAsText","save","file","arrayFileName","parse","loadMultiRegions","loadMultiPoints","loadMultiLinks","onMultiListFileChanged","newData","multiDeletFile","findIndex","url","multiUploadDisplay","lenght","totalResult","PointValidator","newSpace","resultId","RegionValidator","LinkValidator","lien","UrlValidator","saveImportUrl","multi","pointUpdate","updatedPoint","loadMonoPoint","toLoad","selector","regionUpdate","updatedRegion","loadMonoRegion","linkUpdate","updatedLink","loadMonoLink","points","regions","links","loadTotal","panel","texteSettings","fetchMulti","loaderTotal","totalUrlInput","json","onToggleTotalUrl","collapseTotalUrl","onToggleMultiUrl","collapseMultiUrl","onToggleMultiUpload","collapseMultiUpload","onTotalUrlChanged","onTotalListUrlChanged","total","onMultiUrlChanged","multiUrlInput","onMultiListUrlChanged","addTotalUrlInput","addMultiUrlInput","totalDeletUrl","multiDeletUrl","tempo","totalUrlDisplay","multiUrlDisplay","delAll","toDel","oldData","find","fillSelectRegionSpace","onChangeSelectCoordinate","selectCoordinateSpaceDefault","valueExist","stockTmpCoordinatesSpace","selectCoordinateSpace","fillSelectPoint","fillSelectOrientedLink","tabsVariable","goToTab","contentTabEdit","hideBorder","active","onChangeTab","callParent","newPolice","pPolice","pSize","pStyle","setStateAsyncPolice","setStateAsyncsize","setStateAsyncStyle","handleChangesize","onChangePolice","onImageChanged","onChangeSwitchModeSVG","onChangeHeightBaseMap","onChangeWidthBaseMap","saveStyleData","uploadImage","nameUploadedImage","defineValueImage","imageUploaded","textDefault","labelClass","coordParse","coord","coordParseRegion","filterParseRegion","element","filterParse","onChangeSelectQuerryID","newGabaritFile","saveGabaritFile","queryID","onToggleSelectUrl","collapseSelectURL","saveGabaritURL","GabaritValidator","fileName","loadGabarit","loaded","globalGabarit","global","templateGabaritPoint","templateGabaritRegion","templateGabaritLink","templateGabaritPointDefault","templateGabaritRegionDefault","templateGabaritLinkDefault","templates","gab","fetchUrl","loadDefaultGabarit","newGabarit","gabaritDefault","fetchGabarit","addFilterDynamic","checkCoordinateFilterPoint","dataFrame","checkCoordinateFilterLink","onToggleGabaritUrl","onToggleGabaritDefault","collapseGabaritDefault","onToggleGabarit","collapseGabarit","onGabaritUrlChanged","gabaritUrlInput","onGabaritDefaultUrlChanged","saveGabaritDefaultUrl","onGabaritListUrlChanged","addGabaritUrlInput","valid","addGabaritDefaultUrlInput","gabaritDeletUrl","gabaritDeletFile","gabarit","gabaritDeletFileDefault","defaultColor","checkLoaderGabarit","loaderGabarit","tmpLabelAPosition","tmpLabelBPosition","tmpToolTipA","tmpToolTipB","generateValue","generateAux","filterPoint","posPoint","metaPoint","positionParameterPoint","mainMetricPoint","metricPoint","linkURLPoint","valueMetricPoint","drawGraphicMarkerPoint","shapePoint","sizeWidthPoint","sizeHeightPoint","colorPoint","associateOrientedLinksInPoint","associateOrientedLinksOutPoint","gabaritFileTmp","labelfix","xylabel","xylabelfix","filtered","tooltipA","tooltipB","xylabelA","xylabelB","newID","labelCoordX","labelCoordY","labelCoord","pos","oneQuery","add","labelCo","defaultPositionX","defaultPositionY","filterLink","posALink","posBLink","posCLink","nameLink","metaLink","labelLink","positionParameterLink","mainMetricALink","metricALink","mainMetricBLink","metricBLink","linkURLLink","sizeLink","colorALink","colorBLink","valueMetricALink","valueMetricBLink","pointInLink","pointOutLink","regionInLink","regionOutLink","isIncurvedLink","xylabelC","xylabelfixA","xylabelfixB","xylabelfixC","labelCoordA","labelCoordB","labelCoordC","coordindex","defaultPositionAX","defaultPositionBX","defaultPositionCX","defaultPositionAY","defaultPositionBY","defaultPositionCY","maA","maB","filterRegion","posRegion","metaRegion","positionParameterRegion","mainMetricRegion","metricRegion","linkURLRegion","idSVGRegion","modeRegion","imgRegion","orientedLinkAssociate","hoveringTooltipTex","gabaritUrlDisplay","gabaritDisplay","readOnly","selectQuerryID","gabaritDefaultDisplay","printDefault","printPoint","printRegion","printLink","printTemp","setPromiseMeta","old","initArrayTag","addElement","tagArray","fonctionne","addStatsdrgdhtjfy","addElementArray","testMoi","onRefreshChanged","refresh","onTimeZoneChanged","timezone","onPanelChanged","Id","onToggleDashboardData","collapseDashboardData","onToggleTimeSelector","collapseTimeSelector","onTogglePanelData","collapsePanelData","onTogglePrincipalTargets","collapsePrincipalTarget","goToTabCoordinateSpace","tabsCoordinateSpace","currentDashboard","mono","monoUrlInput","componentWillUnmount","testtt","simpleEditor","spaceInitialVisualisation","CoordinateSpace","PureComponent","setDefaults","saveDefaultGabaritFile","arrayLinks","fondIsActive","contourIsActive","contentJson","uid","editable","version","shemaVersion","actualPanel","panelList","panelId","panelType","panelTargets","promTargets","promGlobalTargets","Json","timeRange","to","personalTarget","timeQuery","promUrl","queryProm","queryPromGlobal","queryPromRange","listStep","jsonQueryReturn","jsonGlobalQueryReturn","mainTarget","mainQueryProm","mainQueryReturn","status","resultType","__name__","job","testMainQueryReturn","listCollapsePoint","listCollapseOrientedLink","orientedLinkToUpgrade","orientedLinkToDowngrade","checkIndexMultiLink","setEditor"],"mappings":"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,EAAG1B,WACf,OACA,GACA,IACA,EACA,gBACAsF,GAEI4oB,EAAgD,IAAInD,GACxDrpB,EAAG1B,WAAa,UAChB,wBACA,UAAY0B,EAAG1B,WACf,OACA,GACA,IACA,EACA,gBACAsF,GAEI6oB,EAAgD,IAAIpD,GACxDrpB,EAAG1B,WAAa,UAChB,wBACA,UAAY0B,EAAG1B,WACf,OACA,GACA,IACA,EACA,gBACAsF,GAEI8oB,EAAgD,IAAIrD,GACxDrpB,EAAG1B,WAAa,UAChB,wBACA,UAAY0B,EAAG1B,WACf,OACA,GACA,IACA,EACA,gBACAsF,GAEI+oB,EAA0C,IAAItD,GAClDrpB,EAAG1B,WAAa,YAChB,QACA,QAAU0B,EAAG1B,WACb,OACA,GACA,IACA,EACA,aACAsF,GAEIgpB,EAAyC,IAAIvD,GACjDrpB,EAAG1B,WAAa,WAChB,oBACA,WAAa0B,EAAG1B,WAChB,SACA6tB,EACA,IACA,EACA,2BACAvoB,GAEIipB,EAA0C,IAAIxD,GAClDrpB,EAAG1B,WAAa,YAChB,qBACA,YAAc0B,EAAG1B,WACjB,SACA6tB,EACA,IACA,EACA,4BACAvoB,GAyFF,MAjB2C,CACzC+oB,EACAN,EACAC,EAzE4C,IAAIjD,GAChDrpB,EAAG1B,WAAa,UAChB,mBACA,UAAY0B,EAAG1B,WACf,SACA8tB,EACA,IACA,EACA,0BACAxoB,GAkEAgpB,EACAL,EACAC,EAlE6C,IAAInD,GACjDrpB,EAAG1B,WAAa,WAChB,oBACA,WAAa0B,EAAG1B,WAChB,SACA8tB,EACA,IACA,EACA,2BACAxoB,GA2DAipB,EACAJ,EACAC,EA3D+C,IAAIrD,GACnDrpB,EAAG1B,WAAa,aAChB,WACA,aAAe0B,EAAG1B,WAClB,SACA,CACE,CAAEoL,MAAO,MAAOvM,OAAO,GACvB,CAAEuM,MAAO,KAAMvM,OAAO,IAExB,IACA,EACA,gBACAyG,GAEoD,IAAIylB,GACxDrpB,EAAG1B,WAAa,UAChB,wBACA,UAAY0B,EAAG1B,WACf,OACA,GACA,IACA,EACA,gBACAsF,GAEoD,IAAIylB,GACxDrpB,E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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./CoordinateSpace.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./CoordinateSpace.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./CoordinateSpace.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"div.inputCoor {\\n  margin-bottom: 2%; }\\n\\ndiv.buttonAddCoor {\\n  text-align: center; }\\n\", \"\",{\"version\":3,\"sources\":[\"CoordinateSpace.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,iBAAiB,EAAE;;AAErB;EACE,kBAAkB,EAAE\",\"file\":\"CoordinateSpace.css\",\"sourcesContent\":[\"div.inputCoor {\\n  margin-bottom: 2%; }\\n\\ndiv.buttonAddCoor {\\n  text-align: center; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./SimpleEditor.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./SimpleEditor.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./SimpleEditor.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"div.divSimpleEditor {\\n  width: 100%;\\n  /* margin: 2%;\\n  padding: 2%; */ }\\n\\ndiv.CoordinateSpaceInitital {\\n  /* margin: 1%; */\\n  /* margin-bottom: 8%; */ }\\n\\nh3.titreSection {\\n  margin-bottom: 2%;\\n  /*   color: blue; */ }\\n\\n.parameter-interface-container {\\n  width: 100%; }\\n\\n.parameter-interface-list-title {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-direction: row;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-justify-content: space-around;\\n      -ms-flex-pack: distribute;\\n          justify-content: space-around;\\n  border-bottom: 4px solid white;\\n  margin: 10px 0; }\\n\\n.parameter-interface-title {\\n  padding: 10px;\\n  list-style: none;\\n  cursor: pointer; }\\n\", \"\",{\"version\":3,\"sources\":[\"SimpleEditor.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAW;EACX;gBACc,EAAE;;AAElB;EACE,gBAAgB;EAChB,uBAAuB,EAAE;;AAE3B;EACE,iBAAiB;EACjB,mBAAmB,EAAE;;AAEvB;EACE,WAAW,EAAE;;AAEf;EACE,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,2BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,qCAA6B;MAA7B,yBAA6B;UAA7B,6BAA6B;EAC7B,8BAA8B;EAC9B,cAAc,EAAE;;AAElB;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe,EAAE\",\"file\":\"SimpleEditor.css\",\"sourcesContent\":[\"div.divSimpleEditor {\\n  width: 100%;\\n  /* margin: 2%;\\n  padding: 2%; */ }\\n\\ndiv.CoordinateSpaceInitital {\\n  /* margin: 1%; */\\n  /* margin-bottom: 8%; */ }\\n\\nh3.titreSection {\\n  margin-bottom: 2%;\\n  /*   color: blue; */ }\\n\\n.parameter-interface-container {\\n  width: 100%; }\\n\\n.parameter-interface-list-title {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  border-bottom: 4px solid white;\\n  margin: 10px 0; }\\n\\n.parameter-interface-title {\\n  padding: 10px;\\n  list-style: none;\\n  cursor: pointer; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { LinkURLClass } from './LinkURLClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { Metric, Metadata } from 'types';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\n\nexport class CoordinateSpaceClass {\n  /** coordinate id */\n  id: number;\n  /** query */\n  linkURL: LinkURLClass;\n  meta: Metadata[];\n  lowerLimit: LowerLimitClass[];\n  label: string;\n  textObj: TextObject;\n  mainMetric: Metric;\n  metrics: Metric[];\n  colorMode: boolean;\n  traceBack: boolean;\n  traceBorder: boolean;\n  positionParameter: PositionParameterClass;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: Metadata[],\n    lowerLimit: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass\n  ) {\n    this.id = id;\n    this.linkURL = linkURL;\n    this.meta = meta;\n    this.lowerLimit = lowerLimit;\n    this.label = label;\n    this.textObj = textObj;\n    this.mainMetric = mainMetric;\n    this.metrics = metrics;\n    this.colorMode = colorMode;\n    this.traceBack = traceBack;\n    this.traceBorder = traceBorder;\n    this.positionParameter = positionParameter;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { CoordinateSpaceClass } from './CoordinateSpaceClass';\nimport { LinkURLClass } from './LinkURLClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { Metric, Metadata } from 'types';\n//import { LinkClass } from './LinkClass';\nimport { PositionParameterClass } from './PositionParameterClass';\n\n/**\n * to do\n */\nexport class PointClass extends CoordinateSpaceClass {\n  name: string;\n  valueMetric: string;\n  drawGraphicMarker: SelectableValue<string>;\n  shape: SelectableValue<string>;\n  //sizeWidth: SelectableValue<string>;\n  sizeWidth: string;\n  sizeHeight: SelectableValue<string>;\n  rotateArrow: string;\n  positionShapeX: string;\n  positionShapeY: string;\n  color: string;\n  associateOrientedLinksIn: any[];\n  associateOrientedLinksOut: any[];\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  positionXDefault: string;\n  positionYDefault: string;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: Metadata[],\n    lowerLimitClass: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass,\n    name: string,\n    valueMetric: string,\n    drawGraphicMarker: SelectableValue<string>,\n    shape: SelectableValue<string>,\n    //sizeWidth: SelectableValue<string>,\n    sizeWidth: string,\n    sizeHeight: SelectableValue<string>,\n    rotateArrow: string,\n    positionShapeX: string,\n    positionShapeY: string,\n    color: string,\n    associateOrientedLinksIn: any[],\n    associateOrientedLinksOut: any[],\n    widthInitialSpaceDefault: string,\n    heightInitialSpaceDefault: string,\n    positionXDefault: string,\n    positionYDefault: string\n  ) {\n    super(id, linkURL, meta, lowerLimitClass, label, textObj, mainMetric, metrics, colorMode, traceBack, traceBorder, positionParameter);\n    this.name = name;\n    this.valueMetric = valueMetric;\n    this.drawGraphicMarker = drawGraphicMarker;\n    this.shape = shape;\n    this.sizeWidth = sizeWidth;\n    this.sizeHeight = sizeHeight;\n    this.rotateArrow = rotateArrow;\n    this.positionShapeX = positionShapeX;\n    this.positionShapeY = positionShapeY;\n    this.color = color;\n    this.associateOrientedLinksIn = associateOrientedLinksIn;\n    this.associateOrientedLinksOut = associateOrientedLinksOut;\n    this.widthInitialSpaceDefault = widthInitialSpaceDefault;\n    this.heightInitialSpaceDefault = heightInitialSpaceDefault;\n    this.positionXDefault = positionXDefault;\n    this.positionYDefault = positionYDefault;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\n\nexport class PositionParameterClass {\n  labelAPositionX: string;\n  labelAPositionY: string;\n  labelBPositionX: string;\n  labelBPositionY: string;\n  tooltipPositionA: SelectableValue<string>;\n  tooltipPositionB: SelectableValue<string>;\n\n  constructor(\n    labelAPositionX: string,\n    labelAPositionY: string,\n    labelBPositionX: string,\n    labelBPositionY: string,\n    tooltipPositionA: SelectableValue<string>,\n    tooltipPositionB: SelectableValue<string>\n  ) {\n    this.labelAPositionX = labelAPositionX;\n    this.labelAPositionY = labelAPositionY;\n    this.labelBPositionX = labelBPositionX;\n    this.labelBPositionY = labelBPositionY;\n    this.tooltipPositionA = tooltipPositionA;\n    this.tooltipPositionB = tooltipPositionB;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { LinkURLClass } from './LinkURLClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { Metric, Metadata } from 'types';\nimport { CoordinateSpaceClass } from './CoordinateSpaceClass';\nimport { PositionParameterClass } from './PositionParameterClass';\n\nexport class OrientedLinkClass extends CoordinateSpaceClass {\n  name: string;\n  orientationLink: SelectableValue<string>;\n  size: string;\n  pointAPositionX: string;\n  pointAPositionY: string;\n  colorCoordinateA: string;\n  pointBPositionX: string;\n  pointBPositionY: string;\n  colorCoordinateB: string;\n  valueMainMetricA: string;\n  valueMainMetricB: string;\n  pointIn: string;\n  pointOut: string;\n  regionIn: string;\n  regionOut: string;\n  zIndex: number;\n  pointCPositionX: string;\n  pointCPositionY: string;\n  isIncurved: SelectableValue<boolean>;\n  mainMetricB: Metric;\n  metricsB: Metric[];\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  pointAPositionXDefault: string;\n  pointAPositionYDefault: string;\n  pointBPositionXDefault: string;\n  pointBPositionYDefault: string;\n  pointCPositionXDefault: string;\n  pointCPositionYDefault: string;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: Metadata[],\n    lowerLimitClass: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass,\n    name: string,\n    orientationLink: SelectableValue<string>,\n    size: string,\n    pointAPositionX: string,\n    pointAPositionY: string,\n    colorCoordinateA: string,\n    pointBPositionX: string,\n    pointBPositionY: string,\n    colorCoordinateB: string,\n    valueMainMetricA: string,\n    valueMainMetricB: string,\n    pointIn: string,\n    pointOut: string,\n    regionIn: string,\n    regionOut: string,\n    zIndex: number,\n    pointCPositionX: string,\n    pointCPositionY: string,\n    isIncurved: SelectableValue<boolean>,\n    mainMetricB: Metric,\n    metricsB: Metric[],\n    widthInitialSpaceDefault: string,\n    heightInitialSpaceDefault: string,\n    pointAPositionXDefault: string,\n    pointAPositionYDefault: string,\n    pointBPositionXDefault: string,\n    pointBPositionYDefault: string,\n    pointCPositionXDefault: string,\n    pointCPositionYDefault: string\n  ) {\n    super(id, linkURL, meta, lowerLimitClass, label, textObj, mainMetric, metrics, colorMode, traceBack, traceBorder, positionParameter);\n    this.name = name;\n    this.orientationLink = orientationLink;\n    this.size = size;\n    this.pointAPositionX = pointAPositionX;\n    this.pointAPositionY = pointAPositionY;\n    this.colorCoordinateA = colorCoordinateA;\n    this.pointBPositionX = pointBPositionX;\n    this.pointBPositionY = pointBPositionY;\n    this.colorCoordinateB = colorCoordinateB;\n    this.valueMainMetricA = valueMainMetricA;\n    this.valueMainMetricB = valueMainMetricB;\n    this.pointIn = pointIn;\n    this.pointOut = pointOut;\n    this.regionIn = regionIn;\n    this.regionOut = regionOut;\n    this.zIndex = zIndex;\n    this.pointCPositionX = pointCPositionX;\n    this.pointCPositionY = pointCPositionY;\n    this.isIncurved = isIncurved;\n    this.mainMetricB = mainMetricB;\n    this.metricsB = metricsB;\n    this.widthInitialSpaceDefault = widthInitialSpaceDefault;\n    this.heightInitialSpaceDefault = heightInitialSpaceDefault;\n    this.pointAPositionXDefault = pointAPositionXDefault;\n    this.pointAPositionYDefault = pointAPositionYDefault;\n    this.pointBPositionXDefault = pointBPositionXDefault;\n    this.pointBPositionYDefault = pointBPositionYDefault;\n    this.pointCPositionXDefault = pointCPositionXDefault;\n    this.pointCPositionYDefault = pointCPositionYDefault;\n  }\n}\n","import { Style } from 'components/Parametrage/styleComponent';\n\nexport interface GenerateTextObject {\n  /** legend element */\n  legendElement: string;\n  /** numeric format element */\n  numericFormatElement: string;\n  /** unity mesure element */\n  unit: string;\n  /** display object in text */\n  displayObjectInTooltip: boolean;\n  /** display object permanently */\n  // displayObjectPermanently: boolean;\n  /** color text element active */\n  addColorTextElement: boolean;\n  /** color text element */\n  colorTextElement: string;\n  /** color back element active */\n  addColorBackElement: boolean;\n  /** color back element */\n  colorBackElement: string;\n}\n\n/** value of textObjects component */\nexport class TextObject {\n  /** legend object */\n  // legend: boolean;\n  /** object value */\n  value: string;\n  /** text display in element or tooltip */\n  isTextTooltip: boolean;\n  /** back color region */\n  colorBack: string;\n  /** color text region */\n  colorText: string;\n  /** style */\n  style: Style;\n  /** style text region */\n  // styleText: string;\n  /** generate object text */\n  generateObjectText: boolean;\n  /** if generateObjectText is true when use variable to stock data */\n  valueGenerateObjectText: GenerateTextObject;\n  /** text value for auxiliary metrics */\n  generateAuxiliaryElement: GenerateTextObject;\n\n  constructor(\n    // legend: boolean,\n    value: string,\n    isTextTooltip: boolean,\n    colorBack: string,\n    colorText: string,\n    style: Style,\n    // styleText: string,\n    generateObjectText: boolean,\n    valueGenerateObjectText: GenerateTextObject,\n    generateAuxiliaryElement: GenerateTextObject\n  ) {\n    // this.legend = legend;\n    this.value = value;\n    this.isTextTooltip = isTextTooltip;\n    this.colorBack = colorBack;\n    this.colorText = colorText;\n    this.style = style;\n    // this.styleText = styleText;\n    this.generateObjectText = generateObjectText;\n    this.valueGenerateObjectText = valueGenerateObjectText;\n    this.generateAuxiliaryElement = generateAuxiliaryElement;\n  }\n}\n","/**\n * class for parametrage metric\n */\nexport class LinkURLClass {\n  /**\n   * link to follow when click data in dashboard\n   */\n  followLink: string;\n  /**\n   * link for tooltip\n   */\n  hoveringTooltipLink: string;\n  /**\n   * text for tooltip\n   */\n  hoveringTooltipText: string;\n\n  constructor(followLink: string, hoveringTooltipLink: string, hoveringTooltipText: string) {\n    this.followLink = followLink;\n    this.hoveringTooltipLink = hoveringTooltipLink;\n    this.hoveringTooltipText = hoveringTooltipText;\n  }\n\n  /**\n   * get followingLink\n   */\n  get getFollowLink(): string {\n    return this.followLink;\n  }\n\n  /**\n   * set followingLink\n   * @param {string} value new value\n   */\n  set setFollowLink(value: string) {\n    this.followLink = value;\n  }\n\n  /**\n   * get hoveringTooltipLink\n   */\n  get getHoveringTooltipLink(): string {\n    return this.hoveringTooltipLink;\n  }\n\n  /**\n   * setHoveringTooltipLink\n   * @param {string} value new value\n   */\n  set setHoveringTooltipLink(value: string) {\n    this.hoveringTooltipLink = value;\n  }\n\n  /**\n   * get hoveringTooltipText\n   */\n  get getHoveringTooltipText(): string {\n    return this.hoveringTooltipText;\n  }\n\n  /**\n   * set hoveringTooltipText\n   * @param {string} value new Value\n   */\n  set setHoveringTooltipText(value: string) {\n    this.hoveringTooltipText = value;\n  }\n}\n","import { RegionClass } from '../Models/RegionClass';\nimport { PointClass } from '../Models/PointClass';\nimport { DataFrame } from '@grafana/data';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\nexport const reqMetricRegion = (region: RegionClass, props: any) => {\n  const data: DataFrame[] = [];\n\n  for (const line of props.data.series) {\n    if (line.refId === region.mainMetric.refId) {\n      data.push(line);\n    }\n  }\n  region.mainMetric.returnQuery = data;\n};\n\nexport const reqMetricAuxRegion = (region: RegionClass, props: any) => {\n  for (const metric of region.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n};\n\nexport const reqMetricPoint = (point: PointClass, props: any) => {\n  const data: DataFrame[] = [];\n  for (const line of props.data.series) {\n    if (line.refId === point.mainMetric.refId) {\n      data.push(line);\n    }\n  }\n  point.mainMetric.returnQuery = data;\n};\n\nexport const reqMetricAuxPoint = (point: PointClass, props: any) => {\n  for (const metric of point.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n};\n\nexport const reqMetricLink = (link: OrientedLinkClass, props: any) => {\n  const data: DataFrame[] = [];\n  for (const line of props.data.series) {\n    if (line.refId === link.mainMetric.refId) {\n      data.push(line);\n    }\n  }\n  link.mainMetric.returnQuery = data;\n};\n\nexport const reqMetricAuxLink = (link: OrientedLinkClass, props: any) => {\n  for (const metric of link.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n};\n\nexport const reqMetricOrientedLink = (orientedLink: OrientedLinkClass, props: any) => {\n  const data: DataFrame[] = [];\n  const dataB: DataFrame[] = [];\n  for (const line of props.data.series) {\n    if (line.refId === orientedLink.mainMetric.refId) {\n      data.push(line);\n    }\n    if (line.refId === orientedLink.mainMetricB.refId) {\n      dataB.push(line);\n    }\n  }\n  orientedLink.mainMetric.returnQuery = data;\n  orientedLink.mainMetricB.returnQuery = dataB;\n};\n\nexport const reqMetricAuxOrientedLink = (orientedLink: OrientedLinkClass, props: any) => {\n  for (const metric of orientedLink.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n  for (const metric of orientedLink.metricsB) {\n    const dataB: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        dataB.push(line);\n      }\n    }\n    metric.returnQuery = dataB;\n  }\n};\n\nexport const reqUpdateMetrics = (props: any) => {\n  // Update regions\n  for (const region of props.options.regionCoordinateSpace) {\n    reqMetricRegion(region, props);\n    reqMetricAuxRegion(region, props);\n  }\n  // Update links\n  for (const link of props.options.arrayLinks) {\n    reqMetricLink(link, props);\n    reqMetricAuxLink(link, props);\n  }\n\n  // Update links\n  for (const orientedLink of props.options.arrayOrientedLinks) {\n    reqMetricOrientedLink(orientedLink, props);\n    reqMetricAuxOrientedLink(orientedLink, props);\n  }\n  // Update points\n  for (const point of props.options.arrayPoints) {\n    reqMetricPoint(point, props);\n    reqMetricAuxPoint(point, props);\n  }\n};\n","import { Metric } from 'types';\nimport { DataFrame } from '@grafana/data';\nimport { Filtred } from '../Functions/loaderGabarit';\n\n/** search is key and keyValue is in query */\nconst searchNameIsKey = (query: DataFrame, mainMetric: Metric): boolean => {\n  if (mainMetric.key === '' && mainMetric.keyValue === '') {\n    return true;\n  }\n  let remove = query.name?.split('{');\n  const nameQuery: string[] =\n    remove![1].split(',').flatMap((value) => {\n      return value.replace(/[\\\"{}]/gm, '');\n    }) || [];\n  if (nameQuery && nameQuery.length > 0) {\n    for (const oneQuery of nameQuery) {\n      const keyValue: string[] = oneQuery.split('=');\n      if (keyValue.length === 2) {\n        if (keyValue[0] === mainMetric.key && keyValue[1] === mainMetric.keyValue) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const searchNameIsFilter = (query: DataFrame, mainMetric: Metric): boolean => {\n  if (!mainMetric.filter) {\n    return true;\n  }\n  let res = 0;\n  const filters: Filtred[] = mainMetric.filter;\n  let remove = query.name?.split('{');\n  const nameQuery: string[] =\n    remove![1].split(',').map((value) => {\n      return value.replace(/[\\\"{}]/gm, '');\n    }) || [];\n  if (nameQuery && nameQuery.length > 0) {\n    for (const oneQuery of nameQuery) {\n      const keyValue: string[] = oneQuery.split('=');\n      for (const filter of filters) {\n        if (keyValue.length === 2) {\n          if (keyValue[0] === filter.label && keyValue[1] === filter.value) {\n            res++;\n          }\n        }\n      }\n    }\n    // console.log(res);\n    // console.log(filters.length)\n    if (res === filters.length) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getResultQuery = (mainMetric: Metric) => {\n  let cnt: number | null = null;\n  if (mainMetric.returnQuery && mainMetric.returnQuery.length > 0) {\n    const debug: number[] = [];\n    let countValue = 0;\n\n    cnt = 0;\n    if (!mainMetric.filter) {\n      for (const line of mainMetric.returnQuery) {\n        const result = searchNameIsKey(line, mainMetric);\n        if (result) {\n          const sizeQuery: number = line.fields[0].values.length;\n          // in grafana 7 change line.field[0] to line.field[1]\n          for (let i = 0; i < sizeQuery; i++) {\n            if (line.fields.length > 0 && line.fields[0].values.get(i)) {\n              cnt += line.fields[0].values.get(i);\n              debug.push(line.fields[0].values.get(i));\n              ++countValue;\n            }\n          }\n        }\n      }\n      if (mainMetric.manageValue === 'avg') {\n        cnt /= countValue;\n      } else if (mainMetric.manageValue === 'err') {\n        if (countValue > 1) {\n          cnt = null;\n        }\n      }\n    } else {\n      for (const line of mainMetric.returnQuery) {\n        const result = searchNameIsFilter(line, mainMetric);\n        if (result) {\n          const sizeQuery: number = line.fields[0].values.length;\n          // in grafana 7 change line.field[0] to line.field[1]\n          for (let i = 0; i < sizeQuery; i++) {\n            if (line.fields.length > 0 && line.fields[0].values.get(i)) {\n              cnt += line.fields[0].values.get(i);\n              debug.push(line.fields[0].values.get(i));\n              ++countValue;\n            }\n          }\n        }\n      }\n      if (mainMetric.manageValue === 'avg') {\n        cnt /= countValue;\n      } else if (mainMetric.manageValue === 'err') {\n        if (countValue > 1) {\n          cnt = null;\n        }\n      }\n    }\n  }\n\n  return cnt;\n};\n/*********************************** the best solution it's check the instant checbox in addquery */\n\n/*****************************Other solution but there are a problem with average of node_network_up */\n\n// export const getResultQuery = (mainMetric: Metric) => {\n//   let cnt: number | null = null;\n//   console.log(mainMetric.returnQuery);\n//   if (mainMetric.returnQuery && mainMetric.returnQuery.length > 0) {\n//     const debug: number[] = [];\n//     let countValue = 0;\n\n//     cnt = 0;\n//     for (const line of mainMetric.returnQuery) {\n//       const result = searchNameIsKey(line, mainMetric);\n//       if (result) {\n//         const sizeQuery: number = line.fields[0].values.length;\n//         // in grafana 7 change line.field[0] to line.field[1]\n//         for (let i = 0; i < sizeQuery; i++) {\n//           if (line.fields.length > 0 && line.fields[0].values.get(i)) {\n//             cnt += line.fields[0].values.get(i);\n//             debug.push(line.fields[0].values.get(i));\n//             ++countValue;\n//           }\n//           if (countValue > -1 && mainMetric.manageValue === 'sum') {\n//             break;\n//           }\n//         }\n//       }\n//     }\n//     if (mainMetric.manageValue === 'avg') {\n//       cnt /= countValue;\n//     } else if (mainMetric.manageValue === 'err') {\n//       if (countValue > -1) {\n//         cnt = null;\n//       }\n//     }\n//     console.log(debug);\n//   }\n\n//   return cnt;\n// };\n","import { CoordinateSpaceClass } from './CoordinateSpaceClass';\nimport { OrientedLinkClass } from './OrientedLinkClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { LinkURLClass } from './LinkURLClass';\nimport { Metric, Metadata } from 'types';\nimport { PositionParameterClass } from './PositionParameterClass';\n\nexport interface Coord4D {\n  /** coordinate x min */\n  xMin: string;\n  /** coordinate x max */\n  xMax: string;\n  /** coordinate y min */\n  yMin: string;\n  /** coordinate y max */\n  yMax: string;\n}\n\nexport class RegionClass extends CoordinateSpaceClass {\n  /** id of region object svg */\n  idSVG: string;\n  /** id svg or coordinate */\n  mode: boolean;\n  orientedLink: OrientedLinkClass[];\n  /** if coordinate mode, stock coordinate here */\n  coords: Coord4D;\n  /** coordinate to creation */\n  coordsDefault: Coord4D;\n  /** background image region if coordinate mode */\n  img: string;\n  /** width of initial */\n  widthInitialSpaceDefault: string;\n  /** height of initial */\n  heightInitialSpaceDefault: string;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: Metadata[],\n    lowerLimitClass: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass,\n    idSVG: string,\n    orientedLink: OrientedLinkClass[],\n    coords: Coord4D,\n    coordsDefault: Coord4D,\n    mode: boolean,\n    img: string,\n    widthInitialSpaceDefault: string,\n    heightInitialSpaceDefault: string\n  ) {\n    super(id, linkURL, meta, lowerLimitClass, label, textObj, mainMetric, metrics, colorMode, traceBack, traceBorder, positionParameter);\n    this.idSVG = idSVG;\n    this.mode = mode;\n    this.orientedLink = orientedLink;\n    this.coords = coords;\n    this.coordsDefault = coordsDefault;\n    this.img = img;\n    this.widthInitialSpaceDefault = widthInitialSpaceDefault;\n    this.heightInitialSpaceDefault = heightInitialSpaceDefault;\n  }\n}\n","import { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { Metric } from 'types';\n\n/** init CoordinateSpaceExtendClass */\nexport const initRegionCoordinateSpace = (index: number): RegionClass => {\n  const newId: number = index + 1;\n  const initTextObject: TextObject = new TextObject(\n    '',\n    false,\n    'rgb(255, 255, 255, 0)',\n    'black',\n    { bold: false, italic: false, underline: false },\n    true,\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: false,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    },\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: true,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    }\n  );\n  const linkURL: LinkURLClass = new LinkURLClass('', '', '');\n  const coords: Coord4D = {\n    xMin: '0',\n    xMax: '0',\n    yMin: '0',\n    yMax: '0',\n  };\n  const coordsDefault: Coord4D = {\n    xMin: '0',\n    xMax: '0',\n    yMin: '0',\n    yMax: '0',\n  };\n  const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n  const newCoordinate: RegionClass = new RegionClass(\n    newId,\n    linkURL,\n    [],\n    [],\n    '',\n    initTextObject,\n    { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' },\n    [],\n    false,\n    false,\n    false,\n    positionParameter,\n    '',\n    [],\n    coords,\n    coordsDefault,\n    true,\n    '',\n    '',\n    ''\n  );\n  return newCoordinate;\n};\n\nexport const cloneRegionCoordinateSpace = (\n  region: RegionClass,\n  xMinInitialSpace: number,\n  xMaxInitialSpace: number,\n  widthBackground: number,\n  yMinInitialSpace: number,\n  yMaxInitialSpace: number,\n  heightBackground: number\n): RegionClass => {\n  const initTextObject: TextObject = new TextObject(\n    // region.textObj.legend,\n    region.textObj.value,\n    region.textObj.isTextTooltip,\n    region.textObj.colorBack,\n    region.textObj.colorText,\n    region.textObj.style,\n    region.textObj.generateObjectText,\n    region.textObj.valueGenerateObjectText,\n    region.textObj.generateAuxiliaryElement\n  );\n  const linkURL: LinkURLClass = new LinkURLClass(region.linkURL.followLink, region.linkURL.hoveringTooltipLink, region.linkURL.hoveringTooltipText);\n  const coords: Coord4D = {\n    xMin: region.coords.xMin,\n    xMax: region.coords.xMax,\n    yMin: region.coords.yMin,\n    yMax: region.coords.yMax,\n  };\n  const coordsDefault: Coord4D = {\n    xMin: region.coordsDefault.xMin,\n    xMax: region.coordsDefault.xMax,\n    yMin: region.coordsDefault.yMin,\n    yMax: region.coordsDefault.yMax,\n  };\n  const positionParameter: PositionParameterClass = new PositionParameterClass(\n    region.positionParameter.labelAPositionX,\n    region.positionParameter.labelAPositionY,\n    region.positionParameter.labelBPositionX,\n    region.positionParameter.labelBPositionY,\n    region.positionParameter.tooltipPositionA,\n    region.positionParameter.tooltipPositionB\n  );\n  const mainMetric: Metric = {\n    key: region.mainMetric.key,\n    unit: region.mainMetric.unit,\n    format: region.mainMetric.format,\n    keyValue: region.mainMetric.keyValue,\n    refId: region.mainMetric.refId,\n    expr: region.mainMetric.expr,\n    returnQuery: region.mainMetric.returnQuery,\n    manageValue: region.mainMetric.manageValue,\n  };\n\n  // const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n  // const xMinDefault = (((parseInt(region.coordsDefault.xMin, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n  // const xMaxDefault = (((parseInt(region.coordsDefault.xMax, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n\n  // const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n  // const yMinDefault = (((parseInt(region.coordsDefault.yMin, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n  // const yMaxDefault = (((parseInt(region.coordsDefault.yMax, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n\n  // const coordsDefault: Coord4D = {\n  //   xMin: xMinDefault,\n  //   xMax: xMaxDefault,\n  //   yMin: yMinDefault,\n  //   yMax: yMaxDefault,\n  // };\n\n  const newCoordinate: RegionClass = new RegionClass(\n    region.id,\n    linkURL,\n    region.meta,\n    region.lowerLimit,\n    region.label,\n    initTextObject,\n    mainMetric,\n    region.metrics,\n    region.colorMode,\n    region.traceBack,\n    region.traceBorder,\n    positionParameter,\n    region.idSVG,\n    region.orientedLink,\n    coords,\n    coordsDefault,\n    region.mode,\n    region.img,\n    region.widthInitialSpaceDefault,\n    region.heightInitialSpaceDefault\n  );\n  return newCoordinate;\n};\n","import { TextObject } from '../Models/TextObjectClass';\nimport { LinkURLClass } from '../Models/LinkURLClass';\nimport { PositionParameterClass } from '../Models/PositionParameterClass';\nimport { Metric } from '../types';\nimport { PointClass } from '../Models/PointClass';\n//rgba(255, 255, 255, 0)\nexport const initPoint = (index: number): PointClass => {\n  const newId: number = index;\n  const initTextObject: TextObject = new TextObject(\n    '',\n    false,\n    'white',\n    'black',\n    { italic: false, bold: false, underline: false },\n    true,\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: false,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    },\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: true,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: true,\n      colorTextElement: '',\n      addColorBackElement: true,\n      colorBackElement: 'black',\n    }\n  );\n  const linkURL: LinkURLClass = new LinkURLClass('', '', '');\n\n  const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n  const newCoordinate: PointClass = new PointClass(\n    newId,\n    linkURL,\n    [],\n    [],\n    '',\n    initTextObject,\n    { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' },\n    [],\n    false,\n    false,\n    false,\n    positionParameter,\n    'point' + newId.toString(),\n    '',\n    { label: 'Yes', value: 'true' },\n    { label: 'Circle', value: 'circle' },\n    '12',\n    { label: 'Medium', value: 'medium' },\n    '0',\n    '0',\n    '0',\n    'black',\n    [],\n    [],\n    '0',\n    '0',\n    '0',\n    '0'\n  );\n  return newCoordinate;\n};\n\nexport const clonePoint = (\n  point: PointClass,\n  xMinInitialSpace: number,\n  xMaxInitialSpace: number,\n  widthBackground: number,\n  yMinInitialSpace: number,\n  yMaxInitialSpace: number,\n  heightBackground: number\n): PointClass => {\n  const initTextObject: TextObject = new TextObject(\n    // point.textObj.legend,\n    point.textObj.value,\n    point.textObj.isTextTooltip,\n    point.textObj.colorBack,\n    point.textObj.colorText,\n    point.textObj.style,\n    point.textObj.generateObjectText,\n    point.textObj.valueGenerateObjectText,\n    point.textObj.generateAuxiliaryElement\n  );\n  const linkURL: LinkURLClass = new LinkURLClass(point.linkURL.followLink, point.linkURL.hoveringTooltipLink, point.linkURL.hoveringTooltipText);\n  const positionParameter: PositionParameterClass = new PositionParameterClass(\n    point.positionParameter.labelAPositionX,\n    point.positionParameter.labelAPositionY,\n    point.positionParameter.labelBPositionX,\n    point.positionParameter.labelBPositionY,\n    point.positionParameter.tooltipPositionA,\n    point.positionParameter.tooltipPositionB\n  );\n  const mainMetric: Metric = {\n    key: point.mainMetric.key,\n    unit: point.mainMetric.unit,\n    format: point.mainMetric.format,\n    keyValue: point.mainMetric.keyValue,\n    filter: point.mainMetric.filter,\n    refId: point.mainMetric.refId,\n    expr: point.mainMetric.expr,\n    returnQuery: point.mainMetric.returnQuery,\n    manageValue: point.mainMetric.manageValue,\n  };\n\n  const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n  const positionXDefault = (((parseInt(point.positionShapeX, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n\n  const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n  const positionYDefault = (((parseInt(point.positionShapeY, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n\n  const newCoordinate: PointClass = new PointClass(\n    point.id,\n    linkURL,\n    point.meta,\n    point.lowerLimit,\n    point.label,\n    initTextObject,\n    mainMetric,\n    point.metrics,\n    point.colorMode,\n    point.traceBack,\n    point.traceBorder,\n    positionParameter,\n    point.name,\n    point.valueMetric,\n    point.drawGraphicMarker,\n    point.shape,\n    point.sizeWidth,\n    point.sizeHeight,\n    point.rotateArrow,\n    point.positionShapeX,\n    point.positionShapeY,\n    point.color,\n    point.associateOrientedLinksIn,\n    point.associateOrientedLinksOut,\n    point.widthInitialSpaceDefault,\n    point.heightInitialSpaceDefault,\n    positionXDefault,\n    positionYDefault\n  );\n  return newCoordinate;\n};\n","import { TextObject } from '../Models/TextObjectClass';\nimport { LinkURLClass } from '../Models/LinkURLClass';\nimport { PositionParameterClass } from '../Models/PositionParameterClass';\nimport { Metric } from '../types';\nimport { OrientedLinkClass } from '../Models/OrientedLinkClass';\n\nexport const initOrientedLink = (newId: number, newZIndex: number): OrientedLinkClass => {\n  const num: number = newId;\n  const zIndex: number = newZIndex;\n  const initTextObject: TextObject = new TextObject(\n    '',\n    false,\n    'white',\n    'black',\n    { bold: false, italic: false, underline: false },\n    true,\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: false,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    },\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: true,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: true,\n      colorTextElement: 'white',\n      addColorBackElement: true,\n      colorBackElement: 'black',\n    }\n  );\n\n  const linkUrl: LinkURLClass = new LinkURLClass('', '', '');\n  const initPositionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n  const initMainMetrics: Metric = { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' };\n  const initMainMetricsB: Metric = { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' };\n  const newCoordinate: OrientedLinkClass = new OrientedLinkClass(\n    num,\n    linkUrl,\n    [],\n    [],\n    '',\n    initTextObject,\n    // {\n    // \t'key': keyMainMetric || '',\n    // \t'unit': '',\n    // \t'format': '',\n    // \t'keyValue': keyValueMainMetric || '',\n    // \t'refId': refIdMainMetric || '',\n    // \t'manageValue': 'avg',\n    // }\n    initMainMetrics,\n    [],\n    false,\n    false,\n    false,\n    initPositionParameter,\n    'orientedLink' + num.toString(),\n    { label: 'Monodirectional', value: 'AB' },\n    '9',\n    '0',\n    '0',\n    '#5794F2',\n    '0',\n    '0',\n    '#E54658',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    zIndex,\n    '',\n    '',\n    {},\n    initMainMetricsB,\n    [],\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0'\n  );\n  // console.log('newCoordinate');\n  // console.log(newCoordinate);\n  return newCoordinate;\n};\n\nexport const cloneOrientedLink = (orientedLink: OrientedLinkClass): OrientedLinkClass => {\n  const initTextObject: TextObject = new TextObject(\n    //orientedLink.textObj.legend,\n    orientedLink.textObj.value,\n    orientedLink.textObj.isTextTooltip,\n    orientedLink.textObj.colorBack,\n    orientedLink.textObj.colorText,\n    orientedLink.textObj.style,\n    orientedLink.textObj.generateObjectText,\n    orientedLink.textObj.valueGenerateObjectText,\n    orientedLink.textObj.generateAuxiliaryElement\n  );\n  const linkURL: LinkURLClass = new LinkURLClass(\n    orientedLink.linkURL.followLink,\n    orientedLink.linkURL.hoveringTooltipLink,\n    orientedLink.linkURL.hoveringTooltipText\n  );\n  const positionParameter: PositionParameterClass = new PositionParameterClass(\n    orientedLink.positionParameter.labelAPositionX,\n    orientedLink.positionParameter.labelAPositionY,\n    orientedLink.positionParameter.labelBPositionX,\n    orientedLink.positionParameter.labelBPositionY,\n    orientedLink.positionParameter.tooltipPositionA,\n    orientedLink.positionParameter.tooltipPositionB\n  );\n  const mainMetric: Metric = {\n    key: orientedLink.mainMetric.key,\n    unit: orientedLink.mainMetric.unit,\n    format: orientedLink.mainMetric.format,\n    keyValue: orientedLink.mainMetric.keyValue,\n    refId: orientedLink.mainMetric.refId,\n    expr: orientedLink.mainMetric.expr,\n    returnQuery: orientedLink.mainMetric.returnQuery,\n    manageValue: orientedLink.mainMetric.manageValue,\n  };\n  const newCoordinate: OrientedLinkClass = new OrientedLinkClass(\n    orientedLink.id,\n    linkURL,\n    orientedLink.meta,\n    orientedLink.lowerLimit,\n    orientedLink.label,\n    initTextObject,\n    mainMetric,\n    orientedLink.metrics,\n    orientedLink.colorMode,\n    orientedLink.traceBack,\n    orientedLink.traceBorder,\n    positionParameter,\n    orientedLink.name,\n    orientedLink.orientationLink,\n    orientedLink.size,\n    orientedLink.pointAPositionX,\n    orientedLink.pointAPositionY,\n    orientedLink.colorCoordinateA,\n    orientedLink.pointBPositionX,\n    orientedLink.pointBPositionY,\n    orientedLink.colorCoordinateB,\n    orientedLink.valueMainMetricA,\n    orientedLink.valueMainMetricB,\n    orientedLink.pointIn,\n    orientedLink.pointOut,\n    orientedLink.regionIn,\n    orientedLink.regionOut,\n    orientedLink.zIndex,\n    orientedLink.pointCPositionX,\n    orientedLink.pointCPositionY,\n    orientedLink.isIncurved,\n    orientedLink.mainMetricB,\n    orientedLink.metricsB,\n    orientedLink.widthInitialSpaceDefault,\n    orientedLink.heightInitialSpaceDefault,\n    orientedLink.pointAPositionXDefault,\n    orientedLink.pointAPositionYDefault,\n    orientedLink.pointBPositionXDefault,\n    orientedLink.pointBPositionYDefault,\n    orientedLink.pointCPositionXDefault,\n    orientedLink.pointCPositionYDefault\n  );\n  return newCoordinate;\n};\n","import { InputClass } from './InputClass';\n\n/**\n * class ArayInput\n * @param id number\n * @param uneClassInput InputClass[]\n */\nexport class ArrayInputClass {\n  /**\n   * id\n   */\n  id: number;\n  /**\n   * array class InputClass\n   */\n  uneClassInput: InputClass[];\n\n  constructor(id: number, uneClassInput: InputClass[]) {\n    this.id = id;\n    this.uneClassInput = uneClassInput;\n  }\n\n  /**\n   * get id\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * set id\n   * @param id new id\n   */\n  setId(id: number) {\n    this.id = id;\n  }\n\n  /**\n   * get value of InputClass[]\n   */\n  getUneClassInput() {\n    return this.uneClassInput;\n  }\n\n  /**\n   * set a new InputClass[]\n   * @param uneClassInput new object InputClass[]\n   */\n  setUneClassInput(uneClassInput: InputClass[]) {\n    this.uneClassInput = uneClassInput;\n  }\n}\n","import React, { FunctionComponent } from 'react';\nimport { FormField, Button } from '@grafana/ui';\n\ntype InputButtonFieldProps = {\n  label: string;\n  value: string;\n  name: string;\n  required: boolean;\n  _handleChange: (event: any) => void;\n  id: string;\n  withLabel?: boolean;\n};\n\nconst InputButtonField: FunctionComponent<InputButtonFieldProps> = ({ label, value, name, required, _handleChange, id, withLabel }) => {\n  if (withLabel === true) {\n    return (\n      <div>\n        <FormField\n          label={label}\n          labelWidth={10}\n          inputWidth={20}\n          type=\"button\"\n          required={required}\n          name={name}\n          id={id}\n          onClick={_handleChange}\n          value={label || ''}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Button onClick={_handleChange} variant=\"danger\" id={id} size=\"md\">\n          Delete\n        </Button>\n        {/* <FormField label={''}\n\t\t\t\t\t\t\t\tinputWidth={20}\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\trequired={required}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tonClick={_handleChange}\n\t\t\t\t\t\t\t\tvalue={label || ''} /> */}\n      </div>\n    );\n  }\n};\n\nexport default InputButtonField;\n","import { FormField } from '@grafana/ui';\nimport React, { ChangeEvent, FunctionComponent } from 'react';\n// import { SelectableValue } from '@grafana/data';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  label: string;\n  name: string;\n  placeholder: string;\n  required: boolean;\n  value: string;\n  _handleChange: (event: ChangeEvent<HTMLInputElement>) => any;\n  disabled?: boolean;\n};\n\nexport const InputTextField: FunctionComponent<InputTextFieldProps> = ({ label, name, placeholder, required, value, _handleChange, disabled }) => (\n  <div>\n    <FormField\n      label={label}\n      labelWidth={15}\n      inputWidth={15}\n      type=\"text\"\n      required={required}\n      name={name}\n      value={value}\n      onChange={_handleChange}\n      placeholder={placeholder}\n      disabled={disabled ? disabled : false}\n    />\n  </div>\n);\n\nexport default InputTextField;\n\n// Math.round((label && label.length > 0 ? label.length : 1) * 1.7)\n","/**\n * class InputClass\n * @param id string\n * @param label string\n * @param name string\n * @param inputType string\n * @param required boolean\n * @param placeholder string?\n * @param value string?\n */\nexport class InputClass {\n  /**\n   * identiofiant unique\n   */\n  id: string;\n  /**\n   * label de l'input\n   */\n  label: string;\n  /**\n   * le nom de l'imput\n   */\n  name: string;\n  /**\n   * le type de l'input (button, text)\n   */\n  inputType: string;\n  /**\n   * obligatoire\n   */\n  required: boolean;\n  /**\n   * texte a afficher\n   */\n  placeholder?: string;\n  /**\n   * la value de l'input\n   */\n  value?: string;\n\n  constructor(id: string, label: string, name: string, inputType: string, required: boolean, placeholder?: string, value?: string) {\n    this.id = id;\n    this.label = label;\n    this.name = name;\n    this.inputType = inputType;\n    this.required = required;\n    this.placeholder = placeholder;\n    this.value = value;\n  }\n\n  /**\n   * get id\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * set id\n   * @param id new id\n   */\n  setId(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * get label\n   */\n  getLabel(): string {\n    return this.label;\n  }\n\n  /**\n   * set label\n   * @param label new label\n   */\n  setLabel(label: string) {\n    this.label = label;\n  }\n\n  /**\n   * get name\n   */\n  getName() {\n    return this.name;\n  }\n\n  /**\n   * set name\n   * @param name new name\n   */\n  setName(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * get type input\n   */\n  getInputType() {\n    return this.inputType;\n  }\n\n  /**\n   * set type input\n   * @param inputType new input type\n   */\n  setInputType(inputType: string) {\n    this.inputType = inputType;\n  }\n\n  /**\n   * get required\n   */\n  getRequired() {\n    return this.required;\n  }\n\n  /**\n   * set required\n   * @param required new value required\n   */\n  setRequired(required: boolean) {\n    this.required = required;\n  }\n\n  /**\n   * get placeholder\n   */\n  getPlaceholder() {\n    return this.placeholder;\n  }\n\n  /**\n   * set placeholder\n   * @param placeholder new value placeholder\n   */\n  setPlaceholder(placeholder: string) {\n    this.placeholder = placeholder;\n  }\n\n  /**\n   * get value\n   */\n  getValue() {\n    return this.value;\n  }\n\n  /**\n   * set value\n   * @param value new value\n   */\n  setValue(value: string) {\n    this.value = value;\n  }\n}\n","import { InputClass } from 'Models/InputClass';\n\nexport const createInputCoor = (id: number, isInitial: boolean): InputClass[] => {\n  const l10n = require('Localization/en.json');\n\n  const newFieldLabel: InputClass = new InputClass(\n    id.toString() + 'label',\n    l10n.basics.label,\n    'label' + id.toString(),\n    'text',\n    true,\n    'Label',\n    undefined\n  );\n  const newFieldPositionXMin: InputClass = new InputClass(\n    id.toString() + 'xMin',\n    l10n.inputCoordinate.minXPosition,\n    'positionXMin' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.minXPosition,\n    undefined\n  );\n  const newFieldPositionXMax: InputClass = new InputClass(\n    id.toString() + 'xMax',\n    l10n.inputCoordinate.maxXPosition,\n    'positionXMax' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.maxXPosition,\n    undefined\n  );\n  const newFieldPositionYMin: InputClass = new InputClass(\n    id.toString() + 'yMin',\n    l10n.inputCoordinate.minYPosition,\n    'positionYMin' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.minYPosition,\n    undefined\n  );\n  const newFieldPositionYMax: InputClass = new InputClass(\n    id.toString() + 'yMax',\n    l10n.inputCoordinate.maxYPosition,\n    'positionYMax' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.maxYPosition,\n    undefined\n  );\n  // const newFieldKey: InputClass = new InputClass(id.toString() + 'key',\n  // \tl10n.inputCoordinate.key, 'key' + id.toString(),\n  // \t'text', true, l10n.inputCoordinate.key, undefined);\n  // const newFieldValueKey: InputClass = new InputClass(id.toString() + 'valueKey',\n  // \tl10n.inputCoordinate.valueKey, 'valueKey' + id.toString(),\n  // \t'text', true, l10n.inputCoordinate.valueKey, undefined);\n  // const newFieldButton: InputClass = new InputClass(id.toString() + 'supprimer',\n  // \tl10n.basics.delete, 'supprimer' + id.toString(),\n  // \t'button', false, undefined, l10n.basics.delete);\n\n  let finalArray: InputClass[] = [];\n  if (!isInitial) {\n    finalArray = [\n      newFieldLabel,\n      // newFieldButton,\n    ];\n  } else {\n    finalArray = [newFieldLabel, newFieldPositionXMin, newFieldPositionXMax, newFieldPositionYMin, newFieldPositionYMax];\n  }\n\n  return finalArray;\n};\n","import { RegionClass } from 'Models/RegionClass';\nimport { CoordinateSpaceInitial } from 'types';\n\n/**\n * Edit the parameter in Coor object\n * @param {string} name parameter to edit\n * @param {Coor} editCoor object to edit\n * @param {string} newValue value to insert in the parameter\n * @returns {Coor} object edit\n */\nexport const editGoodParameter = (\n  name: string,\n  editCoor: CoordinateSpaceInitial,\n  newValue: string,\n  widthBackground: number,\n  heigthBackground: number\n): CoordinateSpaceInitial => {\n  if (name.startsWith('positionXMin')) {\n    editCoor.coordinate.xMin = limitValueInitialSpace(newValue, 1, widthBackground, heigthBackground);\n    //editCoor.coordinate.xMin = newValue;\n  } else if (name.startsWith('positionXMax')) {\n    editCoor.coordinate.xMax = limitValueInitialSpace(newValue, 2, widthBackground, heigthBackground);\n    //editCoor.coordinate.xMax = newValue;\n  } else if (name.startsWith('positionYMin')) {\n    editCoor.coordinate.yMin = limitValueInitialSpace(newValue, 3, widthBackground, heigthBackground);\n    //editCoor.coordinate.yMin = newValue;\n  } else if (name.startsWith('positionYMax')) {\n    editCoor.coordinate.yMax = limitValueInitialSpace(newValue, 4, widthBackground, heigthBackground);\n    //editCoor.coordinate.yMax = newValue;\n  }\n  return editCoor;\n};\n\nexport const limitValueInitialSpace = (coorInitialSpace: string, position: number, widthBackground: number, heigthBackground: number): string => {\n  //let result = 0;\n  //result = parseInt(coorInitialSpace, 10);\n  // if (position === 1 || position === 2) {\n  //   //xMin + xMax\n  //   if (result > widthBackground) {\n  //     result = widthBackground;\n  //   }\n  // } else if (position === 3 || position === 4) {\n  //   //yMin + yMax\n  //   if (result > heigthBackground) {\n  //     result = heigthBackground;\n  //   }\n  // }\n  //console.log(defaultInitialSpace);\n  // if (!defaultInitialSpace) {\n  //   result = coorInt;\n  // } else {\n  //   if (coorInt > 100) {\n  //     result = 100;\n  //   } else if (coorInt < 0) {\n  //     result = 0;\n  //   } else if (coorInt >= 0 && coorInt <= 100) {\n  //     result = coorInt;\n  //   } else {\n  //     result = 0;\n  //   }\n  // }\n  return coorInitialSpace;\n};\n\nexport const editGoodParameterExtend = (\n  name: string,\n  editCoor: RegionClass,\n  newValue: string\n  // widthInitialSpace?: string,\n  // heightInitialSpace?: string\n): RegionClass => {\n  if (name.startsWith('positionXMin')) {\n    editCoor.coords.xMin = newValue;\n  } else if (name.startsWith('positionXMax')) {\n    editCoor.coords.xMax = newValue;\n  } else if (name.startsWith('positionYMin')) {\n    editCoor.coords.yMin = newValue;\n  } else if (name.startsWith('positionYMax')) {\n    editCoor.coords.yMax = newValue;\n  } else if (name.startsWith('label')) {\n    editCoor.label = newValue;\n  } else if (name.startsWith('image')) {\n    editCoor.img = newValue;\n  } else if (name.startsWith('key')) {\n    editCoor.mainMetric.key = newValue;\n  } else if (name.startsWith('valueKey')) {\n    editCoor.mainMetric.keyValue = newValue;\n  }\n  return editCoor;\n};\n","export class LowerLimitClass {\n  id: number;\n  lowerLimitMin: string;\n  lowerLimitMax: string;\n  backColor: string;\n  borderColor: string;\n  sizeBorder: string;\n  constructor(id: number, lowerLimitMin: string, lowerLimitMax: string, backColor: string, borderColor: string, sizeBorder: string) {\n    this.id = id;\n    this.lowerLimitMin = lowerLimitMin;\n    this.lowerLimitMax = lowerLimitMax;\n    this.backColor = backColor;\n    this.borderColor = borderColor;\n    this.sizeBorder = sizeBorder;\n  }\n\n  get getId(): number {\n    return this.id;\n  }\n\n  set setId(id: number) {\n    this.id = id;\n  }\n\n  get getlowerLimitMin(): string {\n    return this.lowerLimitMin;\n  }\n\n  set setlowerLimitMin(lowerLimitMin: string) {\n    this.lowerLimitMin = lowerLimitMin;\n  }\n\n  get getlowerLimitMax(): string {\n    return this.lowerLimitMax;\n  }\n\n  set setlowerLimitMax(lowerLimitMax: string) {\n    this.lowerLimitMax = lowerLimitMax;\n  }\n\n  get getSeuilbackColor(): string {\n    return this.backColor;\n  }\n\n  set setSeuilbackColor(couleur: string) {\n    this.backColor = couleur;\n  }\n\n  get getSeuilborderColor(): string {\n    return this.borderColor;\n  }\n\n  set setSeuilborderColor(couleur: string) {\n    this.borderColor = couleur;\n  }\n\n  get getsizeBorder(): string {\n    return this.sizeBorder;\n  }\n\n  set setsizeBorder(size: string) {\n    this.sizeBorder = size;\n  }\n}\n","import { ColorPicker, FormLabel } from '@grafana/ui';\nimport React, { FunctionComponent } from 'react';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  color: string;\n  keyInt: number;\n  text: string;\n  _onChange: Function;\n  width?: number;\n};\n\n/**\n * 1.7 -> taille approximative d'un caractere\n * @param param0 voir InputTextFieldProps\n */\nexport const InputSeriesColorPicker: FunctionComponent<InputTextFieldProps> = ({ color, keyInt, text, _onChange, width }) => (\n  <div className=\"form-field\">\n    <FormLabel width={15}>{text}</FormLabel>\n    <div\n      id=\"colorPicker\"\n      style={{\n        margin: '0.5%',\n        padding: '0.5%',\n        backgroundColor: '#1f1f20',\n        border: '3px solid black',\n      }}\n    >\n      <ColorPicker color={color} onChange={(newColor) => _onChange(keyInt, newColor)} />\n    </div>\n  </div>\n);\n\nexport default InputSeriesColorPicker;\n// width || Math.round(text.length * 1.7)\n","import React from 'react';\n\nimport { FormField } from '@grafana/ui';\n\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\n\nimport InputSeriesColorPicker from 'Functions/Input/inputSeriesColorPicker';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** trace border? */\n  traceBorder: boolean;\n  /** trace background? */\n  traceBack: boolean;\n  /** last array lowerLimit */\n  lowerLimit: LowerLimitClass[];\n  /** function parent to save lower limit */\n  lowerLimitCallBack: (lowerLimit: LowerLimitClass[], id?: number) => void;\n\n  isLink: boolean;\n}\n\ninterface State {\n  /** couleur du fond */\n  lowerLimit: LowerLimitClass[];\n  /** result html */\n  htmlResult: JSX.Element;\n}\n\n/**\n * edit color in fix mode\n */\nclass FixColor extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lowerLimit: this.props.lowerLimit,\n      htmlResult: <div></div>,\n    };\n  }\n\n  /**\n   * edit background color with Promise\n   */\n  setStateAsyncSeuil = (state: {\n    /**\n     * edit colorFond\n     */\n    lowerLimit: LowerLimitClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * save data\n   */\n  callBack = (): void => {\n    this.props.lowerLimitCallBack(this.state.lowerLimit);\n  };\n\n  /**\n   * change background color\n   */\n  onChangeColorFond = async (key: number, color: string) => {\n    const newSeuil: LowerLimitClass[] = this.state.lowerLimit;\n    newSeuil[0].backColor = color;\n    await this.setStateAsyncSeuil({\n      lowerLimit: newSeuil,\n    });\n    this.callBack();\n    this.initComponent();\n  };\n\n  /**\n   * change contour color\n   */\n  onChangeColorContour = async (key: number, color: string) => {\n    const newSeuil: LowerLimitClass[] = this.state.lowerLimit;\n    newSeuil[0].borderColor = color;\n    await this.setStateAsyncSeuil({\n      lowerLimit: newSeuil,\n    });\n    this.callBack();\n    this.initComponent();\n  };\n\n  /**\n   * change size color\n   */\n  onChangeSzContour = async (value: string) => {\n    const newSeuil: LowerLimitClass[] = this.state.lowerLimit;\n    newSeuil[0].sizeBorder = value;\n    await this.setStateAsyncSeuil({\n      lowerLimit: newSeuil,\n    });\n    this.callBack();\n    this.initComponent();\n  };\n\n  /**\n   * add button color\n   */\n  addButtonColor = (): JSX.Element[] => {\n    const key = '0';\n    const couleur: JSX.Element[] = [];\n    const l10n = require('Localization/en.json');\n    let textInputColor = l10n.colorVariable.switchOutlineColor;\n    let labelSize = l10n.colorVariable.thicknessOutline;\n    let placeHolderSize = l10n.colorVariable.thicknessOutline;\n    if (this.props.traceBack) {\n      console.log('2');\n      const keyFondColorPicker = key + 'FondcolorPicker';\n      couleur.push(\n        <InputSeriesColorPicker\n          key={keyFondColorPicker}\n          color={this.state.lowerLimit[0].backColor}\n          keyInt={0}\n          text={l10n.colorVariable.switchBackgroundColor}\n          _onChange={this.onChangeColorFond}\n        />\n      );\n    }\n    if (this.props.traceBorder) {\n      console.log('3');\n      const keyContourDiv = key + 'ContourDiv';\n      couleur.push(\n        <div key={keyContourDiv}>\n          <InputSeriesColorPicker\n            color={this.state.lowerLimit[0].borderColor}\n            keyInt={0}\n            text={textInputColor}\n            _onChange={this.onChangeColorContour}\n          />\n\n          <FormField\n            labelWidth={15}\n            label={labelSize}\n            name=\"epaisseurContour\"\n            placeholder={placeHolderSize}\n            value={this.state.lowerLimit[0].sizeBorder}\n            onChange={(event) => this.onChangeSzContour(event.currentTarget.value)}\n          />\n        </div>\n      );\n    }\n    return couleur;\n  };\n\n  /** create form */\n  initComponent = () => {\n    this.setState({\n      htmlResult: <div>{this.addButtonColor()}</div>,\n    });\n  };\n\n  /** init component when component is mount */\n  componentDidMount = async () => {\n    if (this.state.lowerLimit.length === 0) {\n      await this.setStateAsyncSeuil({\n        lowerLimit: [new LowerLimitClass(0, '', '', '', '', '2')],\n      });\n    }\n    this.initComponent();\n  };\n\n  /** init component when  update props */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.traceBorder !== this.props.traceBorder || prevProps.traceBack !== this.props.traceBack) {\n      this.initComponent();\n    }\n  };\n\n  /**\n   * result\n   */\n  render() {\n    return <div>{this.state.htmlResult}</div>;\n  }\n}\nexport default FixColor;\n","import React from 'react';\nimport { SimpleOptions } from 'types';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { Button, FormField } from '@grafana/ui';\n\nimport { ArrayInputClass } from 'Models/ArrayInputClass';\nimport { InputClass } from 'Models/InputClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\n\nimport InputSeriesColorPicker from 'Functions/Input/inputSeriesColorPicker';\nimport InputTextField from 'Functions/Input/inputText';\n\ninterface Props {\n  /** trace color border? */\n  traceBorder: boolean;\n  /** trace color back */\n  traceBack: boolean;\n  /** last lower limit array */\n  lowerLimit: LowerLimitClass[];\n  /** function parent to save lower limit */\n  lowerLimitCallBack: (lowerLimit: LowerLimitClass[], id?: number) => void;\n\n  isLink: boolean;\n}\n\ninterface State {\n  /**\n   * tableau d'input pour générer le form\n   */\n  arrayInputClass: ArrayInputClass[];\n  /**\n   * tableau des seuils qui sera renvoyé au parent\n   */\n  lowerLimit: LowerLimitClass[];\n  /**\n   * nombre de seuil\n   */\n  index: number;\n  /**\n   * nombre de variation à ajouter qui est affiché dans l'input\n   */\n  nbVariation: string;\n\n  /**\n   * fill dynamic input\n   */\n  dynamicInput: JSX.Element;\n  /** input final form */\n  displayInput: boolean;\n}\n\n/**\n * edit colors in variable mode\n */\nclass VariableColor extends React.Component<Props, State, PanelEditorProps<SimpleOptions>> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayInputClass: [],\n      lowerLimit: [],\n      index: 0,\n      nbVariation: '3',\n      dynamicInput: <br />,\n      displayInput: false,\n    };\n  }\n\n  /**\n   * set state for arrayInputClass whith Promise\n   */\n  setStateAsyncArrayInputClass = (state: {\n    /**\n     * edit arrayInputClass\n     */\n    arrayInputClass: ArrayInputClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * set state for seuil whith Promise\n   */\n  setStateAsyncLowerLimit = (state: {\n    /**\n     * edit seuil\n     */\n    lowerLimit: LowerLimitClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * set state for index whith Promise\n   */\n  setStateAsyncIndex = (state: {\n    /**\n     * edit index\n     */\n    index: number;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * set state for nbVariation whith Promise\n   */\n  setStateAsyncNbVariation = (state: {\n    /**\n     * edit nbVariation\n     */\n    nbVariation: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * send data to parent\n   */\n  callBack = () => {\n    this.fillVarInput();\n    this.props.lowerLimitCallBack(this.state.lowerLimit);\n  };\n\n  /** old function */\n  saveData = () => {\n    // const { onOptionsChange } = this.props;\n    // console.table(this.state.seuil);\n    // onOptionsChange({\n    // \t...this.props.options,\n    // \tseuil: this.state.seuil,\n    // });\n  };\n\n  /**\n   * add new seuil\n   * @param idx index for id\n   */\n  addInput = async (idx: number, newLowerLimit: LowerLimitClass) => {\n    await this.setStateAsyncArrayInputClass({\n      arrayInputClass: this.state.arrayInputClass\n        .slice()\n        .concat(\n          new ArrayInputClass(idx, [\n            new InputClass('gestCouleurMin' + idx.toString(), 'Seuil min', 'lowerLimitMin', 'text', false, 'Seuil min', undefined),\n            new InputClass('gestCouleurMax' + idx.toString(), 'Seuil max', 'lowerLimitMax', 'text', false, 'Seuil max', undefined),\n          ])\n        ),\n    });\n\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: this.state.lowerLimit.concat(newLowerLimit),\n    });\n\n    await this.setStateAsyncIndex({\n      index: idx + 1,\n    });\n  };\n\n  /**\n   * call function with value input change\n   * @param event event input\n   * @param idInput id input\n   * @param idLine index array\n   */\n  handleValueChange = async (event: string, idInput: string, idLine: number) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit.slice();\n    if (idInput === 'lowerLimitMin') {\n      cpy[idLine].lowerLimitMin = event;\n    } else {\n      cpy[idLine].lowerLimitMax = event;\n      if (cpy.length > idLine + 1) {\n        cpy[idLine + 1].lowerLimitMin = '>' + event;\n      }\n    }\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when colorFond value change\n   * @param key line index to modify\n   * @param color the new color to add\n   */\n  onChangeColorFond = async (key: number, color: string) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit;\n    cpy[key].backColor = color;\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call fonction when colorContour change\n   * @param key line index to modify\n   * @param color the new color to add\n   */\n  onChangeColorContour = async (key: number, color: string) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit;\n    cpy[key].borderColor = color;\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when sizeBorder value change\n   * @param key line index to modify\n   * @param size the new size to add\n   */\n  onChangeSzContour = async (key: number, size: string) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit;\n    cpy[key].sizeBorder = size;\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * insert color picker\n   * @param keyInt index to edit line\n   * @returns JSX.Element\n   */\n  addButtonColor = (keyInt: number): JSX.Element[] => {\n    const key = keyInt.toString();\n    const couleur: JSX.Element[] = [];\n    const l10n = require('Localization/en.json');\n\n    if (this.props.traceBack) {\n      const keyFondColorPicker = key + 'FondcolorPicker';\n\n      couleur.push(\n        <InputSeriesColorPicker\n          key={keyFondColorPicker}\n          color={this.state.lowerLimit[keyInt].backColor}\n          keyInt={keyInt}\n          text={l10n.colorVariable.switchBackgroundColor}\n          _onChange={this.onChangeColorFond}\n        />\n      );\n    }\n    if (this.props.traceBorder) {\n      const keyContourDiv = key + 'ContourDiv';\n      let nameInputSize = '';\n      if (this.props.isLink) {\n        nameInputSize = 'Size';\n      } else {\n        nameInputSize = l10n.colorVariable.thicknessOutline;\n      }\n\n      couleur.push(\n        <div key={keyContourDiv}>\n          <InputSeriesColorPicker\n            color={this.state.lowerLimit[keyInt].borderColor}\n            keyInt={keyInt}\n            text={l10n.colorVariable.switchOutlineColor}\n            _onChange={this.onChangeColorContour}\n          />\n\n          <FormField\n            labelWidth={15}\n            label={nameInputSize}\n            name=\"epaisseurContour\"\n            placeholder={l10n.colorVariable.thicknessOutline}\n            value={this.state.lowerLimit[keyInt].sizeBorder}\n            onChange={(event) => this.onChangeSzContour(keyInt, event.currentTarget.value)}\n          />\n        </div>\n      );\n    }\n    return couleur;\n  };\n\n  /**\n   * call fonction when edit nbVariation\n   */\n  onChangeVariation = async (event: {\n    /** currentTarget is item that is being edited */\n    currentTarget: HTMLInputElement;\n  }) => {\n    await this.setStateAsyncNbVariation({ nbVariation: event.currentTarget.value });\n  };\n\n  /** generate array input */\n  test = async (newSeuil: LowerLimitClass[]) => {\n    const arrayInput: ArrayInputClass[] = this.state.arrayInputClass.slice();\n    let idx = this.state.index;\n    const pSeuil: LowerLimitClass[] = this.state.lowerLimit;\n\n    for (const line of newSeuil) {\n      arrayInput.push(\n        new ArrayInputClass(idx, [\n          new InputClass('gestCouleurMin' + idx.toString(), 'Seuil min', 'lowerLimitMin', 'text', false, 'Seuil min', undefined),\n          new InputClass('gestCouleurMax' + idx.toString(), 'Seuil max', 'lowerLimitMax', 'text', false, 'Seuil max', undefined),\n        ])\n      );\n      idx++;\n      pSeuil.push(line);\n    }\n    await this.setStateAsyncArrayInputClass({\n      arrayInputClass: arrayInput,\n    });\n\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: pSeuil,\n    });\n\n    await this.setStateAsyncIndex({\n      index: idx,\n    });\n  };\n\n  /**\n   * call addInput to prepare new inputs\n   * @param nb number inputs to add\n   */\n  addMultipleVariation = async (nb: number, seuil?: LowerLimitClass[]) => {\n    if (seuil) {\n      await this.test(seuil);\n      this.fillVarInput();\n    }\n  };\n\n  /** add new lower limit */\n  addVariation = async (nb: number, seuil?: LowerLimitClass[]) => {\n    for (let i = 0; i < nb; i++) {\n      let newSeuil: LowerLimitClass = seuil ? seuil[i] : new LowerLimitClass(i, '', '', '', '', '');\n      if (this.props.isLink) {\n        newSeuil = seuil ? seuil[i] : new LowerLimitClass(i, '', '', '', '', '10');\n      }\n      await this.addInput(i, newSeuil);\n    }\n    this.fillVarInput();\n  };\n\n  /**\n   * call function when display n input according to nbVariation\n   */\n  onClickVariation = async () => {\n    await this.setStateAsyncArrayInputClass({\n      arrayInputClass: [],\n    });\n    await this.setStateAsyncIndex({\n      index: 0,\n    });\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: [],\n    });\n\n    this.setState({\n      displayInput: true,\n    });\n\n    const nb: number = parseInt(this.state.nbVariation, 10);\n    await this.addVariation(nb);\n  };\n\n  /**\n   * generate input seuil min and max with value\n   * @returns JSX.Element\n   */\n  fillVarInput = (): void => {\n    let final: JSX.Element[] = [];\n\n    if (this.state.lowerLimit.length === 0) {\n      this.setState({\n        dynamicInput: <br />,\n      });\n      return;\n    }\n\n    let i = 0;\n    for (const line of this.state.arrayInputClass) {\n      if (line.uneClassInput.length <= 0) {\n        this.setState({\n          dynamicInput: <br />,\n        });\n        return;\n      }\n      const result = line.uneClassInput.map((obj: InputClass) => (\n        <InputTextField\n          key={obj.id}\n          label={obj.label}\n          name={obj.name}\n          placeholder={obj.placeholder || ''}\n          required={obj.required}\n          value={\n            obj.name === 'lowerLimitMin'\n              ? line.id === 0\n                ? '-∞'\n                : this.state.lowerLimit[i].lowerLimitMin\n              : line.id === this.state.index - 1\n              ? '+∞'\n              : this.state.lowerLimit[i].lowerLimitMax\n          }\n          _handleChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this.handleValueChange(event.currentTarget.value, obj.name, line.id)}\n          disabled={obj.name === 'lowerLimitMin' || line.id === this.state.index - 1}\n        />\n      ));\n      i++;\n      const couleur: JSX.Element[] = this.addButtonColor(line.id);\n      const newKey = line.id.toString() + 'brGestColor';\n      final = final.concat(result.concat(couleur.concat(<br key={newKey} />)));\n    }\n    this.setState({\n      dynamicInput: <ul>{final}</ul>,\n    });\n  };\n\n  /**\n   * debug\n   */\n  infoSeuil = () => {\n    // console.group('info');\n    // console.log(this.state.lowerLimit);\n    // console.log(this.state.arrayInputClass);\n    // console.groupEnd();\n  };\n\n  /**\n   * component mount\n   */\n  componentDidMount = () => {\n    if (this.props.lowerLimit.length > 0) {\n      const nb: number = parseInt(this.state.nbVariation, 10);\n      this.addMultipleVariation(nb, this.props.lowerLimit);\n    }\n  };\n\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.traceBorder !== this.props.traceBorder || prevProps.traceBack !== this.props.traceBack) {\n      this.fillVarInput();\n    }\n  };\n\n  /**\n   * render\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <InputTextField\n          label={l10n.colorVariable.variationNumber}\n          name=\"nbVariation\"\n          placeholder={l10n.colorVariable.number}\n          required={true}\n          value={this.state.nbVariation}\n          _handleChange={this.onChangeVariation}\n        />\n        <Button onClick={this.onClickVariation}>{l10n.colorVariable.addColor}</Button>\n        <br />\n        <br />\n        {this.state.dynamicInput}\n      </div>\n    );\n  }\n}\nexport default VariableColor;\n","import React from 'react';\n\nimport { Switch, Collapse, FormLabel } from '@grafana/ui';\n\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\n\nimport FixColor from 'components/Parametrage/fixColor';\nimport VariableColor from 'components/Parametrage/VariableColor';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** last data */\n  coordinate: CoordinateSpaceClass;\n  /** function parent to save data */\n  callBack: (coordinate: CoordinateSpaceClass, id?: number) => void;\n  /** function parent to save lower limit */\n  lowerLimitCallBack: (lowerLimit: LowerLimitClass[], id?: number) => void;\n\n  isLink: boolean;\n}\n\ninterface State {\n  /** copy coordinate */\n  coordinate: CoordinateSpaceClass;\n  /** collapse */\n  openLowerLimit: boolean;\n}\n\n/**\n * def class\n */\nclass ManageLowerLimit extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      coordinate: this.props.coordinate,\n      openLowerLimit: false,\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncCoordinate = (state: {\n    /** new value */\n    coordinate: CoordinateSpaceClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncOpenLowerLimit = (state: {\n    /** new value */\n    openLowerLimit: boolean;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * save data in type\n   */\n  onSave = () => {\n    // console.log('lower');\n    // console.log(this.props.id);\n    this.props.callBack(this.props.coordinate);\n    this.props.lowerLimitCallBack(this.state.coordinate.lowerLimit);\n  };\n\n  /**\n   * Edit fondIsChecked with switch\n   */\n  onSwitchFond = async () => {\n    const newValue: CoordinateSpaceClass = this.state.coordinate;\n\n    newValue.traceBack = !newValue.traceBack;\n    await this.setStateAsyncCoordinate({ coordinate: newValue });\n    this.onSave();\n  };\n\n  /**\n   * Edit contourIsChecked with switch\n   */\n  onSwitchContour = async () => {\n    const newValue: CoordinateSpaceClass = this.state.coordinate;\n\n    newValue.traceBorder = !newValue.traceBorder;\n    await this.setStateAsyncCoordinate({ coordinate: newValue });\n    this.onSave();\n  };\n\n  /**\n   * switch colorMode -> fixe / variable\n   */\n  onSwitchColorMode = async () => {\n    const newValue: CoordinateSpaceClass = this.state.coordinate;\n\n    newValue.colorMode = !newValue.colorMode;\n    if (!this.state.coordinate.colorMode) {\n      let defaultSizeBorder = '';\n      if (this.props.isLink) {\n        defaultSizeBorder = '10';\n      }\n      newValue.lowerLimit = [new LowerLimitClass(0, '', '', '', '', defaultSizeBorder)];\n      await this.setStateAsyncCoordinate({ coordinate: newValue });\n    } else {\n      newValue.lowerLimit = [];\n      await this.setStateAsyncCoordinate({ coordinate: newValue });\n    }\n    this.onSave();\n  };\n\n  /** open or close toggle lower limit */\n  onToggleLowerLimit = (isOpen: boolean) => {\n    this.setState({\n      openLowerLimit: isOpen,\n    });\n  };\n\n  /** update component when coordinate props change */\n  componentDidUpdate = async (prevProps: Props) => {\n    if (prevProps.coordinate !== this.state.coordinate) {\n      await this.setStateAsyncCoordinate({\n        coordinate: prevProps.coordinate,\n      });\n      await this.setStateAsyncOpenLowerLimit({\n        openLowerLimit: false,\n      });\n    }\n  };\n\n  /**\n   * result\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n    // console.log(this.props.coordinate)\n    // console.log(this.props.id)\n    return (\n      <div>\n        <Collapse label={'Lower limit'} isOpen={this.state.openLowerLimit} onToggle={this.onToggleLowerLimit}>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.genericParameter.variableColor}</FormLabel>\n            <Switch label={''} checked={this.state.coordinate.colorMode} onChange={this.onSwitchColorMode} />\n          </div>\n          <br />\n          {/* {!this.props.isLink ? (\n            <div>\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.genericParameter.traceBackground}</FormLabel>\n                <Switch label={''} checked={this.state.coordinate.traceBack} onChange={this.onSwitchFond} />\n              </div>\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.genericParameter.traceContour}</FormLabel>\n                <Switch label={''} checked={this.state.coordinate.traceBorder} onChange={this.onSwitchContour} />\n              </div>\n            </div>\n          ) : (\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>{'Color/Size'}</FormLabel>\n              <Switch label={''} checked={this.state.coordinate.traceBack} onChange={this.onSwitchFond} />\n            </div>\n          )} \n          */}\n          <div>\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>{l10n.genericParameter.traceBackground}</FormLabel>\n              <Switch label={''} checked={this.state.coordinate.traceBack} onChange={this.onSwitchFond} />\n            </div>\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>{l10n.genericParameter.traceContour}</FormLabel>\n              <Switch label={''} checked={this.state.coordinate.traceBorder} onChange={this.onSwitchContour} />\n            </div>\n          </div>\n\n          {this.state.coordinate.colorMode ? (\n            <VariableColor\n              traceBorder={this.state.coordinate.traceBorder}\n              traceBack={this.state.coordinate.traceBack}\n              lowerLimit={this.state.coordinate.lowerLimit}\n              lowerLimitCallBack={this.props.lowerLimitCallBack}\n              isLink={this.props.isLink}\n            />\n          ) : (\n            <FixColor\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              traceBorder={this.state.coordinate.traceBorder}\n              traceBack={this.state.coordinate.traceBack}\n              lowerLimit={this.state.coordinate.lowerLimit}\n              lowerLimitCallBack={this.props.lowerLimitCallBack}\n              isLink={this.props.isLink}\n            />\n          )}\n        </Collapse>\n      </div>\n    );\n  }\n}\nexport default ManageLowerLimit;\n","import React from 'react';\nimport { SimpleOptions, TManageValue, Metric } from 'types';\n\nimport { PanelEditorProps, SelectableValue, DataFrame } from '@grafana/data';\nimport { Select, FormField, Collapse, FormLabel } from '@grafana/ui';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n//import { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\ninterface Prop extends PanelEditorProps<SimpleOptions> {\n  /** id coordinate. Use to check if componentDidUpdate launch update */\n  idCoordinate: number;\n  /** parent data */\n  mainMetric: Metric;\n  /** call function when save data */\n  mainMetricB?: Metric;\n  /** call function when save data mainMetric*/\n  callBackToParent: (mainMetric: Metric, id?: number) => void;\n  /** call function when save data mainMetricB*/\n  callBackToParentMainMetricB?: (mainMetricB: Metric, id?: number) => void;\n  /** id coordinateSpace for link and point*/\n  id?: number;\n  /** check if is OrientedLink */\n  isLink: boolean;\n}\n\ninterface State {\n  /** data for manipulate mainMetric */\n  mainMetric: Metric;\n  /** data for manipulate mainMetric of OrientedLink if is bidirectionnal*/\n  mainMetricB: Metric;\n  /** collapse main metric open or close */\n  collapseMainMetric: boolean;\n  /** collapse linkA open or close */\n  collapseLinkA: boolean;\n  /** collapse linkB open or close */\n  collapseLinkB: boolean;\n  /** value for manage value (for query => ) */\n  selectManageValue: Array<SelectableValue<TManageValue>>;\n  /** default value for manage value */\n  selectDefaultManageValue: SelectableValue<TManageValue>;\n  /** select aux query */\n  selectQuery: Array<SelectableValue<DataFrame>>;\n  /** select main query */\n  selectQueryDefault: SelectableValue<DataFrame>;\n}\n\n/**\n * def\n */\nclass ManageQuery extends React.Component<Prop, State> {\n  constructor(props: Prop) {\n    super(props);\n    this.state = {\n      mainMetric: this.props.mainMetric,\n      mainMetricB: this.props.mainMetricB || { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' },\n      collapseMainMetric: false,\n      collapseLinkA: false,\n      collapseLinkB: false,\n      selectManageValue: [],\n      selectDefaultManageValue: { value: 'avg', label: 'avg' },\n      selectQuery: [],\n      selectQueryDefault: [],\n    };\n  }\n\n  /** call back to parent */\n  callBack = () => {\n    this.props.callBackToParent(this.state.mainMetric, this.props.id);\n  };\n\n  /** call back to parent for mainMetricB */\n  callBackB = () => {\n    if (this.props.callBackToParentMainMetricB) {\n      this.props.callBackToParentMainMetricB(this.state.mainMetricB, this.props.id);\n    }\n  };\n\n  /** get mainMetricB of OrientedLink bidirectionnal */\n  getMainMetricB = (): any => {\n    let mainMetricB: any = {};\n    const arrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLink) {\n      if (orientedLink.id === this.props.idCoordinate) {\n        mainMetricB = orientedLink.mainMetricB;\n      }\n    }\n    return mainMetricB;\n  };\n\n  /** edit value for default select manage value */\n  onChangeSelectManageValue = (value: SelectableValue<TManageValue>) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.manageValue = value.value || 'err';\n    this.setState({\n      mainMetric: newMainMetric,\n      //selectDefaultManageValue: value,\n    });\n    this.callBack();\n  };\n\n  /** edit value for default select manage value */\n  onChangeSelectManageValueB = (value: SelectableValue<TManageValue>) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    //const arrayOrientedLinks: OrientedLink = this.props.options.arrayOrientedLinks\n    newMainMetric.manageValue = value.value || 'err';\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** edit value key for mainMetric */\n  _handleChangeKey = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.key = value;\n    this.setState({\n      mainMetric: newMainMetric,\n    });\n    this.callBack();\n  };\n\n  /** edit value key for mainMetric */\n  _handleChangeKeyB = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    newMainMetric.key = value;\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** edit value keyValue for mainMetric */\n  _handleChangeKeyValue = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.keyValue = value;\n    this.setState({\n      mainMetric: newMainMetric,\n    });\n    this.callBack();\n  };\n\n  /** edit value keyValue for mainMetric */\n  _handleChangeKeyValueB = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    newMainMetric.keyValue = value;\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** edit value for select */\n  onChangeSelectQuery = (value: SelectableValue<DataFrame>) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.refId = value.value?.refId || '';\n    newMainMetric.expr = '';\n    this.setState({\n      mainMetric: newMainMetric,\n      selectQueryDefault: value,\n    });\n    this.callBack();\n  };\n\n  /** edit value for select */\n  onChangeSelectQueryB = (value: SelectableValue<DataFrame>) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    newMainMetric.refId = value.value?.refId || '';\n    newMainMetric.expr = '';\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** switch value collapseMainMetric when click collapse */\n  onToggleMainMetric = (isOpen: boolean) => {\n    this.setState({\n      collapseMainMetric: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkA when click collapse */\n  onToggleLinkA = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkA: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkB when click collapse */\n  onToggleLinkB = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkB: isOpen,\n    });\n  };\n\n  private getDefaultQueryB = (): SelectableValue<DataFrame> => {\n    let defaultValue: SelectableValue<DataFrame> = { label: 'No value', value: undefined };\n    const mainMetricB: Metric = this.state.mainMetricB;\n    for (const value of this.state.selectQuery) {\n      if (mainMetricB.refId) {\n        if (mainMetricB.refId === value.label) {\n          defaultValue = value;\n        }\n      }\n    }\n    return defaultValue;\n  };\n\n  private getDefaultManageValue = (): SelectableValue<TManageValue> => {\n    let defaultValue: SelectableValue<TManageValue> = { label: 'avg', value: 'avg' };\n    const mainMetric: Metric = this.state.mainMetric;\n    for (const value of this.state.selectManageValue) {\n      if (mainMetric.manageValue) {\n        if (mainMetric.manageValue === value.value) {\n          defaultValue = value;\n        }\n      }\n    }\n    return defaultValue;\n  };\n\n  private getDefaultManageValueB = (): SelectableValue<TManageValue> => {\n    let defaultValue: SelectableValue<TManageValue> = { label: 'avg', value: 'avg' };\n    const mainMetricB: Metric = this.state.mainMetricB;\n    for (const value of this.state.selectManageValue) {\n      if (mainMetricB.manageValue) {\n        if (mainMetricB.manageValue === value.value) {\n          defaultValue = value;\n        }\n      }\n    }\n    return defaultValue;\n  };\n\n  /** add all query in select */\n  fillSelectQuery = () => {\n    const valueSelect: Array<SelectableValue<DataFrame>> = [];\n    const newMainMetric: Metric = this.state.mainMetric;\n\n    valueSelect.push({ value: undefined, label: 'No value' });\n    for (const line of this.props.data.series) {\n      let duplicate = false;\n      for (const valueSave of valueSelect) {\n        if (valueSave.value?.refId === line.refId) {\n          duplicate = true;\n          break;\n        }\n      }\n      if (!duplicate) {\n        valueSelect.push({ value: line, label: line.refId });\n      }\n    }\n    if (newMainMetric.refId === '') {\n      newMainMetric.refId = valueSelect.length > 0 ? valueSelect[0].value?.refId || '' : '';\n    }\n\n    const refId: string | undefined = this.state.mainMetric.refId;\n    let defaultValue: SelectableValue<DataFrame>;\n\n    defaultValue = { value: undefined, label: 'No value' };\n    if (refId) {\n      // console.log(valueSelect.filter((a) => { return a.value?.refId === refId; }));\n      for (const line of valueSelect) {\n        if (line.value?.refId === refId) {\n          defaultValue = line;\n          break;\n        }\n      }\n    }\n    this.setState({\n      mainMetric: newMainMetric,\n      selectQuery: valueSelect,\n      selectQueryDefault: defaultValue,\n    });\n  };\n\n  /** fill data when component mount */\n  componentDidMount = () => {\n    this.fillSelectQuery();\n    const newSelectManageValue: Array<SelectableValue<TManageValue>> = [\n      { value: 'avg', label: 'average' },\n      { value: 'sum', label: 'total' },\n      { value: 'err', label: 'error' },\n    ];\n    let defaultValue: SelectableValue<TManageValue> = newSelectManageValue[0];\n    for (const line of newSelectManageValue) {\n      if (line.value === this.state.mainMetric.manageValue) {\n        defaultValue = line;\n      }\n    }\n\n    this.setState({\n      selectManageValue: newSelectManageValue,\n      selectDefaultManageValue: defaultValue,\n    });\n  };\n\n  /** update with promise mainMetric state */\n  setStateAsyncMainMetric = (state: {\n    /** new value main metric */\n    mainMetric: Metric;\n  }) => {\n    return new Promise((resolve) => this.setState(state, resolve));\n  };\n\n  /** update with promise mainMetric state */\n  setStateAsyncMainMetricB = (state: {\n    /** new value main metric */\n    mainMetricB: Metric;\n  }) => {\n    return new Promise((resolve) => this.setState(state, resolve));\n  };\n\n  /** update data when props is update */\n  componentDidUpdate = async (prevProps: Prop) => {\n    if (prevProps.idCoordinate !== this.props.idCoordinate) {\n      this.setState({\n        collapseMainMetric: false,\n      });\n      await this.setStateAsyncMainMetric({ mainMetric: this.props.mainMetric });\n      if (this.props.mainMetricB) {\n        await this.setStateAsyncMainMetricB({ mainMetricB: this.props.mainMetricB });\n      }\n      this.fillSelectQuery();\n    }\n    if (prevProps.data.series !== this.props.data.series) {\n      this.fillSelectQuery();\n    }\n  };\n\n  private displayHtml = (): JSX.Element => {\n    let result: JSX.Element;\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.idCoordinate) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      result = (\n        <Collapse isOpen={this.state.collapseMainMetric} label=\"Main metric\" onToggle={this.onToggleMainMetric}>\n          <Collapse isOpen={this.state.collapseLinkA} label=\"Link A\" onToggle={this.onToggleLinkA}>\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>Query</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectQuery(value)}\n                allowCustomValue={false}\n                options={this.state.selectQuery}\n                width={30}\n                value={this.state.selectQueryDefault}\n              />\n            </div>\n            {/* <br /> */}\n            <FormField\n              label=\"Key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetric.key}\n              name=\"key\"\n              onChange={(event) => this._handleChangeKey(event.currentTarget.value)}\n            />\n            <FormField\n              label=\"Value key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetric.keyValue}\n              name=\"valueKey\"\n              onChange={(event) => this._handleChangeKeyValue(event.currentTarget.value)}\n            />\n            {/* <br /> */}\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>Manipulate</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectManageValue(value)}\n                allowCustomValue={false}\n                options={this.state.selectManageValue}\n                width={30}\n                value={this.getDefaultManageValue()}\n              />\n            </div>\n          </Collapse>\n          <Collapse isOpen={this.state.collapseLinkB} label=\"Link B\" onToggle={this.onToggleLinkB}>\n            <div style={{ display: 'flex', marginTop: '10px' }}>\n              <FormLabel width={15}>Query</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectQueryB(value)}\n                allowCustomValue={false}\n                options={this.state.selectQuery}\n                width={30}\n                value={this.getDefaultQueryB()}\n              />\n            </div>\n            {/* <br /> */}\n            <FormField\n              label=\"Key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetricB.key}\n              name=\"key\"\n              onChange={(event) => this._handleChangeKeyB(event.currentTarget.value)}\n            />\n            <FormField\n              label=\"Value key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetricB.keyValue}\n              name=\"valueKey\"\n              onChange={(event) => this._handleChangeKeyValueB(event.currentTarget.value)}\n            />\n            {/* <br /> */}\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>Manipulate</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectManageValueB(value)}\n                allowCustomValue={false}\n                options={this.state.selectManageValue}\n                width={30}\n                value={this.getDefaultManageValueB()}\n              />\n            </div>\n          </Collapse>\n        </Collapse>\n      );\n    } else {\n      result = (\n        <Collapse isOpen={this.state.collapseMainMetric} label=\"Main metric\" onToggle={this.onToggleMainMetric}>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Query</FormLabel>\n            <Select\n              onChange={(value) => this.onChangeSelectQuery(value)}\n              allowCustomValue={false}\n              options={this.state.selectQuery}\n              width={30}\n              value={this.state.selectQueryDefault}\n            />\n          </div>\n          {/* <br /> */}\n          <FormField\n            label=\"Key\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            value={this.state.mainMetric.key}\n            name=\"key\"\n            onChange={(event) => this._handleChangeKey(event.currentTarget.value)}\n          />\n          <FormField\n            label=\"Value key\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            value={this.state.mainMetric.keyValue}\n            name=\"valueKey\"\n            onChange={(event) => this._handleChangeKeyValue(event.currentTarget.value)}\n          />\n          {/* <br /> */}\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Manipulate</FormLabel>\n            <Select\n              onChange={(value) => this.onChangeSelectManageValue(value)}\n              allowCustomValue={false}\n              options={this.state.selectManageValue}\n              width={30}\n              value={this.getDefaultManageValue()}\n            />\n          </div>\n        </Collapse>\n      );\n    }\n    return result;\n  };\n\n  /**\n   * result\n   */\n  render() {\n    return <div>{this.displayHtml()}</div>;\n  }\n}\nexport default ManageQuery;\n","import React from 'react';\n\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport InputTextField from 'Functions/Input/inputText';\n\ninterface Props {\n  /** id for coordinate space */\n  coordinateSpace: CoordinateSpaceClass;\n  /** save data to parent */\n  callBackToParent: (followLink: string, hoveringTooltipLink: string, hoveringTooltipText: string, textObj?: TextObject) => void;\n}\n\ninterface State {\n  /** link */\n  followLink: string;\n  /**\n   * link for tooltip\n   */\n  hoveringTooltipLink: string;\n  /**\n   * text for tooltip\n   */\n  hoveringTooltipText: string;\n}\n\n/**\n * def\n */\nclass ManageLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      followLink: this.props.coordinateSpace.linkURL.followLink,\n      hoveringTooltipLink: this.props.coordinateSpace.linkURL.hoveringTooltipLink,\n      hoveringTooltipText: this.props.coordinateSpace.linkURL.hoveringTooltipText,\n    };\n  }\n\n  /**\n   * edit followLink whith Promise\n   */\n  setStateAsyncFollowLink = (state: {\n    /**\n     * edit followLink\n     */\n    followLink: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * edit link for tooltip whith Promise\n   */\n  setStateAsyncHoveringTooltipLink = (state: {\n    /**\n     * edit hoveringTooltipLink\n     */\n    hoveringTooltipLink: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * edit text for tooltip whith Promise\n   */\n  setStateAsyncHoveringTooltipText = (state: {\n    /**\n     * edit hoveringTooltipText\n     */\n    hoveringTooltipText: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * save data\n   */\n  callBack = () => {\n    this.props.callBackToParent(this.state.followLink, this.state.hoveringTooltipLink, this.state.hoveringTooltipText, undefined);\n  };\n\n  /**\n   * call function when follow link change\n   */\n  onChangeFollowLink = async (value: string) => {\n    await this.setStateAsyncFollowLink({\n      followLink: value,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when follow link change\n   */\n  onChangeHoveringTooltipLink = async (value: string) => {\n    await this.setStateAsyncHoveringTooltipLink({\n      hoveringTooltipLink: value,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when follow link change\n   */\n  onChangeHoveringTooltipText = async (value: string) => {\n    await this.setStateAsyncHoveringTooltipText({\n      hoveringTooltipText: value,\n    });\n    this.callBack();\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.coordinateSpace.id !== this.props.coordinateSpace.id) {\n      this.setState({\n        followLink: prevProps.coordinateSpace.linkURL.followLink,\n        hoveringTooltipLink: prevProps.coordinateSpace.linkURL.hoveringTooltipLink,\n        hoveringTooltipText: prevProps.coordinateSpace.linkURL.hoveringTooltipText,\n      });\n    }\n  }\n\n  /**\n   * result\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <InputTextField\n          label={l10n.metricPrincipalSetting.followLink}\n          name=\"followLink\"\n          placeholder={l10n.metricPrincipalSetting.link}\n          required={false}\n          value={this.state.followLink}\n          _handleChange={(event: { currentTarget: HTMLInputElement }) => this.onChangeFollowLink(event.currentTarget.value)}\n        />\n\n        <InputTextField\n          label={l10n.metricPrincipalSetting.linkTooltip}\n          name=\"linkTooltip\"\n          placeholder={l10n.metricPrincipalSetting.link}\n          required={false}\n          value={this.state.hoveringTooltipLink}\n          _handleChange={(event: { currentTarget: HTMLInputElement }) => this.onChangeHoveringTooltipLink(event.currentTarget.value)}\n        />\n\n        <InputTextField\n          label={l10n.metricPrincipalSetting.textInTooltip}\n          name=\"textTooltip\"\n          placeholder={l10n.metricPrincipalSetting.text}\n          required={false}\n          value={this.state.hoveringTooltipText}\n          _handleChange={(event: { currentTarget: HTMLInputElement }) => this.onChangeHoveringTooltipText(event.currentTarget.value)}\n        />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\nexport default ManageLink;\n","import React from 'react';\n\nimport { Switch, FormLabel } from '@grafana/ui';\n\nexport interface Style {\n  bold: boolean;\n  italic: boolean;\n  underline: boolean;\n}\n\ninterface Props {\n  oldStyle: Style;\n  saveParent: (style: Style) => void;\n}\n\ninterface State {\n  style: Style;\n}\n\n/**\n * def\n */\nclass StyleComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      style: this.props.oldStyle, //{ bold: false, italic: false, underline: false },\n    };\n  }\n\n  /** save data in Parent */\n  callBack = () => {\n    this.props.saveParent(this.state.style);\n  };\n\n  /** change bold */\n  onChangeBold = () => {\n    const style = this.state.style;\n    style.bold = !style.bold;\n    this.setState({\n      style: style,\n    });\n    this.callBack();\n  };\n\n  /** change italic */\n  onChangeItalic = () => {\n    const style = this.state.style;\n    style.italic = !style.italic;\n    this.setState({\n      style: style,\n    });\n    this.callBack();\n  };\n\n  /** change underline */\n  onChangeUnderline = () => {\n    const style = this.state.style;\n    style.underline = !style.underline;\n    this.setState({\n      style: style,\n    });\n    this.callBack();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    return (\n      <section>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Bold</FormLabel>\n          <Switch label=\"\" checked={this.state.style.bold} onChange={this.onChangeBold} />\n        </div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Italic</FormLabel>\n          <Switch label=\"\" checked={this.state.style.italic} onChange={this.onChangeItalic} />\n        </div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Underline</FormLabel>\n          <Switch label=\"\" checked={this.state.style.underline} onChange={this.onChangeUnderline} />\n        </div>\n        {/* <Button onChange={this.onChangeBold}>Bold</Button>\n        <Button onChange={this.onChangeItalic}>Italic</Button>\n        <Button onChange={this.onChangeUnderline}>Underline</Button> */}\n      </section>\n    );\n  }\n}\nexport default StyleComponent;\n","import React from 'react';\nimport { Switch, FormLabel } from '@grafana/ui';\n\nimport { Style } from 'components/Parametrage/styleComponent';\nimport StyleComponent from 'components/Parametrage/styleComponent';\n\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport InputTextField from 'Functions/Input/inputText';\nimport InputSeriesColorPicker from 'Functions/Input/inputSeriesColorPicker';\n\ninterface Props {\n  /** id coordinate */\n  coordinateSpace: CoordinateSpaceClass;\n  /** call function to save data in parent */\n  callBackToParent: (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject) => void;\n}\n\ninterface State {\n  /** get text object */\n  textObject: TextObject;\n}\n\n/**\n * def\n */\nclass TextObjects extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      textObject: this.props.coordinateSpace.textObj,\n    };\n  }\n\n  /** save data in async mode */\n  stateAsyncTextObject = (state: {\n    /** new text object */\n    textObject: TextObject;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      //this.callBack();\n    });\n  };\n\n  /** call back to parent */\n  callBack = () => {\n    this.props.callBackToParent(undefined, undefined, undefined, this.state.textObject);\n  };\n\n  // /** change value for legend input */\n  // onSwitchLegend = async () => {\n  // \tconst newTextObject: TextObject = this.state.textObject;\n\n  // \tnewTextObject.legend = !newTextObject.legend;\n  // \tawait this.stateAsyncTextObject({ textObject: newTextObject });\n  // \tthis.callBack();\n  // }\n\n  /** change value for value input */\n  onChangeValeur = async (value: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.value = value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for back color input */\n  onChangeBackColor = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.colorBack = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for color region */\n  onChangeColorText = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.colorText = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for style text region */\n  // onChangeStyleText = async (event: {\n  //   /** target for style text region input */\n  //   currentTarget: HTMLInputElement;\n  // }) => {\n  //   const newTextObject: TextObject = this.state.textObject;\n\n  //   newTextObject.styleText = event.currentTarget.value;\n  //   await this.stateAsyncTextObject({ textObject: newTextObject });\n  //   this.callBack();\n  // };\n\n  /** switch value for generate text object */\n  onSwitchGenerateObjectText = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateObjectText = !this.state.textObject.generateObjectText;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for legend element */\n  onChangeLegendElement = async (event: {\n    /** target for legend text element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.legendElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for unity mesure element */\n  onChangeunit = async (event: {\n    /** target for unity mesure element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.unit = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change format for numeric text object */\n  onChangeFormatageNumeriqueTextObject = async (event: {\n    /** target for numeric format text object input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.numericFormatElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** switch value for display object text */\n  onSwitchdisplayObjectInTooltip = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.displayObjectInTooltip = !this.state.textObject.generateAuxiliaryElement.displayObjectInTooltip;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  // /** switch value for display object permanently */\n  // onSwitchDisplayObjectPermanently = async () => {\n  // \tconst newTextObject: TextObject = this.state.textObject;\n\n  // \tnewTextObject.generateAuxiliaryElement.displayObjectPermanently =\n  // \t\t!this.state.textObject.generateAuxiliaryElement.displayObjectPermanently;\n  // \tawait this.stateAsyncTextObject({ textObject: newTextObject });\n  // \tthis.callBack();\n  // }\n\n  /** choice to apply color or not for text element */\n  onSwitchAddColorTextElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.addColorTextElement = !this.state.textObject.generateAuxiliaryElement.addColorTextElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** choice to apply color or not for back element */\n  onSwitchAddColorBackElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.addColorBackElement = !this.state.textObject.generateAuxiliaryElement.addColorBackElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** switch display text */\n  onSwitchisTextTooltip = async () => {\n    // console.clear();\n    // console.log('am here --');\n\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.isTextTooltip = !this.state.textObject.isTextTooltip;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for color text element */\n  onChangeColorTextElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.colorTextElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for back element */\n  onChangeColorBackElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.colorBackElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for legend element */\n  onChangeValueGenerateObjectTextLegendElement = async (event: {\n    /** target for legend text element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.legendElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for unity mesure element */\n  onChangeValueGenerateObjectTextunit = async (event: {\n    /** target for unity mesure element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.unit = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change format for numeric text object */\n  onChangeValueGenerateObjectTextFormatageNumeriqueTextObject = async (event: {\n    /** target for numeric format text object input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.numericFormatElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** switch value for display object text */\n  onSwitchValueGenerateObjectTextdisplayObjectInTooltip = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.displayObjectInTooltip = !this.state.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  // /** switch value for display object permanently */\n  // onSwitchValueGenerateObjectTextDisplayObjectPermanently = async () => {\n  // \tconst newTextObject: TextObject = this.state.textObject;\n\n  // \tnewTextObject.valueGenerateObjectText.displayObjectPermanently =\n  // \t\t!this.state.textObject.valueGenerateObjectText.displayObjectPermanently;\n  // \tawait this.stateAsyncTextObject({ textObject: newTextObject });\n  // \tthis.callBack();\n  // }\n\n  /** choice to apply color or not for text element */\n  onSwitchValueGenerateObjectTextAddColorTextElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.addColorTextElement = !this.state.textObject.valueGenerateObjectText.addColorTextElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** choice to apply color or not for back element */\n  onSwitchValueGenerateObjectTextAddColorBackElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.addColorBackElement = !this.state.textObject.valueGenerateObjectText.addColorBackElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for color text element */\n  onChangeValueGenerateObjectTextColorTextElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.colorTextElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for back element */\n  onChangeValueGenerateObjectTextColorBackElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.colorBackElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  saveData = (style: Style): void => {\n    const newText = this.state.textObject;\n    newText.style = style;\n    this.setState({\n      textObject: newText,\n    });\n    this.callBack();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        {/* <div>\n\t\t\t\t\t<h4>{l10n.textObject.titleTextObject}</h4>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tlabel={l10n.textObject.optionalLegend}\n\t\t\t\t\t\tchecked={this.state.textObject.legend}\n\t\t\t\t\t\tonChange={this.onSwitchLegend} />\n\t\t\t\t\t<br /><br />\n\t\t\t\t</div> */}\n\n        <div>\n          <h4>{l10n.textObject.principalMetric}</h4>\n\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Display text in region or tooltip</FormLabel>\n            <Switch label=\"\" checked={this.state.textObject.isTextTooltip} onChange={this.onSwitchisTextTooltip} />\n          </div>\n\n          <h5 hidden={this.state.textObject.isTextTooltip}>{l10n.textObject.textRegion}</h5>\n          <h5 hidden={!this.state.textObject.isTextTooltip}>{l10n.textObject.textBubble}</h5>\n\n          <InputSeriesColorPicker\n            color={this.state.textObject.colorBack}\n            keyInt={0}\n            text={l10n.textObject.colorBackground}\n            _onChange={this.onChangeBackColor}\n          />\n\n          <InputSeriesColorPicker\n            color={this.state.textObject.colorText}\n            keyInt={0}\n            text={l10n.textObject.colorText}\n            _onChange={this.onChangeColorText}\n          />\n\n          <StyleComponent oldStyle={this.state.textObject.style} saveParent={this.saveData} />\n\n          {/* <InputTextField\n            label={l10n.textObject.textStyle}\n            name=\"textStyleTextObject\"\n            placeholder={l10n.textObject.style}\n            required={false}\n            value={this.state.textObject.styleText}\n            _handleChange={this.onChangeStyleText}\n          /> */}\n          <br />\n          <br />\n        </div>\n        <div>\n          <h4>Generate text object</h4>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.generateTextObject}</FormLabel>\n            <Switch label={''} checked={this.state.textObject.generateObjectText} onChange={this.onSwitchGenerateObjectText} />\n          </div>\n\n          {this.state.textObject.generateObjectText && (\n            <div>\n              {/* <h4>Object text</h4> */}\n              <InputTextField\n                label={l10n.textObject.legend}\n                name=\"legendTextObject\"\n                placeholder={l10n.textObject.legend}\n                required={false}\n                value={this.state.textObject.valueGenerateObjectText.legendElement}\n                _handleChange={this.onChangeValueGenerateObjectTextLegendElement}\n              />\n              <InputTextField\n                label={l10n.textObject.digitalFormatting}\n                name=\"formatageNumeriqueTextObject\"\n                placeholder={l10n.textObject.digitalFormatting}\n                required={false}\n                value={this.state.textObject.valueGenerateObjectText.numericFormatElement}\n                _handleChange={this.onChangeValueGenerateObjectTextFormatageNumeriqueTextObject}\n              />\n              <InputTextField\n                label={l10n.textObject.mesureUnit}\n                name=\"mesureUnityTextObject\"\n                placeholder={l10n.textObject.unit}\n                required={false}\n                value={this.state.textObject.valueGenerateObjectText.unit}\n                _handleChange={this.onChangeValueGenerateObjectTextunit}\n              />\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.textObject.objectDisplayTextTooltip}</FormLabel>\n                <Switch\n                  label={''}\n                  checked={this.state.textObject.valueGenerateObjectText.displayObjectInTooltip}\n                  onChange={this.onSwitchValueGenerateObjectTextdisplayObjectInTooltip}\n                />\n              </div>\n\n              {/* <Switch\n\t\t\t\t\t\t\t\tlabel={l10n.textObject.objectDisplayInPermanentlyHover}\n\t\t\t\t\t\t\t\tchecked={this.state.textObject.valueGenerateObjectText.displayObjectPermanently}\n\t\t\t\t\t\t\t\tonChange={this.onSwitchValueGenerateObjectTextDisplayObjectPermanently}\n\t\t\t\t\t\t\t/> */}\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.textObject.colorText}</FormLabel>\n                <Switch\n                  label={''}\n                  checked={this.state.textObject.valueGenerateObjectText.addColorTextElement}\n                  onChange={this.onSwitchValueGenerateObjectTextAddColorTextElement}\n                />\n              </div>\n\n              {this.state.textObject.valueGenerateObjectText.addColorTextElement && (\n                <InputSeriesColorPicker\n                  color={this.state.textObject.valueGenerateObjectText.colorTextElement}\n                  keyInt={0}\n                  text={l10n.textObject.colorTextOptional}\n                  _onChange={this.onChangeValueGenerateObjectTextColorTextElement}\n                />\n              )}\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.textObject.backgroundColor}</FormLabel>\n                <Switch\n                  label={''}\n                  checked={this.state.textObject.valueGenerateObjectText.addColorBackElement}\n                  onChange={this.onSwitchValueGenerateObjectTextAddColorBackElement}\n                />\n              </div>\n\n              {this.state.textObject.valueGenerateObjectText.addColorBackElement && (\n                <InputSeriesColorPicker\n                  color={this.state.textObject.valueGenerateObjectText.colorBackElement}\n                  keyInt={0}\n                  text={l10n.textObject.optionalBackgroundColor}\n                  _onChange={this.onChangeValueGenerateObjectTextColorBackElement}\n                />\n              )}\n            </div>\n          )}\n          <br />\n          <br />\n        </div>\n\n        <div>\n          <h4>{l10n.textObject.auxiliaryElement}</h4>\n          <InputTextField\n            label={l10n.textObject.legend}\n            name=\"legendTextObject\"\n            placeholder={l10n.textObject.legend}\n            required={false}\n            value={this.state.textObject.generateAuxiliaryElement.legendElement}\n            _handleChange={this.onChangeLegendElement}\n          />\n          <InputTextField\n            label={l10n.textObject.digitalFormatting}\n            name=\"formatageNumeriqueTextObject\"\n            placeholder={l10n.textObject.digitalFormatting}\n            required={false}\n            value={this.state.textObject.generateAuxiliaryElement.numericFormatElement}\n            _handleChange={this.onChangeFormatageNumeriqueTextObject}\n          />\n          <InputTextField\n            label={l10n.textObject.mesureUnit}\n            name=\"mesureUnityTextObject\"\n            placeholder={l10n.textObject.unit}\n            required={false}\n            value={this.state.textObject.generateAuxiliaryElement.unit}\n            _handleChange={this.onChangeunit}\n          />\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.objectDisplayTextTooltip}</FormLabel>\n            <Switch\n              label={''}\n              checked={this.state.textObject.generateAuxiliaryElement.displayObjectInTooltip}\n              onChange={this.onSwitchdisplayObjectInTooltip}\n            />\n          </div>\n\n          {/* <Switch\n\t\t\t\t\t\tlabel={l10n.textObject.objectDisplayInPermanentlyHover}\n\t\t\t\t\t\tchecked={this.state.textObject.generateAuxiliaryElement.displayObjectPermanently}\n\t\t\t\t\t\tonChange={this.onSwitchDisplayObjectPermanently}\n\t\t\t\t\t/> */}\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.colorText}</FormLabel>\n            <Switch\n              label={''}\n              checked={this.state.textObject.generateAuxiliaryElement.addColorTextElement}\n              onChange={this.onSwitchAddColorTextElement}\n            />\n          </div>\n\n          {this.state.textObject.generateAuxiliaryElement.addColorTextElement && (\n            <InputSeriesColorPicker\n              color={this.state.textObject.generateAuxiliaryElement.colorTextElement}\n              keyInt={0}\n              text={l10n.textObject.colorTextOptional}\n              _onChange={this.onChangeColorTextElement}\n            />\n          )}\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.backgroundColor}</FormLabel>\n            <Switch\n              label={''}\n              checked={this.state.textObject.generateAuxiliaryElement.addColorBackElement}\n              onChange={this.onSwitchAddColorBackElement}\n            />\n          </div>\n\n          {this.state.textObject.generateAuxiliaryElement.addColorBackElement && (\n            <InputSeriesColorPicker\n              color={this.state.textObject.generateAuxiliaryElement.colorBackElement}\n              keyInt={0}\n              text={l10n.textObject.optionalBackgroundColor}\n              _onChange={this.onChangeColorBackElement}\n            />\n          )}\n          <br />\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\nexport default TextObjects;\n","import React from 'react';\nimport { SimpleOptions } from 'types';\n\nimport { Collapse } from '@grafana/ui';\nimport { PanelEditorProps } from '@grafana/data';\n\n// import { RegionClass } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport ManageLink from './manageLink';\nimport TextObjects from './textObjects';\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** id coordinate */\n  coordinateSpace: CoordinateSpaceClass;\n  /** call function to save data in parent */\n  callBackToParent: (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject) => void;\n}\n\ninterface State {\n  /** open or close collapse main metric */\n  collapseLink: boolean;\n  /** open or close text object */\n  collapseTextObject: boolean;\n}\n\n/**\n * class ParametresGeneriques\n */\nclass ParametresGeneriques extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapseLink: false,\n      collapseTextObject: false,\n    };\n  }\n\n  /** switch value collapseLink when click collapse */\n  onToggleLinkCollapse = (isOpen: boolean) => {\n    this.setState({\n      collapseLink: isOpen,\n    });\n  };\n\n  /** switch value collapseTextObject when click collapse */\n  onToggleTextObject = (isOpen: boolean) => {\n    this.setState({\n      collapseTextObject: isOpen,\n    });\n  };\n\n  /** close collapse when coordinateSpace object change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.coordinateSpace !== this.props.coordinateSpace) {\n      this.setState({\n        collapseLink: false,\n        collapseTextObject: false,\n      });\n    }\n  };\n\n  /** HTML */\n  render() {\n    // const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapseLink} label=\"Manage link\" onToggle={this.onToggleLinkCollapse}>\n          <div>\n            <ManageLink coordinateSpace={this.props.coordinateSpace} callBackToParent={this.props.callBackToParent} />\n          </div>\n        </Collapse>\n\n        <Collapse isOpen={this.state.collapseTextObject} label=\"Text object\" onToggle={this.onToggleTextObject}>\n          <div>\n            <TextObjects coordinateSpace={this.props.coordinateSpace} callBackToParent={this.props.callBackToParent} />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\nexport default ParametresGeneriques;\n","import React from 'react';\nimport { SimpleOptions, TManageValue, Metric } from '../../types';\n\nimport { PanelEditorProps, SelectableValue, DataFrame } from '@grafana/data';\nimport { Select, FormField, Collapse, FormLabel, Button } from '@grafana/ui';\nimport { PointClass } from 'Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** id coordinate. Use to check if componentDidUpdate launch update */\n  idCoordinate: number;\n  /** parent data */\n  metrics: Metric[];\n  /** check if coordinateSpace is OrientedLink */\n  isLink?: boolean;\n  /** check if coordinateSpace is Point */\n  isPoint?: boolean;\n  /** check if coordinateSpace is Region */\n  isRegion?: boolean;\n}\n\ninterface State {\n  /** collapse AuxMetric open or close */\n  collapse: boolean;\n  /** collapse linkA if orientedLink is bidirectionnal open or close */\n  collapseLinkA: boolean;\n  /** collapse linkB if orientedLink is bidirectionnal open or close */\n  collapseLinkB: boolean;\n  // /**  */\n  // selectQuery: Array<SelectableValue<DataFrame>>;\n  // /** */\n  // selectQueryDefault: SelectableValue<DataFrame>;\n  /** */\n  currentRefQuery: string;\n  /** */\n  currentRefQueryB: string;\n}\n/**\n * def\n */\nclass ManageAuxiliaryQuery extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      collapseLinkA: false,\n      collapseLinkB: false,\n      // selectQuery: [],\n      // selectQueryDefault: [],\n      currentRefQuery: '',\n      currentRefQueryB: '',\n    };\n  }\n\n  private saveAuxMetrics = (newAuxMetrics: Metric[], isLinkB: boolean) => {\n    const idCurrentCoordinateSpace: number = this.props.idCoordinate;\n    if (this.props.isPoint) {\n      const newArrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of newArrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          point.metrics = newAuxMetrics;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: newArrayPoints,\n      });\n    } else if (this.props.isLink) {\n      const newArrayLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of newArrayLink) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          if (isLinkB) {\n            orientedLink.metricsB = newAuxMetrics;\n          } else {\n            orientedLink.metrics = newAuxMetrics;\n          }\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: newArrayLink,\n      });\n      // console.log('arrayLinks');\n      // console.log(this.props.options.arrayOrientedLinks);\n    } else if (this.props.isRegion) {\n      const newArrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of newArrayRegion) {\n        if (region.id === idCurrentCoordinateSpace) {\n          region.metrics = newAuxMetrics;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: newArrayRegion,\n      });\n    }\n  };\n\n  private getAuxiliaryMetrics = (isLinkB: boolean): Metric[] => {\n    let auxiliaryMetrics: Metric[] = [];\n    const idCurrentCoordinateSpace: number = this.props.idCoordinate;\n    if (this.props.isLink) {\n      const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of arrayOrientedLinks) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          if (isLinkB) {\n            auxiliaryMetrics = orientedLink.metricsB;\n          } else {\n            auxiliaryMetrics = orientedLink.metrics;\n          }\n        }\n      }\n    } else if (this.props.isPoint) {\n      const arrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of arrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          auxiliaryMetrics = point.metrics;\n        }\n      }\n    } else if (this.props.isRegion) {\n      const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of arrayRegions) {\n        if (region.id === idCurrentCoordinateSpace) {\n          auxiliaryMetrics = region.metrics;\n        }\n      }\n    }\n    return auxiliaryMetrics;\n  };\n\n  // private getReferenceMainMetric = (isLinkB: boolean): string => {\n  //   let newRefId = '';\n  //   const idCurrentCoordinateSpace: number = this.props.idCoordinate;\n  //   if (this.props.isLink) {\n  //     const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n  //     for (const orientedLink of arrayOrientedLinks) {\n  //       if (orientedLink.id === idCurrentCoordinateSpace) {\n  //         if (isLinkB) {\n  //           newRefId = orientedLink.mainMetricB.refId || '';\n  //         } else {\n  //           newRefId = orientedLink.mainMetric.refId || '';\n  //         }\n  //       }\n  //     }\n  //   } else if (this.props.isPoint) {\n  //     const newArrayPoints: PointClass[] = this.props.options.arrayPoints;\n  //     for (const point of newArrayPoints) {\n  //       if (point.id === idCurrentCoordinateSpace) {\n  //         newRefId = point.mainMetric.refId || '';\n  //       }\n  //     }\n  //   } else if (this.props.isRegion) {\n  //     const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n  //     for (const region of arrayRegions) {\n  //       if (region.id === idCurrentCoordinateSpace) {\n  //         newRefId = region.mainMetric.refId || '';\n  //       }\n  //     }\n  //   }\n  //   const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n  //   for (const metric of newAuxiliaryMetrics) {\n  //     if (metric.refId !== newRefId) {\n  //       metric.refId = newRefId;\n  //       this.saveAuxMetrics(newAuxiliaryMetrics, isLinkB);\n  //     }\n  //   }\n  //   return newRefId;\n  // };\n\n  /** switch value collapse when click collapse */\n  private onToggleCollapse = (isOpen: boolean) => {\n    this.setState({\n      collapse: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkA when click collapse */\n  private onToggleCollapseLinkA = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkA: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkB when click collapse */\n  private onToggleCollapseLinkB = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkB: isOpen,\n    });\n  };\n\n  private getAllQuery = (id: string): Array<SelectableValue<DataFrame>> => {\n    let allQuery: Array<SelectableValue<DataFrame>> = [];\n    allQuery.push({ id: id, value: undefined, label: 'No value' });\n    for (const line of this.props.data.series) {\n      let duplicate = false;\n      for (const valueSave of allQuery) {\n        if (valueSave.value?.refId === line.refId) {\n          duplicate = true;\n          break;\n        }\n      }\n      if (!duplicate) {\n        allQuery.push({ id: id, value: line, label: line.refId });\n      }\n    }\n    return allQuery;\n  };\n\n  private getCurrentQuery = (id: string, isLinkB: boolean): SelectableValue<DataFrame> => {\n    let currentQuery: SelectableValue<DataFrame> = [];\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    // console.log('linkA');\n    // console.log(newAuxiliaryMetrics);\n    currentQuery = { id: id, label: newAuxiliaryMetrics[parseInt(id, 10)].refId };\n    return currentQuery;\n  };\n\n  private getCurrentQueryB = (id: string, isLinkB: boolean): SelectableValue<DataFrame> => {\n    let currentQuery: SelectableValue<DataFrame> = [];\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    // console.log('linkB');\n    // console.log(newAuxiliaryMetrics);\n    currentQuery = { id: id, label: newAuxiliaryMetrics[parseInt(id, 10)].refId };\n    return currentQuery;\n  };\n\n  /** edit value for select */\n  private onChangeSelectQuery = (event: any) => {\n    //console.log(event);\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].refId = event.label;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  /** edit value for select */\n  private onChangeSelectQueryB = (event: any) => {\n    //console.log(event);\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].refId = event.label;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private onChangeKey = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    const idCurrentAuxMetrics: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[idCurrentAuxMetrics].key = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  private onChangeKeyB = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const idCurrentAuxMetrics: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[idCurrentAuxMetrics].key = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private onChangeValueKey = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    const id: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[id].keyValue = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  private onChangeValueKeyB = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const id: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[id].keyValue = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private onChangeManageValue = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    // console.log(event);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].manageValue = event.value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  private onChangeManageValueB = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].manageValue = event.value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  // private onChangeMeta = (event: any) => {\n  //   const newValueMeta: Metadata[] = [];\n  //   const idCurrentAuxMetrics: number = event.currentTarget.id;\n  //   const value: string = event.currentTarget.value;\n  //   meta = value;\n  //   this.saveAuxMetrics(newValueMeta, false);\n  // };\n\n  // private onChangeMetaB = (event: any) => {\n  //   const newAuxiliaryMetrics: Metadata[] = this.getAuxiliaryMetrics(true);\n  //   const idCurrentAuxMetrics: number = event.currentTarget.id;\n  //   const value: string = event.currentTarget.value;\n  //   newAuxiliaryMetrics[idCurrentAuxMetrics].meta = value;\n  //   this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  // };\n\n  private addAuxiliaryMetric = () => {\n    // const refIdMetric: string = this.state.currentRefQuery;\n    let newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    newAuxiliaryMetrics.push({\n      key: '',\n      unit: '',\n      format: '',\n      keyValue: '',\n      refId: '',\n      manageValue: 'avg',\n    });\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n    this.displayInputs(false);\n  };\n\n  private addAuxiliaryMetricB = () => {\n    // const refIdMetric: string = this.state.currentRefQueryB;\n    let newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    newAuxiliaryMetrics.push({\n      key: '',\n      unit: '',\n      format: '',\n      keyValue: '',\n      refId: '',\n      manageValue: 'avg',\n    });\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n    this.displayInputs(true);\n  };\n\n  private deleteAuxiliaryMetric = (event: any) => {\n    const id: number = event.currentTarget.id;\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    newAuxiliaryMetrics.splice(id, 1);\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n    this.displayInputs(false);\n  };\n\n  private deleteAuxiliaryMetricB = (event: any) => {\n    const id: number = event.currentTarget.id;\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    newAuxiliaryMetrics.splice(id, 1);\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n    this.displayInputs(true);\n  };\n\n  private getAllManageValue = (id: string): Array<SelectableValue<TManageValue>> => {\n    const selectManageValue: Array<SelectableValue<TManageValue>> = [\n      { id: id, value: 'avg', label: 'average' },\n      { id: id, value: 'sum', label: 'total' },\n      { id: id, value: 'err', label: 'error' },\n    ];\n    return selectManageValue;\n  };\n\n  private getCurrentManageValue = (id: number, isLinkB: boolean): SelectableValue<TManageValue> => {\n    let label = '';\n    const auxMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n    if (auxMetrics[id].manageValue === 'avg') {\n      label = 'average';\n    } else if (auxMetrics[id].manageValue === 'sum') {\n      label = 'total';\n    } else if (auxMetrics[id].manageValue === 'err') {\n      label = 'error';\n    }\n    const value: SelectableValue<TManageValue> = {\n      id: id,\n      value: auxMetrics[id].manageValue,\n      label: label,\n    };\n    return value;\n  };\n\n  private generateInputs = (index: number, isLinkB: boolean): JSX.Element => {\n    const id: number = index;\n    //const refIdMetric: string = this.state.currentQuery.label || '';\n    const auxMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n    const idCoordinateSpace: string = this.props.idCoordinate?.toString() || '';\n\n    const styleTitle = {\n      marginTop: '10px',\n      textAlign: 'center',\n    } as React.CSSProperties;\n\n    const styleMainDiv = {\n      marginTop: '5px',\n      border: '1px solid rgb(23, 23, 24)',\n    } as React.CSSProperties;\n\n    const styleContent = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: '5px',\n    } as React.CSSProperties;\n\n    const styleSelect = {\n      display: 'flex',\n      flexDirection: 'row',\n      marginBottom: '2px',\n    } as React.CSSProperties;\n\n    // const styleReferenceMetric = {\n    //   width: '416px',\n    //   height: '35px',\n    //   border: '1px solid #262628',\n    //   borderRadius: '0 3px 3px 0',\n    //   backgroundColor: '#09090b',\n    //   padding: '8px',\n    //   fontSize: '14px',\n    //   lineHeight: '18px',\n    //   color: '#d8d9da',\n    //   marginBottom: '0px',\n    // } as React.CSSProperties;\n\n    let item: JSX.Element;\n    if (isLinkB) {\n      item = (\n        <div key={idCoordinateSpace + 'mainDiv' + id.toString()} style={styleMainDiv}>\n          <p key={idCoordinateSpace + 'title' + id.toString()} style={styleTitle}>\n            {'Metric ' + (id + 1).toString()}\n          </p>\n          <div key={idCoordinateSpace + 'content' + id.toString()} style={styleContent}>\n            <div key={idCoordinateSpace + 'inputs' + id.toString()}>\n              {/* <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={10}>\n                  Query\n                </FormLabel>\n                <p key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()} style={styleReferenceMetric}>\n                  {refIdMetric}\n                </p>\n              </div> */}\n              <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={{ display: 'flex' }}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={15}>\n                  Query\n                </FormLabel>\n                <Select\n                  key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()}\n                  onChange={this.onChangeSelectQueryB}\n                  allowCustomValue={false}\n                  options={this.getAllQuery(id.toString())}\n                  width={30}\n                  value={this.getCurrentQueryB(id.toString(), isLinkB)}\n                />\n              </div>\n              <FormField\n                key={idCoordinateSpace + 'inputKey' + id.toString()}\n                id={id.toString()}\n                label=\"Key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].key}\n                name=\"key\"\n                onChange={this.onChangeKeyB}\n              />\n              <FormField\n                key={idCoordinateSpace + 'valueKey' + id.toString()}\n                id={id.toString()}\n                label=\"Value key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].keyValue}\n                name=\"valueKey\"\n                onChange={this.onChangeValueKeyB}\n              />\n              <div key={idCoordinateSpace + 'divTypeOfValue' + id.toString()} id={id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelTypeOfValue' + id.toString()} width={15}>\n                  Value\n                </FormLabel>\n                <Select\n                  key={idCoordinateSpace + 'selectTypeOfValue' + id.toString()}\n                  onChange={this.onChangeManageValueB}\n                  allowCustomValue={false}\n                  options={this.getAllManageValue(id.toString())}\n                  width={30}\n                  value={this.getCurrentManageValue(id, isLinkB)}\n                />\n              </div>\n            </div>\n            <div key={idCoordinateSpace + 'buttonDelete' + id.toString()}>\n              <Button id={id.toString()} onClick={this.deleteAuxiliaryMetricB} variant={'danger'}>\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      item = (\n        <div key={idCoordinateSpace + 'mainDiv' + id.toString()} style={styleMainDiv}>\n          <p key={idCoordinateSpace + 'title' + id.toString()} style={styleTitle}>\n            {'Metric ' + (id + 1).toString()}\n          </p>\n          <div key={idCoordinateSpace + 'content' + id.toString()} style={styleContent}>\n            <div key={idCoordinateSpace + 'inputs' + id.toString()}>\n              {/* <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={15}>\n                  Query\n                </FormLabel>\n                <p key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()} style={styleReferenceMetric}>\n                  {refIdMetric}\n                </p>\n              </div> */}\n              <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={{ display: 'flex' }}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={15}>\n                  Query\n                </FormLabel>\n                <Select\n                  key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()}\n                  onChange={this.onChangeSelectQuery}\n                  allowCustomValue={false}\n                  options={this.getAllQuery(id.toString())}\n                  width={30}\n                  value={this.getCurrentQuery(id.toString(), isLinkB)}\n                />\n              </div>\n              <FormField\n                key={idCoordinateSpace + 'inputKey' + id.toString()}\n                id={id.toString()}\n                label=\"Key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].key}\n                name=\"key\"\n                onChange={this.onChangeKey}\n              />\n              <FormField\n                key={idCoordinateSpace + 'valueKey' + id.toString()}\n                id={id.toString()}\n                label=\"Value key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].keyValue}\n                name=\"valueKey\"\n                onChange={this.onChangeValueKey}\n              />\n              <div key={idCoordinateSpace + 'divTypeOfValue' + id.toString()} id={id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelTypeOfValue' + id.toString()} width={15}>\n                  Value\n                </FormLabel>\n                <Select\n                  key={idCoordinateSpace + 'selectTypeOfValue' + id.toString()}\n                  onChange={this.onChangeManageValue}\n                  allowCustomValue={false}\n                  options={this.getAllManageValue(id.toString())}\n                  width={30}\n                  value={this.getCurrentManageValue(id, isLinkB)}\n                />\n              </div>\n            </div>\n            <div key={idCoordinateSpace + 'buttonDelete' + id.toString()}>\n              <Button id={id.toString()} onClick={this.deleteAuxiliaryMetric} variant={'danger'}>\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return <div key={idCoordinateSpace + 'listInputOneMetric' + id.toString()}>{item}</div>;\n  };\n\n  private displayInputs = (isLinkB: boolean) => {\n    const idCoordinateSpace: string = this.props.idCoordinate?.toString() || '';\n    let auxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n\n    const mapItems: JSX.Element[] = [];\n    let index = 0;\n\n    auxiliaryMetrics.forEach(() => {\n      const item: JSX.Element = this.generateInputs(index, isLinkB);\n      mapItems.push(item);\n      index++;\n    });\n\n    return <div key={idCoordinateSpace + 'listInputAllMetrics'}>{mapItems}</div>;\n  };\n\n  componentDidMount = () => {\n    //this.fillSelectQuery();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    const idCoordinateSpace: string = this.props.idCoordinate?.toString() || '';\n    const styleButtonAdd = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: '10px',\n    } as React.CSSProperties;\n\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.idCoordinate) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      return (\n        <Collapse isOpen={this.state.collapse} label=\"Auxiliary metrics\" onToggle={this.onToggleCollapse}>\n          <Collapse isOpen={this.state.collapseLinkA} label=\"Link A\" onToggle={this.onToggleCollapseLinkA}>\n            {this.displayInputs(false)}\n            <div key={idCoordinateSpace + 'buttonAdd'} style={styleButtonAdd}>\n              <Button onClick={this.addAuxiliaryMetric}>Add Auxiliary Metric</Button>\n            </div>\n          </Collapse>\n          <Collapse isOpen={this.state.collapseLinkB} label=\"Link B\" onToggle={this.onToggleCollapseLinkB}>\n            {this.displayInputs(true)}\n            <div key={idCoordinateSpace + 'buttonAdd'} style={styleButtonAdd}>\n              <Button onClick={this.addAuxiliaryMetricB}>Add Auxiliary Metric</Button>\n            </div>\n          </Collapse>\n        </Collapse>\n      );\n    } else {\n      return (\n        <Collapse isOpen={this.state.collapse} label=\"Auxiliary metrics\" onToggle={this.onToggleCollapse}>\n          {this.displayInputs(false)}\n          <div key={idCoordinateSpace + 'buttonAdd'} style={styleButtonAdd}>\n            <Button onClick={this.addAuxiliaryMetric}>Add Auxiliary Metric</Button>\n          </div>\n        </Collapse>\n      );\n    }\n  }\n}\nexport default ManageAuxiliaryQuery;\n","import React, { CSSProperties } from 'react';\nimport { SimpleOptions, Metric } from 'types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Button, Select, Alert, FormField, FormLabel } from '@grafana/ui';\n\nimport { ArrayInputClass } from 'Models/ArrayInputClass';\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { InputClass } from 'Models/InputClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport InputButtonField from 'Functions/Input/inputButton';\nimport InputTextField from 'Functions/Input/inputText';\nimport { createInputCoor } from 'Functions/CreateInput/createInputCoor';\nimport { editGoodParameterExtend } from 'Functions/EditParameter/editGoodParameter';\nimport { returnAllId } from 'Functions/searchIDLimit';\nimport { cloneRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n\nimport ManageLowerLimit from 'components/Parametrage/manageLowerLimit';\nimport ManageQuery from './manageQuery';\nimport ParametresGeneriques from 'components/Parametrage/parametresGeneriques';\n\nimport 'style/CoordinateSpace.css';\nimport ManageAuxiliaryQuery from './manageAuxiliaryQuery';\n\nexport declare type AlertVariant = 'success' | 'warning' | 'error' | 'info';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** if it's parent component is add then don't display delete button  */\n  isAddCoordinate: boolean;\n  /** coordinate to edit */\n  coordinate: RegionClass;\n  /** save data in parent */\n  callBackToParent: (id: number, newCoordinate?: RegionClass) => void;\n  /** id coordinateSpace */\n  id?: number;\n}\n\ninterface State {\n  /** stock coordinates in array object for Parent Component */\n  arrayCoor: RegionClass;\n  /** stock HTML input coordinates */\n  arrayInput: ArrayInputClass[];\n  /** stock html form */\n  htmlInput: JSX.Element;\n  /** display alert when form error */\n  hiddenAlert: boolean;\n  /** text to display alert */\n  titleAlert: string;\n  /** alert type */\n  severityAlert: AlertVariant;\n  /** choice svg mode */\n  selectedRadio: string;\n  /** selectedSVG */\n  allIDSelected: Array<SelectableValue<string>>;\n  /** selectedDefault id svg */\n  selectedDefaultSVG: SelectableValue<string>;\n}\n\n/**\n * component edit space coordinate\n */\nclass CoordinateSpace extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayCoor: cloneRegionCoordinateSpace(\n        this.props.coordinate,\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10),\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10),\n        parseInt(this.props.options.baseMap.width, 10),\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10),\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10),\n        parseInt(this.props.options.baseMap.height, 10)\n      ),\n      arrayInput: [],\n      htmlInput: <div></div>,\n      hiddenAlert: true,\n      titleAlert: 'Error: label is empty',\n      severityAlert: 'error',\n      selectedRadio: 'svgMode',\n      allIDSelected: [],\n      selectedDefaultSVG: [],\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncArrayCoor = (state: {\n    /** new espace coordinate */\n    arrayCoor: RegionClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncArrayInput = (state: {\n    /** new line in array input */\n    arrayInput: ArrayInputClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** add inputs for a new coordiante */\n  addInput = async (id: number) => {\n    await this.setStateAsyncArrayInput({\n      arrayInput: this.state.arrayInput.concat([new ArrayInputClass(id, createInputCoor(id, false))]),\n    });\n  };\n\n  /**\n   * Delete array input and value\n   * @param {event} event event click delete button\n   */\n  deleteOwnInput = (): void => {\n    const del: boolean = confirm('Delete \"' + this.state.arrayCoor.label + '\" ?');\n    // alert(del);\n    if (del) {\n      this.props.callBackToParent(this.state.arrayCoor.id, undefined);\n    }\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   * @param {number} index id of input\n   */\n  _handleChange(currentTarget: string, name: string, index: number): void {\n    let tmp: RegionClass = this.state.arrayCoor;\n\n    // UPDATE xMinDefault and xMaxDefault\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n    let newCoordDefault: Coord4D = tmp.coordsDefault;\n    if (name.startsWith('positionXMin')) {\n      // console.log('update xMin');\n      newCoordDefault.xMin = (((parseInt(currentTarget, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n    }\n    if (name.startsWith('positionXMax')) {\n      // console.log('update xMax');\n      newCoordDefault.xMax = (((parseInt(currentTarget, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n    }\n\n    // UPDATE yMinDefault and yMaxDefault\n    const heightBackground = parseInt(this.props.options.baseMap.height, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n    if (name.startsWith('positionYMin')) {\n      // console.log('update yMin');\n      newCoordDefault.yMin = (((parseInt(currentTarget, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n    }\n    if (name.startsWith('positionYMax')) {\n      // console.log('update yMax');\n      newCoordDefault.yMax = (((parseInt(currentTarget, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n    }\n    // console.log(newCoordDefault);\n    tmp.coordsDefault = newCoordDefault;\n\n    tmp = editGoodParameterExtend(name, tmp, currentTarget);\n    console.log(tmp);\n    this.setState({\n      arrayCoor: tmp,\n    });\n    this.fillInputEspaceCoor();\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * Get value of input with state.arrayCoor\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  getGoodValue(id: number, param: string): string {\n    let value: string;\n\n    value = '';\n    if (param.startsWith('positionXMin')) {\n      value = this.state.arrayCoor.coords.xMin;\n    } else if (param.startsWith('positionXMax')) {\n      value = this.state.arrayCoor.coords.xMax;\n    } else if (param.startsWith('positionYMin')) {\n      value = this.state.arrayCoor.coords.yMin;\n    } else if (param.startsWith('positionYMax')) {\n      value = this.state.arrayCoor.coords.yMax;\n    } else if (param.startsWith('label')) {\n      value = this.state.arrayCoor.label;\n    } else if (param.startsWith('image')) {\n      value = this.state.arrayCoor.img;\n    } else if (param.startsWith('key')) {\n      value = this.state.arrayCoor.mainMetric.key;\n    } else if (param.startsWith('valueKey')) {\n      value = this.state.arrayCoor.mainMetric.keyValue;\n    }\n    return value;\n  }\n\n  /** create dynamic input */\n  fillInputEspaceCoor(): void {\n    const { arrayInput } = this.state;\n    let finalItem: JSX.Element[] = [];\n\n    for (const line of arrayInput) {\n      const mapItems = line.getUneClassInput().map((obj: InputClass) =>\n        obj.getInputType() === 'text' ? (\n          <InputTextField\n            key={obj.getId()}\n            label={obj.getLabel()}\n            name={obj.getName()}\n            placeholder={obj.getPlaceholder() || ''}\n            required={obj.getRequired()}\n            value={this.getGoodValue(line.getId(), obj.getName())}\n            _handleChange={(event: {\n              /** get currentTarget in event element */\n              currentTarget: HTMLInputElement;\n            }) => this._handleChange(event.currentTarget.value, obj.getName(), line.getId())}\n          />\n        ) : !this.props.isAddCoordinate ? (\n          <InputButtonField\n            key={obj.getId()}\n            label={obj.getLabel()}\n            value={obj.getValue() || ''}\n            name={obj.getName()}\n            required={obj.getRequired()}\n            _handleChange={this.deleteOwnInput}\n            id={obj.getId()}\n          />\n        ) : (\n          <div></div>\n        )\n      );\n      const divKey: string = 'inputCoor' + line.getId().toString();\n      const newInput: JSX.Element = (\n        <div key={'addCoordinate' + divKey} className=\"inputCoor\">\n          {mapItems}\n        </div>\n      );\n      finalItem = finalItem.concat(newInput);\n    }\n    this.setState((prevState: State) => ({\n      htmlInput: <ul>{finalItem}</ul>,\n      selectedRadio: prevState.arrayCoor.mode ? 'svgMode' : 'coordinateMode',\n    }));\n  }\n\n  /** edit value for selectedDefaultValue and edit idSVG arrayCoor */\n  onChangeSelectSVG = (value: SelectableValue<string>) => {\n    // const newId: SelectableValue<string> = value;\n    const coordinate: RegionClass = this.state.arrayCoor;\n    coordinate.idSVG = value.value || '';\n    this.setState({\n      selectedDefaultSVG: value,\n      arrayCoor: coordinate,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** call function to return arrayCoor a SimpleEditor */\n  callBack = (): void => {\n    // Define defaultCoor + defaultWidth + default height to creation of region\n    let newArrayCoor = this.state.arrayCoor;\n    // newArrayCoor.coordsDefault = {\n    //   xMin: this.state.arrayCoor.coords.xMin,\n    //   xMax: this.state.arrayCoor.coords.xMax,\n    //   yMin: this.state.arrayCoor.coords.yMin,\n    //   yMax: this.state.arrayCoor.coords.yMax,\n    // };\n    newArrayCoor.widthInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)\n    ).toString();\n    newArrayCoor.heightInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10)\n    ).toString();\n    this.setState({\n      arrayCoor: newArrayCoor,\n    });\n\n    const waitAlert = 3000;\n\n    if (this.state.arrayCoor.label === '') {\n      this.setState({\n        severityAlert: 'error',\n        titleAlert: 'Error: label is empty',\n        hiddenAlert: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          hiddenAlert: true,\n        });\n      }, waitAlert);\n      //console.log('ok');\n    } else {\n      this.props.callBackToParent(this.state.arrayCoor.id, this.state.arrayCoor);\n      this.setState({\n        severityAlert: 'success',\n        titleAlert: 'Save',\n        hiddenAlert: false,\n      });\n      if (!this.props.isAddCoordinate) {\n        setTimeout(() => {\n          this.setState({\n            hiddenAlert: true,\n          });\n        }, waitAlert);\n      }\n    }\n  };\n\n  /** save data in parent */\n  callBackToOther = (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject): void => {\n    const oldCoor: RegionClass = this.state.arrayCoor;\n    if (followLink || followLink === '') {\n      oldCoor.linkURL.followLink = followLink;\n    }\n    if (hoveringTooltipLink || hoveringTooltipLink === '') {\n      oldCoor.linkURL.hoveringTooltipLink = hoveringTooltipLink;\n    }\n    if (hoveringTooltipText || hoveringTooltipText === '') {\n      oldCoor.linkURL.hoveringTooltipText = hoveringTooltipText;\n    }\n    if (textObj) {\n      oldCoor.textObj = textObj;\n    }\n    this.setState({\n      arrayCoor: oldCoor,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** update lower limit */\n  callBackManageLowerLimit = (coordiante: CoordinateSpaceClass) => {\n    const newValue: RegionClass = this.state.arrayCoor;\n\n    newValue.colorMode = coordiante.colorMode;\n    newValue.traceBorder = coordiante.traceBorder;\n    newValue.traceBack = coordiante.traceBack;\n    this.setState({\n      arrayCoor: newValue,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** save lower limit data */\n  callBackLowerLimit = (lowerLimit: LowerLimitClass[]) => {\n    const newValue: RegionClass = this.state.arrayCoor;\n    newValue.lowerLimit = lowerLimit;\n    this.setState({\n      arrayCoor: newValue,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** save mainMetric data */\n  callBackMainMetric = (mainMetric: Metric): void => {\n    const newValue: RegionClass = this.state.arrayCoor;\n    newValue.mainMetric = mainMetric;\n    this.setState({\n      arrayCoor: newValue,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** change value radio button checker to pass svg or coordinate mode */\n  onChangeRadioMode = (event: {\n    /** get current value to target */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const coordinate: RegionClass = this.state.arrayCoor;\n\n    coordinate.mode = event.currentTarget.value === 'svgMode' ? true : false;\n    this.setState({\n      selectedRadio: event.currentTarget.value,\n      arrayCoor: coordinate,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** add all id SVG in select */\n  fillSelectSVG = () => {\n    const selectedIDSvg: Array<SelectableValue<string>> = [];\n    if (this.state.allIDSelected.length > 0) {\n      const allIDSelected: Array<SelectableValue<string>> = this.state.allIDSelected;\n      let defaultSVG: SelectableValue<string> = allIDSelected[0];\n      for (const line of allIDSelected) {\n        if (line.value === this.state.arrayCoor.idSVG) {\n          defaultSVG = line;\n        }\n      }\n      this.setState({\n        selectedDefaultSVG: defaultSVG,\n      });\n      return;\n    }\n    const timeRefresh = 1000;\n    if (this.props.options.baseMap.modeSVG) {\n      const refresh = setInterval(() => {\n        const data: string[] = returnAllId(this.props.options.coordinateSpaceInitial.coordinate, this.props.options.baseMap);\n\n        if (data.length > 0) {\n          for (const line of data) {\n            selectedIDSvg.push({ value: line, label: line });\n          }\n          let defaultSVG: SelectableValue<string> = selectedIDSvg[0];\n          for (const line of selectedIDSvg) {\n            if (line.value === this.state.arrayCoor.idSVG) {\n              defaultSVG = line;\n            }\n          }\n          this.setState({\n            allIDSelected: selectedIDSvg,\n            selectedDefaultSVG: defaultSVG,\n          });\n          clearInterval(refresh);\n        }\n        // else {\n        // \tconsole.error('error search id');\n        // }\n      }, timeRefresh);\n    }\n  };\n\n  /**\n   * fill input whith data\n   * this function is called by mount and update event\n   */\n  getDataInInput = async () => {\n    await this.addInput(this.props.coordinate.id);\n    this.fillInputEspaceCoor();\n    this.fillSelectSVG();\n  };\n\n  /** call function in load component */\n  componentDidMount = () => {\n    this.getDataInInput();\n  };\n\n  /** function is call when props is update. Update state */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps.coordinate.id !== this.props.coordinate.id) {\n      await this.setStateAsyncArrayCoor({\n        arrayCoor: cloneRegionCoordinateSpace(\n          this.props.coordinate,\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10),\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10),\n          parseInt(this.props.options.baseMap.width, 10),\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10),\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10),\n          parseInt(this.props.options.baseMap.height, 10)\n        ),\n      });\n      await this.setStateAsyncArrayInput({\n        arrayInput: [],\n      });\n      this.getDataInInput();\n    }\n    // if (prevProps.data.series !== this.props.data.series) {\n    // \tthis.fillSelectQuery();\n    // }\n  };\n\n  /** return html */\n  render() {\n    const styleAlert = {\n      position: 'fixed',\n      bottom: '5%',\n      right: '5%',\n      zIndex: 9999,\n    } as CSSProperties;\n\n    return (\n      <div>\n        <div style={styleAlert} hidden={this.state.hiddenAlert}>\n          <Alert title={this.state.titleAlert} severity={this.state.severityAlert} />\n        </div>\n        <div>{this.state.htmlInput}</div>\n        <div>\n          <ManageQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.arrayCoor.id}\n            mainMetric={this.state.arrayCoor.mainMetric}\n            callBackToParent={this.callBackMainMetric}\n            isLink={false}\n          />\n        </div>\n        {!this.props.isAddCoordinate && (\n          <div>\n            <ManageAuxiliaryQuery\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              idCoordinate={this.state.arrayCoor.id}\n              metrics={this.state.arrayCoor.metrics}\n              //callBackToParent={this.callBackAuxiliaryMetric}\n              isRegion={true}\n            />\n          </div>\n        )}\n        <div>\n          <ParametresGeneriques\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinateSpace={this.state.arrayCoor}\n            callBackToParent={this.callBackToOther}\n          />\n        </div>\n        <div>\n          <ManageLowerLimit\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinate={this.state.arrayCoor}\n            callBack={this.callBackManageLowerLimit}\n            lowerLimitCallBack={this.callBackLowerLimit}\n            isLink={false}\n          />\n        </div>\n        <br />\n        <div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"svgMode\" checked={this.state.selectedRadio === 'svgMode'} onChange={this.onChangeRadioMode} />\n              SVG mode\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"coordinateMode\" checked={this.state.selectedRadio === 'coordinateMode'} onChange={this.onChangeRadioMode} />\n              Coordinate mode\n            </label>\n          </div>\n          <br></br>\n          {this.state.selectedRadio === 'svgMode' ? (\n            <div className=\"svgMode\">\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>Zone SVG</FormLabel>\n                <Select\n                  onChange={(value) => this.onChangeSelectSVG(value)}\n                  allowCustomValue={false}\n                  options={this.state.allIDSelected}\n                  width={10}\n                  value={this.state.selectedDefaultSVG}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"classRegion\">\n              <FormField\n                label=\"Image\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.img}\n                name=\"image\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'image', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"X min\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.xMin}\n                name=\"positionXMin\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionXMin', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"X max\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.xMax}\n                name=\"positionXMax\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionXMax', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"Y min\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.yMin}\n                name=\"positionYMin\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionYMin', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"Y max\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.yMax}\n                name=\"positionYMax\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionYMax', this.state.arrayCoor.id)}\n              />\n            </div>\n          )}\n        </div>\n        <br />\n        <div style={{ textAlign: 'center' }} className=\"buttonSave\">\n          {this.props.isAddCoordinate && (\n            <Button style={{ marginRight: '1%' }} onClick={() => this.callBack()}>\n              Save\n            </Button>\n          )}\n          {!this.props.isAddCoordinate && (\n            <Button onClick={this.deleteOwnInput} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n        {/* <Button onClick={() => console.log(this.state.arrayCoor)}>load</Button> */}\n      </div>\n    );\n  }\n}\nexport default CoordinateSpace;\n","import { Background } from 'types';\n\nimport { Coord4D } from 'Models/RegionClass';\n\nexport interface Coor4DNum {\n  xMin: number;\n  xMax: number;\n  yMin: number;\n  yMax: number;\n}\n\n/** verif limit for one coordinate */\n// const verifAllLimit = (n: number, limit: number[], isWith: boolean) => {\n//   //console.log(n);\n//   if (isWith) {\n//     if (limit[0] <= n && limit[1] >= n) {\n//       return true;\n//     }\n//   } else {\n//     if (limit[2] <= n && limit[3] >= n) {\n//       return true;\n//     }\n//   }\n//   return false;\n// };\n\n// /** search all coordinate if atribute is d */\n// const searchOtherLimitDAttribute = (data: string, limit: number[]): boolean => {\n//   const parseWithLetter = [];\n//   const regex = /[a-zA-Z]{1}[0-9.\\W]*/g;\n//   let tmp;\n\n//   do {\n//     tmp = regex.exec(data);\n//     if (tmp) {\n//       parseWithLetter.push(tmp.toString());\n//     }\n//   } while (tmp);\n//   //console.log(parseWithLetter);\n//   for (const line of parseWithLetter) {\n//     const tmpBis: string[] = line.split(' ');\n//     //const tmpTest: string[] = line.split(/,| /);\n\n//     let index = 0;\n//     // console.log(tmpBis);\n//     //console.log(tmpTest);\n//     // console.log(limit);\n//     for (const lineTmp of tmpBis) {\n//       if (lineTmp === '') {\n//         break;\n//       }\n//       if (index !== 0 && index % 2 !== 0) {\n//         if (!verifAllLimit(parseInt(lineTmp, 10), limit, true)) {\n//           //console.log('no');\n//           return true;\n//         }\n//       } else if (index !== 0) {\n//         if (!verifAllLimit(parseInt(lineTmp, 10), limit, false)) {\n//           //console.log('no');\n//           return true;\n//         }\n//       }\n//       ++index;\n//     }\n//   }\n//   //console.log('ok');\n//   return false;\n// };\n\n/** search if x and y are in limit */\n// const searchOtherLimitXYAttribute = (element: HTMLElement, limit: number[], labelX: string, labelY: string): boolean => {\n//   //console.log(element);\n//   const x: number = parseInt(element.getAttribute(labelX) || '0', 10);\n//   const y: number = parseInt(element.getAttribute(labelY) || '0', 10);\n\n//   if (x !== null && y !== null) {\n//     if (verifAllLimit(x, limit, true) && verifAllLimit(y, limit, false)) {\n//       return false;\n//     }\n//   }\n//   return true;\n// };\n\n/** search if x1|2 and y1|2 are in limit */\n// const searchOtherLimitXnYnAttribute = (element: HTMLElement, limit: number[]): boolean => {\n//   const x1: number = parseInt(element.getAttribute('x1') || '0', 10);\n//   const x2: number = parseInt(element.getAttribute('x2') || '0', 10);\n//   const y1: number = parseInt(element.getAttribute('y1') || '0', 10);\n//   const y2: number = parseInt(element.getAttribute('y2') || '0', 10);\n//   if (x1 && x2 && y1 && y2) {\n//     if (verifAllLimit(x1, limit, true) && verifAllLimit(x2, limit, true) && verifAllLimit(y1, limit, false) && verifAllLimit(y2, limit, false)) {\n//       return false;\n//     }\n//   }\n//   return true;\n// };\n\n// /** search if region id svg is in limit */\n// const regionIsOverLimit = (element: HTMLElement | null, limit: number[]): boolean => {\n//   //console.log(element);\n//   if (!element) {\n//     //console.log('1');\n//     return true;\n//   }\n//   let attribute: string | null = element.getAttribute('d');\n//   //console.log(attribute);\n//   if (attribute) {\n//     //console.log('2');\n//     return searchOtherLimitDAttribute(attribute, limit);\n//   }\n//   attribute = element.getAttribute('x');\n//   //console.log(attribute);\n//   if (attribute) {\n//     //console.log('3');\n//     return searchOtherLimitXYAttribute(element, limit, 'x', 'y');\n//   }\n//   attribute = element.getAttribute('x1');\n//   if (attribute) {\n//     //console.log('4');\n//     return searchOtherLimitXnYnAttribute(element, limit);\n//   }\n//   attribute = element.getAttribute('cx');\n//   if (attribute) {\n//     //console.log('5');\n//     return searchOtherLimitXYAttribute(element, limit, 'cx', 'cy');\n//   }\n//   return true;\n// };\n\n/** convert initial percent coordinate from -100 -> 100 to 0 -> 100 */\nconst convertInitialCoordinate = (n: number) => {\n  const midPercent = 50;\n\n  n = n >= 0 ? (n / 2 || 0) + midPercent : -n / 2 - midPercent;\n  return n;\n};\n\nexport const pixelToPercent = (coordinate: Coord4D, baseMap: Background): Coor4DNum => {\n  const limit: number[] = [\n    parseInt(coordinate.xMin, 10),\n    parseInt(coordinate.xMax, 10),\n    parseInt(coordinate.yMin, 10),\n    parseInt(coordinate.yMax, 10),\n  ];\n\n  limit[0] = convertInitialCoordinate(limit[0]);\n  limit[1] = convertInitialCoordinate(limit[1]);\n  limit[2] = convertInitialCoordinate(limit[2]);\n  limit[3] = convertInitialCoordinate(limit[3]);\n\n  const sizeHeight: number = parseInt(baseMap.height, 10);\n  const sizeWidth: number = parseInt(baseMap.width, 10);\n  const percent = 100;\n\n  limit[0] = limit[0] / percent || 0;\n  limit[0] = sizeWidth * limit[0];\n  limit[1] = limit[1] / percent || 0;\n  limit[1] = sizeWidth * limit[1];\n  limit[2] = limit[2] / percent || 0;\n  limit[2] = sizeHeight * limit[2];\n  limit[3] = limit[3] / percent || 0;\n  limit[3] = sizeHeight * limit[3];\n  return {\n    xMin: limit[0],\n    xMax: limit[1],\n    yMin: limit[2],\n    yMax: limit[3],\n  };\n};\n\n/** return all id list in principal id */\nexport const returnAllId = (coordinate: Coord4D, baseMap: Background): string[] => {\n  const arrId: string[] = [];\n  const arrIdVerif: string[] = [];\n  const listElement: NodeListOf<Element> | undefined = document.getElementById(baseMap.idSVG)?.querySelectorAll('*[id]');\n  //console.log(listElement);\n  // const filtered = [listElement].filter();\n  //     function(e) {\n  //       return\n  //     },\n  //     [octpath,octrect,octellipse]\n  // );\n\n  //console.log(listElement);\n\n  if (listElement) {\n    // const limit: number[] = [\n    //   parseInt(coordinate.xMin, 10),\n    //   parseInt(coordinate.xMax, 10),\n    //   parseInt(coordinate.yMin, 10),\n    //   parseInt(coordinate.yMax, 10),\n    // ];\n\n    // limit[0] = convertInitialCoordinate(limit[0]);\n    // limit[1] = convertInitialCoordinate(limit[1]);\n    // limit[2] = convertInitialCoordinate(limit[2]);\n    // limit[3] = convertInitialCoordinate(limit[3]);\n\n    // const sizeHeight: number = parseInt(baseMap.height, 10);\n    // const sizeWidth: number = parseInt(baseMap.width, 10);\n    // const percent = 100;\n\n    // limit[0] = limit[0] / percent || 0;\n    // limit[0] = sizeWidth * limit[0];\n    // limit[1] = limit[1] / percent || 0;\n    // limit[1] = sizeWidth * limit[1];\n    // limit[2] = limit[2] / percent || 0;\n    // limit[2] = sizeHeight * limit[2];\n    // limit[3] = limit[3] / percent || 0;\n    // limit[3] = sizeHeight * limit[3];\n    // const coordInt = pixelToPercent(coordinate, baseMap);\n    // const limit: number[] = [coordInt.xMin, coordInt.xMax, coordInt.yMin, coordInt.yMax];\n    Array.from(listElement).forEach((e: Element) => {\n      //console.log(e);\n      // if (!regionIsOverLimit(document.getElementById(e.id), limit)) {\n      //   //console.log('is pushed');\n      //   arrId.push(e.id);\n      // }\n      if (e.localName === 'path' || e.localName === 'rect' || e.localName === 'ellipse') {\n        arrId.push(e.id);\n      }\n      arrIdVerif.push(e.id);\n    });\n    //console.log(arrId.length);\n    arrId.sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n      return 0;\n    });\n  } else {\n    console.error('id svg not found');\n  }\n  return arrId;\n};\n","import { SelectableValue } from '@grafana/data';\n/**\n * class InputClass\n */\nexport class InputSelectableClass {\n  id: string;\n  label: string;\n  name: string;\n  input_type: string;\n  required: boolean;\n  optionValues: Array<SelectableValue<any>>;\n  defaultValueColor: string;\n  placeholder?: string;\n  value?: string;\n\n  constructor(\n    id: string,\n    label: string,\n    name: string,\n    input_type: string,\n    optionValues: Array<SelectableValue<any>>,\n    defaultValueColor: string,\n    required: boolean,\n    placeholder?: string,\n    value?: string\n  ) {\n    this.id = id;\n    this.label = label;\n    this.name = name;\n    this.input_type = input_type;\n    this.optionValues = optionValues;\n    this.defaultValueColor = defaultValueColor;\n    this.required = required;\n    this.placeholder = placeholder;\n    this.value = value;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  setId(id: string) {\n    this.id = id;\n  }\n\n  getLabel(): string {\n    return this.label;\n  }\n\n  setLabel(label: string) {\n    this.label = label;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  setName(name: string) {\n    this.name = name;\n  }\n\n  getInputType() {\n    return this.input_type;\n  }\n\n  setInputType(input_type: string) {\n    this.input_type = input_type;\n  }\n\n  getRequired() {\n    return this.required;\n  }\n\n  setRequired(required: boolean) {\n    this.required = required;\n  }\n\n  getPlaceholder() {\n    return this.placeholder;\n  }\n\n  setPlaceholder(placeholder: string) {\n    this.placeholder = placeholder;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value: string) {\n    this.value = value;\n  }\n\n  getOptionValues() {\n    return this.optionValues;\n  }\n\n  setOptionValues(optionValues: Array<SelectableValue<any>>) {\n    this.optionValues = optionValues;\n  }\n\n  getDefaultValueColor() {\n    return this.defaultValueColor;\n  }\n\n  setDefaultValueColor(defaultValueColor: string) {\n    this.defaultValueColor = defaultValueColor;\n  }\n}\n","import { InputSelectableClass } from 'Models/InputSelectableClass';\n//import { SelectableValue } from '@grafana/data';\n//import { RegionClass } from 'Models/RegionClass';\n\nexport const createInputsPoint = (id: number): InputSelectableClass[] => {\n  const newFieldDrawGraphicMarker: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'drawGraphicMarker',\n    'Display ',\n    'drawGraphicMarker' + id.toString(),\n    'select',\n    [\n      { value: 'true', label: 'Yes' },\n      { value: 'false', label: 'No' },\n    ],\n    '',\n    true,\n    'drawGraphicMarker',\n    undefined\n  );\n  const newFieldShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'shape',\n    'Shape',\n    'shape' + id.toString(),\n    'select',\n    [\n      { value: 'none', label: 'None' },\n      { value: 'circle', label: 'Circle' },\n      { value: 'square', label: 'Square' },\n      { value: 'diamond', label: 'Diamond' },\n    ],\n    '',\n    true,\n    'Shape',\n    undefined\n  );\n  const newFieldSizeWidthShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'sizeWidth',\n    'Size (px)',\n    'sizeWidth' + id.toString(),\n    'text',\n    // [\n    //   { value: 'small', label: 'Small' },\n    //   { value: 'medium', label: 'Medium' },\n    //   { value: 'large', label: 'Large' },\n    // ],\n    [],\n    '',\n    true,\n    'SizeWidth',\n    undefined\n  );\n  const newFieldSizeHeightShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'sizeHeight',\n    'Width',\n    'sizeHeight' + id.toString(),\n    'select',\n    [\n      { value: 'small', label: 'Small' },\n      { value: 'medium', label: 'Medium' },\n      { value: 'large', label: 'Large' },\n    ],\n    '',\n    true,\n    'SizeHeight',\n    undefined\n  );\n  const newFieldRotateArrow: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'rotateArrow',\n    'Orientation',\n    'rotateArrow' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'RotateArrow',\n    undefined\n  );\n  const newFieldPositionXShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'positionShapeX',\n    'Position X',\n    'positionShapeX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Position X Shape',\n    undefined\n  );\n  const newFieldPositionYShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'positionShapeY',\n    'Position Y',\n    'positionShapeY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Position Y Shape',\n    undefined\n  );\n  const newFieldLabel: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'labelPoint',\n    'Label',\n    'labelPoint' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Label',\n    undefined\n  );\n  const newFieldButton: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'deletePoint',\n    'Delete',\n    'delete' + id.toString(),\n    'button',\n    [],\n    '',\n    true,\n    undefined,\n    'Delete'\n  );\n\n  const finalArray: InputSelectableClass[] = [\n    newFieldLabel,\n    newFieldDrawGraphicMarker,\n    newFieldShape,\n    newFieldSizeWidthShape,\n    newFieldSizeHeightShape,\n    newFieldRotateArrow,\n    newFieldPositionXShape,\n    newFieldPositionYShape,\n    newFieldButton,\n  ];\n  return finalArray;\n};\n","import { FormField } from '@grafana/ui';\nimport React, { ChangeEvent, FunctionComponent } from 'react';\n// import { SelectableValue } from '@grafana/data';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  label: string;\n  name: string;\n  placeholder: string;\n  required: boolean;\n  value: string;\n  _handleChange: (event: ChangeEvent<HTMLInputElement>) => any;\n  shape: string;\n};\n\nexport const InputTextPoint: FunctionComponent<InputTextFieldProps> = ({ label, name, placeholder, required, value, _handleChange, shape }) => {\n  if (name !== undefined) {\n    if (shape !== 'arrow' && name.startsWith('rotateArrow')) {\n      return <div></div>;\n    } else {\n      return (\n        <div>\n          <FormField\n            label={label}\n            labelWidth={15}\n            inputWidth={20}\n            type=\"text\"\n            required={required}\n            name={name}\n            value={value}\n            onChange={_handleChange}\n            placeholder={placeholder}\n          />\n        </div>\n      );\n    }\n  } else {\n    return (\n      <div>\n        <FormField\n          label={label}\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={required}\n          name={name}\n          value={value}\n          onChange={_handleChange}\n          placeholder={placeholder}\n        />\n      </div>\n    );\n  }\n};\n\nexport default InputTextPoint;\n","import { InputSelectableClass } from './InputSelectableClass';\n\n/**\n * class ArayInput\n * @param id number\n * @param uneClassInput InputClass[]\n */\nexport class ArrayInputSelectableClass {\n  /**\n   * id\n   */\n  id: number;\n  /**\n   * array class InputClass\n   */\n  uneClassInput: InputSelectableClass[];\n\n  constructor(id: number, uneClassInput: InputSelectableClass[]) {\n    this.id = id;\n    this.uneClassInput = uneClassInput;\n  }\n\n  /**\n   * get id\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * set id\n   * @param id new id\n   */\n  setId(id: number) {\n    this.id = id;\n  }\n\n  /**\n   * get value of InputClass[]\n   */\n  getUneClassInput() {\n    return this.uneClassInput;\n  }\n\n  /**\n   * set a new InputClass[]\n   * @param uneClassInput new object InputClass[]\n   */\n  setUneClassInput(uneClassInput: InputSelectableClass[]) {\n    this.uneClassInput = uneClassInput;\n  }\n}\n","import { PointClass } from 'Models/PointClass';\nimport { SelectableValue } from '@grafana/data';\n\n/**\n * Edit the parameter in Coor object\n * @param {string} name parameter to edit\n * @param {Coor} editCoor object to edit\n * @param {string} newValue value to insert in the parameter\n * @returns {Coor} object edit\n */\nexport const editGoodParameterPoint = (name: string, editCoor: PointClass, newValue: string, newValueSelect: SelectableValue<any>): PointClass => {\n  if (name.startsWith('label')) {\n    editCoor.label = newValue;\n  } else if (name.startsWith('drawGraphicMarker')) {\n    editCoor.drawGraphicMarker = newValueSelect;\n  } else if (name.startsWith('shape')) {\n    editCoor.shape = newValueSelect;\n  } else if (name.startsWith('sizeWidth')) {\n    editCoor.sizeWidth = newValue;\n  } else if (name.startsWith('sizeHeight')) {\n    editCoor.sizeHeight = newValueSelect;\n  } else if (name.startsWith('rotateArrow')) {\n    editCoor.rotateArrow = newValue;\n  } else if (name.startsWith('positionShapeX')) {\n    editCoor.positionShapeX = newValue;\n  } else if (name.startsWith('positionShapeY')) {\n    editCoor.positionShapeY = newValue;\n  } else if (name.startsWith('color')) {\n    editCoor.color = newValue;\n  } else if (name.startsWith('refIdMainMetric')) {\n    editCoor.mainMetric.refId = newValue;\n  } else if (name.startsWith('keyMainMetric')) {\n    editCoor.mainMetric.key = newValue;\n  } else if (name.startsWith('keyValueMainMetric')) {\n    editCoor.mainMetric.keyValue = newValue;\n  }\n  return editCoor;\n};\n","import React, { FunctionComponent } from 'react';\nimport { Select, FormLabel } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\ntype InputSelectProps = {\n  _onChange: Function;\n  data: Array<SelectableValue<string>>;\n  defaultValue: SelectableValue<string>;\n  index?: number;\n  name?: string;\n  shape?: string;\n  label?: string;\n};\n\nconst InputSelectPoint: FunctionComponent<InputSelectProps> = ({ _onChange, data, index, defaultValue, name, shape, label }) => {\n  if (name !== undefined) {\n    if (shape !== 'arrow' && name.startsWith('sizeHeight')) {\n      return <div></div>;\n    } else {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginBottom: '2px',\n          }}\n        >\n          <FormLabel width={15}>{label}</FormLabel>\n          <Select onChange={(value) => _onChange(value, name, index)} allowCustomValue={false} options={data} value={defaultValue} width={20} />\n        </div>\n      );\n    }\n  } else {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: '2px',\n        }}\n      >\n        <FormLabel width={15}>{label}</FormLabel>\n        <Select onChange={(value) => _onChange(value, name, index)} allowCustomValue={false} options={data} value={defaultValue} width={20} />\n      </div>\n    );\n  }\n};\n\nexport default InputSelectPoint;\n","import React from 'react';\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { FormField, Collapse, Select, FormLabel, Button } from '@grafana/ui';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { PointClass } from 'Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  callBackToParentZIndex: (zIndex: number, id: number) => void;\n  isPoint: boolean;\n  isLink: boolean;\n  isRegion: boolean;\n  id: number;\n}\n\ninterface State {\n  /** get text object */\n  collapsepositionParameter: boolean;\n  collapseLabel: boolean;\n  collapseTooltip: boolean;\n  collapseLayerLevel: boolean;\n  orientedLinkComparedToDowngrade: any;\n  orientedLinkComparedToUpgrade: any;\n}\n\n/**\n * def\n */\nclass PositionParameter extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapsepositionParameter: false,\n      collapseLabel: false,\n      collapseTooltip: false,\n      collapseLayerLevel: false,\n      orientedLinkComparedToDowngrade: {},\n      orientedLinkComparedToUpgrade: {},\n    };\n  }\n\n  private savePositionParameter = (newPositionParameter: PositionParameterClass) => {\n    const idCurrentCoordinateSpace: number = this.props.id || 0;\n    if (this.props.isPoint) {\n      const newArrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of newArrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          point.positionParameter = newPositionParameter;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: newArrayPoints,\n      });\n    } else if (this.props.isLink) {\n      const newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of newArrayOrientedLink) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          orientedLink.positionParameter = newPositionParameter;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: newArrayOrientedLink,\n      });\n    } else if (this.props.isRegion) {\n      const newArrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of newArrayRegion) {\n        if (region.id === idCurrentCoordinateSpace) {\n          region.positionParameter = newPositionParameter;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: newArrayRegion,\n      });\n    }\n  };\n\n  private getPositionParameter = (): PositionParameterClass => {\n    let positionParameter: PositionParameterClass = {\n      labelAPositionX: '0',\n      labelAPositionY: '0',\n      labelBPositionX: '0',\n      labelBPositionY: '0',\n      tooltipPositionA: {},\n      tooltipPositionB: {},\n    };\n    const idCurrentCoordinateSpace: number = this.props.id || 0;\n    if (this.props.isLink) {\n      const newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of newArrayOrientedLink) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          positionParameter = orientedLink.positionParameter;\n        }\n      }\n    } else if (this.props.isPoint) {\n      const arrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of arrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          positionParameter = point.positionParameter;\n        }\n      }\n    } else if (this.props.isRegion) {\n      const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of arrayRegions) {\n        if (region.id === idCurrentCoordinateSpace) {\n          positionParameter = region.positionParameter;\n        }\n      }\n    }\n    return positionParameter;\n  };\n\n  // private callBack() {\n  //   this.props.callBackToParent(this.state.positionParameter, this.props.id || 0);\n  // }\n\n  private callBackZIndex(zIndex: number, id: number) {\n    this.props.callBackToParentZIndex(zIndex, id);\n  }\n\n  private handleChangeLabelAPositionX = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelAPositionX = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeLabelAPositionY = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelAPositionY = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeLabelBPositionX = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelBPositionX = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeLabelBPositionY = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelBPositionY = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeTooltipPositionA = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.tooltipPositionA = { label: event.value, value: event.value };\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeTooltipPositionB = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.tooltipPositionB = { label: event.value, value: event.value };\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeSelectOrientedLinkToUpgrade = (event: any) => {\n    const newOrientedLinkComparedToToUpgrade: SelectableValue<OrientedLinkClass> = {\n      label: event.label,\n      value: event.value,\n    };\n    this.setState({\n      orientedLinkComparedToUpgrade: newOrientedLinkComparedToToUpgrade,\n    });\n  };\n\n  private handleChangeSelectOrientedLinkToDowngrade = (event: any) => {\n    const newOrientedLinkComaparedToDowngrade: SelectableValue<OrientedLinkClass> = {\n      label: event.label,\n      value: event.value,\n    };\n    this.setState({\n      orientedLinkComparedToDowngrade: newOrientedLinkComaparedToDowngrade,\n    });\n  };\n\n  private downgradeLayerLevel = () => {\n    const orientedLinkComparedTo: OrientedLinkClass = this.state.orientedLinkComparedToDowngrade.value;\n    const zIndex: number = orientedLinkComparedTo.zIndex - 1;\n    this.callBackZIndex(zIndex, this.props.id || 0);\n  };\n\n  private upgradeLayerLevel = () => {\n    const orientedLinkComparedTo: OrientedLinkClass = this.state.orientedLinkComparedToUpgrade.value;\n    const zIndex: number = orientedLinkComparedTo.zIndex + 1;\n    this.callBackZIndex(zIndex, this.props.id || 0);\n  };\n\n  private defineListOrientedLink = (): Array<SelectableValue<OrientedLinkClass>> => {\n    let listOptions: Array<SelectableValue<OrientedLinkClass>> = [];\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n\n    arrayOrientedLinks.forEach((orientedLink) => {\n      let selectableValue = {\n        label: orientedLink.label || orientedLink.name,\n        value: orientedLink,\n      };\n      listOptions.push(selectableValue);\n    });\n    return listOptions;\n  };\n\n  private defineLabelPositionInputs = (): JSX.Element => {\n    let item: JSX.Element;\n    const positionParameter: PositionParameterClass = this.getPositionParameter();\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.id) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      item = (\n        <div>\n          <div>\n            <div>\n              <FormField\n                label=\"Label A Position X\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelAPositionX}\n                onChange={this.handleChangeLabelAPositionX}\n                placeholder={'Label A Position X'}\n              />\n              <FormField\n                label=\"Label A Position Y\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelAPositionY}\n                onChange={this.handleChangeLabelAPositionY}\n                placeholder={'Label A Position Y'}\n              />\n            </div>\n          </div>\n          <div>\n            <div>\n              <FormField\n                label=\"Label B Position X\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelBPositionX}\n                onChange={this.handleChangeLabelBPositionX}\n                placeholder={'Label B Position X'}\n              />\n              <FormField\n                label=\"Label B Position Y\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelBPositionY}\n                onChange={this.handleChangeLabelBPositionY}\n                placeholder={'Label B Position Y'}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      item = (\n        <div>\n          <FormField\n            label=\"Position X\"\n            labelWidth={10}\n            inputWidth={20}\n            type=\"text\"\n            value={positionParameter.labelAPositionX}\n            onChange={this.handleChangeLabelAPositionX}\n            placeholder={'Position X'}\n          />\n          <FormField\n            label=\"Position Y\"\n            labelWidth={10}\n            inputWidth={20}\n            type=\"text\"\n            value={positionParameter.labelAPositionY}\n            onChange={this.handleChangeLabelAPositionY}\n            placeholder={'Position Y'}\n          />\n        </div>\n      );\n    }\n\n    return item;\n  };\n\n  private defineTooltipPositionInputs = (): JSX.Element => {\n    let item: JSX.Element;\n    const optionsSelectTooltipPosition: Array<SelectableValue<string>> = [\n      { label: 'Top', value: 'Top' },\n      { label: 'Bottom', value: 'Bottom' },\n      { label: 'Left', value: 'Left' },\n      { label: 'Right', value: 'Right' },\n    ];\n    const positionParameter: PositionParameterClass = this.getPositionParameter();\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.id) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      item = (\n        <div>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={10}>Tooltip A Position</FormLabel>\n            <Select\n              onChange={this.handleChangeTooltipPositionA}\n              allowCustomValue={false}\n              options={optionsSelectTooltipPosition}\n              value={positionParameter.tooltipPositionA}\n              width={20}\n            />\n          </div>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={10}>Tooltip B Position</FormLabel>\n            <Select\n              onChange={this.handleChangeTooltipPositionB}\n              allowCustomValue={false}\n              options={optionsSelectTooltipPosition}\n              value={positionParameter.tooltipPositionB}\n              width={20}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      item = (\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={10}>Tooltip position</FormLabel>\n          <Select\n            onChange={this.handleChangeTooltipPositionA}\n            allowCustomValue={false}\n            options={optionsSelectTooltipPosition}\n            value={positionParameter.tooltipPositionA}\n            width={20}\n          />\n        </div>\n      );\n    }\n    return item;\n  };\n\n  defineLayerLevel = (): JSX.Element => {\n    let item: JSX.Element;\n    const options: Array<SelectableValue<OrientedLinkClass>> = this.defineListOrientedLink();\n\n    if (this.props.isLink) {\n      item = (\n        <Collapse\n          isOpen={this.state.collapseLayerLevel}\n          label={'LayerLevel'}\n          onToggle={(isOpen) => {\n            this.setState({\n              collapseLayerLevel: isOpen,\n            });\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Upgrade on </FormLabel>\n            <Select\n              onChange={this.handleChangeSelectOrientedLinkToUpgrade}\n              allowCustomValue={false}\n              options={options}\n              value={this.state.orientedLinkComparedToUpgrade}\n              width={15}\n            />\n            <Button onClick={this.upgradeLayerLevel}>Submit</Button>\n          </div>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Downgrade on</FormLabel>\n            <Select\n              onChange={this.handleChangeSelectOrientedLinkToDowngrade}\n              allowCustomValue={false}\n              options={options}\n              value={this.state.orientedLinkComparedToDowngrade}\n              width={15}\n            />\n            <Button onClick={this.downgradeLayerLevel}>Submit</Button>\n          </div>\n        </Collapse>\n      );\n    } else {\n      item = <div></div>;\n    }\n\n    return item;\n  };\n\n  render() {\n    return (\n      <Collapse\n        isOpen={this.state.collapsepositionParameter}\n        label={'Position Parameter'}\n        onToggle={(isOpen) => {\n          this.setState({\n            collapsepositionParameter: isOpen,\n          });\n        }}\n      >\n        <Collapse\n          isOpen={this.state.collapseLabel}\n          label={'Label'}\n          onToggle={(isOpen) => {\n            this.setState({\n              collapseLabel: isOpen,\n            });\n          }}\n        >\n          <div>{this.defineLabelPositionInputs()}</div>\n        </Collapse>\n        <Collapse\n          isOpen={this.state.collapseTooltip}\n          label={'Tooltip'}\n          onToggle={(isOpen) => {\n            this.setState({\n              collapseTooltip: isOpen,\n            });\n          }}\n        >\n          <div>{this.defineTooltipPositionInputs()}</div>\n        </Collapse>\n        <div>{this.defineLayerLevel()}</div>\n      </Collapse>\n    );\n  }\n}\n\nexport default PositionParameter;\n","import React, { CSSProperties } from 'react';\nimport { createInputsPoint } from '../../../Functions/CreateInput/createInputsPoint';\nimport InputTextPoint from '../../../Functions/Input/inputTextPoint';\nimport { InputSelectableClass } from '../../../Models/InputSelectableClass';\nimport { ArrayInputSelectableClass } from '../../../Models/ArrayInputSelectableClass';\nimport { editGoodParameterPoint } from '../../../Functions/EditParameter/editGoodParameterPoint';\nimport { PointClass } from '../../../Models/PointClass';\nimport InputSelectPoint from '../../../Functions/Input/inputSelectPoint';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { Button, AlertVariant, Alert } from '@grafana/ui';\nimport { SimpleOptions, Metric } from '../../../types';\n\nimport ManageQuery from '../manageQuery';\nimport ManageAuxiliaryQuery from '../manageAuxiliaryQuery';\nimport { TextObject } from '../../../Models/TextObjectClass';\nimport { CoordinateSpaceClass } from '../../../Models/CoordinateSpaceClass';\nimport { LowerLimitClass } from '../../../Models/LowerLimitClass';\nimport PositionParameter from '../../Parametrage/positionParameters';\nimport ParametresGeneriques from '../../Parametrage/parametresGeneriques';\nimport ManageLowerLimit from '../../Parametrage/manageLowerLimit';\nimport { clonePoint } from 'Functions/initPoint';\n\n/**\n * IProps\n */\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /**\n   * save data in Parent\n   */\n  callBackToParent: (id: number, newCoordinate?: PointClass) => void;\n\n  /** point to edit */\n  point: PointClass;\n\n  isAddPoint: boolean;\n\n  id?: number;\n}\n\n/**\n * IState\n */\ninterface State {\n  /** */\n  arrayInput: ArrayInputSelectableClass[];\n  /** */\n  arrayPointClass: PointClass[];\n  /** */\n  point: PointClass;\n  /** */\n  htmlInput: JSX.Element;\n  /** display alert when form error */\n  hiddenAlert: boolean;\n  /** text to display alert */\n  titleAlert: string;\n  /** alert type */\n  severityAlert: AlertVariant;\n}\n\n/**\n * IndexParametrage\n */\nexport default class Point extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayInput: [],\n      point: clonePoint(\n        this.props.point,\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10),\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10),\n        parseInt(this.props.options.baseMap.width, 10),\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10),\n        parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10),\n        parseInt(this.props.options.baseMap.height, 10)\n      ),\n      arrayPointClass: [],\n      htmlInput: <div></div>,\n      hiddenAlert: true,\n      titleAlert: 'Error: label is empty',\n      severityAlert: 'error',\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncArrayCoor = (state: {\n    /** new espace coordinate */\n    point: PointClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncArrayInput = (state: {\n    /** new line in array input */\n    arrayInput: ArrayInputSelectableClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** add inputs for a new coordiante */\n  addInput = async (id: number) => {\n    await this.setStateAsyncArrayInput({\n      arrayInput: this.state.arrayInput.concat([new ArrayInputSelectableClass(id, createInputsPoint(id))]),\n    });\n  };\n\n  /**\n   * Delete array input and value\n   * @param {event} event event click delete button\n   */\n  deleteOwnInput = (): void => {\n    const label = this.state.point.label || this.state.point.name;\n    const del: boolean = confirm('Delete \"' + label + '\" ?');\n    // alert(del);\n    if (del) {\n      this.props.callBackToParent(this.state.point.id, undefined);\n    }\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   * @param {number} index id of input\n   */\n  _handleChange(currentTarget: string, name: string, index: number): void {\n    let tmp: PointClass = this.state.point;\n\n    // UPDATE PositionXdefault\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n    if (name.startsWith('positionShapeX')) {\n      tmp.positionXDefault = (((parseInt(currentTarget, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n    }\n\n    // UPDATE PositionYdefault\n    const heightBackground = parseInt(this.props.options.baseMap.height, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n    if (name.startsWith('positionShapeY')) {\n      tmp.positionYDefault = (((parseInt(currentTarget, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n    }\n\n    // update point attribut\n    tmp = editGoodParameterPoint(name, tmp, currentTarget, {});\n    this.setState({\n      point: tmp,\n    });\n    this.generateInputsPoint();\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * Get value of input with state.arrayPointClass\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  private getGoodValue(param: string): any {\n    let value: string;\n    let valueSelect: SelectableValue<any>;\n\n    value = '';\n    valueSelect = {};\n\n    if (\n      param.startsWith('drawGraphicMarker') ||\n      param.startsWith('shape') ||\n      //param.startsWith('sizeWidth') ||\n      param.startsWith('sizeHeight') ||\n      param.startsWith('linkWithCoordinateSpace')\n    ) {\n      if (param.startsWith('drawGraphicMarker')) {\n        valueSelect = this.state.point.drawGraphicMarker;\n      } else if (param.startsWith('shape')) {\n        valueSelect = this.state.point.shape;\n      } else if (param.startsWith('sizeWidth')) {\n        //value = this.state.point.sizeWidth;\n      } else if (param.startsWith('sizeHeight')) {\n        valueSelect = this.state.point.sizeHeight;\n      }\n      return valueSelect;\n    } else {\n      if (param.startsWith('rotateArrow')) {\n        value = this.state.point.rotateArrow;\n      } else if (param.startsWith('positionShapeX')) {\n        value = this.state.point.positionShapeX;\n      } else if (param.startsWith('positionShapeY')) {\n        value = this.state.point.positionShapeY;\n      } else if (param.startsWith('label')) {\n        value = this.state.point.label;\n      } else if (param.startsWith('color')) {\n        value = this.state.point.color;\n      } else if (param.startsWith('sizeWidth')) {\n        value = this.state.point.sizeWidth;\n      }\n      return value;\n    }\n  }\n\n  /** create dynamic input */\n  generateInputsPoint(): void {\n    const { arrayInput } = this.state;\n    let item: JSX.Element = <div></div>;\n    let finalItem: JSX.Element[] = [];\n\n    for (const line of arrayInput) {\n      const mapItems: JSX.Element[] = [];\n      line.uneClassInput.forEach((obj: InputSelectableClass) => {\n        if (obj.input_type === 'text') {\n          item = (\n            <InputTextPoint\n              key={obj.id}\n              label={obj.label}\n              name={obj.name}\n              placeholder={obj.placeholder || ''}\n              required={obj.required}\n              value={this.getGoodValue(obj.name)}\n              _handleChange={(event: {\n                /**\n                 * get currentTarget in event element\n                 */\n                currentTarget: HTMLInputElement;\n              }) => {\n                this._handleChange(event.currentTarget.value, obj.name, line.id);\n              }}\n              shape={this.getGoodValue('shape').value}\n            />\n          );\n        } else if (obj.input_type === 'select') {\n          item = (\n            <InputSelectPoint\n              key={obj.id}\n              _onChange={(value: SelectableValue<string>, name: string, index: number) => {\n                const newPoint: PointClass = this.state.point;\n                editGoodParameterPoint(\n                  name,\n                  newPoint,\n                  '',\n                  value\n                  //this.props.options.arrayPoints[this.props.id || 0],\n                );\n                this.setState({\n                  point: newPoint,\n                });\n                this.generateInputsPoint();\n                if (this.props.isAddPoint === false) {\n                  this.callBack();\n                }\n              }}\n              name={obj.name}\n              index={line.id}\n              data={obj.optionValues}\n              defaultValue={this.getGoodValue(obj.name)}\n              shape={this.getGoodValue('shape').value}\n              label={obj.label}\n            />\n          );\n        } else {\n          item = <div key={obj.id}></div>;\n        }\n        mapItems.push(item);\n      });\n\n      const newInputList: JSX.Element = (\n        <div key={'inputPoint' + line.id.toString()} className=\"inputCoor\" id={'point' + line.id.toString()}>\n          {mapItems}\n        </div>\n      );\n      finalItem = finalItem.concat(newInputList);\n    }\n    this.setState((prevState: State) => ({\n      htmlInput: <ul>{finalItem}</ul>,\n    }));\n  }\n\n  /** call function to return arrayCoor a SimpleEditor */\n  callBack = (): void => {\n    const waitAlert = 3000;\n\n    if (this.state.point.label === '') {\n      this.setState({\n        severityAlert: 'error',\n        titleAlert: 'Error: label is empty',\n        hiddenAlert: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          hiddenAlert: true,\n        });\n      }, waitAlert);\n      //console.log('ok');\n    } else {\n      this.props.callBackToParent(this.state.point.id, this.state.point);\n      this.setState({\n        severityAlert: 'success',\n        titleAlert: 'Save',\n        hiddenAlert: false,\n      });\n      if (!this.props.isAddPoint) {\n        setTimeout(() => {\n          this.setState({\n            hiddenAlert: true,\n          });\n        }, waitAlert);\n      }\n    }\n  };\n\n  private callBackToOther = (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject): void => {\n    const oldCoor: PointClass = this.state.point;\n    if (followLink) {\n      oldCoor.linkURL.followLink = followLink;\n    }\n    if (hoveringTooltipLink) {\n      oldCoor.linkURL.hoveringTooltipLink = hoveringTooltipLink;\n    }\n    if (hoveringTooltipText) {\n      oldCoor.linkURL.hoveringTooltipText = hoveringTooltipText;\n    }\n    if (textObj) {\n      oldCoor.textObj = textObj;\n    }\n    this.setState({\n      point: oldCoor,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  /** update lower limit */\n  private callBackManageLowerLimit = (coordinate: CoordinateSpaceClass, id?: number) => {\n    const newValue: PointClass = this.state.point;\n    newValue.colorMode = coordinate.colorMode;\n    newValue.traceBorder = coordinate.traceBorder;\n    newValue.traceBack = coordinate.traceBack;\n    this.setState({\n      point: newValue,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  /** save lower limit data */\n  private callBackLowerLimit = (lowerLimit: LowerLimitClass[], id?: number) => {\n    const newValue: PointClass = this.state.point;\n    newValue.lowerLimit = lowerLimit;\n    this.setState({\n      point: newValue,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  private callBackMainMetric = (mainMetric: Metric, id?: number): void => {\n    const newValue: PointClass = this.state.point;\n    newValue.mainMetric = mainMetric;\n    this.setState({\n      point: newValue,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  /**\n   * fill input whith data\n   * this function is called by mount and update event\n   */\n  getDataInInput = async () => {\n    await this.addInput(this.props.point.id);\n    this.generateInputsPoint();\n  };\n\n  /** call function in load component */\n  componentDidMount = () => {\n    this.getDataInInput();\n  };\n\n  /** function is call when props is update. Update state */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps.point.id !== this.props.point.id) {\n      await this.setStateAsyncArrayCoor({\n        point: clonePoint(\n          this.props.point,\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10),\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10),\n          parseInt(this.props.options.baseMap.width, 10),\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10),\n          parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10),\n          parseInt(this.props.options.baseMap.height, 10)\n        ),\n      });\n      await this.setStateAsyncArrayInput({\n        arrayInput: [],\n      });\n      this.getDataInInput();\n    }\n    // if (prevProps.data.series !== this.props.data.series) {\n    // \tthis.fillSelectQuery();\n    // }\n  };\n\n  /**\n   * render()\n   */\n  render() {\n    const styleAlert = {\n      position: 'fixed',\n      bottom: '5%',\n      right: '5%',\n      zIndex: 9999,\n    } as CSSProperties;\n\n    return (\n      <div>\n        <div style={styleAlert} hidden={this.state.hiddenAlert}>\n          <Alert title={this.state.titleAlert} severity={this.state.severityAlert} />\n        </div>\n        <div>\n          <ManageQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.point.id}\n            mainMetric={this.state.point.mainMetric}\n            callBackToParent={this.callBackMainMetric}\n            isLink={false}\n          />\n        </div>\n        {!this.props.isAddPoint && (\n          <div>\n            <ManageAuxiliaryQuery\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              idCoordinate={this.state.point.id}\n              metrics={this.state.point.metrics}\n              //callBackToParent={this.callBackAuxiliaryMetric}\n              isPoint={true}\n            />\n          </div>\n        )}\n        <div>\n          <ParametresGeneriques\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinateSpace={this.state.point}\n            callBackToParent={this.callBackToOther}\n          />\n        </div>\n        <div>\n          <ManageLowerLimit\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinate={this.state.point}\n            callBack={this.callBackManageLowerLimit}\n            lowerLimitCallBack={this.callBackLowerLimit}\n            isLink={false}\n          />\n        </div>\n        <div>\n          <PositionParameter\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            callBackToParentZIndex={() => {}}\n            isPoint={true}\n            isLink={false}\n            isRegion={false}\n            id={this.state.point.id}\n          />\n        </div>\n        <div>{this.state.htmlInput}</div>\n        <div style={{ textAlign: 'center' }} className=\"buttonSave\">\n          {this.props.isAddPoint && (\n            <Button style={{ marginRight: '1%' }} onClick={() => this.callBack()}>\n              Save\n            </Button>\n          )}\n          {!this.props.isAddPoint && (\n            <Button onClick={this.deleteOwnInput} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import { FormField } from '@grafana/ui';\nimport React, { ChangeEvent, FunctionComponent } from 'react';\nimport { SelectableValue } from '@grafana/data';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  label: string;\n  name: string;\n  placeholder: string;\n  required: boolean;\n  value: string;\n  _handleChange: (event: ChangeEvent<HTMLInputElement>) => any;\n  isIncurved: SelectableValue<boolean>;\n};\n\nexport const InputTextOrientedLink: FunctionComponent<InputTextFieldProps> = ({\n  label,\n  name,\n  placeholder,\n  required,\n  value,\n  _handleChange,\n  isIncurved,\n}) => {\n  if (name.startsWith('pointCX') || name.startsWith('pointCY')) {\n    if (isIncurved.value) {\n      return (\n        <div>\n          <FormField\n            label={label}\n            labelWidth={15}\n            inputWidth={20}\n            type=\"text\"\n            required={required}\n            name={name}\n            value={value}\n            onChange={_handleChange}\n            placeholder={placeholder}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  } else {\n    return (\n      <div>\n        <FormField\n          label={label}\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={required}\n          name={name}\n          value={value}\n          onChange={_handleChange}\n          placeholder={placeholder}\n        />\n      </div>\n    );\n  }\n};\n\nexport default InputTextOrientedLink;\n","import React, { FunctionComponent } from 'react';\nimport { Select, FormLabel } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\ntype InputSelectProps = {\n  _onChange: Function;\n  data: Array<SelectableValue<string>>;\n  defaultValue: SelectableValue<string>;\n  name: string;\n  index?: number;\n  label?: string;\n};\n\nconst InputSelectOrientedLink: FunctionComponent<InputSelectProps> = ({ _onChange, data, index, defaultValue, name, label }) => {\n  //console.log(defaultValue);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        marginBottom: '2px',\n      }}\n    >\n      <FormLabel width={15}>{label}</FormLabel>\n      <Select onChange={(value) => _onChange(value, name, index)} allowCustomValue={false} options={data} value={defaultValue} width={20} />\n    </div>\n  );\n};\n\nexport default InputSelectOrientedLink;\n","import { InputSelectableClass } from 'Models/InputSelectableClass';\nimport { SelectableValue } from '@grafana/data';\n\nexport const createInputsOrientedLink = (\n  id: number,\n  dataCoordinateSpace: Array<SelectableValue<string>>,\n  dataPoint: Array<SelectableValue<string>>\n): InputSelectableClass[] => {\n  const newFieldOrientationLink: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'orientationLink',\n    'Orientation',\n    'orientationLink' + id.toString(),\n    'select',\n    [\n      { label: 'Nodirectional', value: 'no' },\n      { label: 'Monodirectional', value: 'AB' },\n      { label: 'Bidirectional', value: 'double' },\n    ],\n    '',\n    true,\n    'Orientation',\n    undefined\n  );\n  const newFieldSize: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'size',\n    'Size (px)',\n    'size' + id.toString(),\n    'text',\n    // [\n    //   { value: 'Small', label: 'Small' },\n    //   { value: 'Medium', label: 'Medium' },\n    //   { value: 'Large', label: 'Large' },\n    // ],\n    [],\n    '',\n    true,\n    'Size',\n    undefined\n  );\n  const newFieldPointAPositionX: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointAX',\n    'CoordinateClick A - X',\n    'pointAX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointA-X',\n    undefined\n  );\n  const newFieldPointAPositionY: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointAY',\n    'CoordinateClick A - Y',\n    'pointAY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointA-Y',\n    undefined\n  );\n  const newFieldPointBPositionX: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointBX',\n    'CoordinateClick B - X',\n    'pointBX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointB-X',\n    undefined\n  );\n  const newFieldPointBPositionY: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointBY',\n    'CoordinateClick B - Y',\n    'pointBY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointB-Y',\n    undefined\n  );\n  const newFieldLabelLink: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'labelLink',\n    'Label',\n    'label' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Label',\n    undefined\n  );\n  const newFieldRegionIn: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'regionIn',\n    'AssociateRegionIn',\n    'regionIn' + id.toString(),\n    'select',\n    dataCoordinateSpace,\n    '',\n    true,\n    'Associate Region In',\n    undefined\n  );\n  const newFieldRegionOut: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'regionOut',\n    'AssociateRegionOut',\n    'regionOut' + id.toString(),\n    'select',\n    dataCoordinateSpace,\n    '',\n    true,\n    'Associate Region Out',\n    undefined\n  );\n  const newFieldPointIn: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointIn',\n    'AssociatePointIn',\n    'pointIn' + id.toString(),\n    'select',\n    dataPoint,\n    '',\n    true,\n    'Associate Point In',\n    undefined\n  );\n  const newFieldPointOut: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointOut',\n    'AssociatePointOut',\n    'pointOut' + id.toString(),\n    'select',\n    dataPoint,\n    '',\n    true,\n    'Associate Point Out',\n    undefined\n  );\n  const newFieldIsIncurved: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'isIncurved',\n    'Incurved',\n    'isIncurved' + id.toString(),\n    'select',\n    [\n      { label: 'Yes', value: true },\n      { label: 'No', value: false },\n    ],\n    '',\n    true,\n    'Incurved',\n    undefined\n  );\n  const newFieldPointCPositionX: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointCX',\n    'CoordinateClick C - X',\n    'pointCX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointC-X',\n    undefined\n  );\n  const newFieldPointCPositionY: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointCY',\n    'CoordinateClick C - Y',\n    'pointCY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointC-Y',\n    undefined\n  );\n  const newFieldButton: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'deleteLink',\n    'Delete',\n    'delete' + id.toString(),\n    'button',\n    [],\n    '',\n    false,\n    undefined,\n    'delete'\n  );\n\n  const finalArray: InputSelectableClass[] = [\n    newFieldLabelLink,\n    newFieldOrientationLink,\n    newFieldSize,\n    newFieldPointIn,\n    newFieldRegionIn,\n    newFieldPointAPositionX,\n    newFieldPointAPositionY,\n    newFieldPointOut,\n    newFieldRegionOut,\n    newFieldPointBPositionX,\n    newFieldPointBPositionY,\n    newFieldIsIncurved,\n    newFieldPointCPositionX,\n    newFieldPointCPositionY,\n    newFieldButton,\n  ];\n  return finalArray;\n};\n","import { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { SelectableValue } from '@grafana/data';\n\n/**\n * Edit the parameter in Coor object\n * @param {string} name parameter to edit\n * @param {Coor} editCoor object to edit\n * @param {string} newValue value to insert in the parameter\n * @returns {Coor} object edit\n */\nexport const editGoodParameterOrientedLink = (\n  name: string,\n  editCoor: OrientedLinkClass,\n  newValue: string,\n  newValueSelect: SelectableValue<any>\n): OrientedLinkClass => {\n  console.log('edit');\n  if (name.startsWith('label')) {\n    editCoor.label = newValue;\n  } else if (name.startsWith('orientationLink')) {\n    editCoor.orientationLink = newValueSelect;\n  } else if (name.startsWith('pointAX')) {\n    editCoor.pointAPositionX = newValue;\n  } else if (name.startsWith('pointAY')) {\n    editCoor.pointAPositionY = newValue;\n  } else if (name.startsWith('pointBX')) {\n    editCoor.pointBPositionX = newValue;\n  } else if (name.startsWith('pointBY')) {\n    editCoor.pointBPositionY = newValue;\n  } else if (name.startsWith('colorCoordinateA')) {\n    editCoor.colorCoordinateA = newValue;\n  } else if (name.startsWith('colorCoordinateB')) {\n    editCoor.colorCoordinateB = newValue;\n  } else if (name.startsWith('refIdMainMetric')) {\n    editCoor.mainMetric.refId = newValue;\n  } else if (name.startsWith('keyMainMetric')) {\n    editCoor.mainMetric.key = newValue;\n  } else if (name.startsWith('keyValueMainMetric')) {\n    editCoor.mainMetric.keyValue = newValue;\n  } else if (name.startsWith('isIncurved')) {\n    editCoor.isIncurved = newValueSelect;\n  } else if (name.startsWith('pointCX')) {\n    editCoor.pointCPositionX = newValue;\n  } else if (name.startsWith('pointCY')) {\n    editCoor.pointCPositionY = newValue;\n  } else if (name.startsWith('pointIn')) {\n    editCoor.pointIn = newValue;\n  } else if (name.startsWith('pointOut')) {\n    editCoor.pointOut = newValue;\n  } else if (name.startsWith('regionIn')) {\n    editCoor.regionIn = newValue;\n  } else if (name.startsWith('regionOut')) {\n    editCoor.regionOut = newValue;\n  } else if (name.startsWith('size')) {\n    editCoor.size = newValue;\n  }\n  return editCoor;\n};\n","import React, { CSSProperties } from 'react';\nimport { ArrayInputSelectableClass } from '../../../Models/ArrayInputSelectableClass';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport InputTextOrientedLink from '../../../Functions/Input/inputTextOrientedLink';\nimport InputSelectOrientedLink from '../../../Functions/Input/inputSelectOrientedLink';\nimport { OrientedLinkClass } from '../../../Models/OrientedLinkClass';\nimport { createInputsOrientedLink } from '../../../Functions/CreateInput/createInputsOrientedLink';\nimport { editGoodParameterOrientedLink } from '../../../Functions/EditParameter/editGoodParameterOrientedLink';\nimport { TextObject } from '../../../Models/TextObjectClass';\nimport { SimpleOptions, Metric } from '../../../types';\nimport { AlertVariant, Alert, Button } from '@grafana/ui';\nimport ParametresGeneriques from '../../Parametrage/parametresGeneriques';\nimport { LowerLimitClass } from '../../../Models/LowerLimitClass';\nimport { CoordinateSpaceClass } from '../../../Models/CoordinateSpaceClass';\nimport ManageLowerLimit from '../../Parametrage/manageLowerLimit';\nimport PositionParameter from '../../Parametrage/positionParameters';\nimport ManageQuery from '../../CoordinateSpace/manageQuery';\nimport ManageAuxiliaryQuery from '../../CoordinateSpace/manageAuxiliaryQuery';\nimport { cloneOrientedLink } from '../../../Functions/initOrientedLink';\nimport { PointClass } from 'Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\n\n/**\n * IProps\n */\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** save data in Parent */\n  callBackToParent: (id: number, newCoordinate?: OrientedLinkClass) => void;\n\n  /** link to edit */\n  orientedLink: OrientedLinkClass;\n\n  /** check if is add or edit component*/\n  isAddLink: boolean;\n\n  /** id */\n  id?: number;\n}\n\n/**\n * IState\n */\ninterface State {\n  /**\n   * to do\n   */\n  arrayInput: ArrayInputSelectableClass[];\n  /**\n   * to do\n   */\n  arrayOrientedLink: OrientedLinkClass[];\n  /** */\n  orientedLink: OrientedLinkClass;\n  /** */\n  htmlInput: JSX.Element;\n  /** display alert when form error */\n  hiddenAlert: boolean;\n  /** text to display alert */\n  titleAlert: string;\n  /** alert type */\n  severityAlert: AlertVariant;\n}\n\n/**\n * IndexParametrage\n */\nexport default class OrientedLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayInput: [],\n      orientedLink: cloneOrientedLink(this.props.orientedLink),\n      arrayOrientedLink: [],\n      //debug: false,\n      htmlInput: <div></div>,\n      hiddenAlert: true,\n      titleAlert: 'Error: label is empty',\n      severityAlert: 'error',\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncOrientedLink = (state: {\n    /** new espace coordinate */\n    orientedLink: OrientedLinkClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncArrayInput = (state: {\n    /** new line in array input */\n    arrayInput: ArrayInputSelectableClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** add inputs for a new coordiante */\n  addInput = async (id: number) => {\n    await this.setStateAsyncArrayInput({\n      arrayInput: this.state.arrayInput.concat([\n        new ArrayInputSelectableClass(id, createInputsOrientedLink(id, this.defineDataRegion(), this.defineDataPoint())),\n      ]),\n    });\n  };\n\n  private defineDataRegion(): Array<SelectableValue<string>> {\n    const { regionCoordinateSpace } = this.props.options;\n    const optionRegionNull: SelectableValue<string> = { label: 'None', value: '' };\n    const arrayOptionsRegion: Array<SelectableValue<string>> = [];\n\n    arrayOptionsRegion.push(optionRegionNull);\n\n    regionCoordinateSpace.forEach((region) => {\n      const optionRegion: SelectableValue<string> = {\n        label: region.label,\n        value: region.label,\n      };\n      arrayOptionsRegion.push(optionRegion);\n    });\n    return arrayOptionsRegion;\n  }\n\n  private defineDataPoint(): Array<SelectableValue<string>> {\n    const { arrayPoints } = this.props.options;\n    const optionPointNull: SelectableValue<string> = { label: 'None', value: '' };\n    const arrayOptionsPoint: Array<SelectableValue<string>> = [];\n\n    arrayOptionsPoint.push(optionPointNull);\n\n    arrayPoints.forEach((point) => {\n      let valueLabel = point.label || point.name;\n\n      const optionPoint: SelectableValue<string> = {\n        label: valueLabel,\n        value: valueLabel,\n      };\n      arrayOptionsPoint.push(optionPoint);\n    });\n\n    return arrayOptionsPoint;\n  }\n\n  /**\n   * Delete array input and value\n   * @param {event} event event click delete button\n   */\n  deleteOwnInput = (): void => {\n    const label = this.state.orientedLink.label || this.state.orientedLink.name;\n    const del: boolean = confirm('Delete \"' + label + '\" ?');\n    // alert(del);\n    if (del) {\n      this.props.callBackToParent(this.state.orientedLink.id, undefined);\n    }\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   * @param {number} index id of input\n   */\n  _handleChange(currentTarget: string, name: string, index: number): void {\n    let tmp: OrientedLinkClass = this.state.orientedLink;\n\n    // UPDATE PositionXdefault\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n    if (name.startsWith('pointAX')) {\n      tmp.pointAPositionXDefault = (((parseInt(currentTarget, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n    } else if (name.startsWith('pointBX')) {\n      tmp.pointBPositionXDefault = (((parseInt(currentTarget, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n    } else if (name.startsWith('pointCX')) {\n      tmp.pointCPositionXDefault = (((parseInt(currentTarget, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n    }\n\n    // UPDATE PositionYdefault\n    const heightBackground = parseInt(this.props.options.baseMap.height, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n    if (name.startsWith('pointAY')) {\n      tmp.pointAPositionYDefault = (((parseInt(currentTarget, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n    } else if (name.startsWith('pointBY')) {\n      tmp.pointBPositionYDefault = (((parseInt(currentTarget, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n    } else if (name.startsWith('pointCY')) {\n      tmp.pointCPositionYDefault = (((parseInt(currentTarget, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n    }\n\n    tmp = editGoodParameterOrientedLink(name, tmp, currentTarget, {});\n    this.setState({\n      orientedLink: tmp,\n    });\n    this.generateInputsOrientedLink();\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * Get value of input with state.arrayPointClass\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  private getGoodValue(name: string): any {\n    let value: string;\n    let valueSelect: SelectableValue<any>;\n    let valueMetric: Metric;\n\n    value = '';\n    valueSelect = {};\n\n    if (\n      name.startsWith('orientationLink') ||\n      name.startsWith('isIncurved') ||\n      name.startsWith('pointIn') ||\n      name.startsWith('pointOut') ||\n      name.startsWith('regionIn') ||\n      name.startsWith('regionOut')\n    ) {\n      if (name.startsWith('orientationLink')) {\n        valueSelect = this.state.orientedLink.orientationLink;\n      } else if (name.startsWith('isIncurved')) {\n        valueSelect = this.state.orientedLink.isIncurved;\n      } else if (name.startsWith('pointIn')) {\n        valueSelect = {\n          label: this.state.orientedLink.pointIn,\n          value: this.state.orientedLink.pointIn,\n        };\n      } else if (name.startsWith('pointOut')) {\n        valueSelect = {\n          label: this.state.orientedLink.pointOut,\n          value: this.state.orientedLink.pointOut,\n        };\n      } else if (name.startsWith('regionIn')) {\n        valueSelect = {\n          label: this.state.orientedLink.regionIn,\n          value: this.state.orientedLink.regionIn,\n        };\n      } else if (name.startsWith('regionOut')) {\n        valueSelect = {\n          label: this.state.orientedLink.regionOut,\n          value: this.state.orientedLink.regionOut,\n        };\n      }\n      return valueSelect;\n    } else if (name.startsWith('mainMetric')) {\n      valueMetric = this.state.orientedLink.mainMetric;\n      return valueMetric;\n    } else {\n      if (name.startsWith('label')) {\n        value = this.state.orientedLink.label;\n      } else if (name.startsWith('pointAX')) {\n        value = this.state.orientedLink.pointAPositionX;\n      } else if (name.startsWith('pointAY')) {\n        value = this.state.orientedLink.pointAPositionY;\n      } else if (name.startsWith('pointBX')) {\n        value = this.state.orientedLink.pointBPositionX;\n      } else if (name.startsWith('pointBY')) {\n        value = this.state.orientedLink.pointBPositionY;\n      } else if (name.startsWith('colorCoordinateA')) {\n        value = this.state.orientedLink.colorCoordinateA;\n      } else if (name.startsWith('colorCoordinateB')) {\n        value = this.state.orientedLink.colorCoordinateB;\n      } else if (name.startsWith('refIdMainMetric')) {\n        value = this.state.orientedLink.mainMetric.refId || '';\n      } else if (name.startsWith('keyMainMetric')) {\n        value = this.state.orientedLink.mainMetric.key || '';\n      } else if (name.startsWith('keyValueMainMetric')) {\n        value = this.state.orientedLink.mainMetric.keyValue || '';\n      } else if (name.startsWith('pointCX')) {\n        value = this.state.orientedLink.pointCPositionX;\n      } else if (name.startsWith('pointCY')) {\n        value = this.state.orientedLink.pointCPositionY;\n      } else if (name.startsWith('size')) {\n        value = this.state.orientedLink.size;\n      }\n      return value;\n    }\n  }\n\n  /** set point in/out to empty in if orientedLink is associate to region in/out\n   *  set region in/out to empty in if orientedLink is associate to point in/out\n   */\n  private updateAssociatePointAndRegion = (newOrientedLink: OrientedLinkClass, name: string): OrientedLinkClass => {\n    const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n    const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    if (name.startsWith('pointIn')) {\n      // supprime la valeur de regionIn si un point est associé à un lien en entrée\n      newOrientedLink = editGoodParameterOrientedLink('regionIn', newOrientedLink, '', {});\n\n      // MAJ des valeurs x et y du pointA du lien si un point est associé en entrée\n      arrayPoint.forEach((point) => {\n        if (this.state.orientedLink.pointIn === point.name || this.state.orientedLink.pointIn === point.label) {\n          newOrientedLink.pointAPositionXDefault = point.positionXDefault;\n          newOrientedLink.pointAPositionYDefault = point.positionYDefault;\n          newOrientedLink = editGoodParameterOrientedLink('pointAX', newOrientedLink, point.positionShapeX, {});\n          newOrientedLink = editGoodParameterOrientedLink('pointAY', newOrientedLink, point.positionShapeY, {});\n        }\n      });\n    } else if (name.startsWith('regionIn')) {\n      // supprime la valeur de pointIn si une region est associée à un lien en entrée\n      newOrientedLink = editGoodParameterOrientedLink('pointIn', newOrientedLink, '', {});\n\n      // MAJ des valeurs x et y du pointA du lien si une region est associée en entrée\n      arrayRegion.forEach((region) => {\n        if (this.state.orientedLink.regionIn === region.label) {\n          newOrientedLink = editGoodParameterOrientedLink(\n            'pointAX',\n            newOrientedLink,\n            (parseInt(region.coords.xMax, 10) - parseInt(region.coords.xMin, 10)).toString(),\n            {}\n          );\n          newOrientedLink = editGoodParameterOrientedLink(\n            'pointAY',\n            newOrientedLink,\n            (parseInt(region.coords.yMax, 10) - parseInt(region.coords.yMin, 10)).toString(),\n            {}\n          );\n          this.state.orientedLink.pointAPositionXDefault = (\n            parseInt(region.coordsDefault.xMax, 10) - parseInt(region.coordsDefault.xMin, 10)\n          ).toString();\n          this.state.orientedLink.pointAPositionYDefault = (\n            parseInt(region.coordsDefault.yMax, 10) - parseInt(region.coordsDefault.yMin, 10)\n          ).toString();\n        }\n      });\n    } else if (name.startsWith('pointOut')) {\n      // supprime la valeur de regionOut si un point est associé à un lien en sortie\n      newOrientedLink = editGoodParameterOrientedLink('regionOut', newOrientedLink, '', {});\n\n      // MAJ des valeurs x et y du pointB du lien si un point est associé en sortie\n      arrayPoint.forEach((point) => {\n        if (this.state.orientedLink.pointOut === point.name || this.state.orientedLink.pointOut === point.label) {\n          this.state.orientedLink.pointBPositionXDefault = point.positionXDefault;\n          this.state.orientedLink.pointBPositionYDefault = point.positionYDefault;\n          newOrientedLink = editGoodParameterOrientedLink('pointBX', newOrientedLink, point.positionShapeX, {});\n          newOrientedLink = editGoodParameterOrientedLink('pointBY', newOrientedLink, point.positionShapeY, {});\n        }\n      });\n    } else if (name.startsWith('regionOut')) {\n      // supprime la valeur de pointOut si une region est associée à un lien en sortie\n      newOrientedLink = editGoodParameterOrientedLink('pointOut', newOrientedLink, '', {});\n\n      // MAJ des valeurs x et y du pointB du lien si une region est associée en entrée\n      arrayRegion.forEach((region) => {\n        if (this.state.orientedLink.regionOut === region.label) {\n          this.state.orientedLink.pointBPositionXDefault = (\n            parseInt(region.coordsDefault.xMax, 10) - parseInt(region.coordsDefault.xMin, 10)\n          ).toString();\n          this.state.orientedLink.pointBPositionYDefault = (\n            parseInt(region.coordsDefault.yMax, 10) - parseInt(region.coordsDefault.yMin, 10)\n          ).toString();\n          newOrientedLink = editGoodParameterOrientedLink(\n            'pointBX',\n            newOrientedLink,\n            (parseInt(region.coords.xMax, 10) - parseInt(region.coords.xMin, 10)).toString(),\n            {}\n          );\n          newOrientedLink = editGoodParameterOrientedLink(\n            'pointBY',\n            newOrientedLink,\n            (parseInt(region.coords.yMax, 10) - parseInt(region.coords.yMin, 10)).toString(),\n            {}\n          );\n        }\n      });\n    }\n    return newOrientedLink;\n  };\n\n  /** create dynamic input */\n  generateInputsOrientedLink(): void {\n    const { arrayInput } = this.state;\n    let finalItem: JSX.Element[] = [];\n    let item: JSX.Element = <div></div>;\n\n    for (const line of arrayInput) {\n      const mapItems: JSX.Element[] = [];\n      line.uneClassInput.forEach((obj) => {\n        if (obj.input_type === 'text') {\n          item = (\n            <InputTextOrientedLink\n              key={obj.id}\n              label={obj.label}\n              name={obj.name}\n              placeholder={obj.placeholder || ''}\n              required={obj.required}\n              value={this.getGoodValue(obj.name)}\n              _handleChange={(event: {\n                /**\n                 * get currentTarget in event element\n                 */\n                currentTarget: HTMLInputElement;\n              }) => {\n                this._handleChange(event.currentTarget.value, obj.name, line.id);\n              }}\n              isIncurved={this.getGoodValue('isIncurved')}\n            />\n          );\n        } else if (obj.input_type === 'select') {\n          item = (\n            <InputSelectOrientedLink\n              key={obj.id}\n              _onChange={(value: SelectableValue<string>, name: string, index: number) => {\n                let newOrientedLink: OrientedLinkClass = this.state.orientedLink;\n                editGoodParameterOrientedLink(name, newOrientedLink, value.value || '', value);\n                this.updateAssociatePointAndRegion(newOrientedLink, name);\n                this.setState({\n                  orientedLink: newOrientedLink,\n                });\n                this.generateInputsOrientedLink();\n                if (this.props.isAddLink === false) {\n                  this.callBack();\n                }\n              }}\n              name={obj.name}\n              index={line.id}\n              data={obj.optionValues}\n              defaultValue={this.getGoodValue(obj.name)}\n              label={obj.label}\n            />\n          );\n        } else {\n          item = <div key={obj.id}></div>;\n        }\n        mapItems.push(item);\n      });\n      const newInputList: JSX.Element = (\n        <div key={'inputOrientedLink' + line.id.toString()} className=\"inputCoor\" id={'orientedLink' + line.id.toString()}>\n          {mapItems}\n        </div>\n      );\n      finalItem = finalItem.concat(newInputList);\n    }\n    this.setState((prevState: State) => ({\n      htmlInput: <ul>{finalItem}</ul>,\n    }));\n  }\n\n  /** call function to return arrayCoor a SimpleEditor */\n  callBack = (): void => {\n    const waitAlert = 3000;\n\n    if (this.state.orientedLink.label === '') {\n      this.setState({\n        severityAlert: 'error',\n        titleAlert: 'Error: label is empty',\n        hiddenAlert: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          hiddenAlert: true,\n        });\n      }, waitAlert);\n      //console.log('ok');\n    } else {\n      this.props.callBackToParent(this.state.orientedLink.id, this.state.orientedLink);\n      this.setState({\n        severityAlert: 'success',\n        titleAlert: 'Save',\n        hiddenAlert: false,\n      });\n      if (!this.props.isAddLink) {\n        setTimeout(() => {\n          this.setState({\n            hiddenAlert: true,\n          });\n        }, waitAlert);\n      }\n    }\n  };\n\n  /** update data for manageLink and textObject */\n  private callBackToOther = (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject): void => {\n    const oldCoor: OrientedLinkClass = this.state.orientedLink;\n    if (followLink) {\n      oldCoor.linkURL.followLink = followLink;\n    }\n    if (hoveringTooltipLink) {\n      oldCoor.linkURL.hoveringTooltipLink = hoveringTooltipLink;\n    }\n    if (hoveringTooltipText) {\n      oldCoor.linkURL.hoveringTooltipText = hoveringTooltipText;\n    }\n    if (textObj) {\n      oldCoor.textObj = textObj;\n    }\n    this.setState({\n      orientedLink: oldCoor,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** update lower limit */\n  private callBackManageLowerLimit = (coordinate: CoordinateSpaceClass, id?: number) => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.colorMode = coordinate.colorMode;\n    newValue.traceBorder = coordinate.traceBorder;\n    newValue.traceBack = coordinate.traceBack;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save lower limit data */\n  private callBackLowerLimit = (lowerLimit: LowerLimitClass[], id?: number) => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.lowerLimit = lowerLimit;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save data of mainMetric */\n  private callBackMainMetric = (mainMetric: Metric, id?: number): void => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.mainMetric = mainMetric;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save data of mainMetric */\n  private callBackMainMetricB = (mainMetricB: Metric, id?: number): void => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.mainMetricB = mainMetricB;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save data of zIndex */\n  private callBackZIndex(zIndexUpdated: number, id: number) {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.zIndex = zIndexUpdated;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * fill input whith data\n   * this function is called by mount and update event\n   */\n  getDataInInput = async () => {\n    await this.addInput(this.props.orientedLink.id);\n    this.generateInputsOrientedLink();\n  };\n\n  /** call function in load component */\n  componentDidMount = () => {\n    this.getDataInInput();\n  };\n\n  /** function is call when props is update. Update state */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps.orientedLink.id !== this.props.orientedLink.id) {\n      await this.setStateAsyncOrientedLink({\n        orientedLink: cloneOrientedLink(this.props.orientedLink),\n      });\n      await this.setStateAsyncArrayInput({\n        arrayInput: [],\n      });\n      this.getDataInInput();\n    }\n    // if (prevProps.data.series !== this.props.data.series) {\n    // \tthis.fillSelectQuery();\n    // }\n  };\n\n  /**\n   * render()\n   */\n  render() {\n    const styleAlert = {\n      position: 'fixed',\n      bottom: '5%',\n      right: '5%',\n      zIndex: 9999,\n    } as CSSProperties;\n\n    return (\n      <div>\n        <div style={styleAlert} hidden={this.state.hiddenAlert}>\n          <Alert title={this.state.titleAlert} severity={this.state.severityAlert} />\n        </div>\n        <div>\n          <ManageQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.orientedLink.id}\n            mainMetric={this.state.orientedLink.mainMetric}\n            mainMetricB={this.state.orientedLink.mainMetricB}\n            callBackToParent={this.callBackMainMetric}\n            callBackToParentMainMetricB={this.callBackMainMetricB}\n            isLink={true}\n          />\n        </div>\n        <div>\n          <ManageAuxiliaryQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.orientedLink.id}\n            metrics={this.state.orientedLink.metrics}\n            isLink={true}\n          />\n        </div>\n        <div>\n          <ParametresGeneriques\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinateSpace={this.state.orientedLink}\n            callBackToParent={this.callBackToOther}\n          />\n        </div>\n        <div>\n          <ManageLowerLimit\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinate={this.state.orientedLink}\n            callBack={this.callBackManageLowerLimit}\n            lowerLimitCallBack={this.callBackLowerLimit}\n            isLink={true}\n          />\n        </div>\n        <div>\n          <PositionParameter\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            callBackToParentZIndex={this.callBackZIndex.bind(this)}\n            isPoint={false}\n            isLink={true}\n            isRegion={false}\n            id={this.state.orientedLink.id}\n          />\n        </div>\n        <div>{this.state.htmlInput}</div>\n        <div style={{ textAlign: 'center' }} className=\"buttonSave\">\n          {this.props.isAddLink && (\n            <Button style={{ marginRight: '1%' }} onClick={() => this.callBack()}>\n              Save\n            </Button>\n          )}\n          {!this.props.isAddLink && (\n            <Button onClick={this.deleteOwnInput} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { SimpleOptions } from 'types';\nimport { PanelEditorProps } from '@grafana/data';\n\nimport { RegionClass } from 'Models/RegionClass';\nimport { PointClass } from 'Models/PointClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\nimport { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\nimport { initPoint } from 'Functions/initPoint';\nimport { initOrientedLink } from 'Functions/initOrientedLink';\n\nimport CoordinateSpace from 'components/CoordinateSpace/coordinateSpace';\nimport Point from './point/point';\nimport OrientedLink from './orientedLink/orientedLink';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** return to edit mode after save */\n  returnEditMode?: () => void;\n  isRegion: boolean;\n  isPoint: boolean;\n  isLink: boolean;\n}\n\ninterface State {\n  /** data for new CoordinateSpaceExtendClass */\n  coordinate?: RegionClass;\n  point?: PointClass;\n  orientedLink?: OrientedLinkClass;\n}\n\n/** Add new coordinate space */\nclass AddCoordinate extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      coordinate: undefined,\n      point: undefined,\n      orientedLink: undefined,\n    };\n  }\n\n  /** search new id for espacecoordinneesclass */\n  searchNewId = (allCoordinateSpace: RegionClass[]): number => {\n    let id = -1;\n\n    for (const line of allCoordinateSpace) {\n      if (line.id > id) {\n        id = line.id;\n      }\n    }\n    id += 1;\n    return id;\n  };\n\n  private defineIdPoint = (): number => {\n    let id = 1;\n    if (this.props.options.arrayPoints.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayPoints[this.props.options.arrayPoints.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  private defineIdOrientedLink = (): number => {\n    let id = 1;\n    if (this.props.options.arrayOrientedLinks.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayOrientedLinks[this.props.options.arrayOrientedLinks.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  lastId = () => {\n    const allRegion = this.props.options.regionCoordinateSpace;\n    let id = 0;\n    for (const line of allRegion) {\n      if (line.id > id) {\n        id = line.id;\n      }\n    }\n    return id;\n  };\n\n  /** call init class for coordinate state */\n  componentDidMount = (): void => {\n    if (this.props.isRegion) {\n      this.setState({\n        coordinate: initRegionCoordinateSpace(this.lastId()),\n      });\n    } else if (this.props.isPoint) {\n      let id = this.defineIdPoint();\n      this.setState({\n        point: initPoint(id),\n      });\n    } else if (this.props.isLink) {\n      let id = this.defineIdOrientedLink();\n      const newZIndex: number = this.props.options.zIndexOrientedLink + 1;\n      this.setState({\n        orientedLink: initOrientedLink(id, newZIndex),\n      });\n      this.props.onOptionsChange({\n        ...this.props.options,\n        zIndexOrientedLink: newZIndex,\n      });\n    }\n  };\n\n  /** update onOptionsChange */\n  setAsyncOption = (newIdx: number) => {\n    return Promise.resolve('Success').then(() => {\n      if (this.props.isRegion) {\n        this.props.onOptionsChange({\n          ...this.props.options,\n          indexRegion: newIdx,\n        });\n      } else if (this.props.isPoint) {\n        this.props.onOptionsChange({\n          ...this.props.options,\n          indexPoint: newIdx,\n        });\n      } else if (this.props.isLink) {\n        this.props.onOptionsChange({\n          ...this.props.options,\n          indexOrientedLink: newIdx,\n        });\n      }\n    });\n  };\n\n  /** send data of region for parent */\n  callBack = async (id: number, newCoordinate?: RegionClass) => {\n    if (newCoordinate) {\n      const allCoordinateSpace: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n      await this.setAsyncOption(newCoordinate.id);\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: allCoordinateSpace.concat(newCoordinate),\n      });\n      if (this.props.returnEditMode) {\n        this.props.returnEditMode();\n      }\n      // this.componentDidMount();\n    }\n  };\n\n  /** send data of point for parent */\n  callBackPoint = async (id: number, newCoordinate?: PointClass) => {\n    if (newCoordinate) {\n      const allCoordinateSpace: PointClass[] = this.props.options.arrayPoints.slice();\n      await this.setAsyncOption(newCoordinate.id);\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: allCoordinateSpace.concat(newCoordinate),\n      });\n      if (this.props.returnEditMode) {\n        this.props.returnEditMode();\n      }\n    }\n  };\n\n  /** send data of orientedLink for parent */\n  callBackOrientedLink = async (id: number, newCoordinate?: OrientedLinkClass) => {\n    if (newCoordinate) {\n      const allCoordinateSpace: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n      await this.setAsyncOption(newCoordinate.id);\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: allCoordinateSpace.concat(newCoordinate),\n      });\n      if (this.props.returnEditMode) {\n        this.props.returnEditMode();\n      }\n    }\n  };\n\n  /** result */\n  render() {\n    if (this.props.isRegion) {\n      return (\n        <div>\n          {this.state.coordinate && (\n            <CoordinateSpace\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              coordinate={this.state.coordinate}\n              callBackToParent={this.callBack}\n              isAddCoordinate={true}\n            />\n          )}\n        </div>\n      );\n    } else if (this.props.isPoint) {\n      return (\n        <div>\n          {this.state.point && (\n            <Point\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              point={this.state.point}\n              callBackToParent={this.callBackPoint}\n              isAddPoint={true}\n            />\n          )}\n        </div>\n      );\n    } else if (this.props.isLink) {\n      return (\n        <div>\n          {this.state.orientedLink && (\n            <OrientedLink\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              orientedLink={this.state.orientedLink}\n              callBackToParent={this.callBackOrientedLink}\n              isAddLink={true}\n            />\n          )}\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\nexport default AddCoordinate;\n","export const isNumFloat = (value: string): number => {\n  if (String(value).match(/^-{0,1}\\d+$/) || String(value).match(/^\\d+\\.\\d+$/)) {\n    return 1;\n  }\n  return 0;\n};\n","/** parse color for svg */\nexport interface Color {\n  /** base color */\n  color: string;\n  /** transparency level */\n  transparency: string;\n}\n\nexport const parseColor = (color: string): Color => {\n  let colorEdit: string = color;\n  let transparency = '';\n  if (color.indexOf('#') > -1) {\n    colorEdit = color.replace('rgba', 'rgb');\n    if (colorEdit.indexOf(',') > -1) {\n      const arrayColor: string[] = colorEdit.split(',');\n      colorEdit = arrayColor[0] + ',' + arrayColor[1] + ',' + arrayColor[2] + ')';\n      if (arrayColor.length > 3) {\n        transparency = arrayColor[3].replace(')', '');\n      }\n    }\n  }\n  return { color: colorEdit, transparency: transparency };\n};\n","/* eslint-disable prettier/prettier */\nimport React, { CSSProperties } from 'react';\nimport { SimpleOptions, Metric } from 'types';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { Tooltip } from '@grafana/ui';\n\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\n\n//import { calculRealCoordinate } from 'Functions/otherFunction';\nimport { getLowerLimit, LowerLimit } from 'Functions/getLowerLimit';\nimport { getResultQuery } from 'Functions/getResultQuery';\nimport { parseColor, Color } from 'Functions/parseColor';\nimport { reqMetricRegion, reqMetricAuxRegion } from 'Functions/fetchMetrics';\n//import { searchMinMaxIdSVG, Coord4DInt } from 'Functions/searchMinMaxIdSVG';\nimport { Style } from 'components/Parametrage/styleComponent';\n// import { Coor4DNum, pixelToPercent } from 'Functions/searchIDLimit';\n// import { Coor4DNum } from 'Functions/searchIDLimit';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** object CoordinateSpace */\n  uneCoor: RegionClass;\n  /** use limit */\n  useLimit: boolean;\n  /** limit */\n  limit: Coord4D;\n  /** id region */\n  id: string;\n  /** if button SimplePanel is active, block all onClick region space */\n  //isEnabled: boolean;\n  /** if button Add Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddLinkIsActive: boolean;\n  /** if button Add Incurved Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddIncurvedLinkIsActive: boolean;\n  /** width when region has been created */\n  widthInitialSpaceDefault: string;\n  /** height when region has been created */\n  heightInitialSpaceDefault: string;\n}\n\ninterface State {\n  /** value of tooltip */\n  tooltipValue: JSX.Element | null;\n  /** background color with lower limit */\n  backgroundColor: string;\n  /** border color with lower llimit */\n  borderColor: string;\n  /** size border with lower limit */\n  sizeBorder: number;\n  /** html result */\n  htmlResult: JSX.Element;\n  /** value return by query */\n  valueQuery: string;\n}\n\ninterface CoorHTML {\n  /** coordinate left */\n  left: string;\n  /** coordinate right */\n  right: string;\n  /** coordinate top */\n  top: string;\n  /** coordinate bottom */\n  bottom: string;\n}\n\ninterface Tooltip {\n  tooltipValue: JSX.Element | null;\n  backgroundColor: string;\n  borderColor: string;\n  sizeBorder: number;\n  valueQuery: string;\n}\n\n/**\n * Draw rectangle\n */\nexport default class DrawRectangleExtend extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      tooltipValue: null,\n      backgroundColor: 'rgba(255, 255, 255, 0)',\n      borderColor: 'rgba(255, 255, 255, 0)',\n      sizeBorder: 1,\n      htmlResult: <div></div>,\n      valueQuery: '',\n    };\n  }\n\n  /**\n   * Edit color Zone in SVG\n   * @param {string} id id is equal to zone for change color in Svg\n   * @param {string} color define the color for Svg zone\n   */\n  editColorSvgZone = (id: string, color: string, border: string, sizeBorder: string): void => {\n    const colorSVG: Color = parseColor(color);\n    const colorBorderSVG: Color = parseColor(border);\n    const changeColorElement: HTMLElement | null = document.getElementById(id);\n\n    // if (id === 'rect45') {\n    //   console.log('am here');\n    // }\n\n    if (changeColorElement) {\n      changeColorElement.style.fill = colorSVG.color;\n      changeColorElement.style.fillOpacity = colorSVG.transparency;\n      changeColorElement.style.stroke = colorBorderSVG.color;\n      changeColorElement.style.strokeOpacity = colorBorderSVG.transparency;\n      changeColorElement.style.strokeWidth = sizeBorder;\n    }\n  };\n\n  generateValueMetricElement = (region: RegionClass, valueQuery: number | null): string => {\n    let converValueQuery = 'NaN';\n    const roundMetrics: number = region.textObj.valueGenerateObjectText\n      ? parseInt(region.textObj.valueGenerateObjectText.numericFormatElement, 10)\n      : 1;\n\n    if (valueQuery && region.textObj.valueGenerateObjectText && region.textObj.valueGenerateObjectText.numericFormatElement !== '' && roundMetrics) {\n      converValueQuery = (valueQuery || 0).toPrecision(roundMetrics).toString();\n    } else if (valueQuery) {\n      converValueQuery = valueQuery.toString();\n    }\n    // (Math.round(valueQuery * roundMetrics + Number.EPSILON) / roundMetrics).toString()\n    let value: string = converValueQuery;\n    if (region.textObj.valueGenerateObjectText && converValueQuery !== 'NaN') {\n      value = region.textObj.valueGenerateObjectText.legendElement + ' ' + converValueQuery + ' ' + region.textObj.valueGenerateObjectText.unit;\n    }\n    if (value === 'NaN') {\n      return '';\n    }\n\n    return value;\n  };\n\n  /** fill state for tooltip, color zone and calc round query */\n  setStateTooltip = (\n    lowerLimit: LowerLimit,\n    region: RegionClass,\n    valueQuery: number | null\n    //link: boolean\n  ): Tooltip => {\n    const styleTooltip = {\n      color: region.textObj.colorText,\n      backgroundColor: region.textObj.colorBack,\n    } as CSSProperties;\n\n    const styleMetrics = {\n      color: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      backgroundColor: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorBackElement : 'black',\n    } as CSSProperties;\n\n    const valueQueryResult: string = this.generateValueMetricElement(region, valueQuery);\n\n    const tooltipValue: JSX.Element | null =\n      valueQueryResult !== '' ? (\n        <div>\n          <div style={styleTooltip}>\n            {/* {link && <a href={region.linkURL.hoveringTooltipLink}>{region.linkURL.hoveringTooltipText}</a>} */}\n            <a href={region.linkURL.hoveringTooltipLink}>{region.linkURL.hoveringTooltipText}</a>\n            {region.textObj.isTextTooltip && <p>{region.label}</p>}\n          </div>\n          <div style={styleMetrics}>\n            {region.textObj.generateObjectText &&\n              region.textObj.valueGenerateObjectText &&\n              region.textObj.valueGenerateObjectText.displayObjectInTooltip && <p>{valueQueryResult}</p>}\n          </div>\n          <div>{this.displayValuesAuxMetrics()}</div>\n        </div>\n      ) : null;\n    return {\n      tooltipValue: tooltipValue,\n      backgroundColor: lowerLimit.colorBack,\n      borderColor: lowerLimit.colorBorder,\n      sizeBorder: lowerLimit.sizeBorder,\n      valueQuery: valueQueryResult,\n    };\n  };\n\n  displayValueQuery = (region: RegionClass): boolean => {\n    if (\n      region.textObj.generateObjectText &&\n      region.textObj.valueGenerateObjectText &&\n      !region.textObj.valueGenerateObjectText.displayObjectInTooltip\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  getPositionTextObjectRegionSVG = (idSVG: string): CoorHTML => {\n    const coor: CoorHTML = { top: '0', bottom: '0', left: '0', right: '0' };\n    let elementSVG: any;\n    if (this.props.options.baseMap.isUploaded) {\n      elementSVG = document.getElementById(idSVG);\n    } else {\n      elementSVG = document.getElementById('oct' + idSVG);\n    }\n    if (elementSVG) {\n      let xSVG = 0;\n      let ySVG = 0;\n      let widthSVG = 0;\n      let heightSVG = 0;\n      let top = '';\n      let left = '';\n      if (elementSVG.localName === 'path') {\n        const allValues: string = elementSVG.attributes['d'].nodeValue;\n        const arrayAllValues: string[] = allValues.split(' ');\n        let iX = -2;\n        let xMin = 1000000;\n        let xMax = 0;\n        let iY = -1;\n        let yMin = 1000000;\n        let yMax = 0;\n        for (let i = 0; i < arrayAllValues.length; i++) {\n          let valueToCheck = parseInt(arrayAllValues[i], 10);\n          if (i === iX + 3) {\n            if (valueToCheck < xMin) {\n              xMin = valueToCheck;\n            }\n            if (valueToCheck > xMax) {\n              xMax = valueToCheck;\n            }\n            iX = i;\n          }\n          if (i === iY + 3) {\n            if (valueToCheck < yMin) {\n              yMin = valueToCheck;\n            }\n            if (valueToCheck > yMax) {\n              yMax = valueToCheck;\n            }\n            iY = i;\n          }\n        }\n        left = xMax.toString();\n        top = yMax.toString();\n      } else if (elementSVG.localName === 'ellipse') {\n        xSVG = parseInt(elementSVG.attributes['cx'].nodeValue, 10);\n        ySVG = parseInt(elementSVG.attributes['cy'].nodeValue, 10);\n        const rX = parseInt(elementSVG.attributes['rx'].nodeValue, 10) * 2;\n        const rY = parseInt(elementSVG.attributes['ry'].nodeValue, 10) * 2;\n        left = (xSVG + rX).toString();\n        top = (ySVG + rY).toString();\n      } else if (elementSVG.localName === 'rect') {\n        xSVG = parseInt(elementSVG.attributes['x'].nodeValue, 10);\n        ySVG = parseInt(elementSVG.attributes['y'].nodeValue, 10);\n        widthSVG = parseInt(elementSVG.attributes['width'].nodeValue, 10);\n        heightSVG = parseInt(elementSVG.attributes['height'].nodeValue, 10);\n        left = (xSVG + widthSVG).toString();\n        top = (ySVG + heightSVG).toString();\n      }\n      coor.top = top;\n      coor.left = left;\n    }\n    return coor;\n  };\n\n  /** generate tooltip for metrics and apply color with lower limit */\n  generateTooltipAndEditColor = (region: RegionClass, valueQuery: number | null) => {\n    let stateIsFill = false;\n    const lowerLimit: LowerLimit = getLowerLimit(region, valueQuery);\n\n    if (region.mode) {\n      this.editColorSvgZone(region.idSVG, lowerLimit.colorBack, lowerLimit.colorBorder, lowerLimit.sizeBorder.toString());\n    }\n\n    // const resultTooltip: Tooltip = this.setStateTooltip(lowerLimit, region, valueQuery, this.props.isEnabled);\n    const resultTooltip: Tooltip = this.setStateTooltip(lowerLimit, region, valueQuery);\n    //if (valueQuery) {\n    //if (region.mode && ((!region.textObj.isTextTooltip) || this.displayValueQuery(region))) {\n    if (region.mode) {\n      //const coordinateWrite: Coord4DInt | null = searchMinMaxIdSVG(region.idSVG);\n      const coordinateTextObject: CoorHTML = this.getPositionTextObjectRegionSVG(region.idSVG);\n      //if (coordinateWrite) {\n      stateIsFill = true;\n      const style: Style = region.textObj.style;\n      const styleWrite = {\n        width: 'auto',\n        position: 'absolute',\n        zIndex: 999,\n        // left: coordinateWrite.xMax - (coordinateWrite.xMax - coordinateWrite.xMin),\n        // top: coordinateWrite.yMax,\n        left: coordinateTextObject.left + 'px',\n        top: coordinateTextObject.top + 'px',\n        border: '1px solid black',\n        // backgroundColor: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorBackElement : 'black',\n        // color: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      } as CSSProperties;\n\n      const styleLabelTooltipSVG = {\n        textDecoration: this.defineTextDecoration(style),\n        fontStyle: this.defineFontStyle(style),\n        fontWeight: this.defineFontWeight(style),\n        fontSize: this.props.options.display.size,\n        fontFamily: this.props.options.display.police,\n        color: region.textObj.colorText,\n        backgroundColor: region.textObj.colorBack,\n        margin: 0,\n        padding: '5px 5px 0 5px',\n      } as React.CSSProperties;\n\n      const styleMainMetricTooltipSVG = {\n        textDecoration: this.defineTextDecoration(style),\n        fontStyle: this.defineFontStyle(style),\n        fontWeight: this.defineFontWeight(style),\n        color: region.textObj.valueGenerateObjectText.addColorTextElement ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n        backgroundColor: region.textObj.valueGenerateObjectText.addColorBackElement\n          ? region.textObj.valueGenerateObjectText.colorBackElement\n          : 'black',\n        fontSize: this.props.options.display.size,\n        fontFamily: this.props.options.display.police,\n        margin: 0,\n        padding: '5px 5px 0 5px',\n      } as React.CSSProperties;\n\n      let htmlResult = (\n        <div style={styleWrite}>\n          {!region.textObj.isTextTooltip && <p style={styleLabelTooltipSVG}>{region.label}</p>}\n          {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && (\n            <p style={styleMainMetricTooltipSVG}>{this.displayValueQuery(region) && resultTooltip.valueQuery}</p>\n          )}\n        </div>\n      );\n      if (region.textObj.isTextTooltip && region.textObj.valueGenerateObjectText.displayObjectInTooltip) {\n        htmlResult = <div></div>;\n      }\n      this.setState({\n        htmlResult: htmlResult,\n        tooltipValue: resultTooltip.tooltipValue,\n        backgroundColor: resultTooltip.backgroundColor,\n        borderColor: resultTooltip.borderColor,\n        sizeBorder: resultTooltip.sizeBorder,\n        valueQuery: resultTooltip.valueQuery,\n      });\n      //}\n      //}\n    }\n    if (!stateIsFill) {\n      this.setState({\n        tooltipValue: resultTooltip.tooltipValue,\n        backgroundColor: resultTooltip.backgroundColor,\n        borderColor: resultTooltip.borderColor,\n        sizeBorder: resultTooltip.sizeBorder,\n        valueQuery: resultTooltip.valueQuery,\n      });\n    }\n  };\n\n  /** get data metrics and fill state */\n  reqMetrics = () => {\n    const region: RegionClass = this.props.uneCoor;\n\n    reqMetricRegion(region, this.props);\n    if (region.mainMetric.returnQuery && region.mainMetric.returnQuery.length > 0) {\n      const cnt: number | null = getResultQuery(region.mainMetric);\n\n      this.generateTooltipAndEditColor(region, cnt);\n    } else {\n      this.generateTooltipAndEditColor(region, null);\n    }\n  };\n\n  getValuesAuxiliaryMetrics = (): string[] => {\n    const region: RegionClass = this.props.uneCoor;\n    reqMetricAuxRegion(region, this.props);\n    const mainMetric: Metric = region.mainMetric;\n    //console.log(mainMetric.refId);\n    const auxiliaryMetrics: Metric[] = region.metrics;\n    //console.log(auxiliaryMetrics);\n    let valueAuxiliaryMetric: string[] = [];\n    //const countMetrics: number = auxiliaryMetrics.length;\n    auxiliaryMetrics.forEach((metric: Metric) => {\n      let countTotalValues = 0;\n      let resultTotalValues = 0;\n      let result = '';\n      if (metric.returnQuery && metric.returnQuery.length > 0) {\n        let numberLoop: number = metric.returnQuery?.length || 0;\n        if (metric.key !== '' && metric.keyValue !== '') {\n          for (let i = 0; i < numberLoop; i++) {\n            let line = metric.returnQuery[i];\n            if (line.fields[0].labels) {\n              if (mainMetric.refId !== '') {\n                if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                  if (line.fields[0].labels[metric.key] === metric.keyValue) {\n                    const countValues: number = line.fields[0].values.length;\n                    for (let i = 0; i < countValues; i++) {\n                      if (line.fields[0].values.get(i)) {\n                        resultTotalValues += line.fields[0].values.get(i);\n                        countTotalValues++;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < numberLoop; i++) {\n            let line = metric.returnQuery[i];\n            if (line.fields[0].labels) {\n              if (mainMetric.refId) {\n                if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                  const countValues: number = line.fields[0].values.length;\n                  for (let i = 0; i < countValues; i++) {\n                    if (line.fields[0].values.get(i)) {\n                      resultTotalValues += line.fields[0].values.get(i);\n                      countTotalValues++;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (metric.manageValue === 'avg') {\n          result = (resultTotalValues / countTotalValues).toString();\n        } else if (metric.manageValue === 'sum') {\n          result = resultTotalValues.toString();\n        } else if (metric.manageValue === 'err') {\n          if (countTotalValues > 1) {\n            result = 'error';\n          } else {\n            result = resultTotalValues.toString();\n          }\n        }\n      }\n      if (result !== '') {\n        valueAuxiliaryMetric.push(result);\n      }\n    });\n    return valueAuxiliaryMetric;\n  };\n\n  private getConvertValueAuxMetrics = (valueBrut: string): string => {\n    let result = '';\n    const region: RegionClass = this.props.uneCoor;\n    //const roundValue: string = region.textObj.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(region.textObj.generateAuxiliaryElement.numericFormatElement, 10) || 1;\n    const unit: string = region.textObj.generateAuxiliaryElement.unit;\n    //if (roundValue !== '') {\n    result = parseFloat(valueBrut).toPrecision(roundValue).toString();\n    // } else {\n    //   result = valueBrut;\n    // }\n    return result + ' ' + unit;\n  };\n\n  private displayValuesAuxMetrics = (): JSX.Element => {\n    let html: JSX.Element[] = [];\n    const region: RegionClass = this.props.uneCoor;\n    const valuesAuxMetrics: string[] = this.getValuesAuxiliaryMetrics();\n    const auxMetrics: Metric[] = region.metrics;\n    const addColorText: boolean = region.textObj.generateAuxiliaryElement.addColorTextElement;\n    const addColorBack: boolean = region.textObj.generateAuxiliaryElement.addColorBackElement;\n    const legend: string = region.textObj.generateAuxiliaryElement.legendElement;\n    let colorText = '';\n    let colorBack = '';\n\n    if (addColorText) {\n      colorText = region.textObj.generateAuxiliaryElement.colorTextElement;\n    } else {\n      colorText = 'white';\n    }\n\n    if (addColorBack) {\n      colorBack = region.textObj.generateAuxiliaryElement.colorBackElement;\n    } else {\n      colorBack = 'black';\n    }\n\n    const styleTitle = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleTitle2 = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleContent = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    if (auxMetrics.length > 0) {\n      html.push(\n        <p key={'region' + region.id + 'contentToolTip1'} style={styleTitle}>\n          Auxiliary Metric\n        </p>\n      );\n      html.push(\n        <p key={'region' + region.id + 'contentToolTip2'} style={styleTitle}>\n          {legend}\n        </p>\n      );\n      let index = 1;\n      for (const metric of auxMetrics) {\n        const valueAuxMetric: string = this.getConvertValueAuxMetrics(valuesAuxMetrics[index - 1]);\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip3'} style={styleTitle2}>\n            + Metric {index}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip4'} style={styleContent}>\n            - Reference : {metric.refId}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip5'} style={styleContent}>\n            - Value : {!isNaN(parseFloat(valueAuxMetric)) && valueAuxMetric}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip6'} style={styleContent}>\n            - Key : {metric.key}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip7'} style={styleContent}>\n            - KeyValue : {metric.keyValue}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip8'} style={styleContent}>\n            - Type : {metric.manageValue}\n          </p>\n        );\n        index++;\n      }\n    }\n    return <div style={{ backgroundColor: colorBack }}>{html}</div>;\n  };\n\n  /**\n   * to do\n   * @param coordinateX\n   *\n   */\n  private defineLimitX(coordinateX: number) {\n    let result: number = coordinateX;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < -100) {\n    //     result = -100;\n    //   }\n    // }\n    return result;\n  }\n\n  /**\n   * to do\n   * @param coordinateY\n   *\n   */\n  private defineLimitY(coordinateY: number) {\n    let result: number = coordinateY;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   //console.log(coordinateY);\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < -100) {\n    //     result = -100;\n    //   }\n    // }\n    return result;\n  }\n\n  getCoordinatePxAdaptToInitialSpace = (\n    region: RegionClass,\n    coorRegion: Coord4D,\n    coorRegionDefault: Coord4D,\n    widthInitialSpaceDefault: number,\n    heightInitialSpaceDefault: number\n  ): CoorHTML => {\n    const widthBackground: number = parseInt(this.props.options.baseMap.width, 10);\n    const heightBackground: number = parseInt(this.props.options.baseMap.height, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n    let leftPx = 0;\n    let rightPx = 0;\n    let topPx = 0;\n    let bottomPx = 0;\n\n    const ratioLeft = parseInt(coorRegionDefault.xMin, 10) / widthBackground;\n    const ratioRight = (widthBackground - parseInt(coorRegionDefault.xMax, 10)) / widthBackground;\n    const ratioTop = (heightBackground - parseInt(coorRegionDefault.yMax, 10)) / heightBackground;\n    const ratioBottom = parseInt(coorRegionDefault.yMin, 10) / heightBackground;\n    leftPx = Math.round(this.defineLimitX(xMin + widthInitialSpace * ratioLeft));\n    rightPx = Math.round(this.defineLimitX(widthInitialSpace * ratioRight + (widthBackground - xMax)));\n    topPx = Math.round(this.defineLimitY(heightInitialSpace * ratioTop + (heightBackground - yMax)));\n    bottomPx = Math.round(this.defineLimitY(yMin + heightInitialSpace * ratioBottom));\n\n    let newArrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    newArrayRegion.forEach((currentRegion) => {\n      // console.log('avant update coords');\n      // console.log(currentRegion.coords);\n      if (currentRegion.id === region.id) {\n        currentRegion.coords.xMin = leftPx.toString();\n        currentRegion.coords.xMax = (widthBackground - rightPx).toString();\n        currentRegion.coords.yMin = bottomPx.toString();\n        currentRegion.coords.yMax = (heightBackground - topPx).toString();\n      }\n      // console.log('après update coords');\n      // console.log(currentRegion.coords);\n    });\n    this.props.options.regionCoordinateSpace = newArrayRegion;\n\n    const leftToDraw = ((leftPx - xMin) / widthInitialSpace) * widthBackground;\n    const rightToDraw = ((rightPx - (widthBackground - xMax)) / widthInitialSpace) * widthBackground;\n    const topToDraw = ((topPx - (heightBackground - yMax)) / heightInitialSpace) * heightBackground;\n    const bottomToDraw = ((bottomPx - yMin) / heightInitialSpace) * heightBackground;\n\n    // console.log(leftToDraw);\n\n    let result: CoorHTML = {\n      top: topToDraw.toString() + 'px',\n      bottom: bottomToDraw.toString() + 'px',\n      left: leftToDraw.toString() + 'px',\n      right: rightToDraw.toString() + 'px',\n    };\n    return result;\n  };\n\n  /** final region zone . Call function after reqMetrics*/\n  renduFinal = () => {\n    if (this.props.uneCoor.mode) {\n      return;\n    }\n    const region: RegionClass = this.props.uneCoor;\n    const pBorder: string = this.state.sizeBorder.toString() + 'px solid ' + this.state.borderColor;\n\n    const backColor: string = region.textObj.colorBack;\n    const textColor: string = region.textObj.colorText;\n\n    //const coorHTML: CoorHTML = calculRealCoordinate(region, this.props.useLimit, this.props.limit);\n    const coorHTML: CoorHTML = this.getCoordinatePxAdaptToInitialSpace(\n      region,\n      region.coords,\n      region.coordsDefault,\n      parseInt(region.widthInitialSpaceDefault, 10),\n      parseInt(region.heightInitialSpaceDefault, 10)\n    );\n    const style: Style = region.textObj.style;\n\n    const styleDiv = {\n      position: 'absolute',\n      border: pBorder,\n      top: coorHTML.top,\n      bottom: coorHTML.bottom,\n      left: coorHTML.left,\n      right: coorHTML.right,\n      zIndex: 999,\n      justifyContent: 'center',\n      background: 'url(' + region.img + ') no-repeat center center',\n      backgroundColor: this.state.backgroundColor,\n      backgroundSize: 'contain',\n      cursor: 'pointer',\n    } as React.CSSProperties;\n\n    const styleTextDiv = {\n      backgroundColor: backColor,\n      textDecoration: this.defineTextDecoration(style),\n      fontStyle: this.defineFontStyle(style),\n      fontWeight: this.defineFontWeight(style),\n      color: textColor,\n      verticalAlign: 'middle',\n    } as React.CSSProperties;\n\n    const styleMetricsDiv = {\n      backgroundColor: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorBackElement : 'black',\n      color: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      verticalAlign: 'middle',\n    } as React.CSSProperties;\n\n    let value: JSX.Element;\n\n    if (this.props.buttonAddLinkIsActive || this.props.buttonAddIncurvedLinkIsActive) {\n      //console.log('active');\n      value = (\n        <div style={styleDiv} id={this.props.id}>\n          {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n            <div>\n              <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n              <div style={styleMetricsDiv}>\n                {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n      if (\n        region.textObj.isTextTooltip ||\n        (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) ||\n        region.textObj.generateAuxiliaryElement.displayObjectInTooltip\n      ) {\n        if (this.state.tooltipValue) {\n          value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n        } else {\n          <div>{value}</div>;\n        }\n      }\n    } else {\n      //console.log('not active');\n      value = (\n        <div style={styleDiv} id={this.props.id}>\n          <a href={region.linkURL.followLink}>\n            <div style={{ height: '100%', width: '100%' }}>\n              {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n                <div>\n                  <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n                  <div style={styleMetricsDiv}>\n                    {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n                  </div>\n                </div>\n              )}\n            </div>\n          </a>\n        </div>\n      );\n      if (\n        region.textObj.isTextTooltip ||\n        (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) ||\n        region.textObj.generateAuxiliaryElement.displayObjectInTooltip\n      ) {\n        if (this.state.tooltipValue) {\n          value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n        } else {\n          <div>{value}</div>;\n        }\n      }\n    }\n    // if (!this.props.isEnabled && region.linkURL.followLink !== '') {\n    //   console.log('not active');\n    //   value = (\n    //     <div style={styleDiv} id={this.props.id}>\n    //       <a href={region.linkURL.followLink}>\n    //         <div style={{height: '100%', width: '100%'}} >\n    //           {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n    //             <div>\n    //               <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n    //               <div style={styleMetricsDiv}>\n    //                 {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n    //               </div>\n    //             </div>\n    //           )}\n    //         </div>\n    //       </a>\n    //     </div>\n    //   );\n    //   if (region.textObj.isTextTooltip || (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) || region.textObj.generateAuxiliaryElement.displayObjectInTooltip) {\n    //     value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n    //   }\n    // } else {\n    //   console.log('active');\n    //   value = (\n    //     <div style={styleDiv} id={this.props.id}>\n    //       {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n    //         <div>\n    //           <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n    //           <div style={styleMetricsDiv}>\n    //             {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n    //           </div>\n    //         </div>\n    //       )}\n    //     </div>\n    //   );\n    //   if (region.textObj.isTextTooltip || (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) || region.textObj.generateAuxiliaryElement.displayObjectInTooltip) {\n    //     value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n    //   }\n    // }\n    this.setState({\n      htmlResult: value,\n    });\n  };\n\n  /** fill state to display data in html */\n  fillState = async () => {\n    await Promise.resolve('Success').then(() => {\n      this.reqMetrics();\n    });\n    await Promise.resolve('Success').then(() => {\n      this.renduFinal();\n    });\n  };\n\n  private defineTextDecoration = (mainStyle: Style): string => {\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (mainStyle: Style): string => {\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (mainStyle: Style): any => {\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  /**\n   * update props\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.fillState();\n    }\n  }\n\n  /** load prometheus value */\n  componentDidMount = () => {\n    this.fillState();\n  };\n\n  /** render */\n  render() {\n    // console.log(this.props.uneCoor.metrics);\n    // console.log(this.getValuesAuxiliaryMetrics());\n    return this.state.htmlResult;\n  }\n}\n","import { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { RegionClass } from 'Models/RegionClass';\n\nexport interface LowerLimit {\n  /** color for background */\n  colorBack: string;\n  /** border color */\n  colorBorder: string;\n  /** size border */\n  sizeBorder: number;\n}\n\n/**\n * Get color with lower limit and prometheus value\n * @returns {LowerLimit} new color value\n */\nexport const getLowerLimit = (coordinate: RegionClass, value: number | null): LowerLimit => {\n  const lowerLimit: LowerLimitClass[] = coordinate.lowerLimit;\n  const result: LowerLimit = { colorBack: '', colorBorder: '', sizeBorder: 0 };\n\n  if (coordinate.colorMode && value) {\n    for (const line of lowerLimit) {\n      const min: string = line.lowerLimitMin.replace('>', '');\n      const minFloat: number = parseFloat(min);\n      const maxFloat: number = parseFloat(line.lowerLimitMax);\n      if ((minFloat <= value || !line.lowerLimitMin) && (maxFloat >= value || !line.lowerLimitMax)) {\n        if (lowerLimit.length > 0) {\n          result.colorBack = coordinate.traceBack ? line.backColor : '';\n          result.colorBorder = coordinate.traceBorder ? line.borderColor : '';\n          result.sizeBorder = coordinate.traceBorder ? parseInt(line.sizeBorder, 10) : 0;\n          break;\n        }\n      }\n    }\n  } else {\n    if (lowerLimit.length > 0) {\n      result.colorBack = coordinate.traceBack ? lowerLimit[0].backColor : '';\n      result.colorBorder = coordinate.traceBorder ? lowerLimit[0].borderColor : '';\n      result.sizeBorder = coordinate.traceBorder ? parseInt(lowerLimit[0].sizeBorder, 10) : 0;\n    }\n  }\n  return result;\n};\n","import React from 'react';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions, CoordinateSpaceInitial } from 'types';\n\nimport { isNumFloat } from 'Functions/isNumFloat';\nimport DrawRectangleExtend from './drawRectangleExtend';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** color of border */\n  color: string;\n  /** coordinate space initial */\n  coordinateInitial: CoordinateSpaceInitial;\n  /** id region */\n  id: string;\n  /** if button SimplePanel is active, block all onClick region space */\n  //isEnabled: boolean;\n  /** if button Add Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddLinkIsActive: boolean;\n  /** if button Add Incurved Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddIncurvedLinkIsActive: boolean;\n}\n\n// tslint:disable-next-line: no-empty-interface\ninterface State {\n  /** stock html for result */\n  resultHTML: JSX.Element;\n}\n\n/**\n * Draw inititial viewing space rectangle\n */\nexport default class DrawRectangle extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      resultHTML: <div></div>,\n    };\n  }\n\n  /**\n   * Transform coordinate percent for css\n   * @param {number} size value of coordinate\n   * @param {boolean} isMax true if x or y is max value\n   * @returns coordinate to percent\n   */\n  transformCoordonneesToPx = (size: number, isMax: boolean, position: number): number => {\n    /**\n     *\n     * V1 -100-100\n     *\n     */\n    // if (size > 100) {\n    //   size = 100;\n    // } else if (size < 0 && size < -100) {\n    //   size = -100;\n    // }\n    // if (size >= 0) {\n    //   size /= 2;\n    //   size = isMax ? 50 - size : 50 + size;\n    // } else {\n    //   size *= -1;\n    //   size /= 2;\n    //   size = 50 - size;\n    // }\n    // return size;\n\n    /**\n     *\n     * Correctif client 0-100\n     *\n     */\n    let result = 0;\n    // if (!this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   // console.log(position);\n    //   // console.log('-');\n    //   if (size > 100) {\n    //     // console.log('>100');\n    //     // console.log(position);\n    //     size = 100;\n    //   } else if (size < 0 && size < -100) {\n    //     // console.log('<-100');\n    //     // console.log(position);\n    //     size = -100;\n    //   }\n    //   if (size >= 0) {\n    //     // console.log('>0');\n    //     // console.log(position);\n    //     size /= 2;\n    //     size = isMax ? 50 - size : 50 + size;\n    //   } else {\n    //     // console.log('<0');\n    //     // console.log(position);\n    //     size *= -1;\n    //     size /= 2;\n    //     size = 50 - size;\n    //   }\n    //   result = size;\n    //   // console.log(result);\n    // } else {\n    //   // console.log(position);\n    //   // console.log('+');\n    //   if (position === 1) {\n    //     result = size;\n    //   } else if (position === 2) {\n    //     result = 100 - size;\n    //   } else if (position === 3) {\n    //     result = size;\n    //   } else if (position === 4) {\n    //     result = 100 - size;\n    //   }\n    // }\n    // console.log(result);\n    return result;\n  };\n\n  limitValueBorder = (value: number, position: number): number => {\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const heigthBackground = parseInt(this.props.options.baseMap.height, 10);\n    let result = value;\n    if (position === 1 || position === 2) {\n      //xMin + xMax\n      if (value > widthBackground) {\n        result = widthBackground;\n      }\n    } else if (position === 3 || position === 4) {\n      //yMin + yMax\n      if (value > heigthBackground) {\n        result = heigthBackground;\n      }\n    }\n    return result;\n  };\n\n  getPositionBorder = (value: number, position: number): number => {\n    // const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    // const heigthBackground = parseInt(this.props.options.baseMap.height, 10);\n    // const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    // const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    // const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    // const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    // const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n    // const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n    let result = 0;\n    // if (position === 1) {\n    //   //xMin\n    //   if (value < 0) {\n    //     result = 0;\n    //   } else if (xMaxInitialSpace > widthBackground) {\n    //     result = (value / xMaxInitialSpace) * widthBackground;\n    //   } else {\n    //     result = value;\n    //   }\n    // } else if (position === 2) {\n    //   //xMax\n    //   if (value > widthBackground) {\n    //     result = 0;\n    //   } else {\n    //     result = widthBackground - value;\n    //   }\n    // } else if (position === 3) {\n    //   //yMax\n    //   if (value > heigthBackground) {\n    //     result = 0;\n    //   } else {\n    //     result = heigthBackground - value;\n    //   }\n    // } else if (position === 4) {\n    //   //yMin\n    //   if (value < 0) {\n    //     result = 0;\n    //   } else if (yMaxInitialSpace > heigthBackground) {\n    //     result = (value / yMaxInitialSpace) * heigthBackground;\n    //   } else {\n    //     result = value;\n    //   }\n    // }\n    return result;\n  };\n\n  fillCoordinate = (): JSX.Element => {\n    const { options } = this.props;\n    const xMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMax, 10);\n    let mapItems: JSX.Element[];\n    mapItems = options.regionCoordinateSpace.map((line: RegionClass, index: number) => (\n      <DrawRectangleExtend\n        key={'drawRectangleExtend' + index.toString()}\n        uneCoor={line}\n        useLimit={false}\n        limit={options.coordinateSpaceInitial.coordinate}\n        onOptionsChange={this.props.onOptionsChange}\n        options={this.props.options}\n        data={this.props.data}\n        id={'region' + line.id.toString()}\n        //isEnabled={this.props.isEnabled}\n        buttonAddLinkIsActive={this.props.buttonAddLinkIsActive}\n        buttonAddIncurvedLinkIsActive={this.props.buttonAddIncurvedLinkIsActive}\n        widthInitialSpaceDefault={(xMaxInitialSpace - xMinInitialSpace).toString()}\n        heightInitialSpaceDefault={(yMaxInitialSpace - yMinInitialSpace).toString()}\n      />\n    ));\n    return <ul>{mapItems}</ul>;\n  };\n\n  /** creaate rectrangle */\n  createRectangle = (): void => {\n    const line: Coord4D = this.props.coordinateInitial.coordinate;\n    let pLeft: string;\n    let pRight: string;\n    let pTop: string;\n    let pBottom: string;\n    let xMin = 0;\n    let xMax = 0;\n    let yMin = 0;\n    let yMax = 0;\n    const pBorder: string = this.props.coordinateInitial.displayArea ? '3px solid ' + this.props.color : '';\n\n    xMin = isNumFloat(line.xMin) ? parseInt(line.xMin, 10) : 0;\n    xMax = isNumFloat(line.xMax) ? parseInt(line.xMax, 10) : 0;\n    yMin = isNumFloat(line.yMin) ? parseInt(line.yMin, 10) : 0;\n    yMax = isNumFloat(line.yMax) ? parseInt(line.yMax, 10) : 0;\n\n    // pLeft = this.transformCoordonneesToPx(xMin, false, 1).toString() + '%';\n    // pRight = this.transformCoordonneesToPx(xMax, true, 2).toString() + '%';\n    // pBottom = this.transformCoordonneesToPx(yMin, false, 3).toString() + '%';\n    // pTop = this.transformCoordonneesToPx(yMax, true, 4).toString() + '%';\n    pLeft = this.getPositionBorder(xMin, 1).toString() + 'px';\n    pRight = this.getPositionBorder(xMax, 2).toString() + 'px';\n    pTop = this.getPositionBorder(yMax, 3).toString() + 'px';\n    pBottom = this.getPositionBorder(yMin, 4).toString() + 'px';\n\n    // if (xMax >= 0) {\n    //   // console.log('pLeft xMax +');\n    //   pLeft = this.transformCoordonneesToPx(xMin, false, 1).toString() + 'px';\n    //   // console.log(pLeft);\n    //   // console.log('pRight xMax +');\n    //   pRight = this.transformCoordonneesToPx(xMax, true, 2).toString() + 'px';\n    //   // console.log(pRight);\n    // } else {\n    //   xMin = xMin * -1;\n    //   // console.log('pRight xMax -');\n    //   pRight = this.transformCoordonneesToPx(xMin, false, 1).toString() + 'px';\n    //   // console.log(pRight);\n    //   // console.log('pLeft xMax -');\n    //   pLeft = this.transformCoordonneesToPx(xMax, true, 2).toString() + 'px';\n    //   // console.log(pLeft);\n    // }\n    // if (yMax >= 0) {\n    //   // console.log('pBottom yMax +');\n    //   pBottom = this.transformCoordonneesToPx(yMin, false, 3).toString() + 'px';\n    //   // console.log(pBottom);\n    //   // console.log('pTop yMax +');\n    //   pTop = this.transformCoordonneesToPx(yMax, true, 4).toString() + 'px';\n    //   // console.log(pTop);\n    // } else {\n    //   yMin = yMin * -1;\n    //   // console.log('pTop yMax -');\n    //   pTop = this.transformCoordonneesToPx(yMin, false, 3).toString() + 'px';\n    //   // console.log(pTop);\n    //   // console.log('pBottom yMax -');\n    //   pBottom = this.transformCoordonneesToPx(yMax, true, 4).toString() + 'px';\n    //   // console.log(pBottom);\n    // }\n\n    const data: JSX.Element = (\n      <div\n        style={{\n          border: pBorder,\n          bottom: pBottom,\n          left: pLeft,\n          position: 'absolute',\n          right: pRight,\n          top: pTop,\n        }}\n        id={this.props.id}\n      >\n        {/* {this.fillCoordinate()} */}\n      </div>\n    );\n    this.setState({\n      resultHTML: data,\n    });\n  };\n\n  /** update state when props coordinateInitial change */\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.createRectangle();\n    }\n  }\n\n  /** create rectangle when component mount */\n  componentDidMount = () => {\n    this.createRectangle();\n  };\n\n  /**\n   * render\n   */\n  render() {\n    const test = {\n      position: 'absolute',\n      textAlign: 'center',\n      height: this.props.options.baseMap.height + 'px',\n      width: this.props.options.baseMap.width + 'px',\n    } as React.CSSProperties;\n\n    return <div style={test}>{this.state.resultHTML}</div>;\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { Tooltip } from '@grafana/ui';\nimport { SimpleOptions, Metric } from 'types';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { PointClass } from 'Models/PointClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  drawGraphicMarker: SelectableValue<string>;\n  shape: SelectableValue<string>;\n  size: string;\n  positionShapeX: string;\n  positionShapeY: string;\n  label: string;\n  color: string;\n  widthImage: number;\n  heightImage: number;\n  police: string;\n  sizePolice: string;\n  //style: Style;\n  idPoint: string;\n  name: string;\n  textObject: TextObject;\n  seuil: LowerLimitClass[];\n  valueMainMetric: string;\n  refMainMetric: string;\n  associateOrientedLinkIn: any[];\n  associateOrientedLinkOut: any[];\n  labelPositionX: string;\n  labelPositionY: string;\n  tooltipPosition: SelectableValue<any>;\n  auxiliaryMetrics: Metric[];\n  valuesAuxiliaryMetrics: string[];\n  linkUrl: LinkURLClass;\n  buttonAddLinkIsActive: boolean;\n  buttonAddIncurvedLinkIsActive: boolean;\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  positionXDefault: string;\n  positionYDefault: string;\n}\n\ninterface State {}\n\n/**\n * to do\n */\nexport default class DrawPoint extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * to do\n   * @param coordinateX\n   *\n   */\n  private defineLimitX(coordinateX: number) {\n    let result: number = coordinateX;\n    const xMin: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMax: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    if (coordinateX < xMin) {\n      result = xMin;\n    } else if (coordinateX > xMax) {\n      result = xMax;\n    }\n    return result;\n  }\n\n  /**\n   * to do\n   * @param coordinateY\n   *\n   */\n  private defineLimitY(coordinateY: number) {\n    let result: number = coordinateY;\n    const yMin: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMax: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    if (coordinateY < yMin) {\n      result = yMin;\n    } else if (coordinateY > yMax) {\n      result = yMax;\n    }\n    return result;\n  }\n\n  /**\n   * to do\n   * @param defineCenter\n   * @param sizeGraphicMarkerPx\n   * @param shapeGraphicMarker\n   */\n  private definePositionX(positionX: number, initialSpace: Coord4D, size: number, shape: string): number {\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const ratioX = parseInt(this.props.positionXDefault, 10) / this.props.widthImage;\n\n    // define value to display in input positionShapeX\n    const x = Math.round(xMin + widthInitialSpace * ratioX);\n\n    // saving data new positionShapeX\n    let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.forEach((point) => {\n      if (point.name === this.props.name) {\n        point.positionShapeX = x.toString();\n      }\n    });\n    this.props.options.arrayPoints = newArrayPoint;\n\n    // define limit x in fonction of values xMin and xMax of initialSpace\n    const xLimited = this.defineLimitX(x);\n\n    // define display x\n    const result = ((xLimited - xMin) / widthInitialSpace) * this.props.widthImage;\n\n    // return result and center display of point in fonction of sizePoint and borderPoint\n    return result - (size + parseInt(this.defineBorderSize(), 10));\n  }\n\n  /**\n   * to do\n   * @param defineCenter\n   * @param sizeGraphicMarkerPx\n   * @param shapeGraphicMarker\n   */\n  private definePositionY(positionY: number, initialSpace: SelectableValue<RegionClass>, size: number, shapeGraphicMarker: string): number {\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const heightInitialSpace: number = yMax - yMin;\n    const ratioY = parseInt(this.props.positionYDefault, 10) / this.props.heightImage;\n\n    // define value to display in input positionShapeY\n    let y = Math.round(yMin + heightInitialSpace * ratioY);\n\n    // saving data new positionShapeY\n    let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.forEach((point) => {\n      if (point.name === this.props.name) {\n        point.positionShapeY = y.toString();\n      }\n    });\n    this.props.options.arrayPoints = newArrayPoint;\n\n    // define limit y in fonction of values yMin and yMax of initialSpace\n    const yLimited = this.defineLimitY(y);\n\n    // define display y\n    const result = ((yMin + heightInitialSpace - yLimited) / heightInitialSpace) * this.props.heightImage;\n\n    return result - (size + parseInt(this.defineBorderSize(), 10));\n  }\n\n  /**\n   * to do\n   * @param sizeGraphicMarker\n   * @param shapeGraphicMarker\n   */\n  private defineSizeGraphicMarkerPx(size: string, shape: string) {\n    if (this.props.shape.value === 'none') {\n      return 0;\n    } else {\n      // if (size === 'small') {\n      //   return 4;\n      // } else if (size === 'medium') {\n      //   return 6;\n      // } else if (size === 'large') {\n      //   return 8;\n      // } else {\n      //   return 0;\n      // }\n      return parseInt(size, 10) / 2;\n    }\n  }\n\n  defineBorderRadius = (): number => {\n    let result = 0;\n    const shape: string = this.props.shape.value || '';\n    if (shape === 'circle') {\n      result = 50;\n    }\n    // console.log('radius');\n    // console.log(shape);\n    // console.log(result);\n    return result;\n  };\n\n  defineRotate = (): string => {\n    let result = 'rotate(0deg)';\n    const shape: string = this.props.shape.value || '';\n    if (shape === 'diamond') {\n      result = 'rotate(45deg)';\n    }\n    // console.log('rotate');\n    // console.log(shape);\n    // console.log(result);\n    return result;\n  };\n\n  // definePadding = (size: number): string => {\n  //   let result = size + 'px';\n  //   if (this.props.shape.value === 'none') {\n  //     result = '0px';\n  //   }\n  //   console.log(result);\n  //   return result;\n  // };\n\n  /**\n   * to do\n   * @param positionX\n   * @param positionY\n   * @param color\n   * @param sizeGraphicMarkerPx\n   * @param shapeGraphicMarker\n   */\n  private drawPoint(drawGraphicMarker: string, size: number, positionShapeX: number, positionShapeY: number): any {\n    const valueToolTip: JSX.Element | null = this.defineContentTooltip('point');\n    const linkUrlPoint = this.props.linkUrl.followLink;\n    const borderRadius = this.defineBorderRadius() + 'px';\n    const rotate = this.defineRotate();\n    // const padding = this.definePadding(size);\n    // console.log(this.props.shape.value);\n    // console.log(borderRadius);\n    // console.log(rotate);\n    if (drawGraphicMarker === 'true') {\n      if (this.props.buttonAddLinkIsActive || this.props.buttonAddIncurvedLinkIsActive) {\n        if (valueToolTip === null) {\n          return (\n            <div\n              style={{\n                border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                backgroundColor: this.defineBackgroundColor(),\n                borderRadius: borderRadius,\n                padding: size + 'px',\n                position: 'absolute',\n                zIndex: 1000,\n                left: positionShapeX,\n                top: positionShapeY,\n                transform: rotate,\n              }}\n              id={this.props.idPoint}\n            ></div>\n          );\n        } else {\n          return (\n            <Tooltip key={'tooltip' + this.props.name} content={valueToolTip} placement={this.props.tooltipPosition.value}>\n              <div\n                style={{\n                  border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                  backgroundColor: this.defineBackgroundColor(),\n                  borderRadius: borderRadius,\n                  padding: size + 'px',\n                  position: 'absolute',\n                  zIndex: 1000,\n                  left: positionShapeX,\n                  top: positionShapeY,\n                  transform: rotate,\n                }}\n                id={this.props.idPoint}\n              ></div>\n            </Tooltip>\n          );\n        }\n      } else {\n        if (valueToolTip === null) {\n          return (\n            <div>\n              <a\n                href={linkUrlPoint}\n                style={{\n                  border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                  backgroundColor: this.defineBackgroundColor(),\n                  borderRadius: borderRadius,\n                  padding: size + 'px',\n                  position: 'absolute',\n                  zIndex: 1000,\n                  left: positionShapeX,\n                  top: positionShapeY,\n                  transform: rotate,\n                }}\n                id={this.props.idPoint}\n              ></a>\n            </div>\n          );\n        } else {\n          return (\n            <Tooltip key={'tooltip' + this.props.name} content={valueToolTip} placement={this.props.tooltipPosition.value}>\n              <a\n                href={linkUrlPoint}\n                style={{\n                  border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                  backgroundColor: this.defineBackgroundColor(),\n                  borderRadius: borderRadius,\n                  padding: size + 'px',\n                  position: 'absolute',\n                  zIndex: 1000,\n                  left: positionShapeX,\n                  top: positionShapeY,\n                  transform: rotate,\n                }}\n                id={this.props.idPoint}\n              ></a>\n            </Tooltip>\n          );\n        }\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n\n  private definePositionLabelX = (coordinateX: number): number => {\n    const positionLabel: number = parseInt(this.props.labelPositionX, 10);\n    let result = 0;\n    if (this.props.drawGraphicMarker.value === 'true') {\n      result = coordinateX + positionLabel + parseInt(this.props.size, 10) + 5;\n      // if (this.props.size.value === 'large') {\n      //   result = coordinateX + positionLabel + 18;\n      // } else if (this.props.size.value === 'medium') {\n      //   result = coordinateX + positionLabel + 14;\n      // }\n    } else {\n      result = coordinateX + positionLabel;\n    }\n    return result;\n  };\n\n  private definePositionLabelY = (coordinateY: number): number => {\n    const inverseAxeY = -1;\n    const positionLabel: number = parseInt(this.props.labelPositionY, 10) * inverseAxeY;\n    let result = 0;\n    if (this.props.drawGraphicMarker.value === 'true') {\n      result = coordinateY + positionLabel + parseInt(this.props.size, 10) + 5;\n      // if (this.props.size.value === 'large') {\n      //   result = coordinateY + positionLabel + 18;\n      // } else if (this.props.size.value === 'medium') {\n      //   result = coordinateY + positionLabel + 14;\n      // }\n    } else {\n      result = coordinateY + positionLabel;\n    }\n    return result;\n  };\n\n  private displayLabel(label: string, name: string, positionX: number, positionY: number, police: string) {\n    const valueToolTip: JSX.Element | null = this.defineContentTooltip('label');\n    if (valueToolTip === null) {\n      return (\n        <div\n          style={{\n            textDecoration: this.defineTextDecoration(),\n            fontStyle: this.defineFontStyle(),\n            fontWeight: this.defineFontWeight(),\n            fontSize: this.props.sizePolice,\n            fontFamily: police,\n            color: this.props.textObject.colorText || 'black',\n            position: 'absolute',\n            zIndex: 1000,\n            top: this.definePositionLabelY(positionY),\n            left: this.definePositionLabelX(positionX),\n          }}\n        >\n          {this.defineTextObject(this.props.valueMainMetric)}\n        </div>\n      );\n    } else {\n      return (\n        <Tooltip key={'tooltipLabel' + this.props.name} content={valueToolTip} placement={this.props.tooltipPosition.value}>\n          <div\n            style={{\n              textDecoration: this.defineTextDecoration(),\n              fontStyle: this.defineFontStyle(),\n              fontWeight: this.defineFontWeight(),\n              fontSize: this.props.sizePolice,\n              fontFamily: police,\n              color: this.props.textObject.colorText || 'black',\n              position: 'absolute',\n              zIndex: 1000,\n              top: this.definePositionLabelY(positionY),\n              left: this.definePositionLabelX(positionX),\n            }}\n          >\n            {this.defineTextObject(this.props.valueMainMetric)}\n          </div>\n        </Tooltip>\n      );\n    }\n  }\n\n  private defineMainMetric = (mainMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.valueGenerateObjectText.unit;\n    const decimal: string = this.props.textObject.valueGenerateObjectText.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(mainMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = mainMetric + ' ' + unit;\n    }\n    // console.log('result');\n    // console.log(result);\n    return result;\n  };\n\n  private defineAuxMetric = (auxMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.generateAuxiliaryElement.unit;\n    const decimal: string = this.props.textObject.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(auxMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = auxMetric + ' ' + unit;\n    }\n    return result;\n  };\n\n  private defineTextObject = (mainMetric: string): JSX.Element => {\n    let htmlTextObject: JSX.Element[] = [];\n    let htmlMainMetric: JSX.Element[] = [];\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n\n    const styleLabel = {\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n      textAlign: 'center',\n      margin: 0,\n      padding: '0 5px',\n    } as CSSProperties;\n\n    const styleMainMetric = {\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n      margin: 0,\n      padding: 0,\n      whiteSpace: 'nowrap',\n    } as CSSProperties;\n\n    if (!dislayTextObjectInTooltip) {\n      htmlTextObject.push(\n        <p key={'contentTextObject1' + this.props.name} style={styleLabel}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n\n    if (displayMainMetric) {\n      if (!displayMainMetricInTooltip) {\n        if (legendMainMetric) {\n          htmlMainMetric.push(\n            <p key={'contentTextObject2' + this.props.name} style={styleMainMetric}>\n              {legendMainMetric}\n            </p>\n          );\n        }\n        // Condition Display NaN none Point\n        htmlMainMetric.push(\n          <p key={'contentTextObject3' + this.props.name} style={styleMainMetric}>\n            {!isNaN(parseFloat(this.defineMainMetric(mainMetric))) && this.defineMainMetric(mainMetric)}\n          </p>\n        );\n      }\n    }\n\n    let styleMainDiv = {\n      backgroundColor: backColoTextObject,\n      border: '1px solid black',\n    } as CSSProperties;\n\n    if (!displayMainMetric || (displayMainMetric && displayMainMetricInTooltip)) {\n      styleMainDiv = {\n        backgroundColor: backColoTextObject,\n      };\n    }\n\n    return (\n      <div style={styleMainDiv}>\n        {htmlTextObject}\n        <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>{htmlMainMetric}</div>\n      </div>\n    );\n  };\n\n  private defineHtmlLinkTooltip = (): JSX.Element => {\n    let result: JSX.Element = <div></div>;\n    if (this.props.linkUrl.hoveringTooltipText !== '') {\n      result = (\n        <a\n          style={{ fontFamily: this.props.police, fontSize: '11px', marginBottom: '0px', textAlign: 'center' }}\n          href={this.props.linkUrl.hoveringTooltipLink}\n        >\n          {this.props.linkUrl.hoveringTooltipText}\n        </a>\n      );\n    }\n    return result;\n  };\n\n  private defineContentTooltip(localisation: string): JSX.Element | null {\n    const contentTooltip: JSX.Element[] = [];\n    const contentTooltipMainMetric: JSX.Element[] = [];\n    const contentTooltipAuxMetric: JSX.Element[] = [];\n    const contentTooltipAssociateLink: JSX.Element[] = [];\n    const arrayOrientedLinksIn: any[] = this.props.associateOrientedLinkIn;\n    const arrayOrientedLinksOut: any[] = this.props.associateOrientedLinkOut;\n    const refMainMetric: string = this.props.refMainMetric;\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n    const displayAuxMetricInTooltip: boolean = this.props.textObject.generateAuxiliaryElement.displayObjectInTooltip;\n    const addTextColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorTextElement;\n    const addBackColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorBackElement;\n    const textColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorTextElement;\n    const backColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorBackElement;\n    const legendAuxMetric: string = this.props.textObject.generateAuxiliaryElement.legendElement;\n\n    const styleMainTitle = {\n      fontFamily: this.props.police,\n      fontSize: '11px',\n      marginBottom: '0px',\n      textAlign: 'center',\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleMainMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleAuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    // const styleTitle2MainMetric = {\n    //   fontFamily: this.props.police,\n    //   fontSize: '10px',\n    //   marginTop: '5px',\n    //   marginLeft: '5px',\n    //   marginBottom: '0px',\n    //   color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    // } as React.CSSProperties;\n\n    const styleTitle2AuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentMainMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentAuxMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleAssociateLink = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n    } as React.CSSProperties;\n\n    const styleContentAssociateLink = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n    } as React.CSSProperties;\n\n    if (dislayTextObjectInTooltip) {\n      contentTooltip.push(\n        <p key={localisation + 'ContentTooltip1' + this.props.name} style={styleMainTitle}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n\n    if (displayMainMetric && displayMainMetricInTooltip) {\n      if (legendMainMetric) {\n        contentTooltipMainMetric.push(\n          <p key={localisation + 'ContentTooltip2' + this.props.name} style={styleTitleMainMetric}>\n            {legendMainMetric}\n          </p>\n        );\n      }\n\n      contentTooltipMainMetric.push(\n        <p key={localisation + 'ContentTooltip3' + this.props.name} style={styleTitleMainMetric}>\n          Main Metric\n        </p>\n      );\n\n      contentTooltipMainMetric.push(\n        <p key={localisation + 'ContentTooltip4' + this.props.name} style={styleContentMainMetrics}>\n          - Reference : {refMainMetric}\n        </p>\n      );\n\n      contentTooltipMainMetric.push(\n        <p key={localisation + 'ContentTooltip5' + this.props.name} style={styleContentMainMetrics}>\n          - Value : {this.defineMainMetric(this.props.valueMainMetric)}\n        </p>\n      );\n    }\n\n    if (displayAuxMetricInTooltip) {\n      if (legendAuxMetric) {\n        contentTooltipMainMetric.push(\n          <p key={localisation + 'ContentTooltip6' + this.props.name} style={styleTitleAuxMetric}>\n            {legendAuxMetric}\n          </p>\n        );\n      }\n      if (this.props.auxiliaryMetrics.length > 0) {\n        contentTooltipAuxMetric.push(\n          <p key={localisation + 'ContentTooltip7' + this.props.name} style={styleTitleAuxMetric}>\n            Auxiliary Metric\n          </p>\n        );\n        let index = 1;\n        this.props.auxiliaryMetrics.forEach((metric) => {\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip8' + this.props.name} style={styleTitle2AuxMetric}>\n              + Metric {index}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip9' + this.props.name} style={styleContentAuxMetrics}>\n              - Reference : {metric.refId}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip10' + this.props.name} style={styleContentAuxMetrics}>\n              - Value :{' '}\n              {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1]))) &&\n                this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1])}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip11' + this.props.name} style={styleContentAuxMetrics}>\n              - Key : {metric.key}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip12' + this.props.name} style={styleContentAuxMetrics}>\n              - KeyValue : {metric.keyValue}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip13' + this.props.name} style={styleContentAuxMetrics}>\n              - Type : {metric.manageValue}\n            </p>\n          );\n          index++;\n        });\n      }\n    }\n\n    if (arrayOrientedLinksIn.length !== 0) {\n      contentTooltipAssociateLink.push(\n        <p key={localisation + 'ContentTooltip14' + this.props.name} style={styleTitleAssociateLink}>\n          Associate Link In :\n        </p>\n      );\n      arrayOrientedLinksIn.forEach((orientedLinkIn) => {\n        const nameOrientedLink: string = orientedLinkIn.label || orientedLinkIn.name;\n        contentTooltipAssociateLink.push(\n          <p key={localisation + 'ContentTooltip15' + this.props.name + nameOrientedLink} style={styleContentAssociateLink}>\n            - {nameOrientedLink}\n          </p>\n        );\n      });\n    }\n\n    if (arrayOrientedLinksOut.length !== 0) {\n      contentTooltipAssociateLink.push(\n        <p key={localisation + 'ContentTooltip16' + this.props.name} style={styleTitleAssociateLink}>\n          Associate Link Out :\n        </p>\n      );\n      arrayOrientedLinksOut.forEach((orientedLinkOut) => {\n        const nameOrientedLink: string = orientedLinkOut.label || orientedLinkOut.name;\n        contentTooltipAssociateLink.push(\n          <p key={localisation + 'ContentTooltip17' + this.props.name + nameOrientedLink} style={styleContentAssociateLink}>\n            - {nameOrientedLink}\n          </p>\n        );\n        // console.log(nameOrientedLink);\n      });\n    }\n    if (contentTooltip.length === 0 && contentTooltipMainMetric.length === 0 && contentTooltipAssociateLink.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        <div style={{ border: '1px solid black', padding: 0 }}>\n          {contentTooltip}\n          <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>\n            {contentTooltipMainMetric}\n          </div>\n          <div style={{ backgroundColor: addBackColorAuxMetric ? backColorAuxMetric : backColoTextObject, padding: '0 5px' }}>\n            {contentTooltipAuxMetric}\n          </div>\n          <div>{contentTooltipAssociateLink}</div>\n          {this.defineHtmlLinkTooltip()}\n        </div>\n      </div>\n    );\n  }\n\n  private defineBackgroundColor() {\n    let colorBackground = '';\n\n    if (this.props.seuil.length > 0) {\n      if (this.props.seuil[0].backColor !== '') {\n        colorBackground = this.props.seuil[0].backColor;\n      } else {\n        colorBackground = 'black';\n      }\n    } else {\n      colorBackground = 'black';\n    }\n\n    const valueMainMetric: number = parseInt(this.props.valueMainMetric, 10);\n    let index = 0;\n\n    this.props.seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBackground = level.backColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBackground = level.backColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBackground = level.backColor;\n      }\n\n      index++;\n    });\n\n    if (colorBackground === '') {\n      colorBackground = 'black';\n    }\n\n    return colorBackground;\n  }\n\n  private defineBorderColor() {\n    let colorBorder = '';\n\n    if (this.props.seuil.length > 0) {\n      if (this.props.seuil[0].borderColor !== '') {\n        colorBorder = this.props.seuil[0].borderColor;\n      } else {\n        colorBorder = 'black';\n      }\n    } else {\n      colorBorder = 'black';\n    }\n\n    const valueMainMetric: number = parseInt(this.props.valueMainMetric, 10);\n    let index = 0;\n\n    this.props.seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBorder = level.borderColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBorder = level.borderColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBorder = level.borderColor;\n      }\n\n      index++;\n    });\n\n    return colorBorder;\n  }\n\n  private defineBorderSize() {\n    let sizeBorder = '';\n\n    if (this.props.seuil.length > 0) {\n      sizeBorder = this.props.seuil[0].sizeBorder;\n    } else {\n      sizeBorder = '1';\n    }\n\n    const valueMainMetric: number = parseInt(this.props.valueMainMetric, 10);\n    let index = 0;\n\n    this.props.seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        sizeBorder = level.sizeBorder;\n      }\n      index++;\n    });\n\n    return sizeBorder;\n  }\n\n  private defineTextDecoration = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (): any => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  /**\n   * render\n   */\n  render() {\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const shape: string = this.props.shape.value || '';\n    const size: number = this.defineSizeGraphicMarkerPx(this.props.size || '', shape);\n    const valuePositionX: number = parseInt(this.props.positionShapeX, 10) || 0;\n    const valuePositionY: number = parseInt(this.props.positionShapeY, 10) || 0;\n    const positionShapeX: number = this.definePositionX(valuePositionX, initialSpace, size, shape);\n    const positionShapeY: number = this.definePositionY(valuePositionY, initialSpace, size, shape);\n    const label: string = this.props.label;\n    const name: string = this.props.name;\n    const drawGraphicMarker: string = this.props.drawGraphicMarker.value || '';\n    const police = this.props.police;\n\n    return (\n      <div key={this.props.name} style={{ cursor: 'pointer' }}>\n        {this.displayLabel(label, name, positionShapeX, positionShapeY, police)}\n        {this.drawPoint(drawGraphicMarker, size, positionShapeX, positionShapeY)}\n      </div>\n    );\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { Coord4D, RegionClass } from 'Models/RegionClass';\nimport { Tooltip } from '@grafana/ui';\nimport { SimpleOptions, Metric } from 'types';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { PointClass } from 'Models/PointClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  id: string;\n  pointAPositionX: string;\n  pointAPositionY: string;\n  pointBPositionX: string;\n  pointBPositionY: string;\n  colorA: string;\n  colorB: string;\n  orientationLink: string;\n  label: string;\n  associatePointIn: string;\n  associatePointOut: string;\n  associateRegionIn: string;\n  associateRegionOut: string;\n  widthImage: number;\n  heightImage: number;\n  name: string;\n  refMainMetricA: string;\n  refMainMetricB: string;\n  valueMainMetricA: string;\n  valueMainMetricB: string;\n  textObject: TextObject;\n  traceBorder: boolean;\n  traceBack: boolean;\n  seuil: LowerLimitClass[];\n  labelAPositionX: string;\n  labelAPositionY: string;\n  labelBPositionX: string;\n  labelBPositionY: string;\n  tooltipPositionA: SelectableValue<any>;\n  tooltipPositionB: SelectableValue<any>;\n  zIndex: number;\n  pointCPositionX: string;\n  pointCPositionY: string;\n  isIncurved: SelectableValue<boolean>;\n  auxiliaryMetrics: Metric[];\n  auxiliaryMetricsB: Metric[];\n  valuesAuxiliaryMetrics: string[];\n  valuesAuxiliaryMetricsB: string[];\n  police: string;\n  sizePolice: string;\n  linkUrl: LinkURLClass;\n  size: string;\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  positionXADefault: string;\n  positionYADefault: string;\n  positionXBDefault: string;\n  positionYBDefault: string;\n  positionXCDefault: string;\n  positionYCDefault: string;\n}\n\ninterface State {}\n\nexport default class DrawOrientedLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * détermine la valeur de X pour les points A, B et C du lien en fonction des limites\n   * de l'initialSpace\n   * @param coordinateX\n   *\n   */\n  private defineLimitX(coordinateX: number) {\n    let result: number = coordinateX;\n    const xMin: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMax: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    if (coordinateX < xMin) {\n      result = xMin;\n    } else if (coordinateX > xMax) {\n      result = xMax;\n    }\n    return result;\n  }\n\n  /**\n   * détermine la valeur de Y pour les points A, B et C du lien en fonction des limites\n   * de l'initialSpace\n   * @param coordinateY\n   *\n   */\n  private defineLimitY(coordinateY: number) {\n    let result: number = coordinateY;\n    const yMin: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMax: number = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    if (coordinateY < yMin) {\n      result = yMin;\n    } else if (coordinateY > yMax) {\n      result = yMax;\n    }\n    return result;\n  }\n\n  // définit la bonne position X des points A, B et C composant le lien\n  // en fonction des valeurs de l'initialSpace (xMin, xMax, yMin, yMax)\n  private synchroLinkX(positionX: number, name?: string): number {\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const ratioX = positionX / this.props.widthImage;\n\n    // define value to display in input positionShapeX\n    const x = Math.round(xMin + widthInitialSpace * ratioX);\n\n    // saving data new positionShapeX\n    let newArrayLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayLink.forEach((link) => {\n      if (link.name === this.props.name) {\n        if (name === 'xA') {\n          link.pointAPositionX = x.toString();\n        } else if (name === 'xB') {\n          link.pointBPositionX = x.toString();\n        } else if (name === 'xC') {\n          link.pointCPositionX = x.toString();\n        }\n      }\n    });\n    this.props.options.arrayOrientedLinks = newArrayLink;\n\n    // define limit x in fonction of values xMin and xMax of initialSpace\n    const xLimited = this.defineLimitX(x);\n\n    // define display x\n    const result = ((xLimited - xMin) / widthInitialSpace) * this.props.widthImage;\n\n    // return result and center display of point in fonction of sizePoint and borderPoint\n    return result;\n  }\n\n  // définit la bonne position Y des points A, B et C composant le lien\n  // en fonction des valeurs de l'initialSpace (xMin, xMax, yMin, yMax)\n  private synchroLinkY(positionY: number, name?: string): number {\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const heightInitialSpace: number = yMax - yMin;\n    const ratioY = positionY / this.props.heightImage;\n\n    // define value to display in input positionShapeY\n    let y = Math.round(yMin + heightInitialSpace * ratioY);\n    // saving data new positionShapeY\n    let newArrayLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayLink.forEach((link) => {\n      if (link.name === this.props.name) {\n        if (name === 'yA') {\n          link.pointAPositionY = y.toString();\n        } else if (name === 'yB') {\n          link.pointBPositionY = y.toString();\n        } else if (name === 'yC') {\n          link.pointCPositionY = y.toString();\n        }\n      }\n    });\n    this.props.options.arrayOrientedLinks = newArrayLink;\n\n    // define limit y in fonction of values yMin and yMax of initialSpace\n    const yLimited = this.defineLimitY(y);\n\n    // define display y\n    const result = ((yMin + heightInitialSpace - yLimited) / heightInitialSpace) * this.props.heightImage;\n\n    return result;\n  }\n\n  private labelSynchroX = (whatLabel: string): number => {\n    let result = 0;\n    let labelMainMetric: HTMLElement | null = null;\n    if (whatLabel === 'A') {\n      labelMainMetric = document.getElementById('labelMainMetric' + this.props.id);\n    } else {\n      labelMainMetric = document.getElementById('labelMainMetricB' + this.props.id);\n    }\n    if (labelMainMetric?.offsetWidth) {\n      result = labelMainMetric?.offsetWidth / 2;\n    }\n    return result;\n  };\n\n  private labelSynchroY = (whatLabel: string): number => {\n    let result = 0;\n    let labelMainMetric: HTMLElement | null = null;\n    if (whatLabel === 'A') {\n      labelMainMetric = document.getElementById('labelMainMetric' + this.props.id);\n    } else {\n      labelMainMetric = document.getElementById('labelMainMetricB' + this.props.id);\n    }\n    if (labelMainMetric?.offsetHeight) {\n      result = labelMainMetric?.offsetHeight / 2;\n    }\n    return result;\n  };\n\n  /**\n   * to do\n   */\n  private defineParallelOrientedLinks = (): number[] => {\n    const arrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    const listParallelOrientedLinks: number[] = [];\n    listParallelOrientedLinks.push(parseInt(this.props.id, 10));\n    arrayOrientedLink.forEach((orientedLink) => {\n      if (this.props.name !== orientedLink.name) {\n        if (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '') {\n          if (this.props.associateRegionIn === orientedLink.regionIn || this.props.associateRegionIn === orientedLink.regionOut) {\n            if (this.props.associateRegionOut === orientedLink.regionIn || this.props.associateRegionOut === orientedLink.regionOut) {\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n          if (this.props.associatePointIn === orientedLink.pointIn || this.props.associatePointIn === orientedLink.pointOut) {\n            if (this.props.associatePointOut === orientedLink.pointIn || this.props.associatePointOut === orientedLink.pointOut) {\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n          if (this.props.associateRegionIn === orientedLink.regionIn || this.props.associateRegionIn === orientedLink.regionOut) {\n            if (this.props.associatePointOut === orientedLink.pointOut || this.props.associatePointOut === orientedLink.pointIn) {\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        } else if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n          if (this.props.associatePointIn === orientedLink.pointIn || this.props.associatePointIn === orientedLink.pointOut) {\n            if (this.props.associateRegionOut === orientedLink.regionOut || this.props.associateRegionOut === orientedLink.regionIn) {\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        }\n      }\n    });\n    const listParallelOrientedLinkSorted: number[] = listParallelOrientedLinks.sort((a, b) => a - b);\n    return listParallelOrientedLinkSorted;\n  };\n\n  /**\n   * to do\n   * @param region\n   */\n  private defineCoor4DRegion = (region: RegionClass): Coord4D => {\n    let coor4D: Coord4D = { xMin: '0', xMax: '0', yMin: '0', yMax: '0' };\n    let xMin = 0;\n    let xMax = 0;\n    let yMin = 0;\n    let yMax = 0;\n    if (region.idSVG !== '') {\n      // region SVG\n      const heightPanel: number = parseInt(this.props.options.baseMap.height, 10);\n      const widthPanel: number = parseInt(this.props.options.baseMap.width, 10);\n      const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n      const xMinInitialSpace: number = parseInt(initialSpace.xMin, 10);\n      const xMinPx: number = (xMinInitialSpace + 100) * (widthPanel / 200);\n      const xMaxInitialSpace: number = parseInt(initialSpace.xMax, 10);\n      const xMaxPx: number = (xMaxInitialSpace + 100) * (widthPanel / 200);\n      const widthInitialSpace: number = xMaxPx - xMinPx;\n      const yMinInitialSpace: number = parseInt(initialSpace.yMin, 10);\n      const yMinPx: number = (yMinInitialSpace + 100) * (heightPanel / 200);\n      const yMaxInitialSpace: number = parseInt(initialSpace.yMax, 10);\n      const yMaxPx: number = (yMaxInitialSpace + 100) * (heightPanel / 200);\n      const heightInitialSpace: number = yMaxPx - yMinPx;\n      let regionSVGHtml: any;\n      if (this.props.options.baseMap.isUploaded) {\n        regionSVGHtml = document.getElementById(region.idSVG);\n      } else {\n        regionSVGHtml = document.getElementById('oct' + region.idSVG);\n      }\n      let width = 0;\n      let height = 0;\n      let xMinSVG = 0;\n      let xMaxSVG = 0;\n      let yMaxSVG = 0;\n      let yMinSVG = 0;\n      if (regionSVGHtml) {\n        if (regionSVGHtml.localName === 'rect') {\n          width = parseInt(regionSVGHtml.attributes['width'].nodeValue, 10);\n          height = parseInt(regionSVGHtml.attributes['height'].nodeValue, 10);\n          xMinSVG = parseInt(regionSVGHtml.attributes['x'].nodeValue, 10);\n          xMaxSVG = xMinSVG + width;\n          yMaxSVG = parseInt(regionSVGHtml.attributes['y'].nodeValue, 10);\n          yMinSVG = yMaxSVG + height;\n        } else if (regionSVGHtml.localName === 'ellipse') {\n          const rX: number = parseInt(regionSVGHtml.attributes['rx'].nodeValue, 10);\n          const rY: number = parseInt(regionSVGHtml.attributes['ry'].nodeValue, 10);\n          xMinSVG = parseInt(regionSVGHtml.attributes['cx'].nodeValue, 10) - rX;\n          xMaxSVG = parseInt(regionSVGHtml.attributes['cx'].nodeValue, 10) + rX;\n          yMinSVG = parseInt(regionSVGHtml.attributes['cy'].nodeValue, 10) + rY;\n          yMaxSVG = parseInt(regionSVGHtml.attributes['cy'].nodeValue, 10) - rY;\n        } else if (regionSVGHtml.localName === 'path') {\n          const allValues: string = regionSVGHtml.attributes['d'].nodeValue;\n          const arrayAllValues: string[] = allValues.split(' ');\n          let iX = -2;\n          let xMin = 1000000;\n          let xMax = 0;\n          let iY = -1;\n          let yMin = 1000000;\n          let yMax = 0;\n          for (let i = 0; i < arrayAllValues.length; i++) {\n            let valueToCheck = parseInt(arrayAllValues[i], 10);\n            if (i === iX + 3) {\n              if (valueToCheck < xMin) {\n                xMin = valueToCheck;\n              }\n              if (valueToCheck > xMax) {\n                xMax = valueToCheck;\n              }\n              iX = i;\n            }\n            if (i === iY + 3) {\n              if (valueToCheck < yMin) {\n                yMin = valueToCheck;\n              }\n              if (valueToCheck > yMax) {\n                yMax = valueToCheck;\n              }\n              iY = i;\n            }\n          }\n          xMinSVG = xMin;\n          xMaxSVG = xMax;\n          yMinSVG = yMax;\n          yMaxSVG = yMin;\n        }\n      }\n      const xMinSVGCoor: number = Math.round((xMinSVG - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n      const xMaxSVGCoor: number = Math.round((xMaxSVG - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n      const yMinSVGCoor: number = Math.round((yMinSVG - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2 * -1;\n      const yMaxSVGCoor: number = Math.round((yMaxSVG - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2 * -1;\n      xMin = Math.round(xMinSVG);\n      xMax = Math.round(xMaxSVG);\n      yMin = Math.round(this.props.heightImage - yMinSVG);\n      yMax = Math.round(this.props.heightImage - yMaxSVG);\n\n      if (xMin < 0 && xMax < 0) {\n        xMin = xMaxSVGCoor;\n        xMax = xMinSVGCoor;\n      }\n      if (yMin < 0 && yMax < 0) {\n        yMin = yMaxSVGCoor;\n        yMax = yMinSVGCoor;\n      }\n    } else {\n      // region coordinate\n      xMin = parseInt(region.coordsDefault.xMin, 10);\n      xMax = parseInt(region.coordsDefault.xMax, 10);\n      yMin = parseInt(region.coordsDefault.yMin, 10);\n      yMax = parseInt(region.coordsDefault.yMax, 10);\n    }\n    coor4D = { xMin: xMin.toString(), xMax: xMax.toString(), yMin: yMin.toString(), yMax: yMax.toString() };\n    return coor4D;\n  };\n\n  private getPaddingPoint = (point: PointClass, idMultiLink: number): number => {\n    let result = 0;\n    const pointHtml = document.getElementById(point.name);\n    if (pointHtml) {\n      result = parseInt(pointHtml.style.padding.substring(-2), 10) + parseInt(this.props.size, 10) / 10;\n      if (idMultiLink === 2) {\n        result = result / 2;\n      }\n    }\n    return result;\n  };\n\n  // permet de définir le bon placement X des extrémités du lien :\n  // - selon si il y a un ou plusieurs liens entre deux extrémités\n  // - selon si l'extrémité A est un point, une région ou le panel\n  // - selon si l'extrémité B est un point, une région ou le panel\n  private definePositionX = (isIn: boolean, idMultiLink: number): number => {\n    let xResult = 0;\n    const arrayRegions = this.props.options.regionCoordinateSpace;\n    const arrayPoints = this.props.options.arrayPoints;\n    let xMinIn = 0;\n    let xMaxIn = 0;\n    let xMinOut = 0;\n    let xMaxOut = 0;\n    let yMinIn = 0;\n    let yMaxIn = 0;\n    let yMinOut = 0;\n    let yMaxOut = 0;\n    let xMidIn = 0;\n    let xMidOut = 0;\n    let yMidIn = 0;\n    let yMidOut = 0;\n    let paddingPoint = 0;\n\n    if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n      // pointIn + regionOut\n      //console.log('1');\n      arrayPoints.forEach((point) => {\n        paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n      // regionIn + pointOut\n      //console.log('2');\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n\n      arrayPoints.forEach((point) => {\n        paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associateRegionOut !== '') {\n      // vide + regionOut\n      //console.log('3');\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinIn = parseInt(this.props.positionXADefault, 10);\n      xMaxIn = parseInt(this.props.positionXADefault, 10);\n      yMinIn = parseInt(this.props.positionYADefault, 10);\n      yMaxIn = parseInt(this.props.positionYADefault, 10);\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      // regionIn + vide\n      //console.log('4');\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinOut = parseInt(this.props.positionXBDefault, 10);\n      xMaxOut = parseInt(this.props.positionXBDefault, 10);\n      yMinOut = parseInt(this.props.positionYBDefault, 10);\n      yMaxOut = parseInt(this.props.positionYBDefault, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      // pointIn + vide\n      //console.log('5');\n      arrayPoints.forEach((point) => {\n        paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinOut = parseInt(this.props.positionXBDefault, 10);\n      xMaxOut = parseInt(this.props.positionXBDefault, 10);\n      yMinOut = parseInt(this.props.positionYBDefault, 10);\n      yMaxOut = parseInt(this.props.positionYBDefault, 10);\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associatePointOut !== '') {\n      // vide + pointOut\n      //console.log('6');\n      arrayPoints.forEach((point) => {\n        paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinIn = parseInt(this.props.positionXADefault, 10);\n      xMaxIn = parseInt(this.props.positionXADefault, 10);\n      yMinIn = parseInt(this.props.positionYADefault, 10);\n      yMaxIn = parseInt(this.props.positionYADefault, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n      // pointIn + pointOut\n      //console.log('7');\n      arrayPoints.forEach((point) => {\n        paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n    } else {\n      //console.log('8');\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    }\n\n    xMidIn = (xMinIn + xMaxIn) / 2;\n    xMidOut = (xMinOut + xMaxOut) / 2;\n    yMidIn = (yMinIn + yMaxIn) / 2;\n    yMidOut = (yMinOut + yMaxOut) / 2;\n\n    const ratioXin = xMidIn / this.props.widthImage;\n    const ratioXout = xMidOut / this.props.widthImage;\n\n    if (isIn) {\n      if (idMultiLink === 0) {\n        if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x1');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x2');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x3');\n            xResult = xMidIn;\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x4');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x5');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x6');\n            xResult = xMidIn;\n          }\n        } else if (xMidIn === xMidOut) {\n          //console.log('x7');\n          xResult = xMidIn;\n        }\n      } else if (idMultiLink === 1) {\n        if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x8');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x9');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x10');\n            xResult = xMidIn;\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x11');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x12');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x13');\n            xResult = xMidIn;\n          }\n        } else if (xMidIn === xMidOut) {\n          //console.log('x14');\n          xResult = xMidIn;\n        }\n      } else if (idMultiLink === 2) {\n        if (this.props.associatePointIn !== '' && this.props.associateRegionIn === '') {\n          if (yMidIn === yMidOut) {\n            if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n              xResult = xMidIn;\n            } else if (xMidIn > xMidOut) {\n              if (xMinIn < 0 && xMaxIn < 0) {\n                xResult = xMaxIn;\n              } else {\n                xResult = xMinIn;\n              }\n            } else if (xMidIn < xMidOut) {\n              if (xMinIn < 0 && xMaxIn < 0) {\n                xResult = xMinIn;\n              } else {\n                xResult = xMaxIn;\n              }\n            } else if (xMidIn === xMidOut) {\n              xResult = xMinIn;\n            }\n          } else {\n            if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n              xResult = xMidIn;\n            } else if (xMidIn > xMidOut) {\n              if (ratioXin - ratioXout < 0.05) {\n                xResult = xMidIn;\n              } else if (ratioXin - ratioXout < 0.11) {\n                xResult = xMidIn + paddingPoint - parseInt(this.props.size, 10) / 2;\n              } else if (ratioXin - ratioXout < 0.37) {\n                xResult = xMidIn - paddingPoint / 2;\n              } else {\n                if (xMinIn < 0 && xMaxIn < 0) {\n                  xResult = xMaxIn;\n                } else {\n                  xResult = xMinIn;\n                }\n              }\n            } else if (xMidIn < xMidOut) {\n              if (ratioXout - ratioXin < 0.05) {\n                xResult = xMidIn;\n              } else if (ratioXout - ratioXin < 0.11) {\n                xResult = xMidIn - paddingPoint + parseInt(this.props.size, 10) / 2;\n              } else if (ratioXout - ratioXin < 0.37) {\n                xResult = xMidIn + paddingPoint / 2;\n              } else {\n                if (xMinIn < 0 && xMaxIn < 0) {\n                  xResult = xMinIn;\n                } else {\n                  xResult = xMaxIn;\n                }\n              }\n            } else if (xMidIn === xMidOut) {\n              xResult = xMidIn;\n            }\n          }\n        } else if (this.props.associatePointIn === '' && this.props.associateRegionIn !== '') {\n          if (yMidIn === yMidOut) {\n            if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n              xResult = xMidIn;\n            } else if (xMidIn > xMidOut) {\n              if (xMinIn < 0 && xMaxIn < 0) {\n                xResult = xMaxIn;\n              } else {\n                xResult = xMinIn;\n              }\n            } else if (xMidIn < xMidOut) {\n              if (xMinIn < 0 && xMaxIn < 0) {\n                xResult = xMinIn;\n              } else {\n                xResult = xMaxIn;\n              }\n            } else if (xMidIn === xMidOut) {\n              xResult = xMinIn;\n            }\n          } else {\n            if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n              xResult = xMidIn;\n            } else if (xMidIn > xMidOut) {\n              if (xMinIn < 0 && xMaxIn < 0) {\n                xResult = xMaxIn;\n              } else {\n                xResult = xMinIn;\n              }\n            } else if (xMidIn < xMidOut) {\n              if (xMinIn < 0 && xMaxIn < 0) {\n                xResult = xMinIn;\n              } else {\n                xResult = xMaxIn;\n              }\n            } else if (xMidIn === xMidOut) {\n              xResult = xMidIn;\n            }\n          }\n        }\n      }\n    } else {\n      if (idMultiLink === 0) {\n        if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x15');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x16');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x17');\n            xResult = xMidOut;\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x18');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x19');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x20');\n            xResult = xMidOut;\n          }\n        } else if (xMidIn === xMidOut) {\n          //console.log('x21');\n          xResult = xMidOut;\n        }\n      } else if (idMultiLink === 1) {\n        if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x22');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x23');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x24');\n            xResult = xMidOut;\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('x25');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('x26');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('x27');\n            xResult = xMidOut;\n          }\n        } else if (xMidIn === xMidOut) {\n          //console.log('x28');\n          xResult = xMidOut;\n        }\n      } else if (idMultiLink === 2) {\n        if (this.props.associatePointOut !== '' && this.props.associateRegionOut === '') {\n          if (yMidIn === yMidOut) {\n            if (xMidIn > xMidOut) {\n              if (xMinOut < 0 && xMaxOut < 0) {\n                xResult = xMinOut;\n              } else {\n                xResult = xMaxOut;\n              }\n            } else if (xMidIn < xMidOut) {\n              if (xMinOut < 0 && xMaxOut < 0) {\n                xResult = xMaxOut;\n              } else {\n                xResult = xMinOut;\n              }\n            } else if (xMidIn === xMidOut) {\n              xResult = xMinOut;\n            }\n          } else {\n            if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n              xResult = xMidOut;\n            } else if (xMidIn > xMidOut) {\n              if (ratioXin - ratioXout < 0.23) {\n                xResult = xMidOut;\n              } else {\n                if (xMinOut < 0 && xMaxOut < 0) {\n                  xResult = xMinOut;\n                } else {\n                  xResult = xMaxOut;\n                }\n              }\n            } else if (xMidIn < xMidOut) {\n              if (ratioXout - ratioXin < 0.23) {\n                xResult = xMidOut;\n              } else {\n                if (xMinOut < 0 && xMaxOut < 0) {\n                  xResult = xMaxOut;\n                } else {\n                  xResult = xMinOut;\n                }\n              }\n            } else if (xMidIn === xMidOut) {\n              xResult = xMidOut;\n            }\n          }\n        } else if (this.props.associatePointOut === '' && this.props.associateRegionOut !== '') {\n          if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n            xResult = xMidOut;\n          } else if (xMidIn > xMidOut) {\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            xResult = xMidOut;\n          }\n        }\n      }\n    }\n\n    let newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayOrientedLink.forEach((orientedLink) => {\n      if (orientedLink.name === this.props.name) {\n        if (isIn) {\n          orientedLink.pointAPositionX = xResult.toString();\n          orientedLink.pointAPositionXDefault = xResult.toString();\n        } else {\n          orientedLink.pointBPositionX = xResult.toString();\n          orientedLink.pointBPositionXDefault = xResult.toString();\n        }\n      }\n    });\n    this.props.options.arrayOrientedLinks = newArrayOrientedLink;\n\n    return xResult;\n  };\n\n  // permet de définir le bon placement Y des extrémités du lien :\n  // - selon si il y a un ou plusieurs liens entre deux extrémités\n  // - selon si l'extrémité A est un point, une région ou le panel\n  // - selon si l'extrémité B est un point, une région ou le panel\n  private definePositionY = (isIn: boolean, idMultiLink: number): number => {\n    let yResult = 0;\n    const arrayPoints = this.props.options.arrayPoints;\n    const arrayRegions = this.props.options.regionCoordinateSpace;\n    let xMinIn = 0;\n    let xMaxIn = 0;\n    let xMinOut = 0;\n    let xMaxOut = 0;\n    let yMinIn = 0;\n    let yMaxIn = 0;\n    let yMinOut = 0;\n    let yMaxOut = 0;\n    let xMidIn = 0;\n    let xMidOut = 0;\n    let yMidIn = 0;\n    let yMidOut = 0;\n\n    if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associateRegionOut !== '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinIn = parseInt(this.props.positionXADefault, 10);\n      xMaxIn = parseInt(this.props.positionXADefault, 10);\n      yMinIn = parseInt(this.props.positionYADefault, 10);\n      yMaxIn = parseInt(this.props.positionYADefault, 10);\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinOut = parseInt(this.props.positionXBDefault, 10);\n      xMaxOut = parseInt(this.props.positionXBDefault, 10);\n      yMinOut = parseInt(this.props.positionYBDefault, 10);\n      yMaxOut = parseInt(this.props.positionYBDefault, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinOut = parseInt(this.props.positionXBDefault, 10);\n      xMaxOut = parseInt(this.props.positionXBDefault, 10);\n      yMinOut = parseInt(this.props.positionYBDefault, 10);\n      yMaxOut = parseInt(this.props.positionYBDefault, 10);\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associatePointOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinIn = parseInt(this.props.positionXADefault, 10);\n      xMaxIn = parseInt(this.props.positionXADefault, 10);\n      yMinIn = parseInt(this.props.positionYADefault, 10);\n      yMaxIn = parseInt(this.props.positionYADefault, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionXDefault, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionXDefault, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionYDefault, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionYDefault, 10) - paddingPoint;\n          }\n        }\n      });\n    } else {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    }\n\n    xMidIn = (xMinIn + xMaxIn) / 2;\n    xMidOut = (xMinOut + xMaxOut) / 2;\n    yMidIn = (yMinIn + yMaxIn) / 2;\n    yMidOut = (yMinOut + yMaxOut) / 2;\n\n    if (isIn) {\n      if (idMultiLink === 0) {\n        if (yMidIn > yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y1');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y2');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y3');\n            yResult = yMidIn;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y4');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y5');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y6');\n            yResult = yMidIn;\n          }\n        } else if (yMidIn === yMidOut) {\n          //console.log('y7');\n          yResult = yMidIn;\n        }\n      } else if (idMultiLink === 1) {\n        if (yMidIn > yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y8');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y9');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y10');\n            yResult = yMidIn;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y11');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y12');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y13');\n            yResult = yMidIn;\n          }\n        } else if (yMidIn === yMidOut) {\n          //console.log('y14');\n          yResult = yMidIn;\n        }\n      } else if (idMultiLink === 2) {\n        if (this.props.associatePointIn !== '' && this.props.associateRegionIn === '') {\n          if (xMidIn === xMidOut) {\n            if (yMidIn > yMidOut) {\n              if (yMinIn < 0 && yMaxIn < 0) {\n                yResult = yMaxIn;\n              } else {\n                yResult = yMinIn;\n              }\n            } else if (yMidIn < yMidOut) {\n              if (yMinIn < 0 && yMaxIn < 0) {\n                yResult = yMinIn;\n              } else {\n                yResult = yMaxIn;\n              }\n            }\n          } else {\n            yResult = yMidIn;\n          }\n        } else if (this.props.associatePointIn === '' && this.props.associateRegionIn !== '') {\n          if (yMidIn > yMidOut) {\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            yResult = yMidIn;\n          }\n        }\n      }\n    } else {\n      // ce lien est le premier parmis deux ou trois liens\n      if (idMultiLink === 0) {\n        if (yMidIn > yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y15');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y16');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y17');\n            yResult = yMidOut;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y18');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y19');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y20');\n            yResult = yMidOut;\n          }\n        } else if (yMidIn === yMidOut) {\n          //console.log('y21');\n          yResult = yMidOut;\n        }\n        // ce lien est le deuxième parmis deux ou trois liens\n      } else if (idMultiLink === 1) {\n        if (yMidIn > yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y22');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y23');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y24');\n            yResult = yMidOut;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('y25');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('y26');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('y27');\n            yResult = yMidOut;\n          }\n        } else if (yMidIn === yMidOut) {\n          //console.log('y28');\n          yResult = yMidOut;\n        }\n        // le lien est seul ou au milieu de trois liens\n      } else if (idMultiLink === 2) {\n        // un point en sortie\n        if (this.props.associatePointOut !== '' && this.props.associateRegionOut === '') {\n          if (xMidIn === xMidOut) {\n            if (yMidIn > yMidOut) {\n              if (yMinOut < 0 && yMaxOut < 0) {\n                yResult = yMinOut;\n              } else {\n                yResult = yMaxOut;\n              }\n            } else if (yMidIn < yMidOut) {\n              if (yMinOut < 0 && yMaxOut < 0) {\n                yResult = yMaxOut;\n              } else {\n                yResult = yMinOut;\n              }\n            }\n          } else {\n            yResult = yMidOut;\n          }\n          // une région en sortie\n        } else if (this.props.associatePointOut === '' && this.props.associateRegionOut !== '') {\n          if (yMidIn > yMidOut) {\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            yResult = yMidOut;\n          }\n        }\n      }\n    }\n\n    let newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayOrientedLink.forEach((orientedLink) => {\n      if (orientedLink.name === this.props.name) {\n        if (isIn) {\n          orientedLink.pointAPositionY = yResult.toString();\n          orientedLink.pointAPositionYDefault = yResult.toString();\n        } else {\n          orientedLink.pointBPositionY = yResult.toString();\n          orientedLink.pointBPositionYDefault = yResult.toString();\n        }\n      }\n    });\n    this.props.options.arrayOrientedLinks = newArrayOrientedLink;\n\n    return yResult;\n  };\n\n  /**\n   * to do\n   */\n  private drawLink(xA0: number, yA0: number, xB0: number, yB0: number, xCByClick0: number, yCByClick0: number, orientationLink: string) {\n    const listParallelOrientedLinks: number[] = this.defineParallelOrientedLinks();\n    let xA = 0;\n    let yA = 0;\n    let xB = 0;\n    let yB = 0;\n    let xCByClick = 0;\n    let yCByClick = 0;\n\n    if (listParallelOrientedLinks.length > 1) {\n      let indexOrientedLink = 0;\n      listParallelOrientedLinks.forEach((index) => {\n        if (index === parseInt(this.props.id, 10)) {\n          if (indexOrientedLink === 0) {\n            //console.log(this.props.name);\n            //console.log(index);\n            //console.log(indexOrientedLink);\n            xA = this.synchroLinkX(this.definePositionX(true, 0));\n            yA = this.synchroLinkY(this.definePositionY(true, 0));\n            xB = this.synchroLinkX(this.definePositionX(false, 0));\n            yB = this.synchroLinkY(this.definePositionY(false, 0));\n            xCByClick = xCByClick0 || (xA + xB) / 2;\n            yCByClick = yCByClick0 || (yA + yB) / 2;\n          } else if (indexOrientedLink === 1) {\n            //console.log(this.props.name);\n            //console.log(index);\n            //console.log(indexOrientedLink);\n            xA = this.synchroLinkX(this.definePositionX(true, 1));\n            yA = this.synchroLinkY(this.definePositionY(true, 1));\n            xB = this.synchroLinkX(this.definePositionX(false, 1));\n            yB = this.synchroLinkY(this.definePositionY(false, 1));\n            xCByClick = xCByClick0 || (xA + xB) / 2;\n            yCByClick = yCByClick0 || (yA + yB) / 2;\n          } else if (indexOrientedLink === 2) {\n            //console.log(this.props.name);\n            //console.log(index);\n            //console.log(indexOrientedLink);\n            xA = this.synchroLinkX(this.definePositionX(true, 2));\n            yA = this.synchroLinkY(this.definePositionY(true, 2));\n            xB = this.synchroLinkX(this.definePositionX(false, 2));\n            yB = this.synchroLinkY(this.definePositionY(false, 2));\n            xCByClick = xCByClick0 || (xA + xB) / 2;\n            yCByClick = yCByClick0 || (yA + yB) / 2;\n          }\n        }\n        indexOrientedLink++;\n      });\n    } else {\n      if (\n        (this.props.associateRegionIn !== '' || this.props.associatePointIn !== '') &&\n        this.props.associateRegionOut === '' &&\n        this.props.associatePointOut === ''\n      ) {\n        xA = this.synchroLinkX(this.definePositionX(true, 2));\n        yA = this.synchroLinkY(this.definePositionY(true, 2));\n        xB = xB0;\n        yB = yB0;\n        xCByClick = xCByClick0 || (xA + xB) / 2;\n        yCByClick = yCByClick0 || (yA + yB) / 2;\n      } else if (\n        (this.props.associateRegionIn === '' || this.props.associatePointIn === '') &&\n        this.props.associateRegionOut !== '' &&\n        this.props.associatePointOut !== ''\n      ) {\n        xA = xA0;\n        yA = yA0;\n        xB = this.synchroLinkX(this.definePositionX(false, 2));\n        yB = this.synchroLinkY(this.definePositionY(false, 2));\n        xCByClick = xCByClick0 || (xA + xB) / 2;\n        yCByClick = yCByClick0 || (yA + yB) / 2;\n      } else if (\n        (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') ||\n        (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') ||\n        (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') ||\n        (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '')\n      ) {\n        xA = this.synchroLinkX(this.definePositionX(true, 2));\n        yA = this.synchroLinkY(this.definePositionY(true, 2));\n        xB = this.synchroLinkX(this.definePositionX(false, 2));\n        yB = this.synchroLinkY(this.definePositionY(false, 2));\n        xCByClick = xCByClick0 || (xA + xB) / 2;\n        yCByClick = yCByClick0 || (yA + yB) / 2;\n      } else {\n        xA = xA0;\n        yA = yA0;\n        xB = xB0;\n        yB = yB0;\n        xCByClick = xCByClick0;\n        yCByClick = yCByClick0;\n      }\n    }\n\n    let xC = 0;\n    let yC = 0;\n\n    if (this.props.isIncurved.value) {\n      xC = xCByClick;\n      yC = yCByClick;\n    } else {\n      xC = (xA + xB) / 2;\n      yC = (yA + yB) / 2;\n    }\n\n    const distanceAC: number = Math.sqrt((xA - xC) * (xA - xC) + (yA - yC) * (yA - yC));\n    const angleRadianAC: number = Math.atan2(yA - yC, xA - xC);\n    const angleDegreeAC: number = (angleRadianAC * 180) / Math.PI;\n    const xMidAC: number = (xA + xC) / 2;\n    const yMidAC: number = (yA + yC) / 2;\n    const xArrowAC: number = xMidAC - distanceAC / 2;\n    const yArrowAC: number = yMidAC;\n\n    const distanceBC: number = Math.sqrt((xB - xC) * (xB - xC) + (yB - yC) * (yB - yC));\n    const angleRadianBC: number = Math.atan2(yB - yC, xB - xC);\n    const angleDegreeBC: number = (angleRadianBC * 180) / Math.PI;\n    const xMidBC: number = (xB + xC) / 2;\n    const yMidBC: number = (yB + yC) / 2;\n    const xArrowBC: number = xMidBC - distanceBC / 2;\n    const yArrowBC: number = yMidBC;\n\n    const distanceAB: number = Math.sqrt((xA - xB) * (xA - xB) + (yA - yB) * (yA - yB));\n    const angleRadianAB: number = Math.atan2(yA - yB, xA - xB);\n    const angleDegreeAB: number = (angleRadianAB * 180) / Math.PI;\n    const xMidAB: number = (xA + xB) / 2;\n    const yMidAB: number = (yA + yB) / 2;\n    const xArrowAB: number = xMidAB - distanceAB / 2;\n    const yArrowAB: number = yMidAB;\n\n    const sizeArrowTriangle = 8;\n\n    const valueTooltipMonodirectional: JSX.Element | null = this.defineValueTooptip('monodirectional');\n    const valueTooltipBidirectionalA: JSX.Element | null = this.defineValueTooptip('bidirectional', 'A');\n    const valueTooltipBidirectionalB: JSX.Element | null = this.defineValueTooptip('bidirectional', 'B');\n    const linkUrlOrientedLink: string = this.props.linkUrl.followLink;\n    const inverseAxeY = -1;\n\n    if (orientationLink === 'double') {\n      let first: JSX.Element = <div></div>;\n      if (valueTooltipBidirectionalA) {\n        first = (\n          <Tooltip content={valueTooltipBidirectionalA} placement={this.props.tooltipPositionA.value}>\n            <div\n              id=\"linkA\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAC - sizeArrowTriangle / 2,\n                left: xArrowAC,\n                transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                width: distanceAC,\n              }}\n            >\n              <div\n                id=\"arrow1\"\n                style={{\n                  display: 'flex',\n                  alignContent: 'stretch',\n                }}\n              >\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineSizeLink() + 'px solid transparent',\n                    borderRight: this.defineSizeLink() + 'px solid transparent',\n                    borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('A'),\n                    transform: 'rotate(270deg)',\n                  }}\n                ></div>\n                <div\n                  style={{\n                    border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                    backgroundColor: this.defineBackColor('A'),\n                    width: distanceAC,\n                    height: this.defineSizeLink() + 'px',\n                  }}\n                ></div>\n              </div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        first = (\n          <div\n            id=\"linkA\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowAC - sizeArrowTriangle / 2,\n              left: xArrowAC,\n              transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n              width: distanceAC,\n            }}\n          >\n            <div\n              id=\"arrow1\"\n              style={{\n                display: 'flex',\n                alignContent: 'stretch',\n              }}\n            >\n              <div\n                className=\"arrowTriangle\"\n                style={{\n                  width: '0',\n                  height: '0',\n                  borderLeft: this.defineSizeLink() + 'px solid transparent',\n                  borderRight: this.defineSizeLink() + 'px solid transparent',\n                  borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('A'),\n                  transform: 'rotate(270deg)',\n                }}\n              ></div>\n              <div\n                style={{\n                  border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                  backgroundColor: this.defineBackColor('A'),\n                  width: distanceAC,\n                  height: this.defineSizeLink() + 'px',\n                }}\n              ></div>\n            </div>\n          </div>\n        );\n      }\n      let second: JSX.Element = <div></div>;\n      if (valueTooltipBidirectionalB) {\n        second = (\n          <Tooltip content={valueTooltipBidirectionalB} placement={this.props.tooltipPositionB.value}>\n            <div\n              id=\"linkB\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowBC - sizeArrowTriangle / 2,\n                left: xArrowBC,\n                transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                width: distanceBC,\n              }}\n            >\n              <div\n                id=\"arrow2\"\n                style={{\n                  display: 'flex',\n                  alignContent: 'stretch',\n                }}\n              >\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineSizeLink() + 'px solid transparent',\n                    borderRight: this.defineSizeLink() + 'px solid transparent',\n                    borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('B'),\n                    transform: 'rotate(270deg)',\n                  }}\n                ></div>\n                <div\n                  style={{\n                    border: this.defineBorderSize('B') + 'px solid ' + this.defineBorderColor('B'),\n                    backgroundColor: this.defineBackColor('B'),\n                    width: distanceBC,\n                    height: this.defineSizeLink() + 'px',\n                  }}\n                ></div>\n              </div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        second = (\n          <div\n            id=\"linkB\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowBC - sizeArrowTriangle / 2,\n              left: xArrowBC,\n              transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n              width: distanceBC,\n            }}\n          >\n            <div\n              id=\"arrow2\"\n              style={{\n                display: 'flex',\n                alignContent: 'stretch',\n              }}\n            >\n              <div\n                className=\"arrowTriangle\"\n                style={{\n                  width: '0',\n                  height: '0',\n                  borderLeft: this.defineSizeLink() + 'px solid transparent',\n                  borderRight: this.defineSizeLink() + 'px solid transparent',\n                  borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('B'),\n                  transform: 'rotate(270deg)',\n                }}\n              ></div>\n              <div\n                style={{\n                  border: this.defineBorderSize('B') + 'px solid ' + this.defineBorderColor('B'),\n                  backgroundColor: this.defineBackColor('B'),\n                  width: distanceBC,\n                  height: this.defineSizeLink() + 'px',\n                }}\n              ></div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <a href={linkUrlOrientedLink} id=\"link\">\n          <div>\n            {first}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidAC + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xMidAC + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                fontSize: this.props.sizePolice,\n                //border: '1px solid black',\n                backgroundColor: 'white',\n                color: this.defineColorTextLabel(),\n                padding: '0',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </div>\n          <div>\n            {second}\n            <div\n              id={'labelMainMetricB' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidBC + parseInt(this.props.labelBPositionY, 10) * inverseAxeY - this.labelSynchroY('B'),\n                left: xMidBC + parseInt(this.props.labelBPositionX, 10) - this.labelSynchroX('B'),\n                fontSize: this.props.sizePolice,\n                //border: '1px solid black',\n                backgroundColor: 'white',\n                color: this.defineColorTextLabel(),\n                padding: '0',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricB)}\n            </div>\n          </div>\n        </a>\n      );\n    } else if (orientationLink === 'AB') {\n      let first: JSX.Element = <div></div>;\n      if (valueTooltipMonodirectional) {\n        first = (\n          <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n            <div\n              id=\"partA\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAC - sizeArrowTriangle / 2,\n                left: xArrowAC,\n                transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                width: distanceAC,\n              }}\n            >\n              <div\n                style={{\n                  padding: parseInt(this.defineBorderSize('A'), 10) / 2 + 'px',\n                  border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                  backgroundColor: this.defineBackColor('A'),\n                  width: distanceAC,\n                  height: this.defineSizeLink() + 'px',\n                }}\n              ></div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        first = (\n          <div\n            id=\"partA\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowAC - sizeArrowTriangle / 2,\n              left: xArrowAC,\n              transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n              width: distanceAC,\n            }}\n          >\n            <div\n              style={{\n                padding: parseInt(this.defineBorderSize('A'), 10) / 2 + 'px',\n                border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                backgroundColor: this.defineBackColor('A'),\n                width: distanceAC,\n                height: this.defineSizeLink() + 'px',\n              }}\n            ></div>\n          </div>\n        );\n      }\n      let second: JSX.Element = <div></div>;\n      if (valueTooltipMonodirectional) {\n        second = (\n          <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n            <div\n              id=\"partB\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowBC - sizeArrowTriangle / 2,\n                left: xArrowBC,\n                transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                width: distanceBC,\n              }}\n            >\n              <div\n                id=\"arrow2\"\n                style={{\n                  display: 'flex',\n                }}\n              >\n                <div\n                  style={{\n                    border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                    backgroundColor: this.defineBackColor('A'),\n                    width: distanceBC,\n                    height: this.defineSizeLink() + 'px',\n                  }}\n                ></div>\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineSizeLink() + 'px solid transparent',\n                    borderRight: this.defineSizeLink() + 'px solid transparent',\n                    borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('A'),\n                    transform: 'rotate(90deg)',\n                  }}\n                ></div>\n              </div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        second = (\n          <div\n            id=\"partB\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowBC - sizeArrowTriangle / 2,\n              left: xArrowBC,\n              transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n              width: distanceBC,\n              height: this.defineSizeLink() + 'px',\n            }}\n          >\n            <div\n              id=\"arrow2\"\n              style={{\n                display: 'flex',\n              }}\n            >\n              <div\n                style={{\n                  border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                  backgroundColor: this.defineBackColor('A'),\n                  width: distanceBC,\n                  height: this.defineSizeLink() + 'px',\n                }}\n              ></div>\n              <div\n                className=\"arrowTriangle\"\n                style={{\n                  width: '0',\n                  height: '0',\n                  borderLeft: this.defineSizeLink() + 'px solid transparent',\n                  borderRight: this.defineSizeLink() + 'px solid transparent',\n                  borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('A'),\n                  transform: 'rotate(90deg)',\n                }}\n              ></div>\n            </div>\n          </div>\n        );\n      }\n      if (this.props.isIncurved.value) {\n        return (\n          <a href={linkUrlOrientedLink}>\n            {first}\n            {second}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yC + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xC + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      } else {\n        let first: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          first = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"link\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowAB - sizeArrowTriangle / 2,\n                  left: xArrowAB,\n                  transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                  width: distanceAB,\n                }}\n              >\n                <div\n                  id=\"arrow1\"\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <div\n                    className=\"arrowTriangle\"\n                    style={{\n                      //position: 'absolute',\n                      width: '0',\n                      height: '0',\n                      borderLeft: this.defineSizeLink() + 'px solid transparent',\n                      borderRight: this.defineSizeLink() + 'px solid transparent',\n                      borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('A'),\n                      transform: 'rotate(270deg)',\n                    }}\n                  ></div>\n                  <div\n                    style={{\n                      border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                      backgroundColor: this.defineBackColor('A'),\n                      width: distanceAB,\n                      height: this.defineSizeLink() + 'px',\n                    }}\n                  ></div>\n                </div>\n              </div>\n            </Tooltip>\n          );\n        } else {\n          first = (\n            <div\n              id=\"link\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAB - sizeArrowTriangle / 2,\n                left: xArrowAB,\n                transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                width: distanceAB,\n              }}\n            >\n              <div\n                id=\"arrow1\"\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n              >\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineSizeLink() + 'px solid transparent',\n                    borderRight: this.defineSizeLink() + 'px solid transparent',\n                    borderBottom: this.defineSizeLink() + 'px solid ' + this.defineBackColor('A'),\n                    transform: 'rotate(270deg)',\n                  }}\n                ></div>\n                <div\n                  style={{\n                    border: this.defineBorderSize('A') + 'px solid ' + this.defineBorderColor('A'),\n                    backgroundColor: this.defineBackColor('A'),\n                    width: distanceAB,\n                    height: this.defineSizeLink() + 'px',\n                  }}\n                ></div>\n              </div>\n            </div>\n          );\n        }\n        return (\n          <a href={linkUrlOrientedLink} target=\"_blank\">\n            {first}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidAB + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xMidAB + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      }\n    } else if (orientationLink === 'no') {\n      if (this.props.isIncurved.value) {\n        let first: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          first = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"partA\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowAC,\n                  left: xArrowAC,\n                  transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                  height: this.defineBorderSize('A') + 'px',\n                  width: distanceAC,\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineBorderColor('A'),\n                  backgroundColor: this.defineBackColor('A'),\n                }}\n              ></div>\n            </Tooltip>\n          );\n        } else {\n          first = (\n            <div\n              id=\"partA\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAC,\n                left: xArrowAC,\n                transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                height: this.defineBorderSize('A') + 'px',\n                width: distanceAC,\n                border: this.defineBorderSize('A') + ' solid ' + this.defineBorderColor('A'),\n                backgroundColor: this.defineBackColor('A'),\n              }}\n            ></div>\n          );\n        }\n        let second: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          second = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"partB\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowBC,\n                  left: xArrowBC,\n                  transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                  height: this.defineBorderSize('A') + 'px',\n                  width: distanceBC,\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineBorderColor('A'),\n                  backgroundColor: this.defineBackColor('A'),\n                }}\n              ></div>\n            </Tooltip>\n          );\n        } else {\n          second = (\n            <div\n              id=\"partB\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowBC,\n                left: xArrowBC,\n                transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                height: this.defineBorderSize('A') + 'px',\n                width: distanceBC,\n                border: this.defineBorderSize('A') + ' solid ' + this.defineBorderColor('A'),\n                backgroundColor: this.defineBackColor('A'),\n              }}\n            ></div>\n          );\n        }\n        return (\n          <a href={linkUrlOrientedLink}>\n            {first}\n            {second}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yC + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xC + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      } else {\n        let first: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          first = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"link\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowAB,\n                  left: xArrowAB,\n                  transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                  width: distanceAB,\n                  height: this.defineBorderSize('A') + 'px',\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineBorderColor('A'),\n                  backgroundColor: this.defineBackColor('A'),\n                }}\n              ></div>\n            </Tooltip>\n          );\n        } else {\n          first = (\n            <div\n              id=\"link\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAB,\n                left: xArrowAB,\n                transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                width: distanceAB,\n                height: this.defineBorderSize('A') + 'px',\n                border: this.defineBorderSize('A') + ' solid ' + this.defineBorderColor('A'),\n                backgroundColor: this.defineBackColor('A'),\n              }}\n            ></div>\n          );\n        }\n        return (\n          <a href={linkUrlOrientedLink} target=\"_blank\">\n            {first}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidAB + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xMidAB + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n\n  private defineBackColor(link: string) {\n    let colorBack = '';\n    let seuil: LowerLimitClass[] = this.props.seuil;\n    let valueMainMetric = 0;\n\n    if (link === 'A') {\n      valueMainMetric = parseInt(this.props.valueMainMetricA, 10);\n    } else {\n      valueMainMetric = parseInt(this.props.valueMainMetricB, 10);\n    }\n\n    if (this.props.traceBack) {\n      if (seuil.length > 0) {\n        if (seuil[0].backColor !== '') {\n          colorBack = seuil[0].backColor;\n        } else {\n          colorBack = 'black';\n        }\n      } else {\n        colorBack = 'black';\n      }\n    } else {\n      colorBack = 'black';\n    }\n\n    let index = 0;\n    seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBack = level.backColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBack = level.backColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBack = level.backColor;\n      }\n\n      index++;\n    });\n\n    return colorBack;\n  }\n\n  private defineBorderColor(link: string) {\n    let colorBorder = '';\n    let seuil: LowerLimitClass[] = this.props.seuil;\n    let valueMainMetric = 0;\n\n    if (link === 'A') {\n      valueMainMetric = parseInt(this.props.valueMainMetricA, 10);\n    } else {\n      valueMainMetric = parseInt(this.props.valueMainMetricB, 10);\n    }\n\n    if (this.props.traceBorder) {\n      if (seuil.length > 0) {\n        if (seuil[0].borderColor !== '') {\n          colorBorder = seuil[0].borderColor;\n        } else {\n          colorBorder = 'black';\n        }\n      } else {\n        colorBorder = 'black';\n      }\n    } else {\n      colorBorder = 'black';\n    }\n\n    let index = 0;\n    seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBorder = level.borderColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBorder = level.borderColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBorder = level.borderColor;\n      }\n\n      index++;\n    });\n    return colorBorder;\n  }\n\n  defineBorderSize(link: string) {\n    let sizeBorder = '';\n    let seuil: LowerLimitClass[] = this.props.seuil;\n    let valueMainMetric = 0;\n\n    if (link === 'A') {\n      valueMainMetric = parseInt(this.props.valueMainMetricA, 10);\n    } else {\n      valueMainMetric = parseInt(this.props.valueMainMetricB, 10);\n    }\n\n    if (this.props.traceBorder) {\n      if (seuil.length > 0) {\n        if (seuil[0].sizeBorder !== '') {\n          sizeBorder = seuil[0].sizeBorder;\n        } else {\n          sizeBorder = '0';\n        }\n      } else {\n        sizeBorder = '0';\n      }\n    } else {\n      sizeBorder = '0';\n    }\n\n    let index = 0;\n\n    seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        sizeBorder = level.sizeBorder;\n      }\n      index++;\n    });\n    return sizeBorder;\n  }\n\n  private defineMainMetric = (mainMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.valueGenerateObjectText.unit;\n    const decimal: string = this.props.textObject.valueGenerateObjectText.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(mainMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = mainMetric + ' ' + unit;\n    }\n    return result;\n  };\n\n  private defineAuxMetric = (auxMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.generateAuxiliaryElement.unit;\n    const decimal: string = this.props.textObject.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(auxMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = auxMetric + ' ' + unit;\n    }\n    return result;\n  };\n\n  private defineTextObject = (mainMetric: string): JSX.Element => {\n    let htmlTextObject: JSX.Element[] = [];\n    let htmlMainMetric: JSX.Element[] = [];\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n\n    const styleLabel = {\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n      textAlign: 'center',\n      margin: 0,\n      padding: '0 5px',\n    } as CSSProperties;\n\n    const styleMainMetric = {\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n      margin: 0,\n      padding: 0,\n      whiteSpace: 'nowrap',\n    } as CSSProperties;\n\n    if (!dislayTextObjectInTooltip) {\n      htmlTextObject.push(\n        <p key={'contentTextObject1' + this.props.name} style={styleLabel}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n    if (displayMainMetric) {\n      if (!displayMainMetricInTooltip) {\n        if (legendMainMetric) {\n          htmlMainMetric.push(\n            <p key={'contentTextObject2' + this.props.name} style={styleMainMetric}>\n              {legendMainMetric}\n            </p>\n          );\n        }\n        // Condition Display NaN none Oriented Link\n        htmlMainMetric.push(\n          <p key={'contentTextObject3' + this.props.name} style={styleMainMetric}>\n            {!isNaN(parseFloat(this.defineMainMetric(mainMetric))) && this.defineMainMetric(mainMetric)}\n          </p>\n        );\n      }\n    }\n\n    let styleMainDiv = {\n      backgroundColor: backColoTextObject,\n      border: '1px solid black',\n    } as CSSProperties;\n\n    if (!displayMainMetric || (displayMainMetric && displayMainMetricInTooltip)) {\n      styleMainDiv = {\n        backgroundColor: backColoTextObject,\n      };\n    }\n\n    return (\n      <div style={styleMainDiv}>\n        {htmlTextObject}\n        <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>{htmlMainMetric}</div>\n      </div>\n    );\n  };\n\n  private defineHtmlLinkTooltip = (): JSX.Element => {\n    let result: JSX.Element = <div></div>;\n    if (this.props.linkUrl.hoveringTooltipText !== '') {\n      result = <a href={this.props.linkUrl.hoveringTooltipLink}>{this.props.linkUrl.hoveringTooltipText}</a>;\n    }\n    return result;\n  };\n\n  private defineValueTooptip = (typeLink: string, link?: string): JSX.Element | null => {\n    const contentTooltip: JSX.Element[] = [];\n    const contentTooltipMainMetric: JSX.Element[] = [];\n    const contentTooltipAuxMetric: JSX.Element[] = [];\n    const valueMainMetricA = this.props.valueMainMetricA;\n    const valueMainMetricB = this.props.valueMainMetricB;\n    const refMainMetricA = this.props.refMainMetricA;\n    const refMainMetricB = this.props.refMainMetricB;\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n    const displayAuxMetricInTooltip: boolean = this.props.textObject.generateAuxiliaryElement.displayObjectInTooltip;\n    const addTextColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorTextElement;\n    const addBackColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorBackElement;\n    const textColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorTextElement;\n    const backColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorBackElement;\n    const legendAuxMetric: string = this.props.textObject.generateAuxiliaryElement.legendElement;\n\n    const styleMainTitle = {\n      fontFamily: this.props.police,\n      fontSize: '11px',\n      marginBottom: '0px',\n      textAlign: 'center',\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleMainMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleAuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitle2MainMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitle2AuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentMainMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentAuxMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    if (dislayTextObjectInTooltip) {\n      contentTooltip.push(\n        <p key={'contentTooltip1' + this.props.name} style={styleMainTitle}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n\n    if (displayMainMetric) {\n      if (displayMainMetricInTooltip) {\n        if (legendMainMetric) {\n          contentTooltipMainMetric.push(<p style={styleTitleMainMetric}>{legendMainMetric}</p>);\n        }\n        contentTooltipMainMetric.push(\n          <p key={'contentTooltip1' + this.props.name} style={styleTitleMainMetric}>\n            Main Metric\n          </p>\n        );\n\n        if (typeLink === 'bidirectional') {\n          if (link === 'A') {\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip2' + this.props.name} style={styleTitle2MainMetric}>\n                + Link A\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip3' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Reference : {refMainMetricA}\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip4' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Value : {this.defineMainMetric(valueMainMetricA)}\n              </p>\n            );\n          } else {\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip5' + this.props.name} style={styleTitle2MainMetric}>\n                + Link B\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip6' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Reference : {refMainMetricB}\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip7' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Value : {this.defineMainMetric(valueMainMetricB)}\n              </p>\n            );\n          }\n        } else if (typeLink === 'monodirectional') {\n          contentTooltipMainMetric.push(\n            <p key={'contentTooltip8' + this.props.name} style={styleContentMainMetrics}>\n              {' '}\n              - Reference : {refMainMetricA}\n            </p>\n          );\n          contentTooltipMainMetric.push(\n            <p key={'contentTooltip9' + this.props.name} style={styleContentMainMetrics}>\n              {' '}\n              - Value : {this.defineMainMetric(valueMainMetricA)}\n            </p>\n          );\n        }\n      }\n    }\n\n    if (displayAuxMetricInTooltip) {\n      if (legendAuxMetric) {\n        contentTooltipAuxMetric.push(<p style={styleTitleAuxMetric}>{legendAuxMetric}</p>);\n      }\n      if (typeLink === 'bidirectional') {\n        if (link === 'A') {\n          if (this.props.auxiliaryMetrics.length > 0) {\n            contentTooltipAuxMetric.push(\n              <p key={'contentTooltip10' + this.props.name} style={styleTitleAuxMetric}>\n                Auxiliary Metric\n              </p>\n            );\n            let index = 1;\n            this.props.auxiliaryMetrics.forEach((metric) => {\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip11' + this.props.name} style={styleTitle2AuxMetric}>\n                  + Metric {index}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip12' + this.props.name} style={styleContentAuxMetrics}>\n                  - Reference : {metric.refId}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip13' + this.props.name} style={styleContentAuxMetrics}>\n                  - Value :{' '}\n                  {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1]))) &&\n                    this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1])}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip14' + this.props.name} style={styleContentAuxMetrics}>\n                  - Key : {metric.key}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip15' + this.props.name} style={styleContentAuxMetrics}>\n                  - KeyValue : {metric.keyValue}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip16' + this.props.name} style={styleContentAuxMetrics}>\n                  - Type : {metric.manageValue}\n                </p>\n              );\n              index++;\n            });\n          }\n        } else {\n          if (this.props.auxiliaryMetricsB.length > 0) {\n            contentTooltipAuxMetric.push(\n              <p key={'contentTooltip17' + this.props.name} style={styleTitleAuxMetric}>\n                Auxiliary Metric\n              </p>\n            );\n            let index = 1;\n            this.props.auxiliaryMetricsB.forEach((metricB) => {\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip18' + this.props.name} style={styleTitle2AuxMetric}>\n                  + Metric {index}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip19' + this.props.name} style={styleContentAuxMetrics}>\n                  - Reference : {metricB.refId}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip20' + this.props.name} style={styleContentAuxMetrics}>\n                  - Value :{' '}\n                  {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetricsB[index - 1]))) &&\n                    this.defineAuxMetric(this.props.valuesAuxiliaryMetricsB[index - 1])}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip21' + this.props.name} style={styleContentAuxMetrics}>\n                  - Key : {metricB.key}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip22' + this.props.name} style={styleContentAuxMetrics}>\n                  - KeyValue : {metricB.keyValue}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip23' + this.props.name} style={styleContentAuxMetrics}>\n                  - Type : {metricB.manageValue}\n                </p>\n              );\n              index++;\n            });\n          }\n        }\n      } else if (typeLink === 'monodirectional') {\n        if (this.props.auxiliaryMetrics.length > 0) {\n          contentTooltipAuxMetric.push(\n            <p key={'contentTooltip24' + this.props.name} style={styleTitleAuxMetric}>\n              Auxiliary Metric\n            </p>\n          );\n          let index = 1;\n          this.props.auxiliaryMetrics.forEach((metric) => {\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip25' + this.props.name} style={styleTitle2AuxMetric}>\n                + Metric {index}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip26' + this.props.name} style={styleContentAuxMetrics}>\n                - Reference : {metric.refId}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip27' + this.props.name} style={styleContentAuxMetrics}>\n                - Value :{' '}\n                {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1]))) &&\n                  this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1])}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip28' + this.props.name} style={styleContentAuxMetrics}>\n                - Key : {metric.key}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip29' + this.props.name} style={styleContentAuxMetrics}>\n                - KeyValue : {metric.keyValue}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip30' + this.props.name} style={styleContentAuxMetrics}>\n                - Type : {metric.manageValue}\n              </p>\n            );\n            index++;\n          });\n        }\n      }\n    }\n    if (contentTooltip.length === 0 && contentTooltipAuxMetric.length === 0 && contentTooltipMainMetric.length === 0) {\n      return null;\n    }\n    return (\n      <div style={{ border: '1px solid black', padding: 0 }}>\n        {contentTooltip}\n        <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>\n          {contentTooltipMainMetric}\n        </div>\n        <div style={{ backgroundColor: addBackColorAuxMetric ? backColorAuxMetric : backColoTextObject, padding: '0 5px' }}>\n          {contentTooltipAuxMetric}\n        </div>\n        {this.defineHtmlLinkTooltip()}\n      </div>\n    );\n  };\n\n  private defineTextDecoration = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (): any => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineColorTextLabel = () => {\n    let result = '';\n    if (this.props.textObject.colorText) {\n      result = this.props.textObject.colorText;\n    } else {\n      result = 'black';\n    }\n    return result;\n  };\n\n  private defineSizeLink = (): string => {\n    let result = '';\n    if (this.props.size) {\n      const size: string = this.props.size || '';\n      result = size;\n    } else {\n      result = '2';\n    }\n    return result;\n  };\n\n  render() {\n    const xCoordinateA: number = this.synchroLinkX(parseInt(this.props.positionXADefault, 10), 'xA');\n    const yCoordinateA: number = this.synchroLinkY(parseInt(this.props.positionYADefault, 10), 'yA');\n    const xCoordinateB: number = this.synchroLinkX(parseInt(this.props.positionXBDefault, 10), 'xB');\n    const yCoordinateB: number = this.synchroLinkY(parseInt(this.props.positionYBDefault, 10), 'yB');\n    const xCoordinateC: number = this.synchroLinkX(parseInt(this.props.positionXCDefault, 10) || 0, 'xC');\n    const yCoordinateC: number = this.synchroLinkY(parseInt(this.props.positionYCDefault, 10) || 0, 'yC');\n    const orientationLink: string = this.props.orientationLink;\n\n    return <div>{this.drawLink(xCoordinateA, yCoordinateA, xCoordinateB, yCoordinateB, xCoordinateC, yCoordinateC, orientationLink)}</div>;\n  }\n}\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { RegionClass } from 'Models/RegionClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { PointClass } from 'Models/PointClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { Button } from '@grafana/ui';\n\ninterface Legend {\n  hiddenLegend: boolean;\n  x: number;\n  y: number;\n}\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  // legend: Legend;\n  /** save data */\n  callBack: (event: any) => void;\n  callBackClose: () => void;\n}\n\ninterface State {\n  finalHTML: JSX.Element;\n  legend: Legend;\n}\n\n/**\n * def\n */\nclass LegendComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      finalHTML: <div></div>,\n      legend: this.props.options.legend,\n    };\n  }\n\n  /** async state */\n  setStateAsyncFinalHTML = (state: {\n    /** mew value */\n    finalHTML: JSX.Element;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** fill lowerlimit in JSX.Element */\n  fillLowerLimit = (lowerLimit: LowerLimitClass[], name: string): JSX.Element[] => {\n    const allLimit: JSX.Element[] = [];\n    let i = 0;\n    const max: number = lowerLimit.length - 1;\n\n    for (const lower of lowerLimit) {\n      allLimit.push(\n        <div key={name + 'LowerLimit' + i} className=\"LegendMatt\">\n          <span\n            style={{\n              padding: '5px',\n              // margin: '10px',\n              width: '130px',\n              //width: '3.5rem',\n              //borderRadius: '39%',\n              backgroundColor: lower.backColor,\n              border: lower.sizeBorder + 'px solid ' + lower.borderColor,\n              listStyleType: 'none',\n              display: 'inline-block',\n              textAlign: 'center',\n            }}\n          >\n            {lowerLimit.length > 1 && (\n              <span\n                style={{\n                  //display: 'inline-block',\n                  //verticalAlign: 'middle',\n                  //marginBottom: '1.25rem',\n                  fontSize: '10px',\n                  //fontWeight: 'bold',\n                }}\n              >\n                {i === 0 ? '-∞' : lower.lowerLimitMin} - {i === max ? '+∞' : lower.lowerLimitMax}\n              </span>\n            )}\n          </span>\n        </div>\n      );\n      ++i;\n    }\n    return allLimit;\n  };\n\n  /** get all lower limit for region */\n  fillRegion = () => {\n    const allRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    const rendu: JSX.Element[] = [];\n    for (const line of allRegion) {\n      const allLimit: JSX.Element[] = this.fillLowerLimit(line.lowerLimit, 'region');\n      const ownElement: JSX.Element = (\n        <div key={line.id + 'DisplayLegendRegion'}>\n          {line.label}\n          {allLimit}\n        </div>\n      );\n      rendu.push(ownElement);\n    }\n    return rendu;\n  };\n\n  closeLegend = (event: any) => {\n    this.props.callBackClose();\n    // const close = document.getElementById('iconclose');\n    // close?.addEventListener('click', () => {\n    //   console.log('goodzone');\n\n    //   const disapear = document.getElementById('L');\n    //   const appear = document.getElementById('legnd');\n    //   if (disapear) {\n    //     disapear.style.visibility = 'hidden';\n    //   }\n    //   appear?.addEventListener('click', () => {\n    //     if (disapear) {\n    //       console.log('dam');\n    //       disapear.style.visibility = 'visible';\n    //     }\n    //   });\n    // });\n  };\n\n  /** get all limit for point */\n  fillPoint = () => {\n    const allPoint: PointClass[] = this.props.options.arrayPoints;\n    const rendu: JSX.Element[] = [];\n\n    for (const line of allPoint) {\n      const allLimit: JSX.Element[] = this.fillLowerLimit(line.lowerLimit, 'point');\n      const name: string = line.label || line.name;\n      const ownElement: JSX.Element = (\n        <div key={name + 'DisplayLegendPoint'}>\n          {name}\n          {allLimit}\n        </div>\n      );\n      rendu.push(ownElement);\n    }\n    return rendu;\n  };\n\n  /** get all limit for orientedLink */\n  fillLink = () => {\n    const allLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    const rendu: JSX.Element[] = [];\n\n    for (const line of allLinks) {\n      const allLimit: JSX.Element[] = this.fillLowerLimit(line.lowerLimit, 'link');\n      const name: string = line.label || line.name;\n      const ownElement: JSX.Element = (\n        <div key={name + 'DisplayLegendLink'}>\n          {name}\n          {allLimit}\n        </div>\n      );\n      rendu.push(ownElement);\n    }\n    return rendu;\n  };\n\n  /** generate legend */\n  renduState = async () => {\n    const value: JSX.Element = (\n      <div\n        key={'contentLegend'}\n        style={{\n          position: 'relative',\n          left: this.state.legend.x,\n          top: this.state.legend.y,\n          maxWidth: '100%',\n          zIndex: 'auto',\n        }}\n        hidden={this.state.legend.hiddenLegend}\n      >\n        <article\n          id=\"L\"\n          style={{\n            width: '200px',\n            position: 'absolute',\n            overflowY: 'scroll',\n            margin: '0',\n            height: '240px',\n            backgroundColor: '#FFF',\n            color: '#000',\n            border: '4px solid #299c46',\n            borderRadius: '4px',\n            // scrollbarColor: '#09090b #212124',\n            scrollbarColor: '#299c46',\n            scrollbarWidth: 'thin',\n            zIndex: 9999,\n            resize: 'both',\n          }}\n        >\n          <div key={'legendTitle'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n            <h5 style={{ width: '100%', fontSize: '20px', display: 'flex', padding: '10px' }}>\n              Legend\n              <Button onClick={this.closeLegend} style={{ marginLeft: 'auto' }} id=\"iconclose\">\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </Button>\n            </h5>\n            {/* <p style={{ color: '#d8d9da', fontSize: '15px', marginLeft: '14px', fontWeight: 'bold' }}>Region</p>\n            <p style={{ color: '#d8d9da', fontSize: '11px', marginLeft: '17px' }}>Label</p> */}\n\n            {/* <p style={{ fontSize: '15px', marginLeft: '14px', fontWeight: 'bold' }}>Region</p> */}\n            <div key={'legendTitleRegion'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n              <p style={{ fontSize: '15px', padding: '10px 0 10px 14px', fontWeight: 'bold', color: 'white' }}>Region</p>\n            </div>\n          </div>\n          <div key=\"regionLegend\" style={{ paddingLeft: '5px', lineHeight: '1.5' }}>\n            {this.fillRegion()}\n          </div>\n          <div key={'legendTitlePoint'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n            <p style={{ fontSize: '15px', padding: '10px 0 10px 14px', fontWeight: 'bold', color: 'white' }}>Point</p>\n          </div>\n          <div key=\"pointLegend\" style={{ paddingLeft: '5px', lineHeight: '1.5' }}>\n            {this.fillPoint()}\n          </div>\n          <div key={'legendTitleLink'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n            <p style={{ fontSize: '15px', padding: '10px 0 10px 14px', fontWeight: 'bold', color: 'white' }}>Oriented Link</p>\n          </div>\n          <div key=\"linkLegend\" style={{ paddingLeft: '5px' }}>\n            {this.fillLink()}\n          </div>\n        </article>\n      </div>\n    );\n    await this.setStateAsyncFinalHTML({\n      finalHTML: value,\n    });\n  };\n\n  setStateLegendAsync = (state: { legend: Legend }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update when legend is edited */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps !== this.props || prevState.legend.hiddenLegend !== this.props.options.legend.hiddenLegend) {\n      await this.setStateLegendAsync({ legend: this.props.options.legend });\n      this.renduState();\n    }\n  };\n\n  /** fill state value when component is mounted */\n  componentDidMount = () => {\n    this.renduState();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    // rip testMoi\n    return <div key={'contentHtmlLegend'}>{this.state.finalHTML}</div>;\n  }\n}\nexport default LegendComponent;\n","import React, { PureComponent } from 'react';\nimport { SimpleOptions, Background, Metric } from 'types';\n\nimport { PanelProps, SelectableValue } from '@grafana/data';\nimport { CustomScrollbar, Modal, Button } from '@grafana/ui';\n\nimport { PointClass } from 'Models/PointClass';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\n\nimport { reqMetricPoint, reqMetricOrientedLink, reqMetricAuxOrientedLink, reqMetricAuxPoint, reqMetricAuxRegion } from 'Functions/fetchMetrics';\nimport { getResultQuery } from 'Functions/getResultQuery';\n\nimport AddCoordinate from 'components/CoordinateSpace/addCoordinate';\nimport DrawRectangle from './components/Draw/drawRectangle';\nimport DrawPoint from './components/Draw/drawPoint';\nimport DrawOrientedLink from './components/Draw/drawOrientedLink';\nimport LegendComponant from './components/legend';\n\nimport DrawRectangleExtend from 'components/Draw/drawRectangleExtend';\nimport { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\nimport { Style } from 'components/Parametrage/styleComponent';\n\ninterface Props extends PanelProps<SimpleOptions> {}\n\ninterface DataTooltipRegionSVG {\n  idSVG: string;\n  x: string;\n  y: string;\n}\n\ninterface Legend {\n  hiddenLegend: boolean;\n  x: number;\n  y: number;\n}\n\ninterface State {\n  // isUpdate: boolean;\n  // sizePanel: number;\n  valueButton: string;\n  /**\n   * manage button\n   * [0] -> addNode\n   * [1] -> addLink\n   * [2] -> positionLegend\n   * [3] -> addPoint\n   * [4] -> addIncurvedLink\n   */\n  buttonManage: boolean[];\n  numberClickDiv: number;\n  allActionButton: JSX.Element;\n  // valueLegend: JSX.Element;\n  // seuil: LowerLimitClass[];\n  nbClickButton: boolean;\n  legend: Legend;\n  // img: JSX.Element;\n  svg: string;\n  // loading: boolean;\n  // url: string;\n  displayRegion: JSX.Element;\n  idSVG: string;\n  tooltip: JSX.Element;\n  // check if button Add Oriented Link is active\n  buttonAddLinkIsActive: boolean;\n  // check if button Add Incurved Oriented Link is active\n  buttonAddIncurvedLinkIsActive: boolean;\n\n  dataTooltipSVG: DataTooltipRegionSVG;\n\n  hiddenLegend: boolean;\n\n  // value of image in Display to the initialisation\n  currentImage: string;\n}\n\n/**\n * Affichage\n */\nexport class SimplePanel extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      valueButton: '',\n      buttonManage: [false, false, false, false, false],\n      numberClickDiv: 0,\n      allActionButton: <div></div>,\n      nbClickButton: false,\n      legend: { hiddenLegend: true, x: 0, y: 0 },\n      svg: '',\n      displayRegion: <div></div>,\n      tooltip: <div>salut</div>,\n      idSVG: '',\n      buttonAddLinkIsActive: false,\n      buttonAddIncurvedLinkIsActive: false,\n      dataTooltipSVG: { idSVG: '', x: '0', y: '0' },\n      hiddenLegend: false,\n      currentImage: '',\n    };\n  }\n\n  /**\n   * Display limit (coordinateSpaceInitial)\n   * @returns JSX.Element\n   */\n  defineLimit = (): JSX.Element => {\n    const { coordinateSpaceInitial } = this.props.options;\n    let jsxItems: JSX.Element = <div></div>;\n    if (this.props.options.baseMap.image === '' && !this.props.options.baseMap.modeSVG) {\n      jsxItems = (\n        <DrawRectangle\n          key=\"limitCoor\"\n          color=\"orange\"\n          coordinateInitial={coordinateSpaceInitial}\n          id=\"initialSpace\"\n          onOptionsChange={this.props.onOptionsChange}\n          options={this.props.options}\n          data={this.props.data}\n          buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n          buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n        />\n      );\n    }\n    return jsxItems;\n  };\n\n  /**\n   * to do\n   */\n  getCoordinatesToDrawPointWithClick = (event: any) => {\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    let positionX = 0;\n    let positionY = 0;\n    const paddingMarginLeftSimplePanel = 24;\n    const clickX = event.nativeEvent.clientX - paddingMarginLeftSimplePanel;\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n    const heightBackground: number = parseInt(this.props.options.baseMap.height, 10);\n\n    positionX = Math.round(clickX);\n    positionY = Math.round(heightBackground - event.nativeEvent.layerY);\n\n    if (\n      event.nativeEvent.target.id === 'initialSpace' ||\n      event.nativeEvent.target.id === 'mainPanel' ||\n      event.nativeEvent.target.id === 'Intent' ||\n      event.nativeEvent.target.id === 'oct' + this.props.options.baseMap.idSVG ||\n      event.nativeEvent.target.id === this.props.options.baseMap.idSVG\n    ) {\n      this.createPointToClick(positionX, positionY, widthInitialSpace, heightInitialSpace);\n    }\n  };\n\n  defineIdPoint = (): number => {\n    let id = 1;\n    if (this.props.options.arrayPoints.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayPoints[this.props.options.arrayPoints.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  /**\n   * to do\n   */\n  createPointToClick = (x: number, y: number, widthInitialSpace: number, heightInitialSpace: number) => {\n    const id: number = this.defineIdPoint();\n    const initTextObject: TextObject = new TextObject(\n      '',\n      false,\n      'white',\n      'black',\n      { bold: false, italic: false, underline: false },\n      true,\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: false,\n        addColorTextElement: false,\n        colorTextElement: 'white',\n        addColorBackElement: false,\n        colorBackElement: 'black',\n      },\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: true,\n        addColorTextElement: true,\n        colorTextElement: 'white',\n        addColorBackElement: true,\n        colorBackElement: 'black',\n      }\n    );\n    const linkUrl: LinkURLClass = new LinkURLClass('', '', '');\n    const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n    const newPoint: PointClass = new PointClass(\n      id,\n      linkUrl,\n      [],\n      [],\n      '',\n      initTextObject,\n      {\n        key: '',\n        unit: '',\n        format: '',\n        keyValue: '',\n        refId: '',\n        manageValue: 'avg',\n      },\n      [],\n      false,\n      false,\n      false,\n      positionParameter,\n      'point' + id.toString(),\n      '',\n      { label: 'Yes', value: 'true' },\n      { label: 'Circle', value: 'circle' },\n      '12',\n      { label: 'Medium', value: 'medium' },\n      '0',\n      x.toString(),\n      y.toString(),\n      'black',\n      [],\n      [],\n      widthInitialSpace.toString(),\n      heightInitialSpace.toString(),\n      x.toString(),\n      y.toString()\n    );\n\n    const newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.push(newPoint);\n\n    this.props.onOptionsChange({\n      ...this.props.options,\n      indexPoint: id,\n      arrayPoints: newArrayPoint,\n    });\n\n    this.props.options.newPoint = true;\n  };\n\n  /**\n   * to do\n   */\n  displayPoint() {\n    const mapItems: JSX.Element[] = [];\n    let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.forEach((line: PointClass) => {\n      // console.log(line.name);\n      // console.log(line);\n      const valueMainMetric = this.getValuesMainMetricPoint(line).toString();\n      this.updatePositionOrientedLink(line);\n      const valuesAuxiliaryMetrics: string[] = this.getValuesAuxiliaryMetricsPoint(line);\n      const item: JSX.Element = (\n        <DrawPoint\n          key={'point' + line.id.toString()}\n          drawGraphicMarker={line.drawGraphicMarker}\n          shape={line.shape}\n          size={line.sizeWidth}\n          positionShapeX={line.positionShapeX}\n          positionShapeY={line.positionShapeY}\n          label={line.label}\n          widthImage={parseInt(this.props.options.baseMap.width, 10)}\n          heightImage={parseInt(this.props.options.baseMap.height, 10)}\n          police={this.props.options.display.police}\n          sizePolice={this.props.options.display.size}\n          color={line.color}\n          idPoint={'point' + line.id.toString()}\n          name={line.name}\n          options={this.props.options}\n          onOptionsChange={this.props.onOptionsChange}\n          data={this.props.data}\n          textObject={line.textObj}\n          seuil={line.lowerLimit}\n          valueMainMetric={valueMainMetric}\n          refMainMetric={line.mainMetric.refId || ''}\n          associateOrientedLinkIn={line.associateOrientedLinksIn}\n          associateOrientedLinkOut={line.associateOrientedLinksOut}\n          labelPositionX={line.positionParameter.labelAPositionX}\n          labelPositionY={line.positionParameter.labelAPositionY}\n          tooltipPosition={line.positionParameter.tooltipPositionA}\n          auxiliaryMetrics={line.metrics}\n          valuesAuxiliaryMetrics={valuesAuxiliaryMetrics}\n          linkUrl={line.linkURL}\n          buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n          buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n          widthInitialSpaceDefault={line.widthInitialSpaceDefault}\n          heightInitialSpaceDefault={line.heightInitialSpaceDefault}\n          positionXDefault={line.positionXDefault}\n          positionYDefault={line.positionYDefault}\n        />\n      );\n      mapItems.push(item);\n    });\n    return <div>{mapItems}</div>;\n  }\n\n  private updatePositionOrientedLink = (point: PointClass) => {\n    const arrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLink) {\n      for (const associateOrientedLinkIn of point.associateOrientedLinksIn) {\n        if (associateOrientedLinkIn.name === orientedLink.name) {\n          orientedLink.pointAPositionX = point.positionShapeX;\n          orientedLink.pointAPositionY = point.positionShapeY;\n        }\n      }\n      for (const associateOrientedLinkOut of point.associateOrientedLinksOut) {\n        if (associateOrientedLinkOut.name === orientedLink.name) {\n          orientedLink.pointBPositionX = point.positionShapeX;\n          orientedLink.pointBPositionY = point.positionShapeY;\n        }\n      }\n    }\n  };\n\n  /**\n   * to do\n   */\n  addAssociateOrientedLinkToPoint = (namePointIn: string, namePointOut: string, indexOrientedLinkAssociate: number) => {\n    let index = 0;\n    this.props.options.arrayPoints.forEach((point: PointClass) => {\n      const name: string = point.label || point.name;\n      if (namePointIn === name) {\n        this.props.options.arrayOrientedLinks.forEach((orientedLink: OrientedLinkClass) => {\n          if (orientedLink.id === indexOrientedLinkAssociate) {\n            this.props.options.arrayPoints[index].associateOrientedLinksIn.push({ label: orientedLink.label, name: orientedLink.name });\n          }\n        });\n      } else if (namePointOut === name) {\n        this.props.options.arrayOrientedLinks.forEach((orientedLink: OrientedLinkClass) => {\n          if (orientedLink.id === indexOrientedLinkAssociate) {\n            this.props.options.arrayPoints[index].associateOrientedLinksOut.push({ label: orientedLink.label, name: orientedLink.name });\n          }\n        });\n      }\n      index++;\n    });\n  };\n\n  /** update AssociateOrientedLinkIn of point for tootip  */\n  private updateAssociateOrientedLinkInToPoint = () => {\n    let indexPoint = 0;\n    this.props.options.arrayPoints.forEach((point) => {\n      let newAssociateLinkIn: any[] = [];\n      const namePoint: string = point.label || point.name;\n      this.props.options.arrayOrientedLinks.forEach((link) => {\n        if (link.pointIn === namePoint) {\n          newAssociateLinkIn.push({ label: link.label, name: link.name });\n        }\n      });\n      this.props.options.arrayPoints[indexPoint].associateOrientedLinksIn = newAssociateLinkIn;\n      indexPoint++;\n    });\n  };\n\n  /** update AssociateOrientedLinkOut of point for tootip  */\n  private updateAssociateOrientedLinkOutToPoint = () => {\n    let indexPoint = 0;\n    this.props.options.arrayPoints.forEach((point) => {\n      let newAssociateLinkIn: any[] = [];\n      const namePoint: string = point.label || point.name;\n      this.props.options.arrayOrientedLinks.forEach((link) => {\n        if (link.pointOut === namePoint) {\n          newAssociateLinkIn.push({ label: link.label, name: link.name });\n        }\n      });\n      this.props.options.arrayPoints[indexPoint].associateOrientedLinksOut = newAssociateLinkIn;\n      indexPoint++;\n    });\n  };\n\n  /**\n   * to do\n   */\n  resetCoordinatesToDrawLinkWithClick = () => {\n    this.props.options.coordinatesToDrawLinkWithClick[1].labelPoint = '';\n    this.props.options.coordinatesToDrawLinkWithClick[1].point = {};\n    this.props.options.coordinatesToDrawLinkWithClick[1].labelRegion = '';\n    this.props.options.coordinatesToDrawLinkWithClick[1].region = {};\n    this.props.options.coordinatesToDrawLinkWithClick[2].labelPoint = '';\n    this.props.options.coordinatesToDrawLinkWithClick[2].point = {};\n    this.props.options.coordinatesToDrawLinkWithClick[2].labelRegion = '';\n    this.props.options.coordinatesToDrawLinkWithClick[2].region = {};\n  };\n\n  /** get coordinate when use click in panel */\n  getCoordinatesToDrawOrientedLinkWithClick = (event: any) => {\n    const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n    const objectIn: any = coordinates[1];\n    const objectOut: any = coordinates[2];\n    const pointC: any = coordinates[3];\n    const heightBackground: number = parseInt(this.props.options.baseMap.height, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n    const paddingMarginLeftSimplePanel = 24;\n    const clickX = event.nativeEvent.clientX - paddingMarginLeftSimplePanel;\n    let positionX = 0;\n    let positionY = 0;\n\n    positionX = Math.round(clickX);\n    positionY = Math.round(heightBackground - event.nativeEvent.layerY);\n\n    if (\n      event.nativeEvent.target.id === 'initialSpace' ||\n      event.nativeEvent.target.id === 'Intent' ||\n      event.nativeEvent.target.id === 'mainPanel' ||\n      event.nativeEvent.target.id === 'oct' + this.props.options.baseMap.idSVG ||\n      event.nativeEvent.target.id === this.props.options.baseMap.idSVG\n    ) {\n      if (coordinates[0].id === 0) {\n        objectIn.x = positionX;\n        objectIn.xDefault = positionX;\n        objectIn.y = positionY;\n        objectIn.yDefault = positionY;\n        coordinates[0].id++;\n      } else if (coordinates[0].id === 1) {\n        objectOut.x = positionX;\n        objectOut.xDefault = positionX;\n        objectOut.y = positionY;\n        objectOut.yDefault = positionY;\n        pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n        pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n        coordinates[0].id = 0;\n        this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n        this.resetCoordinatesToDrawLinkWithClick();\n      }\n      // console.log('click');\n      // console.log(objectIn);\n    } else if (event.nativeEvent.target.id.startsWith('point')) {\n      const id: number = parseInt(event.nativeEvent.target.id.charAt(5) + event.nativeEvent.target.id.charAt(6), 10);\n      const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n\n      arrayPoint.forEach((point: PointClass) => {\n        if (point.id === id) {\n          const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n          const name: string = point.label || point.name;\n\n          if (coordinates[0].id === 0) {\n            objectIn.x = point.positionShapeX;\n            objectIn.xDefault = point.positionXDefault;\n            objectIn.y = point.positionShapeY;\n            objectIn.yDefault = point.positionYDefault;\n            objectIn.labelPoint = name;\n            objectIn.point = point;\n            coordinates[0].id++;\n          } else if (coordinates[0].id === 1) {\n            objectOut.x = point.positionShapeX;\n            objectOut.xDefault = point.positionXDefault;\n            objectOut.y = point.positionShapeY;\n            objectOut.yDefault = point.positionYDefault;\n            objectOut.labelPoint = name;\n            objectOut.point = point;\n            pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n            pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n            coordinates[0].id = 0;\n            this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n            this.resetCoordinatesToDrawLinkWithClick();\n          }\n        }\n      });\n    } else {\n      const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n      arrayRegion.forEach((region: RegionClass) => {\n        const xMin: number = parseInt(region.coords.xMin, 10);\n        const xMax: number = parseInt(region.coords.xMax, 10);\n        const yMin: number = parseInt(region.coords.yMin, 10);\n        const yMax: number = parseInt(region.coords.yMax, 10);\n        const xMinDefault: number = parseInt(region.coordsDefault.xMin, 10);\n        const xMaxDefault: number = parseInt(region.coordsDefault.xMax, 10);\n        const yMinDefault: number = parseInt(region.coordsDefault.yMin, 10);\n        const yMaxDefault: number = parseInt(region.coordsDefault.yMax, 10);\n\n        if (event.nativeEvent.target.id.startsWith('region')) {\n          const id: number = parseInt(event.nativeEvent.target.id.charAt(6) + event.nativeEvent.target.id.charAt(7), 10);\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            const positionXdefault = (xMinDefault + xMaxDefault) / 2;\n            const positionYdefault = (yMaxDefault + yMinDefault) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.xDefault = positionXdefault;\n              objectIn.y = positionY;\n              objectIn.yDefault = positionYdefault;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.xDefault = positionXdefault;\n              objectOut.y = positionY;\n              objectOut.yDefault = positionYdefault;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n              pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else if (\n          (event.nativeEvent.target.id !== 'oct' + this.props.options.baseMap.idSVG && event.nativeEvent.target.id.startsWith('oct')) ||\n          (event.nativeEvent.target.id !== this.props.options.baseMap.idSVG &&\n            (event.nativeEvent.target.id.startsWith('path') ||\n              event.nativeEvent.target.id.startsWith('rect') ||\n              event.nativeEvent.target.id.startsWith('ellipse')))\n        ) {\n          // console.log('4');\n          let id = '';\n          if (this.props.options.baseMap.isUploaded) {\n            id = event.nativeEvent.target.id;\n          } else {\n            id = event.nativeEvent.target.id.substr(3);\n          }\n          if (id === region.idSVG) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = 0;\n            positionY = 0;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.xDefault = positionX;\n              objectIn.y = positionY;\n              objectIn.yDefault = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.xDefault = positionX;\n              objectOut.y = positionY;\n              objectOut.yDefault = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n              pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else {\n          const id: number = parseInt(event.nativeEvent.target.offsetParent.id.charAt(6) + event.nativeEvent.target.offsetParent.id.charAt(7), 10);\n\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n              pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        }\n      });\n    }\n  };\n\n  getCoordinatesToDrawIncurvedOrientedLinkWithClick = (event: any) => {\n    const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n    const objectIn: any = coordinates[1];\n    const objectOut: any = coordinates[2];\n    const pointC: any = coordinates[3];\n    const heightBackground: number = parseInt(this.props.options.baseMap.height, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n\n    const paddingMarginLeftSimplePanel = 24;\n    const clickX = event.nativeEvent.clientX - paddingMarginLeftSimplePanel;\n    let positionX = 0;\n    let positionY = 0;\n\n    positionX = Math.round(clickX);\n    positionY = Math.round(heightBackground - event.nativeEvent.layerY);\n\n    if (\n      event.nativeEvent.target.id === 'mainPanel' ||\n      event.nativeEvent.target.id === 'initialSpace' ||\n      event.nativeEvent.target.id === 'Intent' ||\n      event.nativeEvent.target.id === 'oct' + this.props.options.baseMap.idSVG ||\n      event.nativeEvent.target.id === this.props.options.baseMap.idSVG\n    ) {\n      if (coordinates[0].id === 0) {\n        objectIn.x = positionX;\n        objectIn.y = positionY;\n        coordinates[0].id++;\n      } else if (coordinates[0].id === 1) {\n        objectOut.x = positionX;\n        objectOut.y = positionY;\n        coordinates[0].id++;\n      } else if (coordinates[0].id === 2) {\n        pointC.x = positionX;\n        pointC.y = positionY;\n        coordinates[0].id = 0;\n        this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n        this.resetCoordinatesToDrawLinkWithClick();\n      }\n    } else if (event.nativeEvent.target.id.startsWith('point')) {\n      const id: number = parseInt(event.nativeEvent.target.id.charAt(5) + event.nativeEvent.target.id.charAt(6), 10);\n      const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n\n      arrayPoint.forEach((point: PointClass) => {\n        if (point.id === id) {\n          const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n          const name: string = point.label || point.name;\n\n          if (coordinates[0].id === 0) {\n            objectIn.x = point.positionShapeX;\n            objectIn.y = point.positionShapeY;\n            objectIn.labelPoint = name;\n            objectIn.point = point;\n            coordinates[0].id++;\n          } else if (coordinates[0].id === 1) {\n            objectOut.x = point.positionShapeX;\n            objectOut.y = point.positionShapeY;\n            objectOut.labelPoint = name;\n            objectOut.point = point;\n            coordinates[0].id++;\n          } else if (coordinates[0].id === 2) {\n            pointC.x = point.positionShapeX;\n            pointC.y = point.positionShapeY;\n            coordinates[0].id = 0;\n            this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n            this.resetCoordinatesToDrawLinkWithClick();\n          }\n        }\n      });\n    } else {\n      const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n\n      arrayRegion.forEach((region: RegionClass) => {\n        const xMin: number = parseInt(region.coords.xMin, 10);\n        const xMax: number = parseInt(region.coords.xMax, 10);\n        const yMin: number = parseInt(region.coords.yMin, 10);\n        const yMax: number = parseInt(region.coords.yMax, 10);\n\n        if (event.nativeEvent.target.id.startsWith('region')) {\n          const id: number = parseInt(event.nativeEvent.target.id.charAt(6) + event.nativeEvent.target.id.charAt(7), 10);\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 2) {\n              pointC.x = positionX;\n              pointC.y = positionY;\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else if (\n          (event.nativeEvent.target.id !== 'oct' + this.props.options.baseMap.idSVG && event.nativeEvent.target.id.startsWith('oct')) ||\n          (event.nativeEvent.target.id !== this.props.options.baseMap.idSVG &&\n            (event.nativeEvent.target.id.startsWith('path') ||\n              event.nativeEvent.target.id.startsWith('rect') ||\n              event.nativeEvent.target.id.startsWith('ellipse')))\n        ) {\n          let id = '';\n          if (this.props.options.baseMap.isUploaded) {\n            id = event.nativeEvent.target.id;\n          } else {\n            id = event.nativeEvent.target.id.substr(3);\n          }\n          if (id === region.idSVG) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = 0;\n            positionY = 0;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 2) {\n              pointC.x = positionX;\n              pointC.y = positionY;\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else {\n          const id: number = parseInt(event.nativeEvent.target.offsetParent.id.charAt(6) + event.nativeEvent.target.offsetParent.id.charAt(7), 10);\n\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 2) {\n              pointC.x = positionX;\n              pointC.y = positionY;\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * to do\n   */\n  defineIdOrientedLink = (): number => {\n    let id = 1;\n    if (this.props.options.arrayOrientedLinks.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayOrientedLinks[this.props.options.arrayOrientedLinks.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  /**\n   * to do\n   */\n  createOrientedLinkToClick = (isIncurved: SelectableValue<boolean>, widthInitialSpace: string, heightInitialSpace: string) => {\n    const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n    const id: number = this.defineIdOrientedLink();\n    const name: string = 'orientedLink' + id.toString();\n    const zIndex: number = this.props.options.zIndexOrientedLink + 1;\n    const pointA: any = coordinates[1];\n    const pointB: any = coordinates[2];\n    const pointC: any = coordinates[3];\n    const initTextObject: TextObject = new TextObject(\n      '',\n      false,\n      'white',\n      'black',\n      { bold: false, italic: false, underline: false },\n      true,\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: false,\n        addColorTextElement: false,\n        colorTextElement: 'white',\n        addColorBackElement: false,\n        colorBackElement: 'black',\n      },\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: true,\n        addColorTextElement: true,\n        colorTextElement: 'white',\n        addColorBackElement: true,\n        colorBackElement: 'black',\n      }\n    );\n    const linkUrl: LinkURLClass = new LinkURLClass('', '', '');\n    const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n\n    const newOrientedLink: OrientedLinkClass = new OrientedLinkClass(\n      id,\n      linkUrl,\n      [],\n      [],\n      '',\n      initTextObject,\n      {\n        key: '',\n        unit: '',\n        format: '',\n        keyValue: '',\n        refId: '',\n        manageValue: 'avg',\n      },\n      [],\n      false,\n      false,\n      false,\n      positionParameter,\n      name,\n      { label: 'Monodirectional', value: 'AB' },\n      '9',\n      pointA.x.toString(),\n      pointA.y.toString(),\n      '#5794F2',\n      pointB.x.toString(),\n      pointB.y.toString(),\n      '#E54658',\n      '',\n      '',\n      pointA.labelPoint,\n      pointB.labelPoint,\n      pointA.labelRegion,\n      pointB.labelRegion,\n      zIndex,\n      pointC.x,\n      pointC.y,\n      isIncurved,\n      {\n        key: '',\n        unit: '',\n        format: '',\n        keyValue: '',\n        refId: '',\n        manageValue: 'avg',\n      },\n      [],\n      widthInitialSpace,\n      heightInitialSpace,\n      pointA.xDefault.toString(),\n      pointA.yDefault.toString(),\n      pointB.xDefault.toString(),\n      pointB.yDefault.toString(),\n      pointC.x,\n      pointC.y\n    );\n\n    const newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayOrientedLink.push(newOrientedLink);\n\n    this.props.onOptionsChange({\n      ...this.props.options,\n      arrayOrientedLinks: newArrayOrientedLink,\n      indexOrientedLink: id,\n      zIndexOrientedLink: zIndex,\n      newOrientedLink: true,\n    });\n\n    this.props.options.arrayOrientedLinks = newArrayOrientedLink;\n    this.props.options.indexOrientedLink = id;\n    this.props.options.zIndexOrientedLink = zIndex;\n    this.props.options.newOrientedLink = true;\n\n    this.addAssociateOrientedLinkToPoint(pointA.labelPoint || '', pointB.labelPoint || '', newOrientedLink.id);\n  };\n\n  private defineValueX = (orientedLink: OrientedLinkClass, defaultPosition: boolean, isIn: boolean): string => {\n    let result = '';\n    if (isIn) {\n      if (orientedLink.pointIn !== '') {\n        const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n        arrayPoint.forEach((point) => {\n          if (point.name === orientedLink.pointIn || point.label === orientedLink.pointIn) {\n            if (defaultPosition) {\n              result = point.positionXDefault;\n            } else {\n              result = point.positionShapeX;\n            }\n          }\n        });\n      } else if (orientedLink.regionIn !== '') {\n        const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n        arrayRegion.forEach((region) => {\n          if (region.label === orientedLink.regionIn) {\n            if (defaultPosition) {\n              result = (parseInt(region.coords.xMax, 10) - parseInt(region.coords.xMin, 10)).toString();\n            } else {\n              result = (parseInt(region.coordsDefault.xMax, 10) - parseInt(region.coordsDefault.xMin, 10)).toString();\n            }\n          }\n        });\n      } else {\n        if (defaultPosition) {\n          result = orientedLink.pointAPositionXDefault;\n        } else {\n          result = orientedLink.pointAPositionX;\n        }\n      }\n    } else {\n      if (orientedLink.pointOut !== '') {\n        const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n        arrayPoint.forEach((point) => {\n          if (point.name === orientedLink.pointOut || point.label === orientedLink.pointOut) {\n            if (defaultPosition) {\n              result = point.positionXDefault;\n            } else {\n              result = point.positionShapeX;\n            }\n          }\n        });\n      } else if (orientedLink.regionOut !== '') {\n        const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n        arrayRegion.forEach((region) => {\n          if (region.label === orientedLink.regionOut) {\n            if (defaultPosition) {\n              result = (parseInt(region.coords.xMax, 10) - parseInt(region.coords.xMin, 10)).toString();\n            } else {\n              result = (parseInt(region.coordsDefault.xMax, 10) - parseInt(region.coordsDefault.xMin, 10)).toString();\n            }\n          }\n        });\n      } else {\n        if (defaultPosition) {\n          result = orientedLink.pointBPositionXDefault;\n        } else {\n          result = orientedLink.pointBPositionX;\n        }\n      }\n    }\n    return result;\n  };\n\n  private defineValueY = (orientedLink: OrientedLinkClass, defaultPosition: boolean, isIn: boolean): string => {\n    let result = '';\n    if (isIn) {\n      if (orientedLink.pointIn !== '') {\n        const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n        arrayPoint.forEach((point) => {\n          if (point.name === orientedLink.pointIn) {\n            if (defaultPosition) {\n              result = point.positionYDefault;\n            } else {\n              result = point.positionShapeY;\n            }\n          }\n        });\n      } else if (orientedLink.regionIn !== '') {\n        const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n        arrayRegion.forEach((region) => {\n          if (region.label === orientedLink.regionIn) {\n            if (defaultPosition) {\n              result = (parseInt(region.coords.yMax, 10) - parseInt(region.coords.yMin, 10)).toString();\n            } else {\n              result = (parseInt(region.coordsDefault.yMax, 10) - parseInt(region.coordsDefault.yMin, 10)).toString();\n            }\n          }\n        });\n      } else {\n        if (defaultPosition) {\n          result = orientedLink.pointAPositionYDefault;\n        } else {\n          result = orientedLink.pointAPositionY;\n        }\n      }\n    } else {\n      if (orientedLink.pointOut !== '') {\n        const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n        arrayPoint.forEach((point) => {\n          if (point.name === orientedLink.pointIn) {\n            if (defaultPosition) {\n              result = point.positionYDefault;\n            } else {\n              result = point.positionShapeY;\n            }\n          }\n        });\n      } else if (orientedLink.regionOut !== '') {\n        const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n        arrayRegion.forEach((region) => {\n          if (region.label === orientedLink.regionIn) {\n            if (defaultPosition) {\n              result = (parseInt(region.coords.yMax, 10) - parseInt(region.coords.yMin, 10)).toString();\n            } else {\n              result = (parseInt(region.coordsDefault.yMax, 10) - parseInt(region.coordsDefault.yMin, 10)).toString();\n            }\n          }\n        });\n      } else {\n        if (defaultPosition) {\n          result = orientedLink.pointBPositionYDefault;\n        } else {\n          result = orientedLink.pointBPositionY;\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * to do\n   */\n  displayOrientedLink() {\n    const arrayOrientedLink = this.props.options.arrayOrientedLinks;\n    const mapItems: JSX.Element[] = [];\n    let item: JSX.Element = <div></div>;\n    arrayOrientedLink.forEach((orientedLink: OrientedLinkClass) => {\n      const valueMainMetricA: string = this.getValuesMainMetricOrientedLink(orientedLink).toString();\n      const valueMainMetricB: string = this.getValuesMainMetricOrientedLinkB(orientedLink).toString();\n      this.getValuesMainMetricOrientedLinkB(orientedLink);\n      const valuesAuxiliaryMetrics: string[] = this.getValuesAuxiliaryMetricsOrientedLink(orientedLink);\n      const valuesAuxiliaryMetricsB: string[] = this.getValuesAuxiliaryMetricsOrientedLinkB(orientedLink);\n      const pointAX: string = this.defineValueX(orientedLink, false, true);\n      const pointDefaultAX: string = this.defineValueX(orientedLink, true, true);\n      const pointBX: string = this.defineValueX(orientedLink, false, false);\n      const pointDefaultBX: string = this.defineValueX(orientedLink, true, false);\n      const pointAY: string = this.defineValueY(orientedLink, false, true);\n      const pointDefaultAY: string = this.defineValueY(orientedLink, true, true);\n      const pointBY: string = this.defineValueY(orientedLink, false, false);\n      const pointDefaultBY: string = this.defineValueY(orientedLink, true, false);\n\n      item = (\n        <DrawOrientedLink\n          key={'orientedLink' + orientedLink.id.toString()}\n          id={orientedLink.id.toString()}\n          orientationLink={orientedLink.orientationLink.value || ''}\n          pointAPositionX={pointAX}\n          pointAPositionY={pointAY}\n          pointBPositionX={pointBX}\n          pointBPositionY={pointBY}\n          colorA={orientedLink.colorCoordinateA}\n          colorB={orientedLink.colorCoordinateB}\n          associatePointIn={orientedLink.pointIn}\n          associatePointOut={orientedLink.pointOut}\n          associateRegionIn={orientedLink.regionIn}\n          associateRegionOut={orientedLink.regionOut}\n          widthImage={parseInt(this.props.options.baseMap.width, 10)}\n          heightImage={parseInt(this.props.options.baseMap.height, 10)}\n          label={orientedLink.label}\n          name={orientedLink.name}\n          valueMainMetricA={valueMainMetricA}\n          valueMainMetricB={valueMainMetricB}\n          refMainMetricA={orientedLink.mainMetric.refId || ''}\n          refMainMetricB={orientedLink.mainMetricB.refId || ''}\n          options={this.props.options}\n          onOptionsChange={this.props.onOptionsChange}\n          data={this.props.data}\n          textObject={orientedLink.textObj}\n          seuil={orientedLink.lowerLimit}\n          traceBorder={orientedLink.traceBorder}\n          traceBack={orientedLink.traceBack}\n          labelAPositionX={orientedLink.positionParameter.labelAPositionX}\n          labelAPositionY={orientedLink.positionParameter.labelAPositionY}\n          labelBPositionX={orientedLink.positionParameter.labelBPositionX}\n          labelBPositionY={orientedLink.positionParameter.labelBPositionY}\n          tooltipPositionA={orientedLink.positionParameter.tooltipPositionA}\n          tooltipPositionB={orientedLink.positionParameter.tooltipPositionB}\n          zIndex={orientedLink.zIndex}\n          pointCPositionX={orientedLink.pointCPositionX}\n          pointCPositionY={orientedLink.pointCPositionY}\n          isIncurved={orientedLink.isIncurved}\n          auxiliaryMetrics={orientedLink.metrics}\n          auxiliaryMetricsB={orientedLink.metricsB}\n          valuesAuxiliaryMetrics={valuesAuxiliaryMetrics}\n          valuesAuxiliaryMetricsB={valuesAuxiliaryMetricsB}\n          police={this.props.options.display.police}\n          sizePolice={this.props.options.display.size}\n          linkUrl={orientedLink.linkURL}\n          size={orientedLink.size}\n          widthInitialSpaceDefault={orientedLink.widthInitialSpaceDefault}\n          heightInitialSpaceDefault={orientedLink.heightInitialSpaceDefault}\n          positionXADefault={pointDefaultAX}\n          positionYADefault={pointDefaultAY}\n          positionXBDefault={pointDefaultBX}\n          positionYBDefault={pointDefaultBY}\n          positionXCDefault={orientedLink.pointCPositionXDefault}\n          positionYCDefault={orientedLink.pointCPositionYDefault}\n        />\n      );\n      mapItems.push(item);\n    });\n    this.updateAssociateOrientedLinkInToPoint();\n    this.updateAssociateOrientedLinkOutToPoint();\n    return <div>{mapItems}</div>;\n  }\n\n  /**\n   * to do\n   */\n  getValuesMainMetricPoint(point: PointClass) {\n    reqMetricPoint(point, this.props);\n    let result = 0;\n    result = getResultQuery(point.mainMetric) || NaN;\n    return result;\n  }\n\n  getValuesMainMetricOrientedLink(orientedLink: OrientedLinkClass): number {\n    reqMetricOrientedLink(orientedLink, this.props);\n    let result = 0;\n    result = getResultQuery(orientedLink.mainMetric) || NaN;\n    return result;\n  }\n\n  getValuesMainMetricOrientedLinkB(orientedLink: OrientedLinkClass) {\n    reqMetricOrientedLink(orientedLink, this.props);\n    let result = 0;\n    result = getResultQuery(orientedLink.mainMetricB) || NaN;\n    return result;\n  }\n\n  getValuesAuxiliaryMetricsPoint = (point: PointClass): string[] => {\n    reqMetricAuxPoint(point, this.props);\n    return this.getValuesAuxiliaryMetrics(point.metrics, point.mainMetric);\n  };\n\n  getValuesAuxiliaryMetricsOrientedLink = (orientedLink: OrientedLinkClass): string[] => {\n    reqMetricAuxOrientedLink(orientedLink, this.props);\n    return this.getValuesAuxiliaryMetrics(orientedLink.metrics, orientedLink.mainMetric);\n  };\n\n  getValuesAuxiliaryMetricsOrientedLinkB = (orientedLink: OrientedLinkClass): string[] => {\n    reqMetricAuxOrientedLink(orientedLink, this.props);\n    return this.getValuesAuxiliaryMetrics(orientedLink.metricsB, orientedLink.mainMetricB);\n  };\n\n  getValuesAuxiliaryMetrics = (auxiliaryMetrics: Metric[], mainMetric: Metric): string[] => {\n    let valueAuxiliaryMetric: string[] = [];\n    //const countMetrics: number = auxiliaryMetrics.length;\n    if (auxiliaryMetrics.length < 1) {\n      auxiliaryMetrics.forEach((metric: Metric) => {\n        let countTotalValues = 0;\n        let resultTotalValues = 0;\n        let result = '';\n        if (metric.returnQuery && metric.returnQuery.length > 0) {\n          let numberLoop: number = metric.returnQuery?.length || 0;\n          if (metric.key !== '' && metric.keyValue !== '') {\n            for (let i = 0; i < numberLoop; i++) {\n              let line = metric.returnQuery[i];\n              if (line.fields[0].labels) {\n                if (mainMetric.refId !== '') {\n                  //console.log(mainMetric);\n                  if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                    if (line.fields[0].labels[metric.key] === metric.keyValue) {\n                      const countValues: number = line.fields[0].values.length;\n                      for (let i = 0; i < countValues; i++) {\n                        if (line.fields[0].values.get(i)) {\n                          resultTotalValues += line.fields[0].values.get(i);\n                          countTotalValues++;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (mainMetric.refId !== '') {\n              for (let i = 0; i < numberLoop; i++) {\n                let line = metric.returnQuery[i];\n                if (line.fields[0].labels) {\n                  if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                    const countValues: number = line.fields[0].values.length;\n                    for (let i = 0; i < countValues; i++) {\n                      if (line.fields[0].values.get(i)) {\n                        resultTotalValues += line.fields[0].values.get(i);\n                        countTotalValues++;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (metric.manageValue === 'avg') {\n            result = (resultTotalValues / countTotalValues).toString();\n          } else if (metric.manageValue === 'sum') {\n            result = resultTotalValues.toString();\n          } else if (metric.manageValue === 'err') {\n            if (countTotalValues > 1) {\n              result = 'error';\n            } else {\n              result = resultTotalValues.toString();\n            }\n          }\n        }\n        if (result !== '') {\n          valueAuxiliaryMetric.push(result);\n        }\n      });\n    }\n    return valueAuxiliaryMetric;\n  };\n\n  changeValueButtonToLink = () => {\n    this.setState({\n      valueButton: 'link',\n    });\n  };\n\n  changeValueButtonToIncurvedLink = () => {\n    this.setState({\n      valueButton: 'incurvedLink',\n    });\n  };\n\n  changeValueButtonToPoint = () => {\n    this.setState({\n      valueButton: 'point',\n    });\n  };\n\n  getCoordinates = (event: any) => {\n    const valueButton = this.state.valueButton;\n\n    if (this.state.numberClickDiv === 0) {\n      return;\n    }\n    if (valueButton === 'link') {\n      this.getCoordinatesToDrawOrientedLinkWithClick(event);\n    } else if (valueButton === 'incurvedLink') {\n      this.getCoordinatesToDrawIncurvedOrientedLinkWithClick(event);\n    } else if (valueButton === 'point') {\n      this.getCoordinatesToDrawPointWithClick(event);\n    }\n  };\n  // Close Legend\n  callInFunc = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.resetButtonManage(2);\n  };\n\n  /**\n   * add button click to manage region, point, oriented link, position legend\n   */\n  updateButtonCss = () => {\n    const final: JSX.Element = (\n      <div id=\"allButton\" style={{ marginTop: '1%', marginBottom: '50px' }}>\n        <Button\n          style={{ marginLeft: '1%', zIndex: 18, position: 'absolute' }}\n          variant={this.state.buttonManage[0] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.addNode}\n        >\n          Add Region\n        </Button>\n\n        <Button\n          style={{ marginLeft: '15%', zIndex: 18, position: 'absolute' }}\n          variant={this.state.buttonManage[3] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.addPoint}\n        >\n          Add Point\n        </Button>\n\n        <Button\n          style={{ marginLeft: '27%', zIndex: 18, position: 'absolute' }}\n          variant={this.state.buttonManage[1] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.addLink}\n        >\n          Add Oriented Link\n        </Button>\n\n        <Button\n          style={{ marginLeft: '46%', zIndex: 18, position: 'absolute' }}\n          variant={this.state.buttonManage[4] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.addIncurvedLink}\n        >\n          Add Incurved Oriented Link\n        </Button>\n\n        <Button\n          id=\"legnd\"\n          style={{ marginLeft: '67%', zIndex: 18, position: 'absolute' }}\n          variant={this.state.buttonManage[2] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.callInFunc} // Method Close legend\n        >\n          Position Legend\n        </Button>\n\n        <Button id=\"zoompan\" style={{ marginLeft: '80%', zIndex: 18, position: 'absolute' }} variant={'primary'} onClick={this.ZoomSVG}>\n          Zoom [P/M]\n        </Button>\n      </div>\n    );\n    this.setState({\n      allActionButton: final,\n    });\n  };\n\n  callMethod = async () => {\n    if (this.state.numberClickDiv === 0) {\n      this.setState({ numberClickDiv: 1 });\n    } else {\n      await this.setAsyncButtonManage({\n        buttonManage: [false, false, false, false, false],\n      });\n      this.setState({\n        numberClickDiv: 0,\n      });\n      this.updateButtonCss();\n    }\n  };\n\n  setAsyncButtonManage = (state: { buttonManage: boolean[] }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  resetButtonManage = async (index: number) => {\n    let tmp: boolean[] = this.state.buttonManage;\n    const oldValue: boolean = tmp[index];\n\n    tmp = [false, false, false, false, false];\n    if (oldValue) {\n      tmp[index] = false;\n      this.setState({\n        numberClickDiv: 0,\n      });\n    } else {\n      if (index === 2) {\n        this.setState({\n          hiddenLegend: false,\n          valueButton: '',\n        });\n      }\n      tmp[index] = true;\n      this.setState({\n        numberClickDiv: 1,\n      });\n    }\n    await this.setAsyncButtonManage({\n      buttonManage: tmp,\n    });\n    this.updateButtonCss();\n  };\n\n  addNode = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[0] ? false : true,\n    }));\n    this.resetButtonManage(0);\n    this.changeValueButtonToPoint();\n  };\n\n  addPoint = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[3] ? false : true,\n      valueButton: 'point',\n    }));\n    this.resetButtonManage(3);\n    this.changeValueButtonToPoint();\n  };\n\n  addLink = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[1] ? false : true,\n      buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n    }));\n    this.resetButtonManage(1);\n    this.changeValueButtonToLink();\n  };\n\n  addIncurvedLink = () => {\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[4] ? false : true,\n      buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n    }));\n    this.resetButtonManage(4);\n    this.changeValueButtonToIncurvedLink();\n  };\n\n  positionLegend = (e: any) => {\n    if (!this.state.buttonManage[2]) {\n      return;\n    }\n\n    const newLegend: Legend = this.state.legend;\n    const sizeTitlePanel = 28;\n\n    newLegend.x = e.nativeEvent.offsetX;\n    newLegend.y =\n      this.props.options.baseMap.height > e.nativeEvent.offsetY\n        ? parseInt(e.nativeEvent.offsetY, 10)\n        : parseInt(e.nativeEvent.offsetY, 10) - sizeTitlePanel;\n    newLegend.hiddenLegend = false;\n    this.setState({\n      legend: newLegend,\n    });\n    this.props.onOptionsChange({\n      ...this.props.options,\n      legend: newLegend,\n    });\n  };\n\n  // Close legend click on close\n  handleClick = (event: any): void => {\n    const newLegend: Legend = this.state.legend;\n\n    newLegend.hiddenLegend = !this.state.legend.hiddenLegend;\n    this.setState((prevState: State) => ({\n      legend: newLegend,\n    }));\n  };\n\n  // SVG check url\n  tt = () => {\n    const test = document.getElementById('path836');\n    if (test) {\n      test.style.fill = 'red';\n    }\n  };\n\n  chargeRegion = () => {\n    this.setState({\n      displayRegion: (\n        <DrawRectangle\n          key=\"limitCoor\"\n          color=\"orange\"\n          coordinateInitial={this.props.options.coordinateSpaceInitial}\n          id=\"initialSpace\"\n          onOptionsChange={this.props.onOptionsChange}\n          options={this.props.options}\n          data={this.props.data}\n          // isEnabled={!this.state.buttonManage[1]}\n          buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n          buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n        />\n      ),\n    });\n  };\n\n  editIdString = (str: string): string => {\n    const cpyString: string = str.slice();\n    let strSplit: string[] = cpyString.split('id=\"');\n    let newStr = '';\n\n    for (let i = 0; strSplit.length > i; i++) {\n      if (strSplit[i]) {\n        if (i > 0) {\n          const tt: string = strSplit[i];\n          strSplit[i] = 'id=\"oct' + tt;\n        }\n        newStr = newStr + strSplit[i];\n      }\n    }\n    return newStr;\n  };\n\n  /**\n   * update button css when mount component\n   */\n  // not display Button of Panel if it is in the mode View\n  checkIfDisplayButton = () => {\n    const url: string = window.location.href;\n    const arrayUrl: string[] = url.split('&');\n    let canDisplayButton = false;\n    for (const element of arrayUrl) {\n      if (element === 'edit') {\n        canDisplayButton = true;\n      }\n    }\n    if (!canDisplayButton) {\n      this.props.onOptionsChange({\n        ...this.props.options,\n        displayButton: false,\n      });\n    }\n  };\n\n  /**\n   * update button css when mount component\n   */\n  componentDidMount = async () => {\n    // console.log('mount Panel');\n\n    // not display Button of Panel if it is in the mode View\n    this.checkIfDisplayButton();\n\n    // save background in state\n    this.setState({\n      currentImage: this.props.options.baseMap.image,\n    });\n\n    // load backgroundSVG\n    if (this.props.options.baseMap.modeSVG && this.props.options.baseMap.image !== '') {\n      if (this.props.options.baseMap.isUploaded) {\n        let width = '';\n        let height = '';\n        const text = this.props.options.baseMap.image;\n        this.setState({ svg: text });\n        const result = /id=[\"']\\w*[\"']/i.exec(text);\n        const resultWidth = /width=[\"']\\w*[\"']/i.exec(text);\n        if (resultWidth && resultWidth.length > 0) {\n          width = resultWidth[0].split('\"')[1];\n        }\n        const resultHeight = /height=[\"']\\w*[\"']/i.exec(text);\n        if (resultHeight && resultHeight.length > 0) {\n          height = resultHeight[0].split('\"')[1];\n        }\n        if (result && result.length > 0) {\n          const id: string[] = result[0].split('\"');\n          if (id.length > 1) {\n            const newBaseMap: Background = this.props.options.baseMap;\n            newBaseMap.idSVG = id[1];\n            newBaseMap.layerImage = this.props.options.baseMap.image;\n            newBaseMap.width = parseInt(width || '0', 10).toString() || '';\n            newBaseMap.height = parseInt(height || '0', 10).toString() || '';\n            this.props.onOptionsChange({\n              ...this.props.options,\n              baseMap: newBaseMap,\n            });\n          }\n        }\n        this.chargeRegion();\n      } else {\n        fetch(this.props.options.baseMap.image)\n          .then((res) => res.text())\n          .then((text) => {\n            let data: any;\n            if (this.props.options.baseMap.image.split(',')[0] === 'base64') {\n              data = atob(this.props.options.baseMap.image.split(',')[1]);\n            } else {\n              data = text;\n            }\n            this.setState({ svg: data });\n            const result = /id=[\"']\\w*[\"']/i.exec(data);\n            if (result && result.length > 0) {\n              const id: string[] = result[0].split('\"');\n              if (id.length > 1) {\n                const documentId = document.getElementById(id[1]);\n                if (documentId) {\n                  const newBaseMap: Background = this.props.options.baseMap;\n                  newBaseMap.idSVG = id[1];\n                  // newBaseMap.width = documentId.getAttribute('width') || '';\n                  // newBaseMap.height = documentId.getAttribute('height') || '';\n                  newBaseMap.width = parseInt(documentId.getAttribute('width') || '0', 10).toString() || '';\n                  newBaseMap.height = parseInt(documentId.getAttribute('height') || '0', 10).toString() || '';\n                  this.props.onOptionsChange({\n                    ...this.props.options,\n                    baseMap: newBaseMap,\n                  });\n                }\n              }\n            }\n          })\n          .then(() => this.chargeRegion())\n          .then(() => {\n            const newStr: string = this.editIdString(this.state.svg);\n            const background: Background = this.props.options.baseMap;\n            background.layerImage = newStr;\n            this.props.onOptionsChange({ ...this.props.options, baseMap: background });\n          });\n      }\n    } else {\n      this.chargeRegion();\n    }\n\n    //Set value initialSpace with width and height of background\n    // const widthInitialSpace = this.props.options.baseMap.width === '' ? '0' : this.props.options.baseMap.width;\n    // console.log(widthInitialSpace);\n    // const heightInitialSpace = this.props.options.baseMap.height === '' ? '0' : this.props.options.baseMap.height;\n    // console.log(heightInitialSpace);\n    // this.props.options.coordinateSpaceInitial.coordinate.xMax = widthInitialSpace;\n    // this.props.options.coordinateSpaceInitial.coordinate.yMax = heightInitialSpace;\n    this.props.options.coordinateSpaceInitial.coordinate.xMax = this.props.options.baseMap.width;\n    this.props.options.coordinateSpaceInitial.coordinate.yMax = this.props.options.baseMap.height;\n\n    this.updateButtonCss();\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.state.currentImage !== this.props.options.baseMap.image) {\n      this.componentDidMount();\n    }\n    //Set width initialSpace if new width in display\n    if (\n      this.props.options.baseMap.width !== this.props.options.coordinateSpaceInitial.coordinate.xMax &&\n      !this.props.options.updateOnlyInitialSpace\n    ) {\n      //console.log('newWidth');\n      this.props.options.coordinateSpaceInitial.coordinate.xMax = this.props.options.baseMap.width;\n    }\n    //Set height initialSpace if new height in display\n    if (\n      this.props.options.baseMap.height !== this.props.options.coordinateSpaceInitial.coordinate.yMax &&\n      !this.props.options.updateOnlyInitialSpace\n    ) {\n      //console.log('newHeight');\n      this.props.options.coordinateSpaceInitial.coordinate.yMax = this.props.options.baseMap.height;\n    }\n    // if (this.props.options.baseMap.image !== prevProps.options.baseMap.image) {\n    //   this.componentDidMount();\n    // }\n    if (this.props !== prevProps) {\n      this.chargeRegion();\n    }\n  }\n  // Zoom in Panel\n  /********************************  Zoom Panel*********************************** */\n  // Zoom Plus\n  ZoomSVG = (event: any) => {\n    const elmnt = document.getElementById('coordinateSpaces');\n    if (elmnt) {\n      // const lol = document.getElementById('zoompan');\n      // console.log('1');\n\n      // console.log('2');\n      // console.log(lol);\n\n      document.body.addEventListener('keyup', (evt: any) => {\n        if (evt.keyCode === 80) {\n          // m\n          // event.preventDefault();\n          elmnt.style.cursor = 'zoom-in';\n          elmnt.style.transform += 'scale(1.01,1.01)' + 'translate(0.5%)' + 'translateY(0.5%)';\n        } else if (evt.keyCode === 77) {\n          // p\n          elmnt.style.cursor = 'zoom-out';\n          elmnt.style.transform += 'scale(0.98,0.98)' + 'translate(-1%)' + 'translateY(-1%)';\n        }\n      });\n\n      // elmnt.addEventListener('wheel', () => {\n      // let mouse = event.pageX + event.pageY;\n      // console.log(mouse);\n      // elmnt.style.cursor = 'zoom-in';\n      // elmnt.style.transform += 'scale(1.01,1.01)' + 'translate(1%)';\n      // console.warn((elmnt.style.transform += 'scale(1.01,1.01)'));\n      //});\n    }\n  };\n\n  // Zoom Negative\n\n  // ZoomOut = (event: MouseEventInit) => {\n  //   const elmnt = document.getElementById('coordinateSpaces');\n  //   if (elmnt) {\n  //     console.log('less');\n  //     elmnt.addEventListener('click', () => {\n  //       elmnt.style.transform += 'scale(0.98,0.98)' + 'translate(-1%)';\n  //     });\n  //   }\n  //   //console.log('-');\n  // };\n\n  /****************** Zoom************************** */\n  // Zoom Initial\n  // ZoomInitial = () => {\n\n  //   const intialsecond = document.getElementById('init');\n  //   intialsecond?.addEventListener('click', () => {\n  //     const elmnt = document.getElementById('mainPanel');\n\n  //     if(elmnt ){\n  //       elmnt.style.transform = 'scale(1,1)';\n  //     }\n\n  //   });\n  // };\n\n  private displayTooltipSVG = (event: any) => {\n    let idSVG = '';\n    if (this.props.options.baseMap.isUploaded) {\n      idSVG = event.target.id;\n    } else {\n      idSVG = event.target.id.substring(3);\n    }\n    const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n    let newDataSVG: DataTooltipRegionSVG = { idSVG: idSVG, x: '', y: '' };\n    for (const region of arrayRegions) {\n      if (region.idSVG === idSVG) {\n        let xSVG = 0;\n        let ySVG = 0;\n        let widthSVG = 0;\n        let heightSVG = 0;\n        let positionX = '';\n        let positionY = '';\n        //console.log(idSVG);\n        if (event.target.localName === 'rect') {\n          //console.log('rect');\n          xSVG = parseInt(event.target.attributes['x'].nodeValue, 10);\n          ySVG = parseInt(event.target.attributes['y'].nodeValue, 10);\n          widthSVG = parseInt(event.target.attributes['width'].nodeValue, 10);\n          heightSVG = parseInt(event.target.attributes['height'].nodeValue, 10);\n          positionX = (xSVG + widthSVG).toString();\n          positionY = (ySVG - heightSVG / 2).toString();\n        } else if (event.target.localName === 'ellipse') {\n          //console.log('ellipse');\n          xSVG = parseInt(event.target.attributes['cx'].nodeValue, 10);\n          ySVG = parseInt(event.target.attributes['cy'].nodeValue, 10);\n          widthSVG = parseInt(event.target.attributes['rx'].nodeValue, 10) * 2;\n          heightSVG = parseInt(event.target.attributes['ry'].nodeValue, 10) * 2;\n          positionX = xSVG.toString();\n          positionY = ySVG.toString();\n        } else if (event.target.localName === 'path') {\n          //console.log('path');\n          const allValues: string = event.target.attributes['d'].nodeValue;\n          const arrayAllValues: string[] = allValues.split(' ');\n          let iX = -2;\n          let xMin = 1000000;\n          let xMax = 0;\n          let iY = -1;\n          let yMin = 1000000;\n          let yMax = 0;\n          for (let i = 0; i < arrayAllValues.length; i++) {\n            let valueToCheck = parseInt(arrayAllValues[i], 10);\n            if (i === iX + 3) {\n              if (valueToCheck < xMin) {\n                xMin = valueToCheck;\n              }\n              if (valueToCheck > xMax) {\n                xMax = valueToCheck;\n              }\n              iX = i;\n            }\n            if (i === iY + 3) {\n              if (valueToCheck < yMin) {\n                yMin = valueToCheck;\n              }\n              if (valueToCheck > yMax) {\n                yMax = valueToCheck;\n              }\n              iY = i;\n            }\n          }\n          xSVG = xMin;\n          ySVG = yMin;\n          widthSVG = xMax - xMin;\n          // heightSVG = xMax - xMin;\n          positionX = (xSVG + widthSVG).toString();\n          positionY = ySVG.toString();\n        }\n        newDataSVG.x = positionX;\n        newDataSVG.y = positionY;\n        this.setState({\n          dataTooltipSVG: newDataSVG,\n        });\n        const tooltipSVG: any = document.getElementById('tooltipSVG');\n        if (tooltipSVG) {\n          tooltipSVG.style.display = 'initial';\n        }\n      }\n    }\n  };\n\n  private hideTooltipSVG = (event: any) => {\n    let idSVG = '';\n    if (this.props.options.baseMap.isUploaded) {\n      idSVG = event.target.id;\n    } else {\n      idSVG = event.target.id.substring(3);\n    }\n    const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n    for (const region of arrayRegions) {\n      if (region.idSVG === idSVG) {\n        const tooltipSVG: any = document.getElementById('tooltipSVG');\n        tooltipSVG.style.display = 'none';\n      }\n    }\n  };\n\n  // Tooltip in Svg\n  //tooltip_SVG = () => {\n  //   const red = document.getElementById('part1');\n\n  //   red?.addEventListener('mouseenter', () => {\n  //     red.addEventListener('mouseover', () => {\n  //       const tooltip = document.createElement('span');\n  //       const texttest = document.createTextNode('rectanglered');\n  //       tooltip.appendChild(texttest);\n  //       red.appendChild(tooltip).style.position = 'absolute';\n  //       red.appendChild(tooltip).style.backgroundColor = '#000000';\n  //       red.appendChild(tooltip).style.padding = '8px';\n  //       red.appendChild(tooltip).style.float = 'top';\n  //       red.appendChild(tooltip).style.color = '#d8d9da';\n  //       red.appendChild(tooltip).style.boxShadow = '0 0 2px rgba(0, 0, 0, 0.5)';\n  //       red.appendChild(tooltip).style.borderRadius = '2px';\n  //       red.appendChild(tooltip).style.fontWeight = '500';\n  //       red.addEventListener('mouseout', () => {\n  //         red.appendChild(tooltip).style.visibility = 'hidden';\n  //       });\n  //     });\n  //     const yellow = document.getElementById('part2');\n  //     yellow?.addEventListener('mouseenter', () => {\n  //       yellow.addEventListener('mouseover', () => {\n  //         const tooltip = document.createElement('span');\n  //         const texttest = document.createTextNode('rectangleyellow');\n  //         tooltip.appendChild(texttest);\n  //         yellow.appendChild(tooltip).style.position = 'absolute';\n  //         yellow.appendChild(tooltip).style.backgroundColor = '#000000';\n  //         yellow.appendChild(tooltip).style.padding = '8px';\n  //         yellow.appendChild(tooltip).style.float = 'top';\n  //         yellow.appendChild(tooltip).style.color = '#d8d9da';\n  //         yellow.appendChild(tooltip).style.boxShadow = '0 0 2px rgba(0, 0, 0, 0.5)';\n  //         yellow.appendChild(tooltip).style.borderRadius = '2px';\n  //         yellow.appendChild(tooltip).style.fontWeight = '500';\n  //         yellow.addEventListener('mouseout', () => {\n  //           yellow.appendChild(tooltip).style.visibility = 'hidden';\n  //         });\n  //       });\n  //       const rect = document.getElementById('carre');\n  //       rect?.addEventListener('mouseenter', () => {\n  //         rect.addEventListener('mouseover', () => {\n  //           const tooltip = document.createElement('span');\n  //           const texttest = document.createTextNode('rectanglegreen');\n  //           tooltip.appendChild(texttest);\n  //           rect.appendChild(tooltip).style.position = 'absolute';\n  //           rect.appendChild(tooltip).style.backgroundColor = '#000000';\n  //           rect.appendChild(tooltip).style.padding = '8px';\n  //           rect.appendChild(tooltip).style.marginTop = '20%';\n  //           rect.appendChild(tooltip).style.color = '#d8d9da';\n  //           rect.appendChild(tooltip).style.boxShadow = '0 0 2px rgba(0, 0, 0, 0.5)';\n  //           rect.appendChild(tooltip).style.borderRadius = '2px';\n  //           rect.appendChild(tooltip).style.fontWeight = '500';\n  //           rect.addEventListener('mouseout', () => {\n  //             rect.appendChild(tooltip).style.visibility = 'hidden';\n  //           });\n  //         });\n  //       });\n  //     });\n  //   });\n  // };\n\n  /*************************************test create tooltip **********************************************************/\n\n  SVG_PathImage = (event: any) => {\n    this.displayTooltipSVG(event);\n    const elementSVG: any = event.target;\n    const parentElementSVG: any = elementSVG.parentNode;\n    let idSVG = '';\n    if (this.props.options.baseMap.isUploaded) {\n      idSVG = event.target.id;\n    } else {\n      idSVG = event.target.id.substring(3);\n    }\n    const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    for (const region of arrayRegion) {\n      if (region.idSVG === idSVG) {\n        const linkUrl: string = region.linkURL.followLink;\n        if (linkUrl && !document.getElementById('a' + idSVG) && !this.state.buttonAddIncurvedLinkIsActive && !this.state.buttonAddLinkIsActive) {\n          const aElement = document.createElementNS('http://www.w3.org/2000/svg', 'a');\n          aElement.setAttribute('id', 'a' + idSVG);\n          aElement.setAttribute('href', linkUrl);\n          aElement.appendChild(elementSVG);\n          parentElementSVG.appendChild(aElement);\n        }\n      }\n    }\n    // for (const line of this.props.options.regionCoordinateSpace) {\n    //   if (line.mode) {\n    //     const id: HTMLElement | null = document.getElementById('oct' + line.idSVG);\n    //     if (id) {\n    //       // const valueQuery = getResultQuery(line.mainMetric);\n    //       const test = document.getElementById('jeSuisLa' + line.id);\n    //       if (test) {\n    //         test.style.fill = 'red';\n    //       } else {\n    //         const textObj: TextObject = line.textObj;\n    //         if (\n    //           !textObj.isTextTooltip ||\n    //           (textObj.generateObjectText && textObj.valueGenerateObjectText && !textObj.valueGenerateObjectText.displayObjectInTooltip)\n    //         ) {\n    //           const title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n    //           title.setAttribute('fill', 'yellow');\n    //           title.setAttributeNS('http://www.w3.org/1999/xlink', 'fill', 'yellow');\n    //           title.setAttribute('fill', 'red');\n    //           title.setAttributeNS('title', 'fill', 'red');\n    //           const text = getInfoDisplayRegion(line, this.props);\n\n    //           title.innerHTML = text.tooltip.modeText || '';\n    //           // title.textContent = valueQuery ? valueQuery.toString() : '';\n    //           title.id = 'jeSuisLa' + line.id;\n    //           title.style.fill = 'red';\n    //           id.appendChild(title);\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  };\n\n  fillCoordinate = (): JSX.Element => {\n    const { options } = this.props;\n    const styleRegion = {\n      position: 'absolute',\n      width: options.baseMap.width + 'px',\n      height: options.baseMap.height + 'px',\n      top: '15%',\n      left: 0,\n    } as React.CSSProperties;\n    // const xMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMin, 10);\n    // const xMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMax, 10);\n    // const yMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMin, 10);\n    // const yMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMax, 10);\n    let mapItems: JSX.Element[];\n\n    mapItems = options.regionCoordinateSpace.map((line: RegionClass, index: number) => (\n      <DrawRectangleExtend\n        key={'drawRectangleExtend' + index.toString()}\n        uneCoor={line}\n        useLimit={false}\n        limit={options.coordinateSpaceInitial.coordinate}\n        onOptionsChange={this.props.onOptionsChange}\n        options={this.props.options}\n        data={this.props.data}\n        id={'region' + line.id.toString()}\n        //isEnabled={true}\n        buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n        buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n        widthInitialSpaceDefault={line.widthInitialSpaceDefault}\n        heightInitialSpaceDefault={line.heightInitialSpaceDefault}\n      />\n    ));\n    return <ul style={styleRegion}>{mapItems}</ul>;\n  };\n\n  getValuesAuxiliaryMetricsRegionSVG = (region: RegionClass): string[] => {\n    reqMetricAuxRegion(region, this.props);\n    return this.getValuesAuxiliaryMetrics(region.metrics, region.mainMetric);\n  };\n\n  private getConvertValueAuxMetrics = (valueBrut: string, region: RegionClass): string => {\n    let result = '';\n    const decimal: string = region.textObj.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n    const unit: string = region.textObj.generateAuxiliaryElement.unit;\n    if (decimal !== '') {\n      result = parseFloat(valueBrut).toPrecision(roundValue);\n    } else {\n      result = valueBrut;\n    }\n    return result + ' ' + unit;\n  };\n\n  private displayAuxiliaryMetricsRegionSVG = (region: RegionClass): JSX.Element => {\n    let html: JSX.Element[] = [];\n    const valuesAuxMetrics: string[] = this.getValuesAuxiliaryMetrics(region.metrics, region.mainMetric);\n    const auxMetrics: Metric[] = region.metrics;\n    const addColorText: boolean = region.textObj.generateAuxiliaryElement.addColorTextElement;\n    const addColorBack: boolean = region.textObj.generateAuxiliaryElement.addColorBackElement;\n    const legend: string = region.textObj.generateAuxiliaryElement.legendElement;\n    let colorText = '';\n    let colorBack = '';\n\n    if (addColorText) {\n      colorText = region.textObj.generateAuxiliaryElement.colorTextElement;\n    } else {\n      colorText = 'white';\n    }\n\n    if (addColorBack) {\n      colorBack = region.textObj.generateAuxiliaryElement.colorBackElement;\n    } else {\n      colorBack = 'black';\n    }\n\n    const styleTitle = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleTitle2 = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleContent = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: colorText,\n      whiteSpace: 'nowrap',\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    if (auxMetrics.length > 0) {\n      html.push(\n        <p key={region.id + 'contentToolTip1'} style={styleTitle}>\n          Auxiliary Metric\n        </p>\n      );\n      html.push(\n        <p key={region.idSVG + 'contentToolTip2'} style={styleTitle}>\n          {legend}\n        </p>\n      );\n      let index = 1;\n      for (const metric of auxMetrics) {\n        const valueAuxMetric: string = this.getConvertValueAuxMetrics(valuesAuxMetrics[index - 1], region);\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip3'} style={styleTitle2}>\n            + Metric {index}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip4'} style={styleContent}>\n            - Value : {valueAuxMetric}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip5'} style={styleContent}>\n            - Key : {metric.key}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip6'} style={styleContent}>\n            - KeyValue : {metric.keyValue}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip7'} style={styleContent}>\n            - Type : {metric.manageValue}\n          </p>\n        );\n        index++;\n      }\n    }\n    return <div style={{ backgroundColor: colorBack }}>{html}</div>;\n  };\n\n  private defineMainMetric = (region: RegionClass): string => {\n    let result = '';\n    const legend: string = region.textObj.valueGenerateObjectText.legendElement;\n    //console.log('legend-tooltip');\n    //console.log(region.textObj.valueGenerateObjectText);\n    //console.log(legend);\n    const unit: string = region.textObj.valueGenerateObjectText.unit;\n    const decimal: string = region.textObj.valueGenerateObjectText.numericFormatElement;\n    //const roundMetrics: number = parseInt(decimal, 10) || 1;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n    const mainMetric: number = getResultQuery(region.mainMetric) || 0;\n\n    if (decimal !== '') {\n      result = mainMetric.toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = mainMetric + ' ' + unit;\n    }\n    if (legend) {\n      result = legend + ': ' + result;\n    }\n    return result;\n  };\n\n  private defineTextDecoration = (region: RegionClass): string => {\n    const mainStyle: Style = region.textObj.style;\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (region: RegionClass): string => {\n    const mainStyle: Style = region.textObj.style;\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (region: RegionClass): any => {\n    const mainStyle: Style = region.textObj.style;\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n  // Close Legend\n\n  private stopDisplayLegend = () => {\n    this.callInFunc();\n    this.setState({\n      hiddenLegend: true,\n    });\n  };\n\n  private htmlTooltipRegionSVG = (): JSX.Element => {\n    let regionSVG: RegionClass = initRegionCoordinateSpace(1000);\n    for (const region of this.props.options.regionCoordinateSpace) {\n      if (region.idSVG === this.state.dataTooltipSVG.idSVG) {\n        regionSVG = region;\n      }\n    }\n\n    const styleMainTooltipSVG = {\n      display: 'none',\n      position: 'absolute',\n      top: parseInt(this.state.dataTooltipSVG.y, 10),\n      left: parseInt(this.state.dataTooltipSVG.x, 10),\n      zIndex: 9999,\n      width: 'auto',\n      border: '1px solid black',\n      borderRadius: '5px',\n      backgroundColor: 'black',\n      padding: 5,\n    } as React.CSSProperties;\n\n    const styleLabelTooltipSVG = {\n      textDecoration: this.defineTextDecoration(regionSVG),\n      fontStyle: this.defineFontStyle(regionSVG),\n      fontWeight: this.defineFontWeight(regionSVG),\n      fontSize: this.props.options.display.size,\n      fontFamily: this.props.options.display.police,\n      color: regionSVG.textObj.colorText,\n      backgroundColor: regionSVG.textObj.colorBack,\n    } as React.CSSProperties;\n\n    const styleMainMetricTooltipSVG = {\n      textDecoration: this.defineTextDecoration(regionSVG),\n      fontStyle: this.defineFontStyle(regionSVG),\n      fontWeight: this.defineFontWeight(regionSVG),\n      color: regionSVG.textObj.valueGenerateObjectText.addColorTextElement ? regionSVG.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      backgroundColor: regionSVG.textObj.valueGenerateObjectText.addColorBackElement\n        ? regionSVG.textObj.valueGenerateObjectText.colorBackElement\n        : 'black',\n      fontSize: this.props.options.display.size,\n      fontFamily: this.props.options.display.police,\n    } as React.CSSProperties;\n\n    const styleElementTooltipSVG = {\n      color: 'white',\n      fontSize: this.props.options.display.size,\n      fontFamily: this.props.options.display.police,\n    } as React.CSSProperties;\n\n    const html: JSX.Element = (\n      <div\n        id=\"tooltipSVG\"\n        style={styleMainTooltipSVG}\n        onMouseOver={(event: any) => {\n          const tooltipSVG: any = document.getElementById('tooltipSVG');\n          if (event.target.id === 'tooltipSVG' || event.target.parentElement.id === 'tooltipSVG') {\n            tooltipSVG.style.display = 'initial';\n          }\n        }}\n        onMouseOut={(event: any) => {\n          const tooltipSVG: any = document.getElementById('tooltipSVG');\n          if (event.target.id !== 'tooltipSVG' || event.target.parentElement.id !== 'tooltipSVG') {\n            tooltipSVG.style.display = 'none';\n          }\n        }}\n      >\n        {regionSVG.textObj.isTextTooltip && <p style={styleLabelTooltipSVG}>{regionSVG.label}</p>}\n        {regionSVG.textObj.generateObjectText && regionSVG.textObj.valueGenerateObjectText.displayObjectInTooltip && (\n          <p style={styleMainMetricTooltipSVG}>{this.defineMainMetric(regionSVG)}</p>\n        )}\n        {regionSVG.textObj.generateAuxiliaryElement.displayObjectInTooltip && this.displayAuxiliaryMetricsRegionSVG(regionSVG)}\n        <a style={styleElementTooltipSVG} href={regionSVG.linkURL.hoveringTooltipLink}>\n          {regionSVG.linkURL.hoveringTooltipText}\n        </a>\n      </div>\n    );\n    return html;\n  };\n\n  /*************************************** create link regionbyid**************************************** */\n\n  /*************************************test create tooltip **********************************************************/\n  //https://raw.githubusercontent.com/atosorigin/grafana-weathermap-panel/master/docs/resource/demo01-background.svg\n  /** render */\n  render() {\n    let styleBackground;\n    if (this.props.options.baseMap.modeSVG) {\n      styleBackground = {\n        height: this.props.options.baseMap.height + 'px',\n        width: this.props.options.baseMap.width + 'px',\n      } as React.CSSProperties;\n    } else {\n      if (this.props.options.baseMap.image.split(',')[0] === 'base64') {\n        styleBackground = {\n          position: 'absolute',\n          textAlign: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundImage: 'url(data:image/jpeg;' + this.props.options.baseMap.image + ')',\n          backgroundSize: this.props.options.baseMap.width + 'px' + ' ' + this.props.options.baseMap.height + 'px',\n          height: this.props.options.baseMap.height + 'px',\n          width: this.props.options.baseMap.width + 'px',\n          opacity: 0.8,\n          zIndex: 4,\n        } as React.CSSProperties;\n      } else {\n        styleBackground = {\n          position: 'absolute',\n          textAlign: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundImage: 'url(' + this.props.options.baseMap.image + ')',\n          backgroundSize: this.props.options.baseMap.width + 'px' + ' ' + this.props.options.baseMap.height + 'px',\n          height: this.props.options.baseMap.height + 'px',\n          width: this.props.options.baseMap.width + 'px',\n          opacity: 0.8,\n          zIndex: 4,\n        } as React.CSSProperties;\n      }\n    }\n\n    const styleSVG = {\n      position: 'absolute',\n      zIndex: 2,\n    } as React.CSSProperties;\n\n    const styleSVG_2 = {\n      position: 'absolute',\n      textAlign: 'center',\n      backgroundRepeat: 'no-repeat',\n      height: this.props.options.baseMap.height + 'px',\n      width: this.props.options.baseMap.width + 'px',\n      opacity: 0,\n      zIndex: 2,\n    } as React.CSSProperties;\n\n    const defaultStyle = {\n      height: '100vh',\n      width: '100vw',\n      fontFamily: this.props.options.display.police,\n      fontSize: this.props.options.display.size,\n      fontStyle: this.props.options.display.style.italic ? 'italic' : 'normal',\n      fontWeight: this.props.options.display.style.bold ? 'bold' : 'normal',\n      textDecoration: this.props.options.display.style.underline ? 'underline' : 'none',\n    } as React.CSSProperties;\n\n    return (\n      <CustomScrollbar autoHide={false} hideHorizontalTrack={false} autoHeightMax=\"100%\">\n        <div\n          id=\"zoom\"\n          style={{\n            display: 'inline-flex',\n            marginTop: '-7px',\n            marginLeft: '86%',\n          }}\n        ></div>\n        <div style={{ textAlign: 'left', position: 'relative', display: 'inline-grid' }}>\n          {this.props.options.displayButton && this.state.allActionButton}\n        </div>\n        <section style={defaultStyle} onClick={this.positionLegend}>\n          <div>\n            {this.state.buttonManage[0] && (\n              <div\n                style={{\n                  width: '200px',\n                  position: 'absolute',\n                  overflowY: 'scroll',\n                  marginLeft: '20%',\n                  marginRight: '20%',\n                  marginTop: '20%',\n                  marginBottom: '20%',\n                  border: '5px solid aliceblue',\n                  height: '40%',\n                }}\n              >\n                <Modal title=\"Add Region\" onDismiss={this.addNode} onClickBackdrop={this.addNode} isOpen={this.state.nbClickButton}>\n                  <AddCoordinate\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={true}\n                    isPoint={false}\n                    isLink={false}\n                  />\n                </Modal>\n              </div>\n            )}\n            {!this.state.hiddenLegend && (\n              <LegendComponant\n                options={this.props.options}\n                onOptionsChange={this.props.onOptionsChange}\n                data={this.props.data}\n                // legend={this.props.options.legend}\n                {...this.props.options.legend}\n                callBack={this.handleClick}\n                callBackClose={this.stopDisplayLegend}\n              />\n            )}\n            <div onClick={this.callMethod}></div>\n            <div onClick={this.getCoordinates} id=\"coordinateSpaces\" style={styleBackground}>\n              {this.defineLimit()}\n              <div>\n                <div className=\"tooltip\" />\n                {/* {this.fillCoordinate()} */}\n                <div id=\"mainPanel\" style={{ position: 'absolute', zIndex: 1 }}>\n                  <div\n                    style={styleSVG}\n                    // onMouseOver={this.SVG_PathImage}\n                    dangerouslySetInnerHTML={{ __html: this.state.svg }}\n                  />\n                  <div\n                    id=\"Intent\"\n                    style={styleSVG_2}\n                    onMouseOver={this.SVG_PathImage}\n                    // && this.CreateLinkArea\n                    // && this.displayTooltipSVG\n                    // onMouseOver={event => {\n                    //   this.displayTooltipSVG(event);\n                    // }}\n                    onMouseOut={(event) => {\n                      this.hideTooltipSVG(event);\n                    }}\n                    dangerouslySetInnerHTML={{ __html: this.props.options.baseMap.layerImage }}\n                  />\n                  {/* <div onClick={this.CreateLinkArea}></div> */}\n                  {this.htmlTooltipRegionSVG()}\n\n                  {/* Ordre d'affichage du plus éloigné au plus proche : background - liens - régions - points*/}\n                  {this.displayOrientedLink()}\n                  {this.fillCoordinate()}\n                  {this.displayPoint()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </CustomScrollbar>\n    );\n  }\n}\n","import React from 'react';\nimport { SimpleOptions, CoordinateSpaceInitial } from 'types';\n\nimport { FormField, Switch, FormLabel } from '@grafana/ui';\nimport { PanelEditorProps } from '@grafana/data';\n\nimport { editGoodParameter } from 'Functions/EditParameter/editGoodParameter';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** value to initial coordinate space */\n  arrayCoor: CoordinateSpaceInitial;\n}\n\n/**\n * initialize space for space coordinate\n */\nclass CoordinateSpaceInitialClass extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayCoor: this.props.options.coordinateSpaceInitial,\n    };\n  }\n\n  /**\n   * Call parent to send arrayCoor data\n   */\n  callBack = () => {\n    this.props.onOptionsChange({\n      ...this.props.options,\n      coordinateSpaceInitial: this.state.arrayCoor,\n    });\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   */\n  _handleChange(currentTarget: string, name: string) {\n    this.props.options.updateOnlyInitialSpace = true;\n    this.setState((prevState) => ({\n      arrayCoor: editGoodParameter(\n        name,\n        prevState.arrayCoor,\n        currentTarget,\n        parseInt(this.props.options.baseMap.width, 10),\n        parseInt(this.props.options.baseMap.height, 10)\n      ),\n    }));\n    this.callBack();\n  }\n\n  /**\n   * Get value of input with state.arrayCoor\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  getGoodValue(id: number, param: string): string {\n    let value: string;\n\n    value = '';\n    if (param.startsWith('positionXMin')) {\n      value = this.state.arrayCoor.coordinate.xMin;\n    } else if (param.startsWith('positionXMax')) {\n      value = this.state.arrayCoor.coordinate.xMax;\n    } else if (param.startsWith('positionYMin')) {\n      value = this.state.arrayCoor.coordinate.yMin;\n    } else if (param.startsWith('positionYMax')) {\n      value = this.state.arrayCoor.coordinate.yMax;\n    }\n    return value;\n  }\n\n  /** change value for switch */\n  onChangeSwitchDisplayInitialSpace = () => {\n    const newInitialSpace: CoordinateSpaceInitial = this.state.arrayCoor;\n    newInitialSpace.displayArea = !newInitialSpace.displayArea;\n    this.setState({\n      arrayCoor: newInitialSpace,\n    });\n    this.callBack();\n  };\n\n  // onChangeSwitchDefaultInitialSpace = () => {\n  //   const newInitialSpace: CoordinateSpaceInitial = this.state.arrayCoor;\n  //   newInitialSpace.defaultReferentiel = !newInitialSpace.defaultReferentiel;\n  //   this.setState({\n  //     arrayCoor: newInitialSpace,\n  //   });\n  //   if (newInitialSpace.defaultReferentiel) {\n  //     this.props.options.coordinateSpaceInitial.coordinate = {\n  //       xMin: '0',\n  //       xMax: '100',\n  //       yMin: '0',\n  //       yMax: '100',\n  //     };\n  //   } else {\n  //     this.props.options.coordinateSpaceInitial.coordinate = {\n  //       xMin: '-100',\n  //       xMax: '100',\n  //       yMin: '-100',\n  //       yMax: '100',\n  //     };\n  //   }\n  //   this.callBack();\n  // };\n\n  // displayValueReferentiel = (): string => {\n  //   let result = '';\n  //   if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n  //     result = '(0 : 100)';\n  //   } else {\n  //     result = '(-100 : 100)';\n  //   }\n  //   return result;\n  // };\n\n  componentDidMount = () => {\n    // console.log('initialSpace');\n    // this.props.options.coordinateSpaceInitial.coordinate.xMax = this.props.options.baseMap.width;\n    // this.props.options.coordinateSpaceInitial.coordinate.yMax = this.props.options.baseMap.height;\n  };\n\n  componentDidUpdate = () => {\n    // if (this.props.options.)\n    // console.log('update initialSPace');\n  };\n\n  /**\n   * HTML render\n   */\n  render() {\n    return (\n      <div className=\"coordinateSpaceInitial\">\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Display space initial</FormLabel>\n          <Switch label=\"\" checked={this.state.arrayCoor.displayArea} onChange={this.onChangeSwitchDisplayInitialSpace} />\n        </div>\n        {/* <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Default referentiel {this.displayValueReferentiel()}</FormLabel>\n          <Switch label=\"\" checked={this.state.arrayCoor.defaultReferentiel} onChange={this.onChangeSwitchDefaultInitialSpace} />\n        </div> */}\n        <FormField\n          label=\"X min\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"xMin\"\n          value={this.state.arrayCoor.coordinate.xMin}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionXMin')}\n          placeholder={'X minimum'}\n        />\n\n        <FormField\n          label=\"X max\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"xMax\"\n          value={this.state.arrayCoor.coordinate.xMax}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionXMax')}\n          placeholder={'X max'}\n        />\n\n        <FormField\n          label=\"Y min\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"yMin\"\n          value={this.state.arrayCoor.coordinate.yMin}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionYMin')}\n          placeholder={'Y minimum'}\n        />\n\n        <FormField\n          label=\"Y max\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"yMax\"\n          value={this.state.arrayCoor.coordinate.yMax}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionYMax')}\n          placeholder={'Y max'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CoordinateSpaceInitialClass;\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions, ImportFile, Background } from '../types';\nimport { Button, FormField } from '@grafana/ui';\nimport ImportInput from 'components/importInput';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  selectedFile: any;\n  readerFile: FileReader;\n}\n\nclass DropZone extends React.Component<Props, State> {\n  fileReader: any = null;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      readerFile: new FileReader(),\n    };\n  }\n\n  onChangeHandler = (event: any) => {\n    this.setState({\n      selectedFile: event.target.files[0],\n      readerFile: new FileReader(),\n    });\n  };\n\n  upload = () => {\n    this.state.selectedFile.onload = function (event: any) {\n      if (event.target?.result != null) {\n        this.props.options.saveImportFile.push(this.state.readerFile.result as string);\n        this.props.onOptionsChange({ ...this.props.options, saveImportFile: this.props.options.saveImportFile });\n      }\n    };\n    const extensionFile = this.state.selectedFile.name.split('.')[1];\n    if (extensionFile === 'jpg' || extensionFile === 'png' || extensionFile === 'gif') {\n      this.state.readerFile.readAsDataURL(this.state.selectedFile);\n    } else {\n      this.state.readerFile.readAsText(this.state.selectedFile);\n    }\n  };\n\n  save = () => {\n    if (this.state.readerFile.result != null) {\n      this.props.options.saveImportFile.push({ name: this.state.selectedFile.name, content: this.state.readerFile.result as string });\n      let loader: ImportInput = new ImportInput(this.props);\n      this.props.options.saveImportFile.forEach((file) => {\n        if (file.name) {\n          const arrayFileName = file.name.split('.');\n          let newBaseMap: Background = this.props.options.baseMap;\n          if (arrayFileName[1] === 'svg') {\n            newBaseMap.image = file.content;\n            newBaseMap.modeSVG = true;\n            newBaseMap.isUploaded = true;\n          } else if (arrayFileName[1] === 'jpg' || arrayFileName[1] === 'png' || arrayFileName[1] === 'gif') {\n            newBaseMap.image = file.content;\n            newBaseMap.modeSVG = false;\n            newBaseMap.isUploaded = true;\n          }\n          this.props.onOptionsChange({\n            ...this.props.options,\n            baseMap: newBaseMap,\n          });\n        }\n\n        if (JSON.parse(file.content).hasOwnProperty('regions')) {\n          loader.loadMultiRegions(JSON.parse(file.content));\n          console.log('Load Region');\n        }\n        if (JSON.parse(file.content).hasOwnProperty('points')) {\n          loader.loadMultiPoints(JSON.parse(file.content));\n          console.log('Load Point');\n        }\n        if (JSON.parse(file.content).hasOwnProperty('links')) {\n          loader.loadMultiLinks(JSON.parse(file.content));\n          console.log('Load Links');\n        }\n      });\n    }\n    console.log(this.props.options.saveImportFile);\n  };\n\n  // load = () => {\n  //   let loader : ImportInput = new ImportInput(this.props);\n  // \tthis.props.options.saveImportFile.forEach(file => {\n  // \t\tif (JSON.parse(file.content).hasOwnProperty(\"regions\")){\n  //       loader.loadMultiRegions(JSON.parse(file.content));\n  //       console.log(\"Load Region\");\n  //     }\n  //     if (JSON.parse(file.content).hasOwnProperty(\"points\")){\n  //       loader.loadMultiPoints(JSON.parse(file.content));\n  //       console.log(\"Load Point\");\n  //     }\n  //     if (JSON.parse(file.content).hasOwnProperty(\"links\")){\n  //       loader.loadMultiLinks(JSON.parse(file.content));\n  //       console.log(\"Load Links\");\n  // \t\t}\n  // \t});\n  //   this.props.options.saveImportFile.forEach(element => {\n  //     console.log(JSON.parse(element.content));\n  //   });\n  // }\n\n  test = () => {\n    console.log(JSON.stringify(this.props));\n  };\n\n  onMultiListFileChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: ImportFile[] = this.props.options.saveImportFile.slice();\n    newData[parseInt(event.currentTarget.id, 10)].name = event.currentTarget.value;\n    this.props.options.saveImportFile = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveImportFile: this.props.options.saveImportFile });\n  };\n\n  multiDeletFile = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: ImportFile) => url === this.props.options.saveImportFile[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveImportFile.splice(this.props.options.saveImportFile.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveImportFile: this.props.options.saveImportFile });\n  };\n\n  multiUploadDisplay = (props: any): JSX.Element => {\n    if (props.file.lenght !== 0) {\n      const list = props.file.map((file: ImportFile, index: number) => (\n        <div\n          key={'MultiFileDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'MultiFile' + index.toString()}\n            label={'File'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onMultiListFileChanged.bind(this)}\n            type=\"string\"\n            value={file.name || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.multiDeletFile.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\n          <Button onClick={this.upload}>add</Button>\n          <Button onClick={this.save}>finish</Button>\n        </div>\n        <div>\n          <this.multiUploadDisplay file={this.props.options.saveImportFile} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default DropZone;\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from '../types';\nimport { FormField, Button, Collapse } from '@grafana/ui';\n//import /*pointClassImport, regionClassImport, multiPointClassImport, multiRegionClassImport */ '../../config/testVariable';\n\nimport { PointClass } from '../Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\nimport { OrientedLinkClass } from '../Models/OrientedLinkClass';\n//import { fetchConfFile } from '../Functions/importConfig';\nimport DropZone from '../Models/dropZone';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  collapseTotalUrl: boolean;\n  collapseMultiUrl: boolean;\n  // collapseMonoUrl: boolean;\n  collapseMultiUpload: boolean;\n}\n\n/*\n * TODO\n */\nclass ImportInput extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapseTotalUrl: false,\n      collapseMultiUrl: false,\n      // collapseMonoUrl: false,\n      collapseMultiUpload: true,\n    };\n  }\n  result: any[] = [];\n  totalResult: any[] = [];\n  /**************************************FETCH******************************************/\n\n  // fetchMono = () => {\n  //     console.log(this.props.options.saveImportUrl.mono)\n  //     this.result = fetchConfFile(this.props.options.saveImportUrl.mono);\n  // }\n\n  /**************************************CATCH******************************************/\n  PointValidator = (newSpace: PointClass) => {\n    let resultId = 0;\n    this.props.options.arrayPoints.forEach((point) => {\n      if (newSpace.id === point.id) {\n        if (newSpace.name === point.name) {\n          resultId = 2;\n        } else {\n          // console.error('Id of point named \"' + newSpace.name + '\" already given fail to load!');\n          resultId = 1;\n        }\n      }\n    });\n    return resultId;\n  };\n\n  RegionValidator = (newSpace: RegionClass) => {\n    let resultId = 0;\n    this.props.options.regionCoordinateSpace.forEach((region) => {\n      //Id\n      if (newSpace.id === region.id) {\n        if (newSpace.label === region.label) {\n          resultId = 2;\n        } else {\n          // console.error('Id of region labeled \"' + newSpace.label + '\" already given, fail to load!');\n          resultId = 1;\n        }\n      }\n    });\n    return resultId;\n  };\n\n  LinkValidator = (newSpace: OrientedLinkClass) => {\n    let resultId = 0;\n    this.props.options.arrayOrientedLinks.forEach((lien) => {\n      if (newSpace.id === lien.id) {\n        if (newSpace.name === lien.name) {\n          resultId = 2;\n        } else {\n          // console.error('Id of link named \"' + newSpace.name + '\" already given, fail to load!');\n          resultId = 1;\n        }\n      }\n    });\n    return resultId;\n  };\n\n  UrlValidator = (url: string) => {\n    let result = true;\n    for (let index in this.props.options.saveImportUrl.multi) {\n      if (this.props.options.saveImportUrl.multi[index] === url) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  };\n\n  /**************************************LOADER******************************************/\n  // Mono\n  pointUpdate = (updatedPoint: PointClass) => {\n    this.props.options.arrayPoints.forEach((point, index) => {\n      //Id\n      if (updatedPoint.id === point.id) {\n        if (updatedPoint.name === point.name) {\n          this.props.options.arrayPoints[index] = updatedPoint;\n          this.props.onOptionsChange({ ...this.props.options, arrayPoints: this.props.options.arrayPoints });\n        }\n      }\n    });\n  };\n  //Looking for a update after Point rework\n  loadMonoPoint = (point: any) => {\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const widthInitialSpaceDefault = (xMaxInitialSpace - xMinInitialSpace).toString();\n    const heightInitialSpaceDefault = (yMaxInitialSpace - yMinInitialSpace).toString();\n    const toLoad = new PointClass(\n      point.id,\n      point.linkURL,\n      point.meta,\n      point.lowerLimit,\n      point.label,\n      point.textObj,\n      point.mainMetric,\n      point.metrics,\n      point.colorMode,\n      point.traceBack,\n      point.traceBorder,\n      point.positionParameter,\n      point.name,\n      point.valueMetric,\n      point.drawGraphicMarker,\n      point.shape,\n      point.sizeWidth,\n      point.sizeHeight,\n      point.rotateArrow,\n      point.positionShapeX,\n      point.positionShapeY,\n      point.color,\n      point.associateOrientedLinksIn,\n      point.associateOrientedLinksOut,\n      widthInitialSpaceDefault,\n      heightInitialSpaceDefault,\n      point.positionXDefault,\n      point.positionYDefault\n    );\n    // console.log(toLoad);\n    let selector: number = this.PointValidator(toLoad);\n    // Do some test here to see if your already load a coordinatespace with this id\n    if (selector === 0) {\n      this.props.options.arrayPoints.push(toLoad);\n    }\n    if (selector === 2) {\n      this.pointUpdate(toLoad);\n    }\n  };\n\n  regionUpdate = (updatedRegion: RegionClass) => {\n    this.props.options.regionCoordinateSpace.forEach((region, index) => {\n      //Id\n      if (updatedRegion.id === region.id) {\n        if (updatedRegion.label === region.label) {\n          this.props.options.regionCoordinateSpace[index] = updatedRegion;\n          this.props.onOptionsChange({ ...this.props.options, regionCoordinateSpace: this.props.options.regionCoordinateSpace });\n        }\n      }\n    });\n  };\n  //Looking for a update after Region rework\n  loadMonoRegion = (region: any) => {\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const widthInitialSpaceDefault = (xMaxInitialSpace - xMinInitialSpace).toString();\n    const heightInitialSpaceDefault = (yMaxInitialSpace - yMinInitialSpace).toString();\n    const toLoad = new RegionClass(\n      region.id,\n      region.linkURL,\n      region.meta,\n      region.lowerLimit,\n      region.label,\n      region.textObj,\n      region.mainMetric,\n      region.metrics,\n      region.colorMode,\n      region.traceBack,\n      region.traceBorder,\n      region.positionParameter,\n      region.idSVG,\n      region.orientedLink,\n      region.coords,\n      region.coordsDefault,\n      region.mode,\n      region.img,\n      widthInitialSpaceDefault,\n      heightInitialSpaceDefault\n    );\n    // console.log(toLoad);\n    // Do some test here to see if your already load a coordinatespace with this id\n    let selector: number = this.RegionValidator(toLoad);\n    if (selector === 0) {\n      this.props.options.regionCoordinateSpace.push(toLoad);\n    }\n    if (selector === 2) {\n      this.regionUpdate(toLoad);\n    }\n  };\n\n  linkUpdate = (updatedLink: OrientedLinkClass) => {\n    this.props.options.arrayOrientedLinks.forEach((link, index) => {\n      //Id\n      if (updatedLink.id === link.id) {\n        if (updatedLink.name === link.name) {\n          this.props.options.arrayOrientedLinks[index] = updatedLink;\n          this.props.onOptionsChange({ ...this.props.options, arrayOrientedLinks: this.props.options.arrayOrientedLinks });\n        }\n      }\n    });\n  };\n  loadMonoLink = (link: any) => {\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const widthInitialSpaceDefault = (xMaxInitialSpace - xMinInitialSpace).toString();\n    const heightInitialSpaceDefault = (yMaxInitialSpace - yMinInitialSpace).toString();\n    const toLoad = new OrientedLinkClass(\n      link.id,\n      link.linkURL,\n      link.meta,\n      link.lowerLimit,\n      link.label,\n      link.textObj,\n      link.mainMetric,\n      link.metrics,\n      link.colorMode,\n      link.traceBack,\n      link.traceBorder,\n      link.positionParameter,\n      link.name,\n      link.orientationLink,\n      link.size,\n      link.pointAPositionX,\n      link.pointAPositionY,\n      link.colorCoordinateA,\n      link.pointBPositionX,\n      link.pointBPositionY,\n      link.colorCoordinateB,\n      link.valueMainMetricA,\n      link.valueMainMetricB,\n      link.pointIn,\n      link.pointOut,\n      link.regionIn,\n      link.regionOut,\n      link.zIndex,\n      link.pointCPositionX,\n      link.pointCPositionY,\n      link.isIncurved,\n      link.mainMetricB,\n      link.metricsB,\n      widthInitialSpaceDefault,\n      heightInitialSpaceDefault,\n      link.pointAPositionXDefault,\n      link.pointAPositionYDefault,\n      link.pointBPositionXDefault,\n      link.pointBPositionYDefault,\n      link.pointCPositionXDefault,\n      link.pointCPositionYDefault\n    );\n    // Do some test here to see if your already load a coordinatespace with this id\n    let selector: number = this.LinkValidator(toLoad);\n    if (selector === 0) {\n      this.props.options.arrayOrientedLinks.push(toLoad);\n    }\n    if (selector === 2) {\n      this.linkUpdate(toLoad);\n    }\n  };\n\n  //Multi\n  loadMultiPoints = (points: any) => {\n    points.points.forEach((point: any) => {\n      this.loadMonoPoint(point);\n    });\n  };\n\n  loadMultiRegions = (regions: any) => {\n    regions.regions.forEach((region: any) => {\n      this.loadMonoRegion(region);\n    });\n  };\n\n  loadMultiLinks = (links: any) => {\n    links.links.forEach((link: any) => {\n      this.loadMonoLink(link);\n    });\n  };\n\n  //Total\n  loadTotal = (panel: any) => {\n    //console.log(panel.imageUrl);\n    this.props.options.baseMap = panel.baseMap;\n    this.props.options.display.police = panel.texteSettings.police;\n    this.props.options.display.size = panel.texteSettings.size;\n    this.props.options.display.style = panel.texteSettings.style;\n    this.props.options.coordinateSpaceInitial = panel.coordinateSpaceInitial;\n    panel.regions.forEach((url: string) => {\n      if (this.UrlValidator(url) === true) {\n        this.props.options.saveImportUrl.multi.push(url);\n      }\n    });\n    panel.points.forEach((url: string) => {\n      if (this.UrlValidator(url) === true) {\n        this.props.options.saveImportUrl.multi.push(url);\n      }\n    });\n    panel.links.forEach((url: string) => {\n      if (this.UrlValidator(url) === true) {\n        this.props.options.saveImportUrl.multi.push(url);\n      }\n    });\n    this.fetchMulti();\n    // console.log('load total');\n  };\n\n  loaderTotal = async () => {\n    try {\n      let response = await fetch(this.props.options.totalUrlInput);\n      let file = await response.json();\n      this.loadTotal(file);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // fetchTotal = () => {\n  //   this.totalResult = fetchConfFile(this.props.options.saveImportUrl.total);\n  //   console.log('downloadTotal');\n  // };\n\n  // loaderSelector = () => {\n  //     // this.loadMultiRegions(multiRegionClassImport);\n  // \t// console.table(this.props.options.arrayCoordinateSpace);\n  // \tthis.result.forEach(file => {\n  // \t\tif (file.hasOwnProperty('regions')){\n  //             this.loadMultiRegions(file);\n  //             console.log('Load Region');\n  //         }\n  //         if (file.hasOwnProperty('points')){\n  //             this.loadMultiPoints(file);\n  //             console.log('Load Point');\n  //         }\n  //         if (file.hasOwnProperty('links')){\n  //             this.loadMultiLinks(file);\n  //             console.log('Load Links');\n  // \t\t}\n  // \t});\n  // }\n\n  fetchMulti = () => {\n    //this.result = fetchConfFile(this.props.options.saveImportUrl.multi);\n    this.props.options.saveImportUrl.multi.forEach(async (url) => {\n      try {\n        // console.log(url);\n        let file = {};\n        // console.log(file);\n        let response = await fetch(url);\n        file = await response.json();\n        if (file.hasOwnProperty('regions')) {\n          this.loadMultiRegions(file);\n          // console.log('Load Region');\n        }\n        if (file.hasOwnProperty('points')) {\n          this.loadMultiPoints(file);\n          // console.log('Load Point');\n        }\n        if (file.hasOwnProperty('links')) {\n          //console.log(file);\n          this.loadMultiLinks(file);\n          // console.log('Load Links');\n        }\n      } catch (error) {\n        // console.error(error);\n      }\n    });\n  };\n\n  /**************************************INPUT******************************************/\n\n  onToggleTotalUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseTotalUrl: isOpen,\n    });\n  };\n\n  onToggleMultiUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseMultiUrl: isOpen,\n    });\n  };\n\n  onToggleMultiUpload = (isOpen: boolean): void => {\n    this.setState({\n      collapseMultiUpload: isOpen,\n    });\n  };\n\n  // public onToggleMonoUrl = (isOpen: boolean): void => {\n  // \tthis.setState({\n  // \t\tcollapseMonoUrl: isOpen,\n  // \t});\n  // }\n\n  // saveUrl = (url: string, mode: number) => {\n  //   // if (mode === 0){\n  //   //     this.props.options.saveImportUrl.mono.push(url);\n  //   // }\n  //   if (mode === 1) {\n  //     this.props.options.saveImportUrl.multi.push(url);\n  //   }\n  //   if (mode === 2) {\n  //     this.props.options.saveImportUrl.total.push(url);\n  //   }\n  // };\n\n  onTotalUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, totalUrlInput: newData });\n  };\n\n  onTotalListUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: string[] = this.props.options.saveImportUrl.total.slice();\n    newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n    this.props.options.saveImportUrl.total = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  onMultiUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, multiUrlInput: newData });\n  };\n\n  onMultiListUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: string[] = this.props.options.saveImportUrl.multi.slice();\n    newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n    this.props.options.saveImportUrl.multi = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  // onMonoUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n  // \tlet newData: string = '';\n  // \tnewData = event.currentTarget.value;\n  // \tthis.props.onOptionsChange({ ...this.props.options, monoUrlInput: newData });\n  // }\n\n  // onMonoListUrlChanged = (event: {currentTarget: HTMLInputElement}) => {\n  //     let newData: string[] = this.props.options.saveImportUrl.mono.slice();\n  //     newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n  //     this.props.options.saveImportUrl.mono = newData;\n  //     this.props.onOptionsChange({...this.props.options, saveImportUrl: this.props.options.saveImportUrl})\n  // }\n\n  addTotalUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n    this.props.options.saveImportUrl.total.push(this.props.options.totalUrlInput);\n    this.props.options.totalUrlInput = '';\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  addMultiUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n    this.props.options.saveImportUrl.multi.push(this.props.options.multiUrlInput);\n    this.props.options.multiUrlInput = '';\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  // addMonoUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n  //     this.props.options.saveImportUrl.mono.push(this.props.options.monoUrlInput);\n  //     this.props.options.monoUrlInput = '';\n  //     this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl})\n  // }\n\n  totalDeletUrl = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: string) => url === this.props.options.saveImportUrl.total[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveImportUrl.total.splice(this.props.options.saveImportUrl.total.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  multiDeletUrl = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: string) => url === this.props.options.saveImportUrl.multi[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveImportUrl.multi.splice(this.props.options.saveImportUrl.multi.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  // monoDeletUrl = (onClick: { currentTarget: HTMLButtonElement}) => {\n  //     const isUrl = (url: string) => url === this.props.options.saveImportUrl.mono[parseInt(onClick.currentTarget.id, 10)];\n  //     this.props.options.saveImportUrl.mono.splice(this.props.options.saveImportUrl.mono.findIndex(isUrl), 1);\n  //     this.props.onOptionsChange({...this.props.options, saveImportUrl: this.props.options.saveImportUrl});\n  // }\n\n  tempo = () => {\n    // console.log(this.props.options.saveImportUrl);\n  };\n\n  totalUrlDisplay = (props: any): JSX.Element => {\n    if (props.list.total.lenght !== 0) {\n      const list = props.list.total.map((url: string, index: number) => (\n        <div\n          key={'TotalUrlDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'TotalUrl' + index.toString()}\n            label={'Url'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onTotalListUrlChanged.bind(this)}\n            type=\"string\"\n            value={url || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.totalDeletUrl.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  multiUrlDisplay = (props: any): JSX.Element => {\n    if (props.list.multi.lenght !== 0) {\n      const list = props.list.multi.map((url: string, index: number) => (\n        <div\n          key={'MultiUrlDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'MultiUrl' + index.toString()}\n            label={'Url'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onMultiListUrlChanged.bind(this)}\n            type=\"string\"\n            value={url || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.multiDeletUrl.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  // monoUrlDisplay = (props: any): JSX.Element => {\n  // \tif (props.list.multi.lenght !== 0) {\n  // \t\tconst list = props.list.mono.map((url: string, index: number) =>\n  // \t\t\t<div key={'MonoUrlDiv' + index.toString()}>\n  //                 <FormField id={index.toString()} key={'MonoUrl' + index.toString()}\n  // \t\t\t\t\tlabel={'Url'} labelWidth={5}\n  // \t\t\t\t\tinputWidth={20} onChange={this.onMonoListUrlChanged.bind(this)} type='string' value={url || ''} />\n  // \t\t\t\t<Button variant='danger' id={index.toString()} key={'ButtunDel' + index.toString()}\n  // \t\t\t\t\tonClick={this.monoDeletUrl.bind(this)}>Del</Button>\n  // \t\t\t</div>\n  // \t\t);\n  // \t\treturn (\n  // \t\t\t<div>{list}</div>\n  // \t\t);\n  // \t}\n  // \treturn (<div>No targets avalaible</div>);\n  // }\n\n  delAll = () => {\n    // this.props.options.arrayCoordinateSpace = [];\n    // this.props.options.arrayOrientedLinks = [];\n    // this.props.options.arrayPoints = [];\n    this.props.options.saveImportUrl.total = [];\n    this.props.options.saveImportUrl.multi = [];\n    // this.props.options.saveImportUrl.mono = [];\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  toDel = () => {\n    // console.log(this.props.options.saveImportUrl.multi);\n    // console.log(this.props.options.arrayPoints);\n  };\n\n  render() {\n    const { options } = this.props;\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapseTotalUrl} label=\"Global Url Import\" onToggle={this.onToggleTotalUrl}>\n          <FormField\n            label=\"Total Url\"\n            labelWidth={8}\n            key={'TotalUrl'}\n            inputWidth={20}\n            onChange={this.onTotalUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.totalUrlInput || ''}\n          />\n          {/* <Button key={'AddTotalUrl'} onClick={this.addTotalUrlInput}>Add</Button> */}\n          <div className=\"section gf-form-group\">\n            <Button onClick={this.loaderTotal}>Finish</Button>\n            <this.totalUrlDisplay list={options.saveImportUrl} />\n          </div>\n        </Collapse>\n        <Collapse isOpen={this.state.collapseMultiUrl} label=\"Multi Url Import\" onToggle={this.onToggleMultiUrl}>\n          <FormField\n            label=\"Multi Url\"\n            labelWidth={8}\n            key={'MultiUrl'}\n            inputWidth={20}\n            onChange={this.onMultiUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.multiUrlInput || ''}\n          />\n          <Button key={'AddMultiUrl'} onClick={this.addMultiUrlInput}>\n            Add\n          </Button>\n          <div className=\"section gf-form-group\">\n            <Button onClick={this.fetchMulti}>Finish</Button>\n            <this.multiUrlDisplay list={options.saveImportUrl} />\n          </div>\n        </Collapse>\n        <Collapse isOpen={this.state.collapseMultiUpload} label=\"Multi Local Import\" onToggle={this.onToggleMultiUpload}>\n          <div>\n            <DropZone options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n          </div>\n        </Collapse>\n        {/* <div className='section gf-form-group'>\n                    <Collapse isOpen={this.state.collapseMonoUrl}\n\t\t\t\t\t\tlabel='Mono Url' onToggle={this.onToggleMonoUrl}>\n                        <FormField label='Mono Url' labelWidth={8} key={'MonoUrl'}\n                            inputWidth={20} onChange={this.onMonoUrlChanged.bind(this)}\n                            type='string' value={options.monoUrlInput || ''} />\n                        <Button key={'AddMonoUrl'} onClick={this.addMonoUrlInput}>Add</Button>\n                        <div className='section gf-form-group'>\n                            <Button onClick={this.fetchMono}>Load</Button>\n\t\t\t\t\t        <this.monoUrlDisplay list={options.saveImportUrl} />\n\t\t\t\t        </div>\n\t\t\t\t\t</Collapse>\n                </div> */}\n        <div className=\"section gf-form-group\">\n          <Button key={'delAll'} onClick={this.delAll}>\n            Del all urls\n          </Button>\n        </div>\n        <Button onClick={this.toDel}>toDel</Button>\n      </div>\n    );\n  }\n}\nexport default ImportInput;\n","import React from 'react';\n\nimport { SimpleOptions } from 'types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Select, FormLabel } from '@grafana/ui';\n\nimport { RegionClass } from 'Models/RegionClass';\n\nimport CoordinateSpace from './coordinateSpace';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** array for select value with the coordianates space */\n  selectCoordinateSpace: Array<SelectableValue<RegionClass>>;\n  /** default select value */\n  selectCoordinateSpaceDefault: SelectableValue<RegionClass>;\n}\n\ninterface SelectRegion {\n  value: RegionClass;\n  /** label select */\n  label: string;\n}\n\n/**\n * manage coordinate space for simpleEditor\n */\nclass EditCoordinateSpace extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectCoordinateSpace: [],\n      selectCoordinateSpaceDefault: [],\n    };\n  }\n\n  /**\n   * save data in parent\n   */\n  callBack = (id: number, newCoordinate?: RegionClass): void => {\n    if (newCoordinate) {\n      const oldData: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          oldData[i] = newCoordinate;\n          break;\n        }\n        ++i;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: oldData,\n      });\n    } else {\n      let find = false;\n      const oldData: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          find = true;\n          break;\n        }\n        ++i;\n      }\n      if (find) {\n        oldData.splice(i, 1);\n        this.props.onOptionsChange({\n          ...this.props.options,\n          regionCoordinateSpace: oldData,\n        });\n        this.fillSelectRegionSpace();\n      }\n    }\n  };\n\n  /** change select value to edit */\n  onChangeSelectCoordinate = (value: SelectableValue<RegionClass>) => {\n    this.setState({\n      selectCoordinateSpaceDefault: value,\n    });\n  };\n\n  /** fill select whith array region object */\n  fillSelectRegionSpace = () => {\n    let valueExist = false;\n    const valueSelect: SelectRegion[] = [];\n    const stockTmpCoordinatesSpace: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n\n    for (const line of stockTmpCoordinatesSpace) {\n      valueSelect.push({ value: line, label: line.label });\n    }\n    if (this.state.selectCoordinateSpaceDefault) {\n      for (const line of stockTmpCoordinatesSpace) {\n        if (line.id === this.state.selectCoordinateSpaceDefault.value?.id) {\n          valueExist = true;\n          break;\n        }\n      }\n    }\n    // dev\n    // this.setState(prevState => ({\n    //   selectCoordinateSpace: valueSelect,\n    //   selectCoordinateSpaceDefault: valueExist\n    //     ? prevState.selectCoordinateSpaceDefault\n    //     : valueSelect.length > 0\n    //     ? valueSelect[0]\n    //     : prevState.selectCoordinateSpaceDefault,\n    // }));\n    this.setState((prevState) => ({\n      selectCoordinateSpace: valueSelect,\n      selectCoordinateSpaceDefault: valueExist ? prevState.selectCoordinateSpaceDefault : valueSelect.length > 0 ? valueSelect[0] : [],\n    }));\n  };\n\n  /** fill data for select */\n  componentDidMount = () => {\n    this.fillSelectRegionSpace();\n  };\n\n  /** update state if value props change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.options.regionCoordinateSpace !== this.props.options.regionCoordinateSpace) {\n      this.fillSelectRegionSpace();\n    }\n  };\n\n  /** return html */\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Select Region</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectCoordinate(value)}\n            allowCustomValue={false}\n            options={this.state.selectCoordinateSpace}\n            width={10}\n            value={this.state.selectCoordinateSpaceDefault}\n          />\n        </div>\n        <br />\n        <div>\n          {this.state.selectCoordinateSpaceDefault.value ? (\n            <CoordinateSpace\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              coordinate={this.state.selectCoordinateSpaceDefault.value} // selectCoordinateSpaceDefault.value}\n              callBackToParent={this.callBack}\n              isAddCoordinate={false}\n            />\n          ) : (\n            <p\n              style={{\n                textAlign: 'center',\n                fontSize: '20px',\n                marginTop: '50px',\n              }}\n            >\n              Data not set\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default EditCoordinateSpace;\n","import React from 'react';\n\nimport { SimpleOptions } from '../../../types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Select, FormLabel } from '@grafana/ui';\n\nimport { PointClass } from '../../../Models/PointClass';\n\n// import { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n\nimport Point from './point';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** array for select value with the coordianates space */\n  selectCoordinateSpace: Array<SelectableValue<PointClass>>;\n  /** default select value */\n  selectCoordinateSpaceDefault: SelectableValue<PointClass>;\n}\n\ninterface SelectPoint {\n  value: PointClass;\n  /** label select */\n  label: string;\n}\n\n/**\n * manage coordinate space for simpleEditor\n */\nclass EditPoint extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectCoordinateSpace: [],\n      selectCoordinateSpaceDefault: [],\n    };\n  }\n\n  /**\n   * save data in parent\n   */\n  callBack = (id: number, newCoordinate?: PointClass): void => {\n    if (newCoordinate) {\n      const oldData: PointClass[] = this.props.options.arrayPoints.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          oldData[i] = newCoordinate;\n          break;\n        }\n        ++i;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: oldData,\n      });\n      //this.fillSelectPoint();\n    } else {\n      let find = false;\n      const oldData: PointClass[] = this.props.options.arrayPoints.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          find = true;\n          break;\n        }\n        ++i;\n      }\n      if (find) {\n        oldData.splice(i, 1);\n        this.props.onOptionsChange({\n          ...this.props.options,\n          arrayPoints: oldData,\n        });\n        this.fillSelectPoint();\n      }\n    }\n  };\n\n  /** change select value to edit */\n  onChangeSelectCoordinate = (value: SelectableValue<PointClass>) => {\n    this.setState({\n      selectCoordinateSpaceDefault: value,\n    });\n  };\n\n  /** fill select whith array region object */\n  fillSelectPoint = () => {\n    let valueExist = false;\n    const valueSelect: SelectPoint[] = [];\n    const stockTmpCoordinatesSpace: PointClass[] = this.props.options.arrayPoints.slice();\n\n    //valueSelect.push({ value: {}, label: 'No Data' });\n\n    for (const line of stockTmpCoordinatesSpace) {\n      let label = line.label || line.name;\n      valueSelect.push({ value: line, label: label });\n    }\n    if (this.state.selectCoordinateSpaceDefault) {\n      for (const line of stockTmpCoordinatesSpace) {\n        if (line.id === this.state.selectCoordinateSpaceDefault.value?.id) {\n          valueExist = true;\n          break;\n        }\n      }\n    }\n    // dev\n    // this.setState(prevState => ({\n    //   selectCoordinateSpace: valueSelect,\n    //   selectCoordinateSpaceDefault: valueExist\n    //     ? prevState.selectCoordinateSpaceDefault\n    //     : valueSelect.length > 0\n    //     ? valueSelect[0]\n    //     : prevState.selectCoordinateSpaceDefault,\n    // }));\n    this.setState((prevState) => ({\n      selectCoordinateSpace: valueSelect,\n      selectCoordinateSpaceDefault: valueExist ? prevState.selectCoordinateSpaceDefault : valueSelect.length > 0 ? valueSelect[0] : [],\n    }));\n    // final\n    // this.setState({\n    // \tselectCoordinateSpace: valueSelect,\n    // \tselectCoordinateSpaceDefault: (valueSelect.length > 0) ?\n    // \t\tvalueSelect[0] : this.state.selectCoordinateSpaceDefault,\n    // });\n  };\n\n  /** fill data for select */\n  componentDidMount = () => {\n    this.fillSelectPoint();\n  };\n\n  /** update state if value props change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.options.arrayPoints !== this.props.options.arrayPoints) {\n      this.fillSelectPoint();\n    }\n    // console.log(prevProps.options.newPoint);\n    if (prevProps.options.newPoint) {\n      this.fillSelectPoint();\n      this.props.options.newPoint = false;\n    }\n  };\n\n  /** return html */\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Select Point</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectCoordinate(value)}\n            allowCustomValue={false}\n            options={this.state.selectCoordinateSpace}\n            width={10}\n            value={this.state.selectCoordinateSpaceDefault}\n          />\n        </div>\n        <br />\n        <div>\n          {this.state.selectCoordinateSpaceDefault.value ? (\n            <Point\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              point={this.state.selectCoordinateSpaceDefault.value}\n              callBackToParent={this.callBack}\n              isAddPoint={false}\n            />\n          ) : (\n            <p\n              style={{\n                textAlign: 'center',\n                fontSize: '20px',\n                marginTop: '50px',\n              }}\n            >\n              Data not set\n            </p>\n          )}\n        </div>\n        {/* <Button onClick={() => console.log(this.props.options.regionCoordinateSpace)}>Info region</Button>\n\t\t\t\t<Button onClick={() => console.log(this.state.selectCoordinateSpaceDefault)}>Info region</Button> */}\n      </div>\n    );\n  }\n}\nexport default EditPoint;\n","import React from 'react';\n\nimport { SimpleOptions } from '../../../types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Select, FormLabel } from '@grafana/ui';\n\nimport { OrientedLinkClass } from '../../../Models/OrientedLinkClass';\nimport OrientedLink from './orientedLink';\n\n// import { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** array for select value with the coordianates space */\n  selectCoordinateSpace: Array<SelectableValue<OrientedLinkClass>>;\n  /** default select value */\n  selectCoordinateSpaceDefault: SelectableValue<OrientedLinkClass>;\n}\n\ninterface SelectOrientedLink {\n  value: OrientedLinkClass;\n  /** label select */\n  label: string;\n}\n\n/**\n * manage coordinate space for simpleEditor\n */\nclass EditOrientedLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectCoordinateSpace: [],\n      selectCoordinateSpaceDefault: [],\n    };\n  }\n\n  /**\n   * save data in parent\n   */\n  callBack = (id: number, newCoordinate?: OrientedLinkClass): void => {\n    if (newCoordinate) {\n      const oldData: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          oldData[i] = newCoordinate;\n          break;\n        }\n        ++i;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: oldData,\n      });\n      //this.fillSelectOrientedLink();\n    } else {\n      let find = false;\n      const oldData: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          find = true;\n          break;\n        }\n        ++i;\n      }\n      if (find) {\n        oldData.splice(i, 1);\n        this.props.onOptionsChange({\n          ...this.props.options,\n          arrayOrientedLinks: oldData,\n        });\n        this.fillSelectOrientedLink();\n      }\n    }\n  };\n\n  /** change select value to edit */\n  onChangeSelectCoordinate = (value: SelectableValue<OrientedLinkClass>) => {\n    this.setState({\n      selectCoordinateSpaceDefault: value,\n    });\n  };\n\n  /** fill select whith array region object */\n  fillSelectOrientedLink = () => {\n    let valueExist = false;\n    const valueSelect: SelectOrientedLink[] = [];\n    const stockTmpCoordinatesSpace: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n\n    for (const line of stockTmpCoordinatesSpace) {\n      let label = line.label || line.name;\n      valueSelect.push({ value: line, label: label });\n    }\n    if (this.state.selectCoordinateSpaceDefault) {\n      for (const line of stockTmpCoordinatesSpace) {\n        if (line.id === this.state.selectCoordinateSpaceDefault.value?.id) {\n          valueExist = true;\n          break;\n        }\n      }\n    }\n    // dev\n    // this.setState(prevState => ({\n    //   selectCoordinateSpace: valueSelect,\n    //   selectCoordinateSpaceDefault: valueExist\n    //     ? prevState.selectCoordinateSpaceDefault\n    //     : valueSelect.length > 0\n    //     ? valueSelect[0]\n    //     : prevState.selectCoordinateSpaceDefault,\n    // }));\n    this.setState((prevState) => ({\n      selectCoordinateSpace: valueSelect,\n      selectCoordinateSpaceDefault: valueExist ? prevState.selectCoordinateSpaceDefault : valueSelect.length > 0 ? valueSelect[0] : [],\n    }));\n    // final\n    // this.setState({\n    // \tselectCoordinateSpace: valueSelect,\n    // \tselectCoordinateSpaceDefault: (valueSelect.length > 0) ?\n    // \t\tvalueSelect[0] : this.state.selectCoordinateSpaceDefault,\n    // });\n  };\n\n  /** fill data for select */\n  componentDidMount = () => {\n    this.fillSelectOrientedLink();\n  };\n\n  /** update state if value props change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.options.arrayOrientedLinks !== this.props.options.arrayOrientedLinks) {\n      this.fillSelectOrientedLink();\n    }\n    if (prevProps.options.newOrientedLink) {\n      this.fillSelectOrientedLink();\n      this.props.options.newOrientedLink = false;\n    }\n  };\n\n  /** return html */\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Select Oriented Link</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectCoordinate(value)}\n            allowCustomValue={false}\n            options={this.state.selectCoordinateSpace}\n            width={10}\n            value={this.state.selectCoordinateSpaceDefault}\n          />\n        </div>\n        <br />\n        <div>\n          {this.state.selectCoordinateSpaceDefault.value ? (\n            <OrientedLink\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              orientedLink={this.state.selectCoordinateSpaceDefault.value}\n              callBackToParent={this.callBack}\n              isAddLink={false}\n            />\n          ) : (\n            <p\n              style={{\n                textAlign: 'center',\n                fontSize: '20px',\n                marginTop: '50px',\n              }}\n            >\n              Data not set\n            </p>\n          )}\n        </div>\n        {/* <Button onClick={() => console.log(this.props.options.regionCoordinateSpace)}>Info region</Button>\n\t\t\t\t<Button onClick={() => console.log(this.state.selectCoordinateSpaceDefault)}>Info region</Button> */}\n      </div>\n    );\n  }\n}\nexport default EditOrientedLink;\n","import React from 'react';\nimport { Tab, TabsBar, TabContent } from '@grafana/ui';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport EditCoordinateSpace from './editCoordinateSpace';\nimport EditPoint from './point/editPoint';\nimport EditOrientedLink from './orientedLink/editOrientedLink';\nimport AddCoordinate from './addCoordinate';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  isRegion: boolean;\n  isPoint: boolean;\n  isLink: boolean;\n}\n\ninterface State {\n  /** manage tabs focus */\n  tabsVariable: boolean[];\n}\n\n/**\n * def class\n */\nclass ManageCoordinateSpace extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      tabsVariable: [false, true],\n    };\n  }\n\n  /** after save pass to edit mode */\n  returnEditMode = () => {\n    this.setState({\n      tabsVariable: [false, true],\n    });\n  };\n\n  /**\n   * switch tab\n   * @param {number} id id to to new tab\n   */\n  goToTab = (id: number): void => {\n    const oldValue: boolean[] = this.state.tabsVariable.slice();\n    const size: number = oldValue.length;\n    for (let i = 0; i < size; i++) {\n      oldValue[i] = i === id ? true : false;\n    }\n    this.setState({\n      tabsVariable: oldValue,\n    });\n  };\n\n  private contentTabEdit = (): JSX.Element => {\n    let result: JSX.Element = <div></div>;\n    if (this.props.isRegion) {\n      result = (\n        <div>\n          <EditCoordinateSpace onOptionsChange={this.props.onOptionsChange} options={this.props.options} data={this.props.data} />\n        </div>\n      );\n    } else if (this.props.isPoint) {\n      result = (\n        <div>\n          <EditPoint onOptionsChange={this.props.onOptionsChange} options={this.props.options} data={this.props.data} />\n        </div>\n      );\n    } else if (this.props.isLink) {\n      result = (\n        <div>\n          <EditOrientedLink onOptionsChange={this.props.onOptionsChange} options={this.props.options} data={this.props.data} />\n        </div>\n      );\n    }\n    return result;\n  };\n\n  /** result */\n  render() {\n    if (!this.props.isLink) {\n      return (\n        <div>\n          <TabsBar className=\"page-header tabs\" hideBorder={false}>\n            <Tab\n              key=\"tabDisplayCoordinateSpaceAdd\"\n              label=\"Add coordinate space\"\n              active={this.state.tabsVariable[0]}\n              onChangeTab={() => this.goToTab(0)}\n            />\n            <Tab\n              key=\"tabDisplayCoordinateSpaceEdit\"\n              label=\"Edit coordinate space\"\n              active={this.state.tabsVariable[1]}\n              onChangeTab={() => this.goToTab(1)}\n            />\n          </TabsBar>\n          <TabContent>\n            {this.state.tabsVariable[0] && (\n              <AddCoordinate\n                onOptionsChange={this.props.onOptionsChange}\n                options={this.props.options}\n                data={this.props.data}\n                returnEditMode={this.returnEditMode}\n                isRegion={this.props.isRegion}\n                isPoint={this.props.isPoint}\n                isLink={this.props.isLink}\n              />\n            )}\n            {this.state.tabsVariable[1] && this.contentTabEdit()}\n          </TabContent>\n          {/* <Button onClick={() => console.log(this.props.data.series)}>List all metrics</Button> */}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <TabsBar className=\"page-header tabs\" hideBorder={false}>\n            <Tab\n              key=\"tabDisplayCoordinateSpaceEdit\"\n              label=\"Edit coordinate space\"\n              active={this.state.tabsVariable[1]}\n              onChangeTab={() => this.goToTab(1)}\n            />\n          </TabsBar>\n          <TabContent>{this.state.tabsVariable[1] && this.contentTabEdit()}</TabContent>\n          {/* <Button onClick={() => console.log(this.props.data.series)}>List all metrics</Button> */}\n        </div>\n      );\n    }\n  }\n}\nexport default ManageCoordinateSpace;\n","import React, { FunctionComponent } from 'react';\nimport { Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\ntype InputSelectProps = {\n  _onChange: Function;\n  data: Array<SelectableValue<string>>;\n  defaultValue: SelectableValue<string>;\n};\n\nconst InputSelect: FunctionComponent<InputSelectProps> = ({ _onChange, data, defaultValue }) => (\n  <div>\n    <Select onChange={(value) => _onChange(value)} allowCustomValue={false} options={data} width={30} value={defaultValue} />\n  </div>\n);\n\nexport default InputSelect;\n","import React from 'react';\nimport { SimpleOptions, Background } from 'types';\n\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { FormField, Switch, FormLabel } from '@grafana/ui';\n\nimport InputSelect from 'Functions/Input/inputSelect';\nimport StyleComponent, { Style } from './Parametrage/styleComponent';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** police choice in select */\n  newPolice: SelectableValue<string>;\n  /** size variable for input */\n  size: string;\n  /** style variable for input */\n  style: Style;\n  /** background uploaded from computer */\n  imageUploaded: string;\n}\n\n/**\n * class to manage police, size and style\n */\nclass Display extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newPolice: {\n        value: this.props.options.display.police,\n        label: this.props.options.display.police,\n      },\n      size: this.props.options.display.size,\n      style: this.props.options.display.style,\n      imageUploaded: '',\n    };\n  }\n\n  /**\n   * call parent with new data\n   */\n  callParent = () => {\n    const { newPolice, size, style } = this.state;\n    const pPolice: string = newPolice.value || '';\n    const pSize = size;\n    const pStyle = style;\n\n    this.props.onOptionsChange({\n      ...this.props.options,\n      display: {\n        police: pPolice,\n        size: pSize,\n        style: pStyle,\n      },\n    });\n  };\n\n  /**\n   * set police state async\n   */\n  setStateAsyncPolice = (state: {\n    /** new police value */\n    newPolice: SelectableValue<string>;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      this.callParent();\n    });\n  };\n\n  /**\n   * set size state async\n   */\n  setStateAsyncsize = (state: {\n    /** new size value */\n    size: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      this.callParent();\n    });\n  };\n\n  /**\n   * set style state async\n   */\n  setStateAsyncStyle = (state: {\n    /** new style value */\n    style: Style;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      this.callParent();\n    });\n  };\n\n  /**\n   * edit size\n   */\n  handleChangesize = async (event: {\n    /** target to input element */\n    target: HTMLInputElement;\n  }) => {\n    await this.setStateAsyncsize({\n      size: event.target.value,\n    });\n    this.callParent();\n  };\n\n  // /**\n  //  * edit style\n  //  */\n  // handleChangeStyle = async (event: {\n  //   /** target to input element */\n  //   target: HTMLInputElement;\n  // }) => {\n  //   await this.setStateAsyncStyle({\n  //     style: event.target.value,\n  //   });\n  //   this.callParent();\n  // };\n\n  /**\n   * edit police\n   */\n  onChangePolice = async (value: SelectableValue<string>) => {\n    await this.setStateAsyncPolice({\n      newPolice: value,\n    });\n    this.callParent();\n  };\n\n  /**\n   * Change background picture\n   */\n  onImageChanged = (e: {\n    /**\n     * Get target element\n     */\n    target: HTMLInputElement;\n  }) => {\n    const newBaseMap: Background = this.props.options.baseMap;\n    const image = e.target.value;\n    //const arrayImage = image.split('.');\n    newBaseMap.image = image;\n    // if (image.split(',')[0] === 'base64') {\n    //   // on ne fait rien car la base 64 peut être un jpeg ou un svg\n    //   // l'utilisateur doit bien le spécifier avant sur le switch Use SVG\n    // } else if (image.split('.')[arrayImage.length - 1] === 'svg') {\n    //   // si la valeur renseignée est une url et que l'extension du fichier est svg\n    //   // on passe automatiquement le swith Use SVG à true\n    //   newBaseMap.modeSVG = true;\n    // } else {\n    //   // si la valeur renseignée est une url et que l'extension du fichier n'est pas un svg\n    //   // on passe automatiquement le swith Use SVG à false\n    //   newBaseMap.modeSVG = false;\n    // }\n    this.props.onOptionsChange({\n      ...this.props.options,\n      baseMap: newBaseMap,\n    });\n    // this.props.onOptionsChange({ ...this.props.options, imageUrl: event.target.value });\n  };\n\n  /** edit modeSVG */\n  onChangeSwitchModeSVG = () => {\n    const { options, onOptionsChange } = this.props;\n    const oldValue: Background = options.baseMap;\n\n    oldValue.modeSVG = !oldValue.modeSVG;\n    onOptionsChange({ ...options, baseMap: oldValue });\n  };\n\n  /** edit modeSVG */\n  onChangeHeightBaseMap = (e: {\n    /** new value for height */\n    target: HTMLInputElement;\n  }) => {\n    this.props.options.updateOnlyInitialSpace = false;\n    const { options, onOptionsChange } = this.props;\n    const oldValue: Background = options.baseMap;\n\n    oldValue.height = e.target.value;\n    onOptionsChange({ ...options, baseMap: oldValue });\n  };\n\n  /** edit modeSVG */\n  onChangeWidthBaseMap = (e: {\n    /** new value for width */\n    target: HTMLInputElement;\n  }) => {\n    this.props.options.updateOnlyInitialSpace = false;\n    const { options, onOptionsChange } = this.props;\n    const oldValue: Background = options.baseMap;\n\n    oldValue.width = e.target.value;\n    onOptionsChange({ ...options, baseMap: oldValue });\n  };\n\n  saveStyleData = (style: Style): void => {\n    this.setStateAsyncStyle({ style: style });\n  };\n\n  uploadImage = (event: any) => {\n    const readerFile: FileReader = new FileReader();\n    const selectedFile: any = event.target.files[0];\n    const extensionFile = selectedFile.name.split('.')[1];\n    let file: any;\n    if (extensionFile === 'jpg' || extensionFile === 'png' || extensionFile === 'gif') {\n      readerFile.readAsDataURL(selectedFile);\n    } else {\n      readerFile.readAsText(selectedFile);\n    }\n    readerFile.onload = function () {\n      file = readerFile.result;\n    };\n\n    setTimeout(() => {\n      let newBaseMap: Background = this.props.options.baseMap;\n      if (extensionFile === 'svg') {\n        newBaseMap.image = file;\n        newBaseMap.modeSVG = true;\n        newBaseMap.isUploaded = true;\n        newBaseMap.nameUploadedImage = selectedFile.name;\n      } else if (extensionFile === 'jpg' || extensionFile === 'png' || extensionFile === 'gif') {\n        newBaseMap.image = file;\n        newBaseMap.modeSVG = false;\n        newBaseMap.isUploaded = true;\n        newBaseMap.nameUploadedImage = selectedFile.name;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        baseMap: newBaseMap,\n      });\n    }, 1000);\n  };\n\n  defineValueImage = (): string => {\n    let result = '';\n    if (!this.props.options.baseMap.isUploaded) {\n      result = this.props.options.baseMap.image || '';\n    }\n    return result;\n  };\n\n  /**\n   * html\n   */\n  render() {\n    const { options } = this.props;\n\n    const police: Array<SelectableValue<string>> = [\n      { value: 'Helvetica', label: 'Helvetica' },\n      { value: 'Arial', label: 'Arial' },\n      { value: 'sans-serif', label: 'sans-serif' },\n      { value: 'mono', label: 'mono' },\n    ];\n\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <div style={{ display: 'flex', marginBottom: 1 }}>\n          <FormLabel width={15}>Police</FormLabel>\n          <InputSelect _onChange={this.onChangePolice} data={police} defaultValue={this.state.newPolice} />\n        </div>\n\n        <FormField\n          label={l10n.textDefault.size}\n          labelWidth={15}\n          inputWidth={30}\n          required={true}\n          value={this.state.size}\n          onChange={this.handleChangesize}\n        />\n\n        <StyleComponent oldStyle={this.state.style} saveParent={this.saveStyleData} />\n        {/* \n        <FormField\n          label={l10n.textDefault.style}\n          labelWidth={10}\n          inputWidth={15}\n          required={true}\n          value={this.state.style}\n          onChange={this.handleChangeStyle}\n        /> */}\n\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Use SVG</FormLabel>\n          <Switch labelClass=\"\" label=\"\" checked={options.baseMap.modeSVG} onChange={this.onChangeSwitchModeSVG} />\n        </div>\n        {/* {options.baseMap.modeSVG ? (\n          <FormField\n            label={l10n.simpleEditor.pictureLink}\n            labelWidth={10}\n            inputWidth={30}\n            type=\"text\"\n            onChange={this.onImageChanged}\n            value={options.baseMap.image || ''}\n          />\n        ) : ( */}\n        <div>\n          <FormField\n            label={'Image'}\n            labelWidth={15}\n            inputWidth={30}\n            placeholder={'URL'}\n            type=\"text\"\n            onChange={this.onImageChanged}\n            value={this.defineValueImage()}\n          />\n          <div style={{ display: 'flex', margin: '2px 0' }}>\n            <FormLabel width={15}>Upload Image</FormLabel>\n            <input\n              style={{ border: '1px solid #262628', borderRadius: '0 3px 3px 0', width: '416px' }}\n              type=\"file\"\n              name=\"file\"\n              onChange={this.uploadImage}\n            />\n            <p style={{ margin: '10px 0 0 10px', fontSize: '10px' }}>{this.props.options.baseMap.nameUploadedImage || ''}</p>\n          </div>\n          <FormField\n            label=\"Width\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            onChange={this.onChangeWidthBaseMap}\n            value={options.baseMap.width || ''}\n          />\n          <FormField\n            label=\"Height\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            onChange={this.onChangeHeightBaseMap}\n            value={options.baseMap.height || ''}\n          />\n        </div>\n        {/* )} */}\n      </div>\n    );\n  }\n}\n\nexport default Display;\n","//import { SimpleOptions, GlobalGabarit, GabaritFile, TemplateGabaritLink, TemplateGabaritPoint, TemplateGabaritRegion } from '../types';\n//import { Button } from '@grafana/ui';\n\nimport { Coord4D } from 'Models/RegionClass';\n\n// import { PointClass } from '../Models/PointClass';\n// import { RegionClass, Coord4D } from '../Models/RegionClass';\n// import { OrientedLinkClass } from '../Models/OrientedLinkClass';\n\nexport interface LabelCoord2D {\n  x: string;\n  y: string;\n}\n\nexport const coordParse = (coord: string) => {\n  let tmp: string[] = coord.split('#');\n  let result: LabelCoord2D = { x: '', y: '' };\n  result.x = tmp[0].split('|')[1];\n  result.y = tmp[1].split('|')[1];\n  return result;\n};\n\n// Coord Region\nexport const coordParseRegion = (coord: string) => {\n  let tt: string[] = coord.split('#');\n  let result: Coord4D = { xMin: '', xMax: '', yMin: '', yMax: '' };\n  result.xMin = tt[0].split('|')[1];\n  result.xMax = tt[1].split('|')[1];\n  result.yMin = tt[2].split('|')[1];\n  result.yMax = tt[3].split('|')[1];\n  return result;\n};\n\nexport interface Filtred {\n  label: string;\n  value: string;\n}\n\n// FilterParse Region\n\nexport const filterParseRegion = (filter: string) => {\n  let tt: string[] = filter.split('#');\n  let result: Filtred[] = [];\n  tt.forEach((element) => {\n    let split: string[] = element.split('|');\n    result.push({ label: split[0], value: split[1] });\n  });\n  return result;\n};\n\nexport const filterParse = (filter: string) => {\n  if (filter.length > 0) {\n    let tmp: string[] = filter.split('#');\n    let result: Filtred[] = [];\n    tmp.forEach((element) => {\n      let split: string[] = element.split('|');\n      result.push({ label: split[0], value: split[1] });\n    });\n    return result;\n  }\n  return [];\n};\n","import React from 'react';\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\n// add Metadata\nimport { SimpleOptions, GabaritFile, Metric, Metadata } from '../types';\nimport { FormField, Button, Collapse, FormLabel, Select } from '@grafana/ui';\n//import /*pointClassImport, regionClassImport, gabaritPointClassImport, gabaritRegionClassImport */ '../../config/testVariable';\nimport { coordParse, LabelCoord2D, Filtred, filterParse, coordParseRegion, filterParseRegion } from '../Functions/loaderGabarit';\n//import { LinkURLClass } from 'Models/LinkURLClass';\n//import { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\n//import { LowerLimitClass } from 'Models/LowerLimitClass';\n//import { TextObject } from 'Models/TextObjectClass';\n\nimport { reqMetricPoint, reqMetricOrientedLink } from '../Functions/fetchMetrics';\n\nimport { PointClass } from 'Models/PointClass';\nimport { TextObject, GenerateTextObject } from 'Models/TextObjectClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { searchNameIsFilter } from 'Functions/getResultQuery';\n// import { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n// import { LowerLimitClass } from 'Models/LowerLimitClass';\n// import { initPoint } from 'Functions/initPoint';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\n/*\n * TODO\n */\n\ninterface State {\n  selectQuerryID: Array<SelectableValue<string>>;\n  collapseSelectURL: boolean;\n  collapseGabarit: boolean;\n  collapseGabaritDefault: boolean;\n}\n\n// interface SelectQueryID {\n//   value: string;\n//   label: string;\n// }\n\nclass Gabarit extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectQuerryID: [\n        { label: 'A', value: 'A' },\n        { label: 'B', value: 'B' },\n        { label: 'C', value: 'C' },\n        { label: 'D', value: 'D' },\n        { label: 'E', value: 'E' },\n        { label: 'F', value: 'F' },\n        { label: 'G', value: 'G' },\n        { label: 'H', value: 'H' },\n        { label: 'I', value: 'I' },\n        { label: 'J', value: 'J' },\n        { label: 'K', value: 'K' },\n        { label: 'L', value: 'L' },\n        { label: 'M', value: 'M' },\n        { label: 'N', value: 'N' },\n        { label: 'O', value: 'O' },\n        { label: 'P', value: 'P' },\n        { label: 'Q', value: 'Q' },\n        { label: 'R', value: 'R' },\n        { label: 'S', value: 'S' },\n        { label: 'T', value: 'T' },\n        { label: 'U', value: 'U' },\n        { label: 'V', value: 'V' },\n        { label: 'W', value: 'W' },\n        { label: 'X', value: 'X' },\n        { label: 'Y', value: 'Y' },\n        { label: 'Z', value: 'Z' },\n      ],\n      collapseSelectURL: false,\n      collapseGabarit: false,\n      collapseGabaritDefault: false,\n    };\n  }\n  result: any[] = [];\n\n  /**************************************CATCH******************************************/\n\n  onChangeSelectQuerryID = (value: SelectableValue<string>, index: number) => {\n    let newGabaritFile: GabaritFile[] = this.props.options.saveGabaritFile;\n    newGabaritFile[index].queryID = value.value!;\n    this.props.onOptionsChange({\n      ...this.props.options,\n      saveGabaritFile: newGabaritFile,\n    });\n  };\n\n  onToggleSelectUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseSelectURL: isOpen,\n    });\n  };\n\n  UrlValidator = (url: string) => {\n    let result = true;\n    for (let index in this.props.options.saveGabaritURL) {\n      if (this.props.options.saveGabaritURL[index] === url) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  };\n\n  GabaritValidator = (name: string) => {\n    let result = true;\n    this.props.options.saveGabaritFile.forEach((element) => {\n      if (element.fileName === name) {\n        console.log('LoadGabaritFileReject');\n        result = false;\n      }\n    });\n    return result;\n  };\n\n  /**************************************LOADER******************************************/\n\n  // quantile|0.5#slice|inner_eval\n  loadGabarit = (file: any, url: string) => {\n    let name = url.split('/');\n    if (this.GabaritValidator(name[name.length - 1])) {\n      let newGabarit: GabaritFile = {\n        queryID: 'null',\n        fileName: name[name.length - 1],\n        loaded: false,\n        globalGabarit: file.global,\n        templateGabaritPoint: [],\n        templateGabaritRegion: [],\n        templateGabaritLink: [],\n        templateGabaritPointDefault: [],\n        templateGabaritRegionDefault: [],\n        templateGabaritLinkDefault: [],\n      };\n      file.templates.forEach((gab: any) => {\n        if (gab.type === 'point') {\n          newGabarit.templateGabaritPoint.push(gab);\n        }\n        if (gab.type === 'region') {\n          newGabarit.templateGabaritRegion.push(gab);\n        }\n        if (gab.type === 'link') {\n          newGabarit.templateGabaritLink.push(gab);\n        }\n      });\n      file.default.templates.forEach((gab: any) => {\n        if (gab.type === 'point') {\n          newGabarit.templateGabaritPointDefault.push(gab);\n        }\n        if (gab.type === 'region') {\n          newGabarit.templateGabaritRegionDefault.push(gab);\n        }\n        if (gab.type === 'link') {\n          newGabarit.templateGabaritLinkDefault.push(gab);\n        }\n      });\n      this.props.options.saveGabaritFile.push(newGabarit);\n    }\n  };\n\n  fetchUrl = async (url: string) => {\n    try {\n      let file = {};\n      let response = await fetch(url);\n\n      file = await response.json();\n      return file;\n    } catch (error) {\n      console.error(error);\n    }\n    return null;\n  };\n\n  loadDefaultGabarit = async (file: any, url: string) => {\n    let name = url.split('/');\n    let newGabarit: GabaritFile = {\n      queryID: 'null',\n      fileName: name[name.length - 1],\n      loaded: false,\n      globalGabarit: file.global,\n      templateGabaritPoint: [],\n      templateGabaritRegion: [],\n      templateGabaritLink: [],\n      templateGabaritPointDefault: [],\n      templateGabaritRegionDefault: [],\n      templateGabaritLinkDefault: [],\n    };\n    file.default.templates.forEach((gab: any) => {\n      if (gab.type === 'point') {\n        newGabarit.templateGabaritPointDefault.push(gab);\n      }\n      if (gab.type === 'region') {\n        newGabarit.templateGabaritRegionDefault.push(gab);\n      }\n      if (gab.type === 'link') {\n        newGabarit.templateGabaritLinkDefault.push(gab);\n      }\n    });\n    this.props.options.gabaritDefault = newGabarit;\n  };\n\n  fetchGabarit = () => {\n    //this.result = fetchConfFile(this.props.options.saveGabaritURL);\n    this.props.options.saveGabaritURL.forEach(async (url) => {\n      try {\n        let file = {};\n        let response = await fetch(url);\n        file = await response.json();\n        this.loadGabarit(file, url);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  };\n\n  /**************************************CHECK TOLOAD/ADD FILTER******************************************/\n\n  addFilterDynamic = (metric: Metric, label: LabelCoord2D, value: LabelCoord2D) => {\n    let result: Metric = {\n      key: metric.key,\n      unit: metric.unit,\n      format: metric.format,\n      keyValue: metric.keyValue,\n      filter: JSON.parse(JSON.stringify(metric.filter)),\n      expr: metric.expr,\n      returnQuery: metric.returnQuery,\n      manageValue: metric.manageValue,\n    };\n    if (label.x !== value.x) {\n      result.filter!.push({ label: label.x, value: value.x });\n    }\n    if (label.y !== value.y) {\n      result.filter!.push({ label: label.y, value: value.y });\n    }\n    return result;\n  };\n\n  checkCoordinateFilterPoint = (point: PointClass, props: any) => {\n    reqMetricPoint(point, props);\n    point.mainMetric.returnQuery?.forEach((dataFrame) => {\n      const result = searchNameIsFilter(dataFrame, point.mainMetric);\n      if (result) {\n        this.props.options.arrayPoints.push(point);\n      } else {\n        console.log('Filter not found -> no load');\n      }\n    });\n  };\n\n  checkCoordinateFilterLink = (link: OrientedLinkClass, props: any) => {\n    reqMetricOrientedLink(link, props);\n    link.mainMetric.returnQuery?.forEach((dataFrame) => {\n      const result = searchNameIsFilter(dataFrame, link.mainMetric);\n      if (result) {\n        this.props.options.arrayOrientedLinks.push(link);\n      } else {\n        console.log('Filter not found -> no load');\n      }\n    });\n  };\n\n  /**************************************INPUT******************************************/\n\n  onToggleGabaritUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseSelectURL: isOpen,\n    });\n  };\n\n  onToggleGabaritDefault = (isOpen: boolean): void => {\n    this.setState({\n      collapseGabaritDefault: isOpen,\n    });\n  };\n\n  onToggleGabarit = (isOpen: boolean): void => {\n    this.setState({\n      collapseGabarit: isOpen,\n    });\n  };\n\n  onGabaritUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, gabaritUrlInput: newData });\n  };\n\n  /*\n   * add url for default gabarit\n   */\n  onGabaritDefaultUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritDefaultUrl: newData });\n  };\n\n  onGabaritListUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: string[] = this.props.options.saveGabaritURL.slice();\n    newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n    this.props.options.saveGabaritURL = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n  };\n\n  addGabaritUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n    let valid = true;\n    this.props.options.saveGabaritURL.forEach((element) => {\n      if (this.props.options.gabaritUrlInput === element) {\n        valid = false;\n      }\n    });\n    if (valid === true) {\n      this.props.options.saveGabaritURL.push(this.props.options.gabaritUrlInput);\n      this.props.options.gabaritUrlInput = '';\n      this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n    }\n  };\n\n  addGabaritDefaultUrlInput = async (onClick: { currentTarget: HTMLButtonElement }) => {\n    try {\n      const url = this.props.options.saveGabaritDefaultUrl;\n      let file = {};\n      let response = await fetch(this.props.options.saveGabaritDefaultUrl);\n\n      file = await response.json();\n      this.loadDefaultGabarit(file, url);\n    } catch (error) {\n      console.log('Default gabarit error:');\n      console.error(error);\n    }\n  };\n\n  gabaritDeletUrl = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: string) => url === this.props.options.saveGabaritURL[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveGabaritURL.splice(this.props.options.saveGabaritURL.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n  };\n\n  gabaritDeletFile = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isGabarit = (gabarit: GabaritFile) => gabarit === this.props.options.saveGabaritFile[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveGabaritFile.splice(this.props.options.saveGabaritFile.findIndex(isGabarit), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritFile: this.props.options.saveGabaritFile });\n  };\n\n  gabaritDeletFileDefault = (onClick: { currentTarget: HTMLButtonElement }) => {\n    this.props.options.gabaritDefault = {\n      queryID: 'A',\n      fileName: '',\n      loaded: false,\n      globalGabarit: {\n        lowerLimit: [\n          {\n            id: 0,\n            lowerLimitMin: '0',\n            lowerLimitMax: '0',\n            backColor: 'blue',\n            borderColor: 'red',\n            sizeBorder: '1px',\n          },\n        ],\n        textObject: {\n          value: 'default',\n          isTextTooltip: false,\n          colorBack: 'blue',\n          colorText: 'black',\n          style: {\n            bold: false,\n            italic: false,\n            underline: false,\n          },\n          generateObjectText: false,\n          valueGenerateObjectText: {\n            legendElement: 'default',\n            numericFormatElement: 'default',\n            unit: 'default',\n            displayObjectInTooltip: false,\n            addColorTextElement: false,\n            colorTextElement: 'black',\n            addColorBackElement: false,\n            colorBackElement: 'white',\n          },\n          generateAuxiliaryElement: {\n            legendElement: 'default',\n            numericFormatElement: 'default',\n            unit: 'default',\n            displayObjectInTooltip: false,\n            addColorTextElement: false,\n            colorTextElement: 'black',\n            addColorBackElement: false,\n            colorBackElement: 'white',\n          },\n        },\n        defaultColor: 'black',\n        colorMode: true,\n        traceBack: true,\n        traceBorder: true,\n      },\n      templateGabaritPoint: [],\n      templateGabaritRegion: [],\n      templateGabaritLink: [],\n      templateGabaritPointDefault: [],\n      templateGabaritRegionDefault: [],\n      templateGabaritLinkDefault: [],\n    };\n    this.props.onOptionsChange({ ...this.props.options, gabaritDefault: this.props.options.gabaritDefault });\n  };\n\n  /**************************************LOADER******************************************/\n\n  checkLoaderGabarit = (onClick: { currentTarget: HTMLButtonElement }) => {\n    if (!this.props.options.saveGabaritFile[parseInt(onClick.currentTarget.id, 10)].loaded) {\n      this.loaderGabarit(this.props.options.saveGabaritFile[parseInt(onClick.currentTarget.id, 10)], parseInt(onClick.currentTarget.id, 10));\n    } else {\n      console.log('loadGabaritReject');\n    }\n  };\n\n  loaderGabarit = (gab: GabaritFile, idx: number | null) => {\n    let tmpLabelAPosition: LabelCoord2D;\n    let tmpLabelBPosition: LabelCoord2D;\n    let tmpToolTipA: SelectableValue<string>;\n    let tmpToolTipB: SelectableValue<string>;\n    /* Point */\n    //template\n    let filterPoint: Filtred[][] = [];\n    let posPoint: LabelCoord2D[] = [];\n    let namePoint: string[] = [];\n    // add metadata\n    let metaPoint: Metadata[][] = [];\n    let labelPoint: string[] = [];\n    let positionParameterPoint: PositionParameterClass[] = [];\n    let mainMetricPoint: Metric[] = [];\n    let metricPoint: Metric[][] = [];\n    let linkURLPoint: LinkURLClass[] = [];\n    let valueMetricPoint: string[] = [];\n    let drawGraphicMarkerPoint: Array<SelectableValue<string>> = [];\n    let shapePoint: Array<SelectableValue<string>> = [];\n    //let sizeWidthPoint: Array<SelectableValue<string>> = [];\n    let sizeWidthPoint: string[] = [];\n    let sizeHeightPoint: Array<SelectableValue<string>> = [];\n    let colorPoint: string[] = [];\n    let associateOrientedLinksInPoint: OrientedLinkClass[][] = [];\n    let associateOrientedLinksOutPoint: OrientedLinkClass[][] = [];\n    //global\n    //let lowerLimit: LowerLimitClass;\n    let colorMode: boolean;\n    let traceBack: boolean;\n    let traceBorder: boolean;\n    let textObj: TextObject;\n    let style: Style;\n    let generateValue: GenerateTextObject;\n    let generateAux: GenerateTextObject;\n\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const widthInitialSpace = xMaxInitialSpace - xMinInitialSpace;\n\n    const heightBackground = parseInt(this.props.options.baseMap.height, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const heightInitialSpace = yMaxInitialSpace - yMinInitialSpace;\n\n    /* Region */\n    //Template\n\n    const gabaritFileTmp: GabaritFile = gab;\n    colorMode = Boolean(gabaritFileTmp.globalGabarit.colorMode);\n    traceBack = Boolean(gabaritFileTmp.globalGabarit.traceBack);\n    traceBorder = Boolean(gabaritFileTmp.globalGabarit.traceBorder);\n\n    ////// Text Object\n    generateValue = {\n      legendElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.legendElement,\n      numericFormatElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.numericFormatElement,\n      unit: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.unit,\n      displayObjectInTooltip: Boolean(gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.displayObjectInTooltip),\n      addColorTextElement: Boolean(gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.addColorTextElement),\n      colorTextElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.colorTextElement,\n      addColorBackElement: Boolean(gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.addColorBackElement),\n      colorBackElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.colorBackElement,\n    };\n\n    if (!generateValue.unit) {\n      generateValue = {\n        legendElement: this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.legendElement,\n        numericFormatElement: this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.numericFormatElement,\n        unit: this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.unit,\n        displayObjectInTooltip: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.displayObjectInTooltip),\n        addColorTextElement: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.addColorTextElement),\n        colorTextElement: this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.colorTextElement,\n        addColorBackElement: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.addColorBackElement),\n        colorBackElement: this.props.options.gabaritDefault.globalGabarit.textObject.valueGenerateObjectText.colorBackElement,\n      };\n    }\n\n    generateAux = {\n      legendElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.legendElement,\n      numericFormatElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.numericFormatElement,\n      unit: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.unit,\n      displayObjectInTooltip: Boolean(gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.displayObjectInTooltip),\n      addColorTextElement: Boolean(gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.addColorTextElement),\n      colorTextElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.colorTextElement,\n      addColorBackElement: Boolean(gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.addColorBackElement),\n      colorBackElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.colorBackElement,\n    };\n\n    if (!generateAux.unit) {\n      generateAux = {\n        legendElement: this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.legendElement,\n        numericFormatElement: this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.numericFormatElement,\n        unit: this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.unit,\n        displayObjectInTooltip: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.displayObjectInTooltip),\n        addColorTextElement: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.addColorTextElement),\n        colorTextElement: this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.colorTextElement,\n        addColorBackElement: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.addColorBackElement),\n        colorBackElement: this.props.options.gabaritDefault.globalGabarit.textObject.generateAuxiliaryElement.colorBackElement,\n      };\n    }\n\n    style = {\n      bold: Boolean(gabaritFileTmp.globalGabarit.textObject.style.bold),\n      italic: Boolean(gabaritFileTmp.globalGabarit.textObject.style.italic),\n      underline: Boolean(gabaritFileTmp.globalGabarit.textObject),\n    };\n\n    if (!style.bold) {\n      style = {\n        bold: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.style.bold),\n        italic: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.style.italic),\n        underline: Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.style.underline),\n      };\n    }\n\n    textObj = new TextObject(\n      gabaritFileTmp.globalGabarit.textObject.value,\n      Boolean(gabaritFileTmp.globalGabarit.textObject.isTextTooltip),\n      gabaritFileTmp.globalGabarit.textObject.colorBack,\n      gabaritFileTmp.globalGabarit.textObject.colorText,\n      style,\n      Boolean(gabaritFileTmp.globalGabarit.textObject.generateObjectText),\n      generateValue,\n      generateAux\n    );\n\n    if (!textObj.value) {\n      textObj = new TextObject(\n        this.props.options.gabaritDefault.globalGabarit.textObject.value,\n        Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.isTextTooltip),\n        this.props.options.gabaritDefault.globalGabarit.textObject.colorBack,\n        this.props.options.gabaritDefault.globalGabarit.textObject.colorText,\n        style,\n        Boolean(this.props.options.gabaritDefault.globalGabarit.textObject.generateObjectText),\n        generateValue,\n        generateAux\n      );\n    }\n\n    gabaritFileTmp.templateGabaritPoint.forEach((point, index) => {\n      if (point.labelfix.toString() === 'false') {\n        posPoint.push(coordParse(point.xylabel));\n        if (!posPoint[index].y || !posPoint[index].x) {\n          posPoint[index] = coordParse(gabaritFileTmp.templateGabaritPointDefault[0].xylabel);\n        }\n        if (!posPoint[index].y || !posPoint[index].x) {\n          posPoint[index] = coordParse(this.props.options.gabaritDefault.templateGabaritPointDefault[0].xylabel);\n        }\n      } else {\n        posPoint.push(coordParse(point.xylabelfix));\n        if (!posPoint[index].y || !posPoint[index].x) {\n          posPoint[index] = coordParse(gabaritFileTmp.templateGabaritPointDefault[0].xylabelfix);\n        }\n        if (!posPoint[index].y || !posPoint[index].x) {\n          posPoint[index] = coordParse(this.props.options.gabaritDefault.templateGabaritPointDefault[0].xylabelfix);\n        }\n      }\n      filterPoint.push(filterParse(point.filtered));\n      if (!filterPoint[index][0]) {\n        filterPoint[index] = filterParse(gabaritFileTmp.templateGabaritPointDefault[0].filtered);\n      }\n      if (!filterPoint[index][0]) {\n        filterPoint[index] = filterParse(this.props.options.gabaritDefault.templateGabaritPointDefault[0].filtered);\n      }\n      namePoint.push(point.name);\n      if (!namePoint[index]) {\n        namePoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].name;\n      }\n      if (!namePoint[index]) {\n        namePoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].name;\n      }\n      metaPoint.push(point.meta);\n      if (!metaPoint[index]) {\n        metaPoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].meta;\n      }\n      if (!metaPoint[index]) {\n        metaPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].meta;\n      }\n      labelPoint.push(point.label); // c'est le label du point qui est afficher pour la selection\n      if (!labelPoint[index]) {\n        labelPoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].label;\n      }\n      if (!labelPoint[index]) {\n        labelPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].label;\n      }\n      mainMetricPoint.push({\n        key: point.mainMetric.key,\n        unit: point.mainMetric.unit,\n        format: point.mainMetric.format,\n        keyValue: '',\n        filter: filterPoint[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: point.mainMetric.manageValue,\n      });\n      if (!mainMetricPoint[index].unit) {\n        mainMetricPoint[index] = {\n          key: gabaritFileTmp.templateGabaritPointDefault[0].mainMetric.key,\n          unit: gabaritFileTmp.templateGabaritPointDefault[0].mainMetric.unit,\n          format: gabaritFileTmp.templateGabaritPointDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterPoint[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: gabaritFileTmp.templateGabaritPointDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricPoint[index].unit) {\n        mainMetricPoint[index] = {\n          key: this.props.options.gabaritDefault.templateGabaritPointDefault[0].mainMetric.key,\n          unit: this.props.options.gabaritDefault.templateGabaritPointDefault[0].mainMetric.unit,\n          format: this.props.options.gabaritDefault.templateGabaritPointDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterPoint[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: this.props.options.gabaritDefault.templateGabaritPointDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricPoint[index].refId) {\n        mainMetricPoint[index].refId = 'A';\n      }\n      point.metrics.forEach((element) => {\n        metricPoint[index].push({\n          key: element.key,\n          unit: element.unit,\n          format: element.format,\n          keyValue: '',\n          filter: filterPoint[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: element.manageValue,\n        });\n      });\n      valueMetricPoint.push(point.valueMetric);\n      drawGraphicMarkerPoint.push({\n        label: point.drawGraphicMarker.label,\n        value: point.drawGraphicMarker.value,\n      });\n      if (!drawGraphicMarkerPoint[index].label || !drawGraphicMarkerPoint[index].label) {\n        drawGraphicMarkerPoint[index] = {\n          label: gabaritFileTmp.templateGabaritPointDefault[0].drawGraphicMarker.label,\n          value: gabaritFileTmp.templateGabaritPointDefault[0].drawGraphicMarker.value,\n        };\n      }\n      if (!drawGraphicMarkerPoint[index].label || !drawGraphicMarkerPoint[index].label) {\n        drawGraphicMarkerPoint[index] = {\n          label: this.props.options.gabaritDefault.templateGabaritPointDefault[0].drawGraphicMarker.label,\n          value: this.props.options.gabaritDefault.templateGabaritPointDefault[0].drawGraphicMarker.value,\n        };\n      }\n      shapePoint.push(point.shape);\n      if (!shapePoint[index]) {\n        shapePoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].shape;\n      }\n      if (!shapePoint[index]) {\n        shapePoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].shape;\n      }\n      sizeWidthPoint.push(point.sizeWidth);\n      if (!sizeWidthPoint[index]) {\n        sizeWidthPoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].sizeWidth;\n      }\n      if (!sizeWidthPoint[index]) {\n        sizeWidthPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].sizeWidth;\n      }\n      sizeHeightPoint.push(point.sizeHeight);\n      if (!sizeHeightPoint[index]) {\n        sizeHeightPoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].sizeHeight;\n      }\n      if (!sizeHeightPoint[index]) {\n        sizeHeightPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].sizeHeight;\n      }\n      if (point.color.length !== 0) {\n        colorPoint.push(point.color);\n      } else {\n        colorPoint.push(gabaritFileTmp.globalGabarit.defaultColor);\n      }\n      if (!colorPoint[index]) {\n        colorPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].color;\n      }\n      associateOrientedLinksInPoint.push(point.associateOrientedLinksIn);\n      if (!associateOrientedLinksInPoint[index]) {\n        associateOrientedLinksInPoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].associateOrientedLinksIn;\n      }\n      if (!associateOrientedLinksInPoint[index]) {\n        associateOrientedLinksInPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].associateOrientedLinksIn;\n      }\n      associateOrientedLinksOutPoint.push(point.associateOrientedLinksOut);\n      if (!associateOrientedLinksOutPoint[index]) {\n        associateOrientedLinksOutPoint[index] = gabaritFileTmp.templateGabaritPointDefault[0].associateOrientedLinksOut;\n      }\n      if (!associateOrientedLinksOutPoint[index]) {\n        associateOrientedLinksOutPoint[index] = this.props.options.gabaritDefault.templateGabaritPointDefault[0].associateOrientedLinksOut;\n      }\n      tmpToolTipA = { label: point.positionParameter.tooltipA, value: point.positionParameter.tooltipA };\n      if (!tmpToolTipA.label || !tmpToolTipA.value) {\n        tmpToolTipA = {\n          label: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.tooltipA,\n          value: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.tooltipA,\n        };\n      }\n      if (!tmpToolTipA.label || !tmpToolTipA.value) {\n        tmpToolTipA = {\n          label: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.tooltipA,\n          value: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.tooltipA,\n        };\n      }\n      tmpToolTipB = { label: point.positionParameter.tooltipB, value: point.positionParameter.tooltipB };\n      if (!tmpToolTipB.label || !tmpToolTipB.value) {\n        tmpToolTipB = {\n          label: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.tooltipB,\n          value: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.tooltipB,\n        };\n      }\n      if (!tmpToolTipB.label || !tmpToolTipB.value) {\n        tmpToolTipB = {\n          label: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.tooltipB,\n          value: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.tooltipB,\n        };\n      }\n      tmpLabelAPosition = coordParse(point.positionParameter.xylabelA);\n      if (!tmpLabelAPosition.x || !tmpLabelAPosition.y) {\n        tmpLabelAPosition = {\n          x: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.xylabelA,\n          y: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.xylabelA,\n        };\n      }\n      if (!tmpLabelAPosition.x || !tmpLabelAPosition.y) {\n        tmpLabelAPosition = {\n          x: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.xylabelA,\n          y: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.xylabelA,\n        };\n      }\n      tmpLabelBPosition = coordParse(point.positionParameter.xylabelB);\n      if (!tmpLabelBPosition.x || !tmpLabelBPosition.y) {\n        tmpLabelBPosition = {\n          x: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.xylabelB,\n          y: gabaritFileTmp.templateGabaritPointDefault[0].positionParameter.xylabelB,\n        };\n      }\n      if (!tmpLabelBPosition.x || !tmpLabelBPosition.y) {\n        tmpLabelBPosition = {\n          x: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.xylabelB,\n          y: this.props.options.gabaritDefault.templateGabaritPointDefault[0].positionParameter.xylabelB,\n        };\n      }\n      positionParameterPoint.push(\n        new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n      );\n      linkURLPoint.push(new LinkURLClass(point.linkURL.followLink, point.linkURL.hoveringTooltipLink, point.linkURL.hoveringTooltipText));\n      if (!linkURLPoint[index].followLink) {\n        linkURLPoint[index] = new LinkURLClass(\n          gabaritFileTmp.templateGabaritPointDefault[0].linkURL.followLink,\n          gabaritFileTmp.templateGabaritPointDefault[0].linkURL.hoveringTooltipLink,\n          gabaritFileTmp.templateGabaritPointDefault[0].linkURL.hoveringTooltipText\n        );\n      }\n      if (!linkURLPoint[index].followLink) {\n        linkURLPoint[index] = new LinkURLClass(\n          this.props.options.gabaritDefault.templateGabaritPointDefault[0].linkURL.followLink,\n          this.props.options.gabaritDefault.templateGabaritPointDefault[0].linkURL.hoveringTooltipLink,\n          this.props.options.gabaritDefault.templateGabaritPointDefault[0].linkURL.hoveringTooltipText\n        );\n      }\n    });\n\n    let newID = 0;\n    this.props.options.arrayPoints.forEach((element) => {\n      newID++;\n    });\n\n    let labelCoordX: string[] = [];\n    let labelCoordY: string[] = [];\n    let labelCoord: LabelCoord2D[][] = [];\n\n    posPoint.forEach((pos, index) => {\n      if (gabaritFileTmp.templateGabaritPoint[index].labelfix.toString() === 'false') {\n        this.props.data.series.forEach((element) => {\n          if (element.refId === mainMetricPoint[index]!.refId) {\n            const nameQuery: string[] =\n              element.name?.split(',').map((value) => {\n                return value.replace(/[\\\"{}]/gm, '');\n              }) || [];\n\n            for (const oneQuery of nameQuery) {\n              if (nameQuery && nameQuery.length > 0) {\n                const keyValue: string[] = oneQuery.split('=');\n                if (keyValue[0] === pos.x) {\n                  labelCoordX.push(keyValue[1]);\n                }\n                if (keyValue[0] === pos.y) {\n                  labelCoordY.push(keyValue[1]);\n                }\n              }\n            }\n          }\n        });\n        if (labelCoordX.length > labelCoordY.length) {\n          labelCoordX.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        } else {\n          labelCoordY.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        }\n      }\n      if (labelCoordX.length > 0) {\n        labelCoord.push([]);\n        labelCoordX.forEach((element, add) => {\n          labelCoord[index].push({ x: labelCoordX[add], y: labelCoordY[add] });\n        });\n      } else {\n        labelCoord[index] = [];\n      }\n    });\n\n    //console.log(labelCoord)\n\n    labelCoord.forEach((labelCo) => {\n      if (labelCo.length > 0) {\n        for (const pos of labelCo) {\n          filterPoint.forEach((element, index) => {\n            const defaultPositionX = (((parseInt(pos.x, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n            const defaultPositionY = (((parseInt(pos.y, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n            if (metricPoint.length > 0) {\n              let toLoad: PointClass = new PointClass(\n                newID + 1,\n                linkURLPoint[index],\n                metaPoint[index],\n                gabaritFileTmp.globalGabarit.lowerLimit,\n                labelPoint[index] + '_' + newID,\n                textObj,\n                this.addFilterDynamic(mainMetricPoint[index], posPoint[index], pos),\n                metricPoint[index],\n                colorMode,\n                traceBack,\n                traceBorder,\n                positionParameterPoint[index],\n                namePoint[index] + '_' + newID,\n                valueMetricPoint[index],\n                drawGraphicMarkerPoint[index],\n                shapePoint[index],\n                sizeWidthPoint[index],\n                sizeHeightPoint[index],\n                '',\n                pos.x,\n                pos.y,\n                colorPoint[index],\n                associateOrientedLinksInPoint[index],\n                associateOrientedLinksOutPoint[index],\n                widthInitialSpace.toString(),\n                heightInitialSpace.toString(),\n                defaultPositionX,\n                defaultPositionY\n              );\n              newID++;\n              this.checkCoordinateFilterPoint(toLoad, this.props);\n            } else {\n              let toLoad: PointClass = new PointClass(\n                newID + 1,\n                linkURLPoint[index],\n                metaPoint[index],\n                gabaritFileTmp.globalGabarit.lowerLimit,\n                labelPoint[index] + '_' + newID,\n                textObj,\n                this.addFilterDynamic(mainMetricPoint[index], posPoint[index], pos),\n                [],\n                colorMode,\n                traceBack,\n                traceBorder,\n                positionParameterPoint[index],\n                namePoint[index] + '_' + newID,\n                valueMetricPoint[index],\n                drawGraphicMarkerPoint[index],\n                shapePoint[index],\n                sizeWidthPoint[index],\n                sizeHeightPoint[index],\n                '',\n                pos.x,\n                pos.y,\n                colorPoint[index],\n                associateOrientedLinksInPoint[index],\n                associateOrientedLinksOutPoint[index],\n                widthInitialSpace.toString(),\n                heightInitialSpace.toString(),\n                defaultPositionX,\n                defaultPositionY\n              );\n              newID++;\n              this.checkCoordinateFilterPoint(toLoad, this.props);\n            }\n          });\n        }\n      } else {\n        filterPoint.forEach((element, index) => {\n          const defaultPositionX = (((parseInt(posPoint[index].x, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n          const defaultPositionY = (((parseInt(posPoint[index].y, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n          if (metricPoint.length > 0) {\n            let toLoad: PointClass = new PointClass(\n              newID + 1,\n              linkURLPoint[index],\n              // changement\n              // metaPoint[index],\n              [],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelPoint[index] + '_' + newID,\n              textObj,\n              mainMetricPoint[index],\n              metricPoint[index],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterPoint[index],\n              namePoint[index] + '_' + newID,\n              valueMetricPoint[index],\n              drawGraphicMarkerPoint[index],\n              shapePoint[index],\n              sizeWidthPoint[index],\n              sizeHeightPoint[index],\n              '',\n              posPoint[index].x,\n              posPoint[index].y,\n              colorPoint[index],\n              associateOrientedLinksInPoint[index],\n              associateOrientedLinksOutPoint[index],\n              widthInitialSpace.toString(),\n              heightInitialSpace.toString(),\n              defaultPositionX,\n              defaultPositionY\n            );\n            newID++;\n            this.checkCoordinateFilterPoint(toLoad, this.props);\n          } else {\n            let toLoad: PointClass = new PointClass(\n              newID + 1,\n              linkURLPoint[index],\n              // changement\n              [],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelPoint[index] + '_' + newID,\n              textObj,\n              mainMetricPoint[index],\n              [],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterPoint[index],\n              namePoint[index] + '_' + newID,\n              valueMetricPoint[index],\n              drawGraphicMarkerPoint[index],\n              shapePoint[index],\n              sizeWidthPoint[index],\n              sizeHeightPoint[index],\n              '',\n              posPoint[index].x,\n              posPoint[index].y,\n              colorPoint[index],\n              associateOrientedLinksInPoint[index],\n              associateOrientedLinksOutPoint[index],\n              widthInitialSpace.toString(),\n              heightInitialSpace.toString(),\n              defaultPositionX,\n              defaultPositionY\n            );\n            newID++;\n            this.checkCoordinateFilterPoint(toLoad, this.props);\n          }\n        });\n      }\n    });\n\n    /* Link */\n    //Template\n    let filterLink: Filtred[][] = []; //\n    let posALink: LabelCoord2D[] = []; //\n    let posBLink: LabelCoord2D[] = []; //\n    let posCLink: LabelCoord2D[] = []; //\n    let nameLink: string[] = []; //\n    let metaLink: string[] = []; //\n    let labelLink: string[] = []; //\n    let positionParameterLink: PositionParameterClass[] = []; //\n    let mainMetricALink: Metric[] = []; //\n    let metricALink: Metric[][] = []; //\n    let mainMetricBLink: Metric[] = []; //\n    let metricBLink: Metric[][] = []; //\n    let linkURLLink: LinkURLClass[] = []; //\n    let orientationLink: Array<SelectableValue<string>> = []; //\n    let sizeLink: string[] = []; //\n    let colorALink: string[] = []; //\n    let colorBLink: string[] = []; //\n    let valueMetricALink: string[] = []; //\n    let valueMetricBLink: string[] = []; //\n    let pointInLink: string[] = []; //\n    let pointOutLink: string[] = []; //\n    let regionInLink: string[] = []; //\n    let regionOutLink: string[] = []; //\n    let isIncurvedLink: Array<SelectableValue<boolean>> = []; //\n\n    gabaritFileTmp.templateGabaritLink.forEach((link, index) => {\n      if (link.labelfix.toString() === 'false') {\n        posALink.push(coordParse(link.xylabelA));\n        if (!posALink[index].x || !posALink[index].y) {\n          posALink[index] = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].xylabelA);\n        }\n        if (!posALink[index].x || !posALink[index].y) {\n          posALink[index] = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].xylabelA);\n        }\n        posBLink.push(coordParse(link.xylabelB));\n        if (!posBLink[index].x || !posBLink[index].y) {\n          posBLink[index] = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].xylabelB);\n        }\n        if (!posBLink[index].x || !posBLink[index].y) {\n          posBLink[index] = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].xylabelB);\n        }\n        posCLink.push(coordParse(link.xylabelC));\n        if (!posCLink[index].x || !posCLink[index].y) {\n          posCLink[index] = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].xylabelC);\n        }\n        if (!posCLink[index].x || !posCLink[index].y) {\n          posCLink[index] = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].xylabelC);\n        }\n      } else {\n        posALink.push(coordParse(link.xylabelfixA));\n        if (!posALink[index].x || !posALink[index].y) {\n          posALink[index] = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].xylabelfixA);\n        }\n        if (!posALink[index].x || !posALink[index].y) {\n          posALink[index] = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].xylabelfixA);\n        }\n        posBLink.push(coordParse(link.xylabelfixB));\n        if (!posBLink[index].x || !posBLink[index].y) {\n          posBLink[index] = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].xylabelfixB);\n        }\n        if (!posBLink[index].x || !posBLink[index].y) {\n          posBLink[index] = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].xylabelfixB);\n        }\n        posCLink.push(coordParse(link.xylabelfixC));\n        if (!posCLink[index].x || !posCLink[index].y) {\n          posCLink[index] = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].xylabelfixC);\n        }\n        if (!posCLink[index].x || !posCLink[index].y) {\n          posCLink[index] = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].xylabelfixC);\n        }\n      }\n      filterLink.push(filterParse(link.filtered));\n      if (!filterLink[index]) {\n        filterLink[index] = filterParse(gabaritFileTmp.templateGabaritLinkDefault[0].filtered);\n      }\n      if (!filterLink[index]) {\n        filterLink[index] = filterParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].filtered);\n      }\n      nameLink.push(link.name);\n      if (!nameLink[index]) {\n        nameLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].name;\n      }\n      if (!nameLink[index]) {\n        nameLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].name;\n      }\n      // changement\n      metaLink.push(link.meta.toString());\n      if (!metaLink[index]) {\n        // changement\n        [] = gabaritFileTmp.templateGabaritLinkDefault[0].meta;\n      }\n      if (!metaLink[index]) {\n        // changement\n        [] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].meta;\n      }\n      labelLink.push(link.label);\n      if (!labelLink[index]) {\n        labelLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].label;\n      }\n      if (!labelLink[index]) {\n        labelLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].label;\n      }\n      mainMetricALink.push({\n        key: link.mainMetric.key,\n        unit: link.mainMetric.unit,\n        format: link.mainMetric.format,\n        keyValue: '',\n        filter: filterLink[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: link.mainMetric.manageValue,\n      });\n      if (!mainMetricALink[index].unit) {\n        mainMetricALink[index] = {\n          key: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.key,\n          unit: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.unit,\n          format: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterLink[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricALink[index].unit) {\n        mainMetricALink[index] = {\n          key: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.key,\n          unit: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.unit,\n          format: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterLink[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricALink[index].refId) {\n        mainMetricALink[index].refId = 'A';\n      }\n      link.metrics.forEach((element) => {\n        metricALink[index].push({\n          key: element.key,\n          unit: element.unit,\n          format: element.format,\n          keyValue: '',\n          filter: filterLink[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: element.manageValue,\n        });\n      });\n      mainMetricBLink.push({\n        key: link.mainMetricB.key,\n        unit: link.mainMetricB.unit,\n        format: link.mainMetricB.format,\n        keyValue: '',\n        filter: filterLink[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: link.mainMetricB.manageValue,\n      });\n      if (!mainMetricBLink[index].unit) {\n        mainMetricBLink[index] = {\n          key: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.key,\n          unit: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.unit,\n          format: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterLink[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: gabaritFileTmp.templateGabaritLinkDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricBLink[index].unit) {\n        mainMetricBLink[index] = {\n          key: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.key,\n          unit: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.unit,\n          format: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterLink[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricALink[index].refId) {\n        mainMetricBLink[index].refId = 'A';\n      }\n      link.metricsB.forEach((element) => {\n        metricBLink[index].push({\n          key: element.key,\n          unit: element.unit,\n          format: element.format,\n          keyValue: '',\n          filter: filterLink[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: element.manageValue,\n        });\n      });\n      valueMetricALink.push(link.valueMainMetricA);\n      if (!valueMetricALink[index]) {\n        valueMetricALink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].valueMainMetricA;\n      }\n      if (!valueMetricALink[index]) {\n        valueMetricALink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].valueMainMetricA;\n      }\n      valueMetricBLink.push(link.valueMainMetricB);\n      if (!valueMetricBLink[index]) {\n        valueMetricBLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].valueMainMetricB;\n      }\n      if (!valueMetricBLink[index]) {\n        valueMetricBLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].valueMainMetricB;\n      }\n      sizeLink.push(link.size);\n      if (!sizeLink[index]) {\n        sizeLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].size;\n      }\n      if (!sizeLink[index]) {\n        sizeLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].size;\n      }\n      if (link.colorCoordinateA.length !== 0) {\n        colorALink.push(link.colorCoordinateA);\n        colorBLink.push(link.colorCoordinateB);\n      } else {\n        colorALink.push(gabaritFileTmp.globalGabarit.defaultColor);\n        colorBLink.push(gabaritFileTmp.globalGabarit.defaultColor);\n      }\n      if (!colorALink[index]) {\n        colorALink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].colorCoordinateA;\n      }\n      if (!colorBLink[index]) {\n        colorBLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].colorCoordinateB;\n      }\n      tmpToolTipA = { label: link.positionParameter.tooltipA, value: link.positionParameter.tooltipA };\n      if (!tmpToolTipA.value || !tmpToolTipA.label) {\n        tmpToolTipA = {\n          label: gabaritFileTmp.templateGabaritLinkDefault[0].positionParameter.tooltipA,\n          value: gabaritFileTmp.templateGabaritLinkDefault[0].positionParameter.tooltipA,\n        };\n      }\n      if (!tmpToolTipA.value || !tmpToolTipA.label) {\n        tmpToolTipA = {\n          label: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].positionParameter.tooltipA,\n          value: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].positionParameter.tooltipA,\n        };\n      }\n      tmpToolTipB = { label: link.positionParameter.tooltipB, value: link.positionParameter.tooltipB };\n      if (!tmpToolTipB.value || !tmpToolTipB.label) {\n        tmpToolTipB = {\n          label: gabaritFileTmp.templateGabaritLinkDefault[0].positionParameter.tooltipB,\n          value: gabaritFileTmp.templateGabaritLinkDefault[0].positionParameter.tooltipB,\n        };\n      }\n      if (!tmpToolTipB.value || !tmpToolTipB.label) {\n        tmpToolTipB = {\n          label: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].positionParameter.tooltipB,\n          value: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].positionParameter.tooltipB,\n        };\n      }\n      tmpLabelAPosition = coordParse(link.positionParameter.xylabelA);\n      if (!tmpLabelAPosition) {\n        tmpLabelAPosition = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].positionParameter.xylabelA);\n      }\n      if (!tmpLabelAPosition) {\n        tmpLabelAPosition = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].positionParameter.xylabelA);\n      }\n      tmpLabelBPosition = coordParse(link.positionParameter.xylabelB);\n      if (!tmpLabelBPosition) {\n        tmpLabelBPosition = coordParse(gabaritFileTmp.templateGabaritLinkDefault[0].positionParameter.xylabelB);\n      }\n      if (!tmpLabelBPosition) {\n        tmpLabelBPosition = coordParse(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].positionParameter.xylabelB);\n      }\n      positionParameterLink.push(\n        new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n      );\n      linkURLLink.push(new LinkURLClass(link.linkURL.followLink, link.linkURL.hoveringTooltipLink, link.linkURL.hoveringTooltipText));\n      if (!linkURLLink[index].followLink) {\n        linkURLLink[index] = new LinkURLClass(\n          gabaritFileTmp.templateGabaritLinkDefault[0].linkURL.followLink,\n          gabaritFileTmp.templateGabaritLinkDefault[0].linkURL.hoveringTooltipLink,\n          gabaritFileTmp.templateGabaritLinkDefault[0].linkURL.hoveringTooltipText\n        );\n      }\n      if (!linkURLLink[index].followLink) {\n        linkURLLink[index] = new LinkURLClass(\n          this.props.options.gabaritDefault.templateGabaritLinkDefault[0].linkURL.followLink,\n          this.props.options.gabaritDefault.templateGabaritLinkDefault[0].linkURL.hoveringTooltipLink,\n          this.props.options.gabaritDefault.templateGabaritLinkDefault[0].linkURL.hoveringTooltipText\n        );\n      }\n      orientationLink.push(link.orientationLink);\n      if (!orientationLink[index]) {\n        orientationLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].orientationLink;\n      }\n      if (!orientationLink[index]) {\n        orientationLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].orientationLink;\n      }\n      pointInLink.push(link.pointIn);\n      if (!pointInLink[index]) {\n        pointInLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].pointIn;\n      }\n      if (!pointInLink[index]) {\n        pointInLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].pointIn;\n      }\n      pointOutLink.push(link.pointOut);\n      if (!pointOutLink[index]) {\n        pointOutLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].pointOut;\n      }\n      if (!pointOutLink[index]) {\n        pointOutLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].pointOut;\n      }\n      regionInLink.push(link.regionIn);\n      if (!regionInLink[index]) {\n        regionInLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].regionIn;\n      }\n      if (!regionInLink[index]) {\n        regionInLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].regionIn;\n      }\n      regionOutLink.push(link.regionOut);\n      if (!regionOutLink[index]) {\n        regionOutLink[index] = gabaritFileTmp.templateGabaritLinkDefault[0].regionOut;\n      }\n      if (!regionOutLink[index]) {\n        regionOutLink[index] = this.props.options.gabaritDefault.templateGabaritLinkDefault[0].regionOut;\n      }\n      isIncurvedLink.push({ label: link.isIncurved.label, value: Boolean(link.isIncurved.value) });\n      if (!isIncurvedLink[index].label || !isIncurvedLink[index].value) {\n        isIncurvedLink[index] = {\n          label: gabaritFileTmp.templateGabaritLinkDefault[0].isIncurved.label,\n          value: Boolean(gabaritFileTmp.templateGabaritLinkDefault[0].isIncurved.value),\n        };\n      }\n      if (!isIncurvedLink[index].label || !isIncurvedLink[index].value) {\n        isIncurvedLink[index] = {\n          label: this.props.options.gabaritDefault.templateGabaritLinkDefault[0].isIncurved.label,\n          value: Boolean(this.props.options.gabaritDefault.templateGabaritLinkDefault[0].isIncurved.value),\n        };\n      }\n    });\n\n    newID = 0;\n    this.props.options.arrayOrientedLinks.forEach((element) => {\n      newID++;\n    });\n\n    labelCoordX = [];\n    labelCoordY = [];\n    let labelCoordA: LabelCoord2D[][] = [];\n\n    posALink.forEach((pos, index) => {\n      if (gabaritFileTmp.templateGabaritLink[index].labelfix.toString() === 'false') {\n        this.props.data.series.forEach((element) => {\n          if (element.refId === mainMetricALink[index]!.refId) {\n            const nameQuery: string[] =\n              element.name?.split(',').map((value) => {\n                return value.replace(/[\\\"{}]/gm, '');\n              }) || [];\n\n            for (const oneQuery of nameQuery) {\n              if (nameQuery && nameQuery.length > 0) {\n                const keyValue: string[] = oneQuery.split('=');\n                if (keyValue[0] === pos.x) {\n                  labelCoordX.push(keyValue[1]);\n                }\n                if (keyValue[0] === pos.y) {\n                  labelCoordY.push(keyValue[1]);\n                }\n              }\n            }\n          }\n        });\n        if (labelCoordX.length > labelCoordY.length) {\n          labelCoordX.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        } else {\n          labelCoordY.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        }\n      }\n      if (labelCoordX.length > 0) {\n        labelCoordX.forEach((element, index) => {\n          labelCoordA[index].push({ x: labelCoordX[index], y: labelCoordY[index] });\n        });\n      } else {\n        labelCoordA[index] = [];\n      }\n    });\n\n    labelCoordX = [];\n    labelCoordY = [];\n    let labelCoordB: LabelCoord2D[][] = [];\n\n    posALink.forEach((pos, index) => {\n      if (gabaritFileTmp.templateGabaritLink[index].labelfix.toString() === 'false') {\n        this.props.data.series.forEach((element) => {\n          if (element.refId === mainMetricBLink[index]!.refId) {\n            const nameQuery: string[] =\n              element.name?.split(',').map((value) => {\n                return value.replace(/[\\\"{}]/gm, '');\n              }) || [];\n\n            for (const oneQuery of nameQuery) {\n              if (nameQuery && nameQuery.length > 0) {\n                const keyValue: string[] = oneQuery.split('=');\n                if (keyValue[0] === pos.x) {\n                  labelCoordX.push(keyValue[1]);\n                }\n                if (keyValue[0] === pos.y) {\n                  labelCoordY.push(keyValue[1]);\n                }\n              }\n            }\n          }\n        });\n        if (labelCoordX.length > labelCoordY.length) {\n          labelCoordX.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        } else {\n          labelCoordY.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        }\n      }\n      if (labelCoordX.length > 0) {\n        labelCoordX.forEach((element, index) => {\n          labelCoordB[index].push({ x: labelCoordX[index], y: labelCoordY[index] });\n        });\n      } else {\n        labelCoordB[index] = [];\n      }\n    });\n\n    labelCoordX = [];\n    labelCoordY = [];\n    let labelCoordC: LabelCoord2D[][] = [];\n\n    posALink.forEach((pos, index) => {\n      if (gabaritFileTmp.templateGabaritLink[index].labelfix.toString() === 'false') {\n        this.props.data.series.forEach((element) => {\n          const nameQuery: string[] =\n            element.name?.split(',').map((value) => {\n              return value.replace(/[\\\"{}]/gm, '');\n            }) || [];\n\n          for (const oneQuery of nameQuery) {\n            if (nameQuery && nameQuery.length > 0) {\n              const keyValue: string[] = oneQuery.split('=');\n              if (keyValue[0] === pos.x) {\n                labelCoordX.push(keyValue[1]);\n              }\n              if (keyValue[0] === pos.y) {\n                labelCoordY.push(keyValue[1]);\n              }\n            }\n          }\n        });\n        if (labelCoordX.length > labelCoordY.length) {\n          labelCoordX.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        } else {\n          labelCoordY.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        }\n      }\n      if (labelCoordX.length > 0) {\n        labelCoordX.forEach((element, index) => {\n          labelCoordC[index].push({ x: labelCoordX[index], y: labelCoordY[index] });\n        });\n      } else {\n        labelCoordC[index] = [];\n      }\n    });\n\n    labelCoordA.forEach((element, coordindex) => {\n      if (element.length > 0) {\n        for (const pos of element) {\n          filterLink.forEach((element, index) => {\n            const defaultPositionAX = (((parseInt(pos.x, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n            const defaultPositionBX = (\n              ((parseInt(labelCoordB[coordindex][index].x, 10) - xMinInitialSpace) / widthInitialSpace) *\n              widthBackground\n            ).toString();\n            const defaultPositionCX = (\n              ((parseInt(labelCoordC[coordindex][index].x, 10) - xMinInitialSpace) / widthInitialSpace) *\n              widthBackground\n            ).toString();\n            const defaultPositionAY = (((parseInt(pos.y, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n            const defaultPositionBY = (\n              ((parseInt(labelCoordB[coordindex][index].y, 10) - yMinInitialSpace) / heightInitialSpace) *\n              heightBackground\n            ).toString();\n            const defaultPositionCY = (\n              ((parseInt(labelCoordC[coordindex][index].y, 10) - yMinInitialSpace) / heightInitialSpace) *\n              heightBackground\n            ).toString();\n            let maA = metricALink.length;\n            let maB = metricBLink.length;\n            if (maA > 0 && maB > 0) {\n              let toLoad: OrientedLinkClass = new OrientedLinkClass(\n                newID + 1,\n                linkURLLink[index],\n                [],\n                gabaritFileTmp.globalGabarit.lowerLimit,\n                labelLink[index] + '_' + newID,\n                textObj,\n                this.addFilterDynamic(mainMetricALink[index], posALink[index], pos),\n                metricALink[index],\n                colorMode,\n                traceBack,\n                traceBorder,\n                positionParameterLink[index],\n                nameLink[index],\n                orientationLink[index],\n                sizeLink[index],\n                pos.x,\n                pos.y,\n                colorALink[index],\n                labelCoordB[coordindex][index].x,\n                labelCoordB[coordindex][index].y,\n                colorBLink[index],\n                valueMetricALink[index],\n                valueMetricBLink[index],\n                pointInLink[index],\n                pointOutLink[index],\n                regionInLink[index],\n                regionOutLink[index],\n                this.props.options.zIndexOrientedLink + 1,\n                labelCoordC[coordindex][index].x,\n                labelCoordC[coordindex][index].y,\n                isIncurvedLink[index],\n                this.addFilterDynamic(mainMetricBLink[index], posALink[index], pos),\n                metricBLink[index],\n                widthInitialSpace.toString(),\n                heightInitialSpace.toString(),\n                defaultPositionAX,\n                defaultPositionAY,\n                defaultPositionBX,\n                defaultPositionBY,\n                defaultPositionCX,\n                defaultPositionCY\n              );\n              newID++;\n              this.checkCoordinateFilterLink(toLoad, this.props);\n            }\n            if (!(maA > 0) && maB > 0) {\n              let toLoad: OrientedLinkClass = new OrientedLinkClass(\n                newID + 1,\n                linkURLLink[index],\n                [],\n                gabaritFileTmp.globalGabarit.lowerLimit,\n                labelLink[index] + '_' + newID,\n                textObj,\n                this.addFilterDynamic(mainMetricALink[index], posALink[index], pos),\n                [],\n                colorMode,\n                traceBack,\n                traceBorder,\n                positionParameterLink[index],\n                nameLink[index],\n                orientationLink[index],\n                sizeLink[index],\n                pos.x,\n                pos.y,\n                colorALink[index],\n                labelCoordB[coordindex][index].x,\n                labelCoordB[coordindex][index].y,\n                colorBLink[index],\n                valueMetricALink[index],\n                valueMetricBLink[index],\n                pointInLink[index],\n                pointOutLink[index],\n                regionInLink[index],\n                regionOutLink[index],\n                this.props.options.zIndexOrientedLink + 1,\n                labelCoordC[coordindex][index].x,\n                labelCoordC[coordindex][index].y,\n                isIncurvedLink[index],\n                this.addFilterDynamic(mainMetricBLink[index], posALink[index], pos),\n                metricBLink[index],\n                widthInitialSpace.toString(),\n                heightInitialSpace.toString(),\n                defaultPositionAX,\n                defaultPositionAY,\n                defaultPositionBX,\n                defaultPositionBY,\n                defaultPositionCX,\n                defaultPositionCY\n              );\n              newID++;\n              this.checkCoordinateFilterLink(toLoad, this.props);\n            } else if (maA > 0 && !(maB > 0)) {\n              let toLoad: OrientedLinkClass = new OrientedLinkClass(\n                newID + 1,\n                linkURLLink[index],\n                [],\n                gabaritFileTmp.globalGabarit.lowerLimit,\n                labelLink[index] + '_' + newID,\n                textObj,\n                this.addFilterDynamic(mainMetricALink[index], posALink[index], pos),\n                metricALink[index],\n                colorMode,\n                traceBack,\n                traceBorder,\n                positionParameterLink[index],\n                nameLink[index],\n                orientationLink[index],\n                sizeLink[index],\n                pos.x,\n                pos.y,\n                colorALink[index],\n                labelCoordB[coordindex][index].x,\n                labelCoordB[coordindex][index].y,\n                colorBLink[index],\n                valueMetricALink[index],\n                valueMetricBLink[index],\n                pointInLink[index],\n                pointOutLink[index],\n                regionInLink[index],\n                regionOutLink[index],\n                this.props.options.zIndexOrientedLink + 1,\n                labelCoordC[coordindex][index].x,\n                labelCoordC[coordindex][index].y,\n                isIncurvedLink[index],\n                this.addFilterDynamic(mainMetricBLink[index], posALink[index], pos),\n                [],\n                widthInitialSpace.toString(),\n                heightInitialSpace.toString(),\n                defaultPositionAX,\n                defaultPositionAY,\n                defaultPositionBX,\n                defaultPositionBY,\n                defaultPositionCX,\n                defaultPositionCY\n              );\n              newID++;\n              this.checkCoordinateFilterLink(toLoad, this.props);\n            } else {\n              let toLoad: OrientedLinkClass = new OrientedLinkClass(\n                newID + 1,\n                linkURLLink[index],\n                [],\n                gabaritFileTmp.globalGabarit.lowerLimit,\n                labelLink[index] + '_' + newID,\n                textObj,\n                this.addFilterDynamic(mainMetricALink[index], posALink[index], pos),\n                [],\n                colorMode,\n                traceBack,\n                traceBorder,\n                positionParameterLink[index],\n                nameLink[index],\n                orientationLink[index],\n                sizeLink[index],\n                pos.x,\n                pos.y,\n                colorALink[index],\n                labelCoordB[coordindex][index].x,\n                labelCoordB[coordindex][index].y,\n                colorBLink[index],\n                valueMetricALink[index],\n                valueMetricBLink[index],\n                pointInLink[index],\n                pointOutLink[index],\n                regionInLink[index],\n                regionOutLink[index],\n                this.props.options.zIndexOrientedLink + 1,\n                labelCoordC[coordindex][index].x,\n                labelCoordC[coordindex][index].y,\n                isIncurvedLink[index],\n                this.addFilterDynamic(mainMetricBLink[index], posALink[index], pos),\n                [],\n                widthInitialSpace.toString(),\n                heightInitialSpace.toString(),\n                defaultPositionAX,\n                defaultPositionAY,\n                defaultPositionBX,\n                defaultPositionBY,\n                defaultPositionCX,\n                defaultPositionCY\n              );\n              newID++;\n              this.checkCoordinateFilterLink(toLoad, this.props);\n            }\n          });\n        } /////////////////\n      } else {\n        filterLink.forEach((element, index) => {\n          const defaultPositionAX = (((parseInt(posALink[index].x, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n          const defaultPositionBX = (((parseInt(posBLink[index].x, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n          const defaultPositionCX = (((parseInt(posCLink[index].x, 10) - xMinInitialSpace) / widthInitialSpace) * widthBackground).toString();\n          const defaultPositionAY = (((parseInt(posALink[index].y, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n          const defaultPositionBY = (((parseInt(posBLink[index].y, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n          const defaultPositionCY = (((parseInt(posCLink[index].y, 10) - yMinInitialSpace) / heightInitialSpace) * heightBackground).toString();\n          let maA = metricALink.length;\n          let maB = metricBLink.length;\n          if (maA > 0 && maB > 0) {\n            let toLoad: OrientedLinkClass = new OrientedLinkClass(\n              newID + 1,\n              linkURLLink[index],\n              [],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelLink[index] + '_' + newID,\n              textObj,\n              mainMetricALink[index],\n              metricALink[index],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterLink[index],\n              nameLink[index],\n              orientationLink[index],\n              sizeLink[index],\n              posALink[index].x,\n              posALink[index].y,\n              colorALink[index],\n              posBLink[index].x,\n              posBLink[index].y,\n              colorBLink[index],\n              valueMetricALink[index],\n              valueMetricBLink[index],\n              pointInLink[index],\n              pointOutLink[index],\n              regionInLink[index],\n              regionOutLink[index],\n              this.props.options.zIndexOrientedLink + 1,\n              posCLink[index].x,\n              posCLink[index].y,\n              isIncurvedLink[index],\n              mainMetricBLink[index],\n              metricBLink[index],\n              widthInitialSpace.toString(),\n              heightInitialSpace.toString(),\n              defaultPositionAX,\n              defaultPositionAY,\n              defaultPositionBX,\n              defaultPositionBY,\n              defaultPositionCX,\n              defaultPositionCY\n            );\n            newID++;\n            this.checkCoordinateFilterLink(toLoad, this.props);\n          }\n          if (!(maA > 0) && maB > 0) {\n            let toLoad: OrientedLinkClass = new OrientedLinkClass(\n              newID + 1,\n              linkURLLink[index],\n              [],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelLink[index] + '_' + newID,\n              textObj,\n              mainMetricALink[index],\n              [],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterLink[index],\n              nameLink[index],\n              orientationLink[index],\n              sizeLink[index],\n              posALink[index].x,\n              posALink[index].y,\n              colorALink[index],\n              posBLink[index].x,\n              posBLink[index].y,\n              colorBLink[index],\n              valueMetricALink[index],\n              valueMetricBLink[index],\n              pointInLink[index],\n              pointOutLink[index],\n              regionInLink[index],\n              regionOutLink[index],\n              this.props.options.zIndexOrientedLink + 1,\n              posCLink[index].x,\n              posCLink[index].y,\n              isIncurvedLink[index],\n              mainMetricBLink[index],\n              metricBLink[index],\n              widthInitialSpace.toString(),\n              heightInitialSpace.toString(),\n              defaultPositionAX,\n              defaultPositionAY,\n              defaultPositionBX,\n              defaultPositionBY,\n              defaultPositionCX,\n              defaultPositionCY\n            );\n            newID++;\n            this.checkCoordinateFilterLink(toLoad, this.props);\n          } else if (maA > 0 && !(maB > 0)) {\n            let toLoad: OrientedLinkClass = new OrientedLinkClass(\n              newID + 1,\n              linkURLLink[index],\n              [],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelLink[index] + '_' + newID,\n              textObj,\n              mainMetricALink[index],\n              metricALink[index],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterLink[index],\n              nameLink[index],\n              orientationLink[index],\n              sizeLink[index],\n              posALink[index].x,\n              posALink[index].y,\n              colorALink[index],\n              posBLink[index].x,\n              posBLink[index].y,\n              colorBLink[index],\n              valueMetricALink[index],\n              valueMetricBLink[index],\n              pointInLink[index],\n              pointOutLink[index],\n              regionInLink[index],\n              regionOutLink[index],\n              this.props.options.zIndexOrientedLink + 1,\n              posCLink[index].x,\n              posCLink[index].y,\n              isIncurvedLink[index],\n              mainMetricBLink[index],\n              [],\n              widthInitialSpace.toString(),\n              heightInitialSpace.toString(),\n              defaultPositionAX,\n              defaultPositionAY,\n              defaultPositionBX,\n              defaultPositionBY,\n              defaultPositionCX,\n              defaultPositionCY\n            );\n            newID++;\n            this.checkCoordinateFilterLink(toLoad, this.props);\n          } else {\n            let toLoad: OrientedLinkClass = new OrientedLinkClass(\n              newID + 1,\n              linkURLLink[index],\n              [],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelLink[index] + '_' + newID,\n              textObj,\n              mainMetricALink[index],\n              [],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterLink[index],\n              nameLink[index],\n              orientationLink[index],\n              sizeLink[index],\n              posALink[index].x,\n              posALink[index].y,\n              colorALink[index],\n              posBLink[index].x,\n              posBLink[index].y,\n              colorBLink[index],\n              valueMetricALink[index],\n              valueMetricBLink[index],\n              pointInLink[index],\n              pointOutLink[index],\n              regionInLink[index],\n              regionOutLink[index],\n              this.props.options.zIndexOrientedLink + 1,\n              posCLink[index].x,\n              posCLink[index].y,\n              isIncurvedLink[index],\n              mainMetricBLink[index],\n              [],\n              widthInitialSpace.toString(),\n              heightInitialSpace.toString(),\n              defaultPositionAX,\n              defaultPositionAY,\n              defaultPositionBX,\n              defaultPositionBY,\n              defaultPositionCX,\n              defaultPositionCY\n            );\n            newID++;\n            this.checkCoordinateFilterLink(toLoad, this.props);\n          }\n        });\n      }\n    });\n\n    /*  */\n    //Template\n    let filterRegion: Filtred[][] = []; //\n    let posRegion: Coord4D[] = []; //\n\n    let metaRegion: string[] = []; //\n    let labelRegion: string[] = []; //\n    let positionParameterRegion: PositionParameterClass[] = []; //\n    let mainMetricRegion: Metric[] = []; //\n    let metricRegion: Metric[][] = []; //\n    let linkURLRegion: LinkURLClass[] = [];\n    let idSVGRegion: string[] = [];\n    let modeRegion: boolean[] = [];\n    let imgRegion: string[] = [];\n    let orientedLinkAssociate: OrientedLinkClass[][] = [];\n\n    gabaritFileTmp.templateGabaritRegion.forEach((region, index) => {\n      if (region.labelfix.toString() === 'false') {\n        posRegion.push(coordParseRegion(region.xylabel));\n        if (!posRegion[index].xMax || !posRegion[index].xMin || !posRegion[index].yMax || !posRegion[index].yMin) {\n          posRegion[index] = coordParseRegion(gabaritFileTmp.templateGabaritRegionDefault[0].xylabel);\n        }\n        if (!posRegion[index].xMax || !posRegion[index].xMin || !posRegion[index].yMax || !posRegion[index].yMin) {\n          posRegion[index] = coordParseRegion(this.props.options.gabaritDefault.templateGabaritRegionDefault[0].xylabel);\n        }\n      } else {\n        posRegion.push(coordParseRegion(region.xylabelfix));\n        if (!posRegion[index].xMax || !posRegion[index].xMin || !posRegion[index].yMax || !posRegion[index].yMin) {\n          posRegion[index] = coordParseRegion(gabaritFileTmp.templateGabaritRegionDefault[0].xylabelfix);\n        }\n        if (!posRegion[index].xMax || !posRegion[index].xMin || !posRegion[index].yMax || !posRegion[index].yMin) {\n          posRegion[index] = coordParseRegion(this.props.options.gabaritDefault.templateGabaritRegionDefault[0].xylabelfix);\n        }\n      }\n      filterRegion.push(filterParseRegion(region.filtered));\n      if (!filterRegion[index]) {\n        filterRegion[index] = filterParseRegion(gabaritFileTmp.templateGabaritRegionDefault[0].filtered);\n      }\n      if (!filterRegion[index]) {\n        filterRegion[index] = filterParseRegion(this.props.options.gabaritDefault.templateGabaritRegionDefault[0].filtered);\n      }\n      linkURLRegion.push(new LinkURLClass(region.linkURL.followLink, region.linkURL.hoveringTooltipLink, region.linkURL.hoveringTooltipTex));\n      if (!linkURLRegion[index].followLink) {\n        linkURLRegion[index] = new LinkURLClass(\n          gabaritFileTmp.templateGabaritRegionDefault[0].linkURL.followLink,\n          gabaritFileTmp.templateGabaritRegionDefault[0].linkURL.hoveringTooltipLink,\n          gabaritFileTmp.templateGabaritRegionDefault[0].linkURL.hoveringTooltipText\n        );\n      }\n      if (!linkURLRegion[index].followLink) {\n        linkURLRegion[index] = new LinkURLClass(\n          this.props.options.gabaritDefault.templateGabaritRegionDefault[0].linkURL.followLink,\n          this.props.options.gabaritDefault.templateGabaritRegionDefault[0].linkURL.hoveringTooltipLink,\n          this.props.options.gabaritDefault.templateGabaritRegionDefault[0].linkURL.hoveringTooltipText\n        );\n      }\n      // changement\n      metaRegion.push(region.meta.toString());\n      if (!metaRegion[index]) {\n        // changement\n        // metaRegion[index] = gabaritFileTmp.templateGabaritRegionDefault[0].meta;\n        [] = gabaritFileTmp.templateGabaritRegionDefault[0].meta;\n      }\n      if (!metaRegion[index]) {\n        // changement\n        // metaRegion[index] = this.props.options.gabaritDefault.templateGabaritRegionDefault[0].meta;\n        [] = this.props.options.gabaritDefault.templateGabaritRegionDefault[0].meta;\n      }\n      labelRegion.push(region.label);\n      if (!labelRegion[index]) {\n        labelRegion[index] = gabaritFileTmp.templateGabaritRegionDefault[0].label;\n      }\n      if (!labelRegion[index]) {\n        labelRegion[index] = this.props.options.gabaritDefault.templateGabaritRegionDefault[0].label;\n      }\n      mainMetricRegion.push({\n        key: region.mainMetric.key,\n        unit: region.mainMetric.unit,\n        format: region.mainMetric.format,\n        keyValue: '',\n        filter: filterRegion[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: region.mainMetric.manageValue,\n      });\n      if (!mainMetricRegion[index].unit) {\n        mainMetricRegion[index] = {\n          key: gabaritFileTmp.templateGabaritRegionDefault[0].mainMetric.key,\n          unit: gabaritFileTmp.templateGabaritRegionDefault[0].mainMetric.unit,\n          format: gabaritFileTmp.templateGabaritRegionDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterRegion[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: gabaritFileTmp.templateGabaritRegionDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricRegion[index].unit) {\n        mainMetricRegion[index] = {\n          key: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].mainMetric.key,\n          unit: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].mainMetric.unit,\n          format: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].mainMetric.format,\n          keyValue: '',\n          filter: filterRegion[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].mainMetric.manageValue,\n        };\n      }\n      if (!mainMetricRegion[index].refId) {\n        mainMetricRegion[index].refId = 'A';\n      }\n      region.metrics.forEach((element) => {\n        metricRegion[index].push({\n          key: element.key,\n          unit: element.unit,\n          format: element.format,\n          keyValue: '',\n          filter: filterRegion[index],\n          refId: gabaritFileTmp.queryID,\n          expr: '',\n          returnQuery: [],\n          manageValue: element.manageValue,\n        });\n      });\n      modeRegion.push(Boolean(region.mode));\n      if (!modeRegion[index]) {\n        modeRegion[index] = Boolean(gabaritFileTmp.templateGabaritRegionDefault[0].mode);\n      }\n      if (!modeRegion[index]) {\n        modeRegion[index] = Boolean(this.props.options.gabaritDefault.templateGabaritRegionDefault[0].mode);\n      }\n      idSVGRegion.push(region.idSVG);\n      if (!idSVGRegion[index]) {\n        idSVGRegion[index] = gabaritFileTmp.templateGabaritRegionDefault[0].idSVG;\n      }\n      if (!idSVGRegion[index]) {\n        idSVGRegion[index] = this.props.options.gabaritDefault.templateGabaritRegionDefault[0].idSVG;\n      }\n      imgRegion.push(region.img);\n      if (!imgRegion[index]) {\n        imgRegion[index] = gabaritFileTmp.templateGabaritRegionDefault[0].img;\n      }\n      if (!imgRegion[index]) {\n        imgRegion[index] = this.props.options.gabaritDefault.templateGabaritRegionDefault[0].img;\n      }\n      tmpToolTipA = { label: region.positionParameter.tooltipA, value: region.positionParameter.tooltipA };\n      if (!tmpToolTipA.label || !tmpToolTipA.value) {\n        tmpToolTipA = {\n          label: gabaritFileTmp.templateGabaritRegionDefault[0].positionParameter.tooltipA,\n          value: gabaritFileTmp.templateGabaritRegionDefault[0].positionParameter.tooltipA,\n        };\n      }\n      if (!tmpToolTipA.label || !tmpToolTipA.value) {\n        tmpToolTipA = {\n          label: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].positionParameter.tooltipA,\n          value: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].positionParameter.tooltipA,\n        };\n      }\n      tmpToolTipB = { label: region.positionParameter.tooltipB, value: region.positionParameter.tooltipB };\n      if (!tmpToolTipB.label || !tmpToolTipB.value) {\n        tmpToolTipB = {\n          label: gabaritFileTmp.templateGabaritRegionDefault[0].positionParameter.tooltipB,\n          value: gabaritFileTmp.templateGabaritRegionDefault[0].positionParameter.tooltipB,\n        };\n      }\n      if (!tmpToolTipB.label || !tmpToolTipB.value) {\n        tmpToolTipB = {\n          label: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].positionParameter.tooltipB,\n          value: this.props.options.gabaritDefault.templateGabaritRegionDefault[0].positionParameter.tooltipB,\n        };\n      }\n      tmpLabelAPosition = coordParse(region.positionParameter.xylabelA);\n      if (!tmpLabelAPosition) {\n        tmpLabelAPosition = coordParse(gabaritFileTmp.templateGabaritRegionDefault[0].positionParameter.xylabelA);\n      }\n      if (!tmpLabelAPosition) {\n        tmpLabelAPosition = coordParse(this.props.options.gabaritDefault.templateGabaritRegionDefault[0].positionParameter.xylabelA);\n      }\n      tmpLabelBPosition = coordParse(region.positionParameter.xylabelB);\n      if (!tmpLabelBPosition) {\n        tmpLabelBPosition = coordParse(gabaritFileTmp.templateGabaritRegionDefault[0].positionParameter.xylabelB);\n      }\n      if (!tmpLabelBPosition) {\n        tmpLabelBPosition = coordParse(this.props.options.gabaritDefault.templateGabaritRegionDefault[0].positionParameter.xylabelB);\n      }\n      positionParameterRegion.push(\n        new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n      );\n      orientedLinkAssociate.push(region.orientedLink);\n      if (!orientedLinkAssociate[index]) {\n        orientedLinkAssociate[index] = gabaritFileTmp.templateGabaritRegionDefault[0].orientedLink;\n      }\n      if (!orientedLinkAssociate[index]) {\n        orientedLinkAssociate[index] = this.props.options.gabaritDefault.templateGabaritRegionDefault[0].orientedLink;\n      }\n    });\n\n    newID = 0;\n    this.props.options.regionCoordinateSpace.forEach((element) => {\n      newID++;\n    });\n\n    filterRegion.forEach((element, index) => {\n      if (metricRegion.length > 0) {\n        let toLoad: RegionClass = new RegionClass(\n          newID + 1,\n          linkURLRegion[index],\n          [],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelRegion[index] + '_' + newID,\n          textObj,\n          mainMetricRegion[index],\n          metricRegion[index],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterRegion[index],\n          idSVGRegion[index],\n          orientedLinkAssociate[index],\n          posRegion[index],\n          posRegion[index],\n          modeRegion[index],\n          imgRegion[index],\n          widthInitialSpace.toString(),\n          heightInitialSpace.toString()\n        );\n        newID++;\n        this.props.options.regionCoordinateSpace.push(toLoad);\n      } else {\n        let toLoad: RegionClass = new RegionClass(\n          newID + 1,\n          linkURLRegion[index],\n          [],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelRegion[index] + '_' + newID,\n          textObj,\n          mainMetricRegion[index],\n          [],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterRegion[index],\n          idSVGRegion[index],\n          orientedLinkAssociate[index],\n          posRegion[index],\n          posRegion[index],\n          modeRegion[index],\n          imgRegion[index],\n          widthInitialSpace.toString(),\n          heightInitialSpace.toString()\n        );\n        newID++;\n        this.props.options.regionCoordinateSpace.push(toLoad);\n      }\n    });\n  };\n\n  gabaritUrlDisplay = (props: any): JSX.Element => {\n    if (props.list.lenght !== 0) {\n      const list = props.list.map((url: string, index: number) => (\n        <div\n          key={'GabaritUrlDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'GabaritUrl' + index.toString()}\n            label={'Url'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onGabaritListUrlChanged.bind(this)}\n            type=\"string\"\n            value={url || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.gabaritDeletUrl.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  gabaritDisplay = (props: any): JSX.Element => {\n    if (props.list.lenght !== 0) {\n      const list = props.list.map((gabarit: GabaritFile, index: number) => (\n        <div\n          key={'GabaritDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'Gabarit' + index.toString()}\n            label={'Gabarit'}\n            labelWidth={5}\n            inputWidth={20}\n            type=\"string\"\n            value={gabarit.fileName || ''}\n            readOnly\n          />\n          <FormLabel width={15}>Querry ID</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectQuerryID(value, index)}\n            allowCustomValue={false}\n            options={this.state.selectQuerryID}\n            width={10}\n            value={{ label: this.props.options.saveGabaritFile[index].queryID, value: this.props.options.saveGabaritFile[index].queryID }}\n          />\n          <Button id={index.toString()} key={'ButtunLoad' + index.toString()} onClick={this.checkLoaderGabarit.bind(this)}>\n            Load\n          </Button>\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.gabaritDeletFile.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  gabaritDefaultDisplay = (props: any): JSX.Element => {\n    if (props) {\n      const list = (\n        <div\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            key={'GabaritDefault'}\n            label={'GabaritDefault'}\n            labelWidth={10}\n            inputWidth={20}\n            type=\"string\"\n            value={props.list.fileName || ''}\n            readOnly\n          />\n          <Button variant=\"danger\" key={'ButtunDelDefault'} onClick={this.gabaritDeletFileDefault.bind(this)}>\n            Del\n          </Button>\n        </div>\n      );\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  delAll = () => {\n    // this.props.options.arrayCoordinateSpace = [];\n    // this.props.options.arrayOrientedLinks = [];\n    // this.props.options.arrayPoints = [];\n    this.props.options.saveGabaritURL = [];\n    this.props.options.saveGabaritURL = [];\n    // this.props.options.saveGabaritURL.mono = [];\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n  };\n\n  printDefault = () => {\n    console.log('gabaritDefault');\n    console.log(this.props.options.gabaritDefault);\n  };\n\n  printPoint = () => {\n    console.log('gabaritPoint');\n    console.log(this.props.options.arrayPoints);\n  };\n\n  printRegion = () => {\n    console.log('gabaritRegion');\n    console.log(this.props.options.regionCoordinateSpace);\n  };\n\n  printLink = () => {\n    console.log('gabaritDefault');\n    console.log(this.props.options.arrayOrientedLinks);\n  };\n\n  printTemp = () => {\n    console.log('gabaritDefault');\n    console.log(this.props.options.gabaritDefault);\n  };\n\n  render() {\n    const { options } = this.props;\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapseGabaritDefault} label=\"Default Gabarit URL\" onToggle={this.onToggleGabaritDefault}>\n          <FormField\n            label=\"Gabarit Default Url\"\n            labelWidth={10}\n            key={'GabaritDefaultUrl'}\n            inputWidth={18}\n            onChange={this.onGabaritDefaultUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.saveGabaritDefaultUrl || ''}\n          />\n          <Button key={'AddGabaritDefaultUrl'} onClick={this.addGabaritDefaultUrlInput}>\n            Add\n          </Button>\n          <this.gabaritDefaultDisplay list={options.gabaritDefault} />\n        </Collapse>\n        <Collapse isOpen={this.state.collapseSelectURL} label=\"Url List\" onToggle={this.onToggleSelectUrl}>\n          <FormField\n            label=\"Gabarit Url\"\n            labelWidth={8}\n            key={'GabaritUrl'}\n            inputWidth={20}\n            onChange={this.onGabaritUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.gabaritUrlInput || ''}\n          />\n          <Button key={'AddGabaritUrl'} onClick={this.addGabaritUrlInput}>\n            Add\n          </Button>\n          <div className=\"section gf-form-group\">\n            <Button onClick={this.fetchGabarit}>Finish</Button>\n            <this.gabaritUrlDisplay list={options.saveGabaritURL} />\n            <Button key={'delAll'} onClick={this.delAll}>\n              Del all urls\n            </Button>\n          </div>\n        </Collapse>\n        <Collapse isOpen={this.state.collapseGabarit} label=\"Gabarit List\" onToggle={this.onToggleGabarit}>\n          <this.gabaritDisplay list={options.saveGabaritFile} />\n        </Collapse>\n        <Button onClick={this.printDefault}>Default</Button>\n        <Button onClick={this.printPoint}>Point</Button>\n        <Button onClick={this.printRegion}>Region</Button>\n        <Button onClick={this.printLink}>Link</Button>\n        <Button onClick={this.printTemp}>Temp</Button>\n      </div>\n    );\n  }\n}\nexport default Gabarit;\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions, Metadata } from '../types';\nimport InputTextField from '../Functions/Input/inputText';\nimport { Button } from '@grafana/ui';\n// import { TextObject } from \"Models/TextObjectClass\";\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  meta: Metadata;\n  // saveToParent?: (meta: Metadata) => void;\n}\n\ninterface State {\n  meta: Metadata;\n  tagArray: JSX.Element[];\n  fonctionne: JSX.Element;\n  index: number;\n}\n\n/*\n * Manage Meta\n */\nclass MetadataComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      meta: this.props.meta,\n      tagArray: [],\n      fonctionne: <br />,\n      index: 0,\n    };\n  }\n\n  setPromiseMeta = (state: { meta: Metadata }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  _handleChange = async (str: string) => {\n    let old = this.state.meta;\n    old.meta = str;\n    console.log(old);\n    this.setState({\n      meta: old,\n    });\n    this.initArrayTag();\n\n    // await this.setPromiseMeta({\n    //   meta: old,\n    // });\n    // this.props.saveToParent && this.props.saveToParent(this.state.meta);\n  };\n\n  addElement = (index: number): JSX.Element => {\n    return (\n      <InputTextField\n        key={'meta' + index}\n        label={'Meta'}\n        name={'Meta'}\n        required={true}\n        placeholder={'Enter meta'}\n        value={this.state.meta.meta[index]}\n        _handleChange={(event: {\n          /** get currentTarget in event element */\n          currentTarget: HTMLInputElement;\n        }) => this._handleChange(event.currentTarget.value)}\n      />\n    );\n  };\n\n  initArrayTag = () => {\n    let i = 0;\n    const final: JSX.Element[] = [];\n    for (const l of this.state.tagArray) {\n      console.log(l);\n      final.push(this.addElement(i));\n      ++i;\n    }\n    const test = <ul>{final}</ul>;\n    this.setState({\n      fonctionne: <ul>{test}</ul>,\n      index: i,\n    });\n  };\n\n  addStatsdrgdhtjfy = async () => {\n    let old = this.state.meta;\n    old.meta;\n    await this.setPromiseMeta({\n      meta: old,\n    });\n    // this.props.saveToParent && this.props.saveToParent(this.state.meta);\n  };\n\n  addElementArray = () => {\n    this.addStatsdrgdhtjfy();\n\n    const final = this.state.tagArray;\n    final.push(this.addElement(this.state.index + 1));\n    const test = <ul>{final}</ul>;\n    this.setState({\n      tagArray: final,\n      fonctionne: test,\n      index: this.state.index + 1,\n    });\n  };\n\n  componentDidMount = () => {\n    this.initArrayTag();\n    // console.clear();\n    console.log('ddd');\n  };\n\n  testMoi = () => {\n    return <div>{this.state.tagArray}</div>;\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.fonctionne}\n        <Button variant=\"primary\" className=\"button\" onClick={() => this.addElementArray()}>\n          Add\n        </Button>\n      </div>\n    );\n  }\n}\nexport default MetadataComponent;\n","import React from 'react';\n\nimport { SimpleOptions, Metadata } from './types';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { Tab, TabsBar, TabContent } from '@grafana/ui';\n\nimport CoordinateSpaceInitialClass from 'components/coordinateSpaceInitial';\nimport ImportInput from 'components/importInput';\nimport ManageCoordinateSpace from 'components/CoordinateSpace/manageCoordinateSpace';\n\nimport Display from 'components/display';\nimport Gabarit from 'components/gabarit';\n\nimport MetadataComponent from 'components/metadataComponent';\n\nimport 'style/SimpleEditor.css';\nimport { TextObject } from 'Models/TextObjectClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  collapseDashboardData: boolean;\n  collapseTimeSelector: boolean;\n  collapsePanelData: boolean;\n\n  /**\n   * index\n   */\n  collapsePrincipalTarget: boolean;\n\n  tabsVariable: boolean[];\n\n  tabsCoordinateSpace: boolean[];\n}\n\n/**\n * class SimpleEditor\n */\nexport class SimpleEditor extends React.PureComponent<PanelEditorProps<SimpleOptions>, State, Props> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapseDashboardData: false,\n      collapsePanelData: false,\n      collapseTimeSelector: false,\n      collapsePrincipalTarget: false,\n      tabsVariable: [true, false, false, false, false],\n      tabsCoordinateSpace: [true, false, false, false],\n    };\n  }\n  /********************* Display Button in relation to View or Edit */\n\n  // /**\n  //  * edit default text\n  //  */\n  // myCallBackDefaultText = (datafromChild: {\n  // \t/**\n  // \t * new police\n  // \t */\n  // \tpolice: string,\n  // \t/**\n  // \t * new size\n  // \t */\n  // \tsize: string,\n  // \t/**\n  // \t * new style (italic, bold, ...)\n  // \t */\n  // \tstyle: string,\n  // }) => {\n  // \tthis.props.onOptionsChange({\n  // \t\t...this.props.options,\n  // \t\tpolice: datafromChild.police,\n  // \t\tsize: datafromChild.size,\n  // \t\tstyle: datafromChild.style,\n  // \t});\n  // }\n\n  /// Adrien\n  // onInfoChanged = ({ target }: any) => {\n  // \tthis.props.onOptionsChange({ ...this.props.options, info: target.value });\n  // }\n\n  onRefreshChanged = ({ target }: any) => {\n    this.props.onOptionsChange({ ...this.props.options, refresh: target.value });\n  };\n\n  onTimeZoneChanged = ({ target }: any) => {\n    this.props.onOptionsChange({ ...this.props.options, timezone: target.value });\n  };\n\n  onPanelChanged = ({ target }: any, index: any) => {\n    this.props.onOptionsChange({ ...this.props.options, Id: target.value });\n  };\n\n  onToggleDashboardData = (isOpen: boolean): void => {\n    this.setState({\n      collapseDashboardData: isOpen,\n    });\n  };\n\n  onToggleTimeSelector = (isOpen: boolean): void => {\n    this.setState({\n      collapseTimeSelector: isOpen,\n    });\n  };\n\n  onTogglePanelData = (isOpen: boolean): void => {\n    this.setState({\n      collapsePanelData: isOpen,\n    });\n  };\n\n  onTogglePrincipalTargets = (isOpen: boolean): void => {\n    this.setState({\n      collapsePrincipalTarget: isOpen,\n    });\n  };\n\n  /**\n   * switch tab\n   * @param {number} id id to to new tab\n   */\n  private goToTab = (id: number) => {\n    const oldValue: boolean[] = this.state.tabsVariable.slice();\n    const size: number = oldValue.length;\n    for (let i = 0; i < size; i++) {\n      oldValue[i] = i === id ? true : false;\n    }\n    this.setState({\n      tabsVariable: oldValue,\n    });\n  };\n\n  /**\n   * swtith tab Coordinate space\n   */\n  private goToTabCoordinateSpace = (id: number) => {\n    const oldValue: boolean[] = this.state.tabsCoordinateSpace.slice();\n    const size: number = oldValue.length;\n    for (let i = 0; i < size; i++) {\n      oldValue[i] = i === id ? true : false;\n    }\n    this.setState({\n      tabsCoordinateSpace: oldValue,\n    });\n  };\n\n  componentDidMount = async () => {\n    // console.log('mount Editor');\n\n    // delete data if new dashboard\n    const url: string = window.location.pathname;\n    const arrayUrl: string[] = url.split('/');\n    // console.log('currentDashboard : ' + this.props.options.currentDashboard);\n    for (const element of arrayUrl) {\n      if (element === 'new' && !this.props.options.currentDashboard) {\n        // console.log('new dashboard');\n        this.props.onOptionsChange({\n          ...this.props.options,\n          arrayPoints: [],\n          arrayOrientedLinks: [],\n          regionCoordinateSpace: [],\n          saveImportUrl: { total: [], mono: [], multi: [] },\n          saveImportFile: [],\n          totalUrlInput: '',\n          multiUrlInput: '',\n          monoUrlInput: '',\n          baseMap: {\n            image: '',\n            layerImage: '',\n            modeSVG: true,\n            idSVG: '',\n            width: '',\n            height: '',\n            isUploaded: false,\n          },\n        });\n      }\n    }\n\n    // display Button of Panel if is mode Edit\n    await Promise.resolve('Success').then(() => {\n      this.props.onOptionsChange({\n        ...this.props.options,\n        displayButton: true,\n        currentDashboard: false,\n      });\n    });\n  };\n\n  componentWillUnmount = async () => {\n    // console.log('unMount Editor');\n\n    // not display Button of Panel if is mode View\n    await Promise.resolve('Success').then(() => {\n      this.props.onOptionsChange({\n        ...this.props.options,\n        displayButton: false,\n        currentDashboard: true,\n      });\n    });\n  };\n\n  /**\n   * HTML code\n   */\n  render() {\n    const tt = new TextObject(\n      '',\n      false,\n      'white',\n      'black',\n      { bold: false, italic: false, underline: false },\n      true,\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: false,\n        addColorTextElement: false,\n        colorTextElement: 'white',\n        addColorBackElement: false,\n        colorBackElement: 'black',\n      },\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: true,\n        addColorTextElement: true,\n        colorTextElement: 'white',\n        addColorBackElement: true,\n        colorBackElement: 'black',\n      }\n    );\n\n    const testtt: Metadata = { meta: '', obj: tt };\n\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div className=\"divSimpleEditor\">\n        <TabsBar className=\"page-header tabs\" hideBorder={false}>\n          <Tab key=\"tabDisplay\" label={l10n.simpleEditor.display} active={this.state.tabsVariable[0]} onChangeTab={() => this.goToTab(0)} />\n          <Tab\n            key=\"tabSpaceInitialVisualisation\"\n            label={l10n.simpleEditor.spaceInitialVisualisation}\n            active={this.state.tabsVariable[1]}\n            onChangeTab={() => this.goToTab(1)}\n          />\n          <Tab\n            key=\"tabCoordinateSpace\"\n            label={l10n.simpleEditor.CoordinateSpace}\n            active={this.state.tabsVariable[2]}\n            onChangeTab={() => this.goToTab(2)}\n          />\n          {/* <Tab key='tabMetricsSettings'\n\t\t\t\t\t\tlabel={l10n.simpleEditor.metricsSettings}\n\t\t\t\t\t\tactive={this.state.tabsVariable[3]}\n\t\t\t\t\t\tonChangeTab={() => this.goToTab(3)}\n\t\t\t\t\t/> */}\n          <Tab key=\"tabGabarit\" label=\"Gabarit\" active={this.state.tabsVariable[3]} onChangeTab={() => this.goToTab(3)} />\n          <Tab key=\"tabImportInput\" label=\"Import Files\" active={this.state.tabsVariable[4]} onChangeTab={() => this.goToTab(4)} />\n        </TabsBar>\n        <TabContent>\n          {this.state.tabsVariable[0] && <Display options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />}\n          {this.state.tabsVariable[1] && (\n            <CoordinateSpaceInitialClass options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n          )}\n          {this.state.tabsVariable[2] && (\n            <div>\n              <TabsBar className=\"page-header tabs\" hideBorder={false}>\n                <Tab\n                  key=\"tabDisplayManageCoordinateSpace\"\n                  label=\"Region\"\n                  active={this.state.tabsCoordinateSpace[0]}\n                  onChangeTab={() => this.goToTabCoordinateSpace(0)}\n                />\n                <Tab\n                  key=\"tabDisplayPoint\"\n                  label=\"Point\"\n                  active={this.state.tabsCoordinateSpace[1]}\n                  onChangeTab={() => this.goToTabCoordinateSpace(1)}\n                />\n                {/* <Tab key='tabDisplayLink'\n\t\t\t\t\t\t\t\t\tlabel='Link'\n\t\t\t\t\t\t\t\t\tactive={this.state.tabsCoordinateSpace[2]}\n\t\t\t\t\t\t\t\t\tonChangeTab={() => this.goToTabCoordinateSpace(2)}\n\t\t\t\t\t\t\t\t/> */}\n                <Tab\n                  key=\"tabDisplayOrientedLink\"\n                  label=\"OrientedLink\"\n                  active={this.state.tabsCoordinateSpace[3]}\n                  onChangeTab={() => this.goToTabCoordinateSpace(3)}\n                />\n              </TabsBar>\n              <TabContent>\n                {this.state.tabsCoordinateSpace[0] && (\n                  <ManageCoordinateSpace\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={true}\n                    isPoint={false}\n                    isLink={false}\n                  />\n                )}\n                {this.state.tabsCoordinateSpace[1] && (\n                  <ManageCoordinateSpace\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={false}\n                    isPoint={true}\n                    isLink={false}\n                  />\n                )}\n                {this.state.tabsCoordinateSpace[3] && (\n                  <ManageCoordinateSpace\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={false}\n                    isPoint={false}\n                    isLink={true}\n                  />\n                )}\n              </TabContent>\n            </div>\n          )}\n          {/*\n\t\t\t\t\t\tthis.state.tabsVariable[3] &&\n\n\t\t\t\t\t\t<div className='adrien'>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapseDashboardData}\n\t\t\t\t\t\t\t\tlabel='Dashboard Data Display' onToggle={this.onToggleDashboardData}>\n\t\t\t\t\t\t\t\t<DashboardData options={this.props.options}\n\t\t\t\t\t\t\t\t\tonOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapseTimeSelector}\n\t\t\t\t\t\t\t\tlabel='Time Selector Display' onToggle={this.onToggleTimeSelector}>\n\t\t\t\t\t\t\t\t<TimeSelector options={this.props.options}\n\t\t\t\t\t\t\t\t\tonOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapsePrincipalTarget}\n\t\t\t\t\t\t\t\tlabel='Metrics Principal' onToggle={this.onTogglePrincipalTargets}>\n\t\t\t\t\t\t\t\t<MainTarget options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapsePanelData} label='Metrics Aux' onToggle={this.onTogglePanelData}>\n\t\t\t\t\t\t\t\t<PanelData options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} */}\n          {this.state.tabsVariable[3] && (\n            <div>\n              <Gabarit options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n            </div>\n          )}\n          {this.state.tabsVariable[4] && (\n            <div>\n              <ImportInput options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n            </div>\n          )}\n        </TabContent>\n        <MetadataComponent options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} meta={testtt} />\n      </div>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { SimpleOptions, defaults } from './types';\nimport { SimplePanel } from 'SimplePanel';\nimport { SimpleEditor } from 'SimpleEditor';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setDefaults(defaults).setEditor(SimpleEditor);\n","import { SelectableValue, DataFrame } from '@grafana/data';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { PointClass } from 'Models/PointClass';\nimport { LinkClass } from 'Models/LinkClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { Filtred } from 'Functions/loaderGabarit';\n\n/**\n * interface to save texte settings (police, size, style)\n */\nexport interface TexteSettings {\n  /** police simple panel */\n  police: string;\n  /** size simple panel */\n  size: string;\n  /** style simple panel */\n  style: Style;\n}\n\nexport interface LowerLimit {\n  id: number;\n  lowerLimitMin: string;\n  lowerLimitMax: string;\n  backColor: string;\n  borderColor: string;\n  sizeBorder: string;\n}\n\nexport interface GabaritFile {\n  fileName: string;\n  queryID: string;\n  loaded: boolean;\n  globalGabarit: GlobalGabarit;\n  templateGabaritPoint: TemplateGabaritPoint[];\n  templateGabaritRegion: TemplateGabaritRegion[];\n  templateGabaritLink: TemplateGabaritLink[];\n  templateGabaritPointDefault: TemplateGabaritPoint[];\n  templateGabaritRegionDefault: TemplateGabaritRegion[];\n  templateGabaritLinkDefault: TemplateGabaritLink[];\n}\n\nexport interface GlobalGabarit {\n  lowerLimit: any[];\n  textObject: any;\n  defaultColor: string;\n  colorMode: boolean;\n  traceBack: boolean;\n  traceBorder: boolean;\n}\n\nexport interface TemplateGabaritPoint {\n  filtered: string;\n  labelfix: boolean;\n  xylabel: string;\n  xylabelfix: string;\n  type: string;\n  name: string;\n  meta: Metadata[];\n  label: string;\n  positionParameter: any;\n  mainMetric: Metric;\n  metrics: Metric[];\n  linkURL: any;\n  valueMetric: string;\n  drawGraphicMarker: SelectableValue<string>;\n  shape: SelectableValue<string>;\n  // sizeWidth: SelectableValue<string>;\n  sizeWidth: string;\n  sizeHeight: SelectableValue<string>;\n  color: string;\n  associateOrientedLinksIn: OrientedLinkClass[];\n  associateOrientedLinksOut: OrientedLinkClass[];\n}\n\nexport interface TemplateGabaritRegion {\n  filtered: string;\n  labelfix: string;\n  xylabel: string;\n  //xylabel0: string;\n  xylabelfix: string;\n  //xylabelfix0: string;\n  type: string;\n  meta: Metadata[];\n  label: string;\n  positionParameter: any;\n  mainMetric: Metric;\n  metrics: Metric[];\n  linkURL: any;\n  idSVG: string;\n  mode: boolean;\n  img: string;\n  orientedLink: OrientedLinkClass[];\n  color: string;\n}\n\nexport interface TemplateGabaritLink {\n  filtered: string;\n  labelfix: boolean;\n  xylabelA: string;\n  xylabelB: string;\n  xylabelC: string;\n  xylabelfixA: string;\n  xylabelfixB: string;\n  xylabelfixC: string;\n  type: string;\n  name: string;\n  meta: Metadata[];\n  label: string;\n  positionParameter: any;\n  mainMetric: Metric;\n  metrics: Metric[];\n  mainMetricB: Metric;\n  metricsB: Metric[];\n  linkURL: any;\n  orientationLink: SelectableValue<string>;\n  size: string;\n  colorCoordinateA: string;\n  colorCoordinateB: string;\n  valueMainMetricA: string;\n  valueMainMetricB: string;\n  pointIn: string;\n  pointOut: string;\n  regionIn: string;\n  regionOut: string;\n  zIndex: string;\n  isIncurved: SelectableValue<boolean>;\n  color: string;\n}\nexport interface Metadata {\n  meta: string;\n  obj: TextObject;\n}\nexport declare type TManageValue = 'avg' | 'sum' | 'err';\n\nexport interface Metric {\n  key: string;\n  unit: string;\n  /** ecriture scientifique */\n  format: string;\n  keyValue: string;\n  filter?: Filtred[];\n  refId?: string;\n  expr?: string;\n  returnQuery?: DataFrame[];\n  /** avg, count, error */\n  manageValue: TManageValue;\n}\n\nexport interface MetricSettings {\n  /**\n   * fond is active (color)\n   */\n  fondIsActive: boolean;\n  /**\n   * contour is active\n   */\n  contourIsActive: boolean;\n  /**\n   * seuil for variable color\n   */\n  lowerLimit: LowerLimitClass[];\n  /**\n   * color mode for parametresGeneriques\n   */\n  colorMode: boolean;\n}\n\nexport interface MetricQuery {\n  __name__: string;\n  job: string;\n  //key: string,\n}\n\nexport interface ResultQuery {\n  metric: any;\n  value: any[];\n}\n\nexport interface DataQuery {\n  resultType: string;\n  result: ResultQuery[];\n}\n\nexport interface ReturnQuery {\n  status: string;\n  data: DataQuery;\n}\n\nexport interface Target {\n  expr: string;\n  refId?: string;\n}\n\nexport interface Background {\n  /** background image */\n  image: string;\n  /** layer image */\n  layerImage: string;\n  /** use image svg or value get by user */\n  modeSVG: boolean;\n  /** size width image or get by user */\n  width: string;\n  /** size height image or get by user */\n  height: string;\n  /** id svg for tag */\n  idSVG: string;\n  /** check if is Url or Uploaded from computer */\n  isUploaded: boolean;\n  /** name of uploaded file if image is uploaded from computer */\n  nameUploadedImage?: string;\n}\n\nexport interface TimeRange {\n  from: string;\n  to: string;\n}\n\nexport interface UrlList {\n  total: string[];\n  multi: string[];\n  mono: string[];\n}\n\nexport interface ImportFile {\n  name: string;\n  content: string;\n}\n\nexport interface CoordinateSpaceInitial {\n  /** coordinate for initial space */\n  coordinate: Coord4D;\n  /** display zone in SimplePanel (orange rectangle) */\n  displayArea: boolean;\n  /** if true use default coor 0-100 else use -100-100 */\n  //defaultReferentiel: boolean;\n}\n\ninterface Legend {\n  hiddenLegend: boolean;\n  x: number;\n  y: number;\n}\n\n/**\n * Stock the values between SimpleEditor and SimplePanel\n */\n// tslint:disable-next-line:interface-name\nexport interface SimpleOptions extends MetricSettings {\n  /** legend */\n  legend: Legend;\n\n  /** display: police, size and style text */\n  display: TexteSettings;\n  /****to do */\n  displayButton: boolean;\n  /**\n   * Espace de visualisation initial\n   */\n  coordinateSpaceInitial: CoordinateSpaceInitial;\n\n  /**\n   * Espace de coordonnees\n   */\n  regionCoordinateSpace: RegionClass[];\n\n  /**\n   * Liste des points générés depuis l'onglet Point\n   */\n  arrayPoints: PointClass[];\n\n  /**\n   * Liste des liens générés depuis l'onglet Link\n   */\n  arrayLinks: LinkClass[];\n\n  /**\n   * Liste des liens orientés générés depuis l'onglet OrientedLink\n   */\n  arrayOrientedLinks: OrientedLinkClass[];\n\n  /**\n   * Raw format of dashboard's json\n   */\n  contentJson: string;\n  /**\n   * Object format of dashboard's json\n   */\n  Json: any;\n  /**\n   * Id of dashboard\n   */\n  Id: number;\n  /**\n   * Uid of dashboard\n   */\n  uid: string;\n  /**\n   * Title of dashboard\n   */\n  title: string;\n  /**\n   * Style of dashboard\n   */\n  style: string;\n  /**\n   * True of false is the dashboard is editable\n   */\n  editable: string;\n  /**\n   * Version number of the dashboard\n   */\n  version: number;\n  /**\n   * Refresh time that is picked\n   */\n  refresh: SelectableValue<string>;\n  /**\n   * Shemas version number of the dashboard\n   */\n  shemaVersion: number;\n  /**\n   * Timezone of the dashboard\n   */\n  timezone: string;\n  /**\n   * Actual panel selected in \"Time selector display\"\n   */\n  actualPanel: SelectableValue<string>;\n  /**\n   * List of panel selectable in the dashboard\n   */\n  panelList: Array<SelectableValue<string>>;\n  /**\n   * Id of the selected panel\n   */\n  panelId: number;\n  /**\n   * Type of the selected panel\n   */\n  panelType: string;\n  /**\n   * List of targets in the selected panel\n   */\n  panelTargets: Target[];\n  /**\n   * List of targets loaded for fetch data\n   */\n  promTargets: Target[];\n  /**\n   * List of target load at init for fetch data\n   */\n  promGlobalTargets: Target[];\n  /**\n   * Time range selected for fetch data\n   */\n  timeRange: TimeRange;\n  /**\n   * Input of editable target\n   */\n  personalTarget: Target;\n  /**\n   * Time instant selected for fetch data\n   */\n  timeQuery: string;\n  /**\n   * Input of prometheus server url\n   */\n  promUrl: string;\n  /**\n   * List of query that will be send to the server\n   */\n  queryProm: string[];\n  /**\n   * List of iniot query that will be send to the server\n   */\n  queryPromGlobal: string[];\n  /**\n   * List of range query that will be send to the server\n   */\n  queryPromRange: string[];\n  /**\n   * List of time that can be picked in \"Time selector display\"\n   */\n  listStep: Array<SelectableValue<string>>;\n  /**\n   * Return of the prometheus's API call\n   */\n  jsonQueryReturn: ReturnQuery[];\n  /**\n   * Return of the init prometheus's API call\n   */\n  jsonGlobalQueryReturn: ReturnQuery[];\n  /**\n   * TODO\n   */\n  mainTarget: Target;\n  /**\n   * TODO\n   */\n  mainQueryProm: string;\n  /**\n   * TODO\n   */\n  mainQueryReturn: ReturnQuery;\n\n  testMainQueryReturn: any;\n\n  coordinatesToDrawLinkWithClick: [\n    {\n      id: number;\n    },\n    {\n      x: number;\n      xDefault: number;\n      y: number;\n      yDefault: number;\n      labelPoint: string;\n      point: any;\n      labelRegion: string;\n      region: any;\n    },\n    {\n      x: number;\n      xDefault: number;\n      y: number;\n      yDefault: number;\n      labelPoint: string;\n      point: any;\n      labelRegion: string;\n      region: any;\n    },\n    {\n      x: number;\n      y: number;\n      labelPoint: string;\n      point: any;\n      labelRegion: string;\n      region: any;\n    }\n  ];\n\n  indexOrientedLink: number;\n\n  indexPoint: number;\n\n  indexRegion: number;\n\n  listCollapsePoint: boolean[];\n\n  listCollapseOrientedLink: boolean[];\n  /** background image with property */\n  baseMap: Background;\n  saveImportUrl: UrlList;\n  saveImportFile: ImportFile[];\n  totalUrlInput: string;\n  multiUrlInput: string;\n  monoUrlInput: string;\n\n  zIndexOrientedLink: number;\n  orientedLinkToUpgrade: SelectableValue<OrientedLinkClass>;\n  orientedLinkToDowngrade: SelectableValue<OrientedLinkClass>;\n  checkIndexMultiLink: number;\n\n  newPoint: boolean;\n  newOrientedLink: boolean;\n\n  currentDashboard: boolean;\n\n  gabaritUrlInput: string;\n\n  saveGabaritDefaultUrl: string;\n\n  saveGabaritURL: string[];\n  saveGabaritFile: GabaritFile[];\n  saveDefaultGabaritFile: GabaritFile;\n  gabaritDefault: GabaritFile;\n\n  updateOnlyInitialSpace: boolean;\n}\n\nexport const defaults: SimpleOptions = {\n  saveGabaritDefaultUrl: '',\n  saveDefaultGabaritFile: {\n    queryID: 'A',\n    fileName: '',\n    loaded: false,\n    globalGabarit: {\n      lowerLimit: [\n        {\n          id: 0,\n          lowerLimitMin: '0',\n          lowerLimitMax: '0',\n          backColor: 'blue',\n          borderColor: 'red',\n          sizeBorder: '1px',\n        },\n      ],\n      textObject: {\n        value: 'default',\n        isTextTooltip: false,\n        colorBack: 'blue',\n        colorText: 'black',\n        style: {\n          bold: false,\n          italic: false,\n          underline: false,\n        },\n        generateObjectText: false,\n        valueGenerateObjectText: {\n          legendElement: 'default',\n          numericFormatElement: 'default',\n          unit: 'default',\n          displayObjectInTooltip: false,\n          addColorTextElement: false,\n          colorTextElement: 'black',\n          addColorBackElement: false,\n          colorBackElement: 'white',\n        },\n        generateAuxiliaryElement: {\n          legendElement: 'default',\n          numericFormatElement: 'default',\n          unit: 'default',\n          displayObjectInTooltip: false,\n          addColorTextElement: false,\n          colorTextElement: 'black',\n          addColorBackElement: false,\n          colorBackElement: 'white',\n        },\n      },\n      defaultColor: 'black',\n      colorMode: true,\n      traceBack: true,\n      traceBorder: true,\n    },\n    templateGabaritPoint: [],\n    templateGabaritRegion: [],\n    templateGabaritLink: [],\n    templateGabaritPointDefault: [],\n    templateGabaritRegionDefault: [],\n    templateGabaritLinkDefault: [],\n  },\n  legend: { hiddenLegend: true, x: 0, y: 0 },\n  baseMap: {\n    image: '',\n    layerImage: '',\n    modeSVG: true,\n    width: '',\n    height: '',\n    idSVG: '',\n    isUploaded: false,\n  },\n  // imageUrl: 'https://upload.wikimedia.org/wikipedia/en/b/be/Locator_Grid.png',\n  coordinateSpaceInitial: {\n    coordinate: {\n      xMin: '0',\n      xMax: '0',\n      yMin: '0',\n      yMax: '0',\n    },\n    displayArea: true,\n  },\n  displayButton: false,\n  regionCoordinateSpace: [],\n  arrayPoints: [],\n  arrayLinks: [],\n  arrayOrientedLinks: [],\n  display: {\n    police: 'Helvetica',\n    size: '1em',\n    style: { italic: false, bold: false, underline: false },\n  },\n  fondIsActive: true,\n  contourIsActive: true,\n  lowerLimit: [],\n  colorMode: true,\n  contentJson: 'contenu du dashboard',\n  Id: 0,\n  uid: '',\n  title: '',\n  style: '',\n  editable: '',\n  version: 0,\n  refresh: { value: '0', label: '0' },\n  shemaVersion: 0,\n  timezone: '',\n  actualPanel: { value: '0', label: '0' },\n  panelList: [{ value: '0', label: '0' }],\n  panelId: 0,\n  panelType: '',\n  panelTargets: [],\n  promTargets: [],\n  promGlobalTargets: [],\n  Json: {},\n  timeRange: { from: '2020-01-02 00:00:00', to: '2020-01-02 00:00:00' },\n  personalTarget: { expr: '' },\n  timeQuery: '2020-01-02 00:00:00',\n  promUrl: 'http://localhost:9090/api/v1/',\n  queryProm: [],\n  queryPromGlobal: [],\n  queryPromRange: [],\n  listStep: [{ value: '0', label: '0' }],\n  jsonQueryReturn: [],\n  jsonGlobalQueryReturn: [],\n  mainTarget: { expr: '' },\n  mainQueryProm: '',\n  mainQueryReturn: {\n    status: '',\n    data: {\n      resultType: '',\n      result: [\n        {\n          metric: {\n            __name__: '',\n            job: '',\n            //key: '',\n          },\n          value: [],\n        },\n      ],\n    },\n  },\n  testMainQueryReturn: {},\n  coordinatesToDrawLinkWithClick: [\n    {\n      id: 0,\n    },\n    {\n      x: 0,\n      xDefault: 0,\n      y: 0,\n      yDefault: 0,\n      labelPoint: '',\n      point: {},\n      labelRegion: '',\n      region: {},\n    },\n    {\n      x: 0,\n      xDefault: 0,\n      y: 0,\n      yDefault: 0,\n      labelPoint: '',\n      point: {},\n      labelRegion: '',\n      region: {},\n    },\n    {\n      x: 0,\n      y: 0,\n      labelPoint: '',\n      point: {},\n      labelRegion: '',\n      region: {},\n    },\n  ],\n  indexOrientedLink: 0,\n  indexPoint: 0,\n  indexRegion: 0,\n  listCollapsePoint: [],\n  listCollapseOrientedLink: [],\n  saveImportUrl: {\n    total: [],\n    multi: [],\n    mono: [],\n  },\n  saveImportFile: [],\n  totalUrlInput: '',\n  multiUrlInput: '',\n  monoUrlInput: '',\n  zIndexOrientedLink: 1,\n  orientedLinkToUpgrade: {},\n  orientedLinkToDowngrade: {},\n  checkIndexMultiLink: 0,\n  newPoint: true,\n  newOrientedLink: true,\n  currentDashboard: false,\n  gabaritUrlInput: '',\n  saveGabaritURL: [],\n  saveGabaritFile: [],\n  gabaritDefault: {\n    queryID: 'A',\n    fileName: 'default',\n    loaded: false,\n    globalGabarit: {\n      lowerLimit: [\n        {\n          id: 0,\n          lowerLimitMin: '0',\n          lowerLimitMax: '0',\n          backColor: 'blue',\n          borderColor: 'red',\n          sizeBorder: '1px',\n        },\n      ],\n      textObject: {\n        value: 'default',\n        isTextTooltip: false,\n        colorBack: 'blue',\n        colorText: 'black',\n        style: {\n          bold: false,\n          italic: false,\n          underline: false,\n        },\n        generateObjectText: false,\n        valueGenerateObjectText: {\n          legendElement: 'default',\n          numericFormatElement: 'default',\n          unit: 'default',\n          displayObjectInTooltip: false,\n          addColorTextElement: false,\n          colorTextElement: 'black',\n          addColorBackElement: false,\n          colorBackElement: 'white',\n        },\n        generateAuxiliaryElement: {\n          legendElement: 'default',\n          numericFormatElement: 'default',\n          unit: 'default',\n          displayObjectInTooltip: false,\n          addColorTextElement: false,\n          colorTextElement: 'black',\n          addColorBackElement: false,\n          colorBackElement: 'white',\n        },\n      },\n      defaultColor: 'black',\n      colorMode: true,\n      traceBack: true,\n      traceBorder: true,\n    },\n    templateGabaritPoint: [],\n    templateGabaritRegion: [],\n    templateGabaritLink: [],\n    templateGabaritPointDefault: [],\n    templateGabaritRegionDefault: [],\n    templateGabaritLinkDefault: [],\n  },\n  updateOnlyInitialSpace: false,\n};\n"],"sourceRoot":""}