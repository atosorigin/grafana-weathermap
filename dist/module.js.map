{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///external \"@grafana/data\"","webpack:///./style/CoordinateSpace.css?a586","webpack:///./style/CoordinateSpace.css","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///./style/SimpleEditor.css?9203","webpack:///./style/SimpleEditor.css","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./Models/CoordinateSpaceClass.tsx","webpack:///./Models/PointClass.tsx","webpack:///./Models/PositionParameterClass.tsx","webpack:///./Models/OrientedLinkClass.tsx","webpack:///./Models/TextObjectClass.tsx","webpack:///./Models/LinkURLClass.tsx","webpack:///./Functions/fetchMetrics.tsx","webpack:///./Functions/getResultQuery.tsx","webpack:///./Models/RegionClass.tsx","webpack:///./Functions/initRegionCoordinateSpace.tsx","webpack:///./Functions/initPoint.tsx","webpack:///./Functions/initOrientedLink.tsx","webpack:///./Models/ArrayInputClass.tsx","webpack:///./Functions/Input/inputButton.tsx","webpack:///./Functions/Input/inputText.tsx","webpack:///./Models/InputClass.tsx","webpack:///./Functions/CreateInput/createInputCoor.tsx","webpack:///./Functions/EditParameter/editGoodParameter.tsx","webpack:///./Models/LowerLimitClass.tsx","webpack:///./Functions/Input/inputSeriesColorPicker.tsx","webpack:///./components/Parametrage/fixColor.tsx","webpack:///./components/Parametrage/VariableColor.tsx","webpack:///./components/Parametrage/manageLowerLimit.tsx","webpack:///./components/CoordinateSpace/manageQuery.tsx","webpack:///./components/Parametrage/manageLink.tsx","webpack:///./components/Parametrage/styleComponent.tsx","webpack:///./components/Parametrage/textObjects.tsx","webpack:///./components/Parametrage/parametresGeneriques.tsx","webpack:///./components/CoordinateSpace/manageAuxiliaryQuery.tsx","webpack:///./components/CoordinateSpace/coordinateSpace.tsx","webpack:///./Functions/searchIDLimit.tsx","webpack:///./Models/InputSelectableClass.tsx","webpack:///./Functions/CreateInput/createInputsPoint.tsx","webpack:///./Functions/Input/inputTextPoint.tsx","webpack:///./Models/ArrayInputSelectableClass.tsx","webpack:///./Functions/EditParameter/editGoodParameterPoint.tsx","webpack:///./Functions/Input/inputSelectPoint.tsx","webpack:///./components/Parametrage/positionParameters.tsx","webpack:///./components/CoordinateSpace/point/point.tsx","webpack:///./Functions/Input/inputTextOrientedLink.tsx","webpack:///./Functions/Input/inputSelectOrientedLink.tsx","webpack:///./Functions/CreateInput/createInputsOrientedLink.tsx","webpack:///./Functions/EditParameter/editGoodParameterOrientedLink.tsx","webpack:///./components/CoordinateSpace/orientedLink/orientedLink.tsx","webpack:///./components/CoordinateSpace/addCoordinate.tsx","webpack:///./Functions/isNumFloat.tsx","webpack:///./Functions/parseColor.tsx","webpack:///./components/Draw/drawRectangleExtend.tsx","webpack:///./Functions/getLowerLimit.tsx","webpack:///./components/Draw/drawRectangle.tsx","webpack:///./components/Draw/drawPoint.tsx","webpack:///./components/Draw/drawOrientedLink.tsx","webpack:///./components/legend.tsx","webpack:///./SimplePanel.tsx","webpack:///./components/coordinateSpaceInitial.tsx","webpack:///./Models/dropZone.tsx","webpack:///./components/importInput.tsx","webpack:///./components/CoordinateSpace/editCoordinateSpace.tsx","webpack:///./components/CoordinateSpace/point/editPoint.tsx","webpack:///./components/CoordinateSpace/orientedLink/editOrientedLink.tsx","webpack:///./components/CoordinateSpace/manageCoordinateSpace.tsx","webpack:///./Functions/Input/inputSelect.tsx","webpack:///./components/display.tsx","webpack:///./Functions/loaderGabarit.tsx","webpack:///./components/gabarit.tsx","webpack:///./SimpleEditor.tsx","webpack:///./module.ts","webpack:///./types.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","__WEBPACK_EXTERNAL_MODULE__5__","locals","___CSS_LOADER_API_IMPORT___","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","constructor","__assign","assign","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","__values","linkURL","meta","lowerLimit","textObj","mainMetric","metrics","colorMode","traceBack","traceBorder","positionParameter","lowerLimitClass","valueMetric","drawGraphicMarker","shape","sizeWidth","sizeHeight","rotateArrow","positionShapeX","positionShapeY","color","associateOrientedLinksIn","associateOrientedLinksOut","widthInitialSpaceDefault","heightInitialSpaceDefault","positionXDefault","positionYDefault","CoordinateSpaceClass","labelAPositionX","labelAPositionY","labelBPositionX","labelBPositionY","tooltipPositionA","tooltipPositionB","orientationLink","size","pointAPositionX","pointAPositionY","colorCoordinateA","pointBPositionX","pointBPositionY","colorCoordinateB","valueMainMetricA","valueMainMetricB","pointIn","pointOut","regionIn","regionOut","zIndex","pointCPositionX","pointCPositionY","isIncurved","mainMetricB","metricsB","pointAPositionXDefault","pointAPositionYDefault","pointBPositionXDefault","pointBPositionYDefault","pointCPositionXDefault","pointCPositionYDefault","isTextTooltip","colorBack","colorText","generateObjectText","valueGenerateObjectText","generateAuxiliaryElement","followLink","hoveringTooltipLink","hoveringTooltipText","region","props","series","line","refId","returnQuery","metric","point","orientedLink","dataB","query","keyValue","nameQuery","split","flatMap","res","filters","cnt","debug","countValue","sizeQuery","fields","values","manageValue","idSVG","coords","coordsDefault","img","newId","initTextObject","TextObject","bold","italic","underline","legendElement","numericFormatElement","unit","displayObjectInTooltip","addColorTextElement","colorTextElement","addColorBackElement","colorBackElement","LinkURLClass","PositionParameterClass","format","xMin","xMax","yMin","yMax","expr","newZIndex","num","parametrageMetric","initPositionParameter","uneClassInput","getId","setId","getUneClassInput","setUneClassInput","required","_handleChange","withLabel","labelWidth","inputWidth","onClick","variant","placeholder","disabled","onChange","inputType","getLabel","setLabel","getName","setName","getInputType","setInputType","getRequired","setRequired","getPlaceholder","setPlaceholder","getValue","setValue","isInitial","l10n","newFieldLabel","InputClass","basics","newFieldPositionXMin","inputCoordinate","minXPosition","newFieldPositionXMax","maxXPosition","newFieldPositionYMin","minYPosition","newFieldPositionYMax","maxYPosition","editGoodParameter","editCoor","newValue","widthBackground","heigthBackground","startsWith","coordinate","limitValueInitialSpace","coorInitialSpace","position","lowerLimitMin","lowerLimitMax","backColor","borderColor","sizeBorder","couleur","keyInt","text","_onChange","width","className","margin","padding","backgroundColor","border","newColor","setStateAsyncSeuil","state","setState","callBack","lowerLimitCallBack","onChangeColorFond","newSeuil","initComponent","onChangeColorContour","onChangeSzContour","addButtonColor","textInputColor","labelSize","placeHolderSize","isLink","colorVariable","switchOutlineColor","thicknessOutline","keyContourDiv","event","currentTarget","switchBackgroundColor","htmlResult","componentDidMount","defaultSizeBorder","LowerLimitClass","componentDidUpdate","prevProps","render","Component","setStateAsyncArrayInputClass","setStateAsyncLowerLimit","setStateAsyncIndex","setStateAsyncNbVariation","fillVarInput","saveData","addInput","newLowerLimit","arrayInputClass","slice","ArrayInputClass","handleValueChange","idInput","idLine","cpy","keyFondColorPicker","nameInputSize","onChangeVariation","nbVariation","arrayInput","pSeuil","addMultipleVariation","nb","seuil","addVariation","onClickVariation","displayInput","parseInt","dynamicInput","newKey","infoSeuil","variationNumber","number","addColor","setStateAsyncCoordinate","setStateAsyncOpenLowerLimit","onSave","onSwitchFond","onSwitchContour","onSwitchColorMode","onToggleLowerLimit","isOpen","openLowerLimit","onToggle","display","genericParameter","variableColor","checked","traceBackground","traceContour","onOptionsChange","callBackToParent","callBackB","callBackToParentMainMetricB","getMainMetricB","arrayOrientedLink","arrayOrientedLinks","idCoordinate","onChangeSelectManageValue","newMainMetric","onChangeSelectManageValueB","_handleChangeKey","_handleChangeKeyB","_handleChangeKeyValue","_handleChangeKeyValueB","onChangeSelectQuery","selectQueryDefault","onChangeSelectQueryB","onToggleMainMetric","collapseMainMetric","onToggleLinkA","collapseLinkA","onToggleLinkB","collapseLinkB","getDefaultQueryB","defaultValue","selectQuery","getDefaultManageValue","selectManageValue","getDefaultManageValueB","fillSelectQuery","valueSelect","duplicate","newSelectManageValue","selectDefaultManageValue","setStateAsyncMainMetric","setStateAsyncMainMetricB","displayHtml","currentOrientedLink","allowCustomValue","marginTop","setStateAsyncFollowLink","setStateAsyncHoveringTooltipLink","setStateAsyncHoveringTooltipText","onChangeFollowLink","onChangeHoveringTooltipLink","onChangeHoveringTooltipText","coordinateSpace","metricPrincipalSetting","linkTooltip","textInTooltip","saveParent","onChangeBold","onChangeItalic","onChangeUnderline","oldStyle","stateAsyncTextObject","textObject","onChangeValeur","newTextObject","onChangeBackColor","onChangeColorText","onSwitchGenerateObjectText","onChangeLegendElement","onChangeunit","onChangeFormatageNumeriqueTextObject","onSwitchdisplayObjectInTooltip","onSwitchAddColorTextElement","onSwitchAddColorBackElement","onSwitchisTextTooltip","onChangeColorTextElement","onChangeColorBackElement","onChangeValueGenerateObjectTextLegendElement","onChangeValueGenerateObjectTextunit","onChangeValueGenerateObjectTextFormatageNumeriqueTextObject","onSwitchValueGenerateObjectTextdisplayObjectInTooltip","onSwitchValueGenerateObjectTextAddColorTextElement","onSwitchValueGenerateObjectTextAddColorBackElement","onChangeValueGenerateObjectTextColorTextElement","onChangeValueGenerateObjectTextColorBackElement","newText","principalMetric","hidden","textRegion","textBubble","colorBackground","generateTextObject","legend","digitalFormatting","mesureUnit","objectDisplayTextTooltip","colorTextOptional","optionalBackgroundColor","auxiliaryElement","onToggleLinkCollapse","collapseLink","onToggleTextObject","collapseTextObject","saveAuxMetrics","newAuxMetrics","isLinkB","idCurrentCoordinateSpace","isPoint","newArrayPoints","arrayPoints","newArrayLink","isRegion","newArrayRegion","regionCoordinateSpace","getAuxiliaryMetrics","auxiliaryMetrics","arrayRegions","onToggleCollapse","collapse","onToggleCollapseLinkA","onToggleCollapseLinkB","getAllQuery","allQuery","getCurrentQuery","getCurrentQueryB","newAuxiliaryMetrics","onChangeKey","idCurrentAuxMetrics","onChangeKeyB","onChangeValueKey","onChangeValueKeyB","onChangeManageValue","onChangeManageValueB","addAuxiliaryMetric","displayInputs","addAuxiliaryMetricB","deleteAuxiliaryMetric","deleteAuxiliaryMetricB","getAllManageValue","getCurrentManageValue","auxMetrics","generateInputs","idCoordinateSpace","styleTitle","textAlign","styleMainDiv","styleContent","flexDirection","justifyContent","marginBottom","styleSelect","mapItems","currentRefQuery","currentRefQueryB","styleButtonAdd","setStateAsyncArrayCoor","setStateAsyncArrayInput","deleteOwnInput","confirm","arrayCoor","onChangeSelectSVG","selectedDefaultSVG","isAddCoordinate","newArrayCoor","coordinateSpaceInitial","severityAlert","titleAlert","hiddenAlert","setTimeout","callBackToOther","oldCoor","callBackManageLowerLimit","coordiante","callBackLowerLimit","callBackMainMetric","onChangeRadioMode","selectedRadio","fillSelectSVG","selectedIDSvg","allIDSelected","defaultSVG","baseMap","modeSVG","setInterval","arrId","arrIdVerif","listElement","getElementById","querySelectorAll","from","localName","sort","a","console","error","returnAllId","clearInterval","getDataInInput","fillInputEspaceCoor","prevState","htmlInput","tmp","editGoodParameterExtend","getGoodValue","param","finalItem","divKey","newInput","bottom","right","title","severity","marginRight","input_type","optionValues","defaultValueColor","getOptionValues","setOptionValues","getDefaultValueColor","setDefaultValueColor","newFieldDrawGraphicMarker","InputSelectableClass","newFieldShape","newFieldSizeWidthShape","newFieldSizeHeightShape","newFieldRotateArrow","newFieldPositionXShape","newFieldPositionYShape","editGoodParameterPoint","newValueSelect","widthInitialSPaceDefault","heightInitialSPaceDefault","savePositionParameter","newPositionParameter","newArrayOrientedLink","getPositionParameter","handleChangeLabelAPositionX","handleChangeLabelAPositionY","handleChangeLabelBPositionX","handleChangeLabelBPositionY","handleChangeTooltipPositionA","handleChangeTooltipPositionB","handleChangeSelectOrientedLinkToUpgrade","newOrientedLinkComparedToToUpgrade","orientedLinkComparedToUpgrade","handleChangeSelectOrientedLinkToDowngrade","newOrientedLinkComaparedToDowngrade","orientedLinkComparedToDowngrade","downgradeLayerLevel","callBackZIndex","upgradeLayerLevel","defineListOrientedLink","listOptions","selectableValue","defineLabelPositionInputs","defineTooltipPositionInputs","optionsSelectTooltipPosition","defineLayerLevel","collapseLayerLevel","collapsepositionParameter","collapseLabel","collapseTooltip","callBackToParentZIndex","ArrayInputSelectableClass","isAddPoint","generateInputsPoint","arrayPointClass","newPoint","newInputList","dataCoordinateSpace","dataPoint","newFieldOrientationLink","newFieldSize","newFieldPointAPositionX","newFieldPointAPositionY","newFieldPointBPositionX","newFieldPointBPositionY","newFieldLabelLink","newFieldRegionIn","newFieldRegionOut","editGoodParameterOrientedLink","widthInitialSpace","heightInitialSpace","setStateAsyncOrientedLink","defineDataRegion","defineDataPoint","updateAssociatePointAndRegion","isAddLink","callBackMainMetricB","generateInputsOrientedLink","arrayOptionsRegion","optionRegion","arrayOptionsPoint","valueLabel","optionPoint","newOrientedLink","zIndexUpdated","searchNewId","allCoordinateSpace","defineIdPoint","defineIdOrientedLink","lastId","allRegion","zIndexOrientedLink","setAsyncOption","newIdx","indexRegion","indexPoint","indexOrientedLink","newCoordinate","returnEditMode","callBackPoint","callBackOrientedLink","isNumFloat","String","match","parseColor","colorEdit","transparency","arrayColor","editColorSvgZone","colorSVG","colorBorderSVG","changeColorElement","fill","fillOpacity","stroke","strokeOpacity","strokeWidth","generateValueMetricElement","valueQuery","converValueQuery","roundMetrics","toPrecision","setStateTooltip","styleTooltip","styleMetrics","valueQueryResult","tooltipValue","displayValuesAuxMetrics","colorBorder","displayValueQuery","getPositionTextObjectRegionSVG","elementSVG","coor","top","left","isUploaded","xSVG","ySVG","widthSVG","heightSVG","arrayAllValues","attributes","nodeValue","iX","iY","valueToCheck","rX","rY","generateTooltipAndEditColor","stateIsFill","min","minFloat","parseFloat","maxFloat","resultTooltip","coordinateTextObject","styleWrite","styleLabelTooltipSVG","textDecoration","defineTextDecoration","fontStyle","defineFontStyle","fontWeight","defineFontWeight","fontSize","fontFamily","police","styleMainMetricTooltipSVG","reqMetrics","uneCoor","getValuesAuxiliaryMetrics","valueAuxiliaryMetric","countTotalValues","resultTotalValues","numberLoop","labels","countValues","getConvertValueAuxMetrics","valueBrut","roundValue","html","valuesAuxMetrics","addColorText","addColorBack","styleTitle2","marginLeft","valueAuxMetric","isNaN","getCoordinatePxAdaptToInitialSpace","coorRegion","coorRegionDefault","initialSpace","leftPx","rightPx","topPx","bottomPx","ratioLeft","ratioRight","ratioTop","ratioBottom","Math","round","defineLimitX","defineLimitY","currentRegion","renduFinal","pBorder","textColor","coorHTML","styleDiv","background","backgroundSize","cursor","styleTextDiv","verticalAlign","styleMetricsDiv","buttonAddLinkIsActive","buttonAddIncurvedLinkIsActive","height","fillState","mainStyle","coordinateX","coordinateY","transformCoordonneesToPx","isMax","limitValueBorder","getPositionBorder","fillCoordinate","xMinInitialSpace","xMaxInitialSpace","yMinInitialSpace","yMaxInitialSpace","useLimit","limit","createRectangle","pLeft","pRight","pTop","pBottom","coordinateInitial","displayArea","resultHTML","defineBorderRadius","defineRotate","definePositionLabelX","positionLabel","labelPositionX","definePositionLabelY","labelPositionY","defineMainMetric","decimal","defineAuxMetric","auxMetric","defineTextObject","htmlTextObject","htmlMainMetric","dislayTextObjectInTooltip","textColorTextObject","backColoTextObject","displayMainMetric","displayMainMetricInTooltip","addTextColorMainMetric","addBackColorMainMetric","textColorMainMetric","backColorMainMetric","legendMainMetric","styleLabel","styleMainMetric","whiteSpace","toUpperCase","defineHtmlLinkTooltip","linkUrl","definePositionX","positionX","ratioX","x","defineBorderSize","newArrayPoint","definePositionY","positionY","shapeGraphicMarker","ratioY","heightImage","defineSizeGraphicMarkerPx","drawPoint","valueToolTip","defineContentTooltip","linkUrlPoint","borderRadius","rotate","defineBorderColor","defineBackgroundColor","idPoint","placement","tooltipPosition","displayLabel","sizePolice","valueMainMetric","localisation","contentTooltip","contentTooltipMainMetric","contentTooltipAuxMetric","contentTooltipAssociateLink","arrayOrientedLinksIn","associateOrientedLinkIn","arrayOrientedLinksOut","associateOrientedLinkOut","refMainMetric","displayAuxMetricInTooltip","addTextColorAuxMetric","addBackColorAuxMetric","textColorAuxMetric","backColorAuxMetric","legendAuxMetric","styleMainTitle","styleTitleMainMetric","styleTitleAuxMetric","styleTitle2AuxMetric","styleContentMainMetrics","styleContentAuxMetrics","styleTitleAssociateLink","styleContentAssociateLink","valuesAuxiliaryMetrics","orientedLinkIn","nameOrientedLink","orientedLinkOut","log","level","substring","valuePositionX","valuePositionY","labelSynchroX","whatLabel","labelMainMetric","offsetWidth","labelSynchroY","offsetHeight","defineParallelOrientedLinks","listParallelOrientedLinks","associateRegionIn","associateRegionOut","associatePointIn","associatePointOut","defineCoor4DRegion","heightPanel","widthPanel","xMinPx","yMinPx","regionSVGHtml","xMinSVG","xMaxSVG","yMaxSVG","yMinSVG","xMinSVGCoor","xMaxSVGCoor","yMinSVGCoor","yMaxSVGCoor","getPaddingPoint","idMultiLink","pointHtml","ifMultiLinkWithRegionDefineX","isIn","xMidIn","xMidOut","yMidIn","yMidOut","xResult","xMinIn","xMaxIn","xMinOut","xMaxOut","yMinIn","yMaxIn","yMinOut","yMaxOut","paddingPoint","ifMultiLinkWithRegionDefineY","yResult","defineValueTooptip","typeLink","refMainMetricA","refMainMetricB","styleTitle2MainMetric","auxiliaryMetricsB","metricB","valuesAuxiliaryMetricsB","defineColorTextLabel","defineSizeLink","synchroLinkX","synchroLinkY","drawLink","xA0","yA0","xB0","yB0","xCByClick0","yCByClick0","xA","yA","xB","yB","xCByClick","yCByClick","xC","yC","distanceAC","sqrt","angleDegreeAC","atan2","PI","xMidAC","yMidAC","xArrowAC","yArrowAC","distanceBC","angleDegreeBC","xMidBC","yMidBC","xArrowBC","yArrowBC","distanceAB","angleDegreeAB","xMidAB","yMidAB","xArrowAB","yArrowAB","valueTooltipMonodirectional","valueTooltipBidirectionalA","valueTooltipBidirectionalB","linkUrlOrientedLink","first","sizeArrowTriangle","alignContent","borderLeft","borderRight","borderBottom","defineColorLink","second","xCoordinateA","positionXADefault","yCoordinateA","positionYADefault","xCoordinateB","positionXBDefault","yCoordinateB","positionYBDefault","xCoordinateC","positionXCDefault","yCoordinateC","positionYCDefault","setStateAsyncFinalHTML","fillLowerLimit","allLimit","max","lower","listStyleType","fillRegion","rendu","ownElement","closeLegend","callBackClose","fillPoint","allPoint","fillLink","allLinks","renduState","maxWidth","hiddenLegend","overflowY","scrollbarColor","scrollbarWidth","resize","backgroundImage","paddingLeft","lineHeight","finalHTML","setStateLegendAsync","defineLimit","getCoordinatesToDrawPointWithClick","clickX","nativeEvent","clientX","layerY","createPointToClick","updatePositionOrientedLink","addAssociateOrientedLinkToPoint","namePointIn","namePointOut","indexOrientedLinkAssociate","updateAssociateOrientedLinkInToPoint","newAssociateLinkIn","namePoint","updateAssociateOrientedLinkOutToPoint","resetCoordinatesToDrawLinkWithClick","coordinatesToDrawLinkWithClick","labelPoint","labelRegion","getCoordinatesToDrawOrientedLinkWithClick","coordinates","objectIn","objectOut","pointC","createOrientedLinkToClick","charAt","substr","offsetParent","getCoordinatesToDrawIncurvedOrientedLinkWithClick","displayOrientedLink","getValuesAuxiliaryMetricsPoint","getValuesAuxiliaryMetricsOrientedLink","getValuesAuxiliaryMetricsOrientedLinkB","changeValueButtonToLink","valueButton","changeValueButtonToIncurvedLink","changeValueButtonToPoint","getCoordinates","numberClickDiv","callInFunc","resetButtonManage","updateButtonCss","buttonManage","addNode","addPoint","addLink","addIncurvedLink","ZoomIn","ZoomOut","allActionButton","callMethod","setAsyncButtonManage","oldValue","nbClickButton","positionLegend","newLegend","offsetX","offsetY","handleClick","tt","chargeRegion","displayRegion","editIdString","str","strSplit","newStr","checkIfDisplayButton","arrayUrl","canDisplayButton","displayButton","currentImage","image","svg","exec","resultWidth","resultHeight","newBaseMap","layerImage","fetch","documentId","getAttribute","addEventListener","elmnt","displayTooltipSVG","newDataSVG","dataTooltipSVG","tooltipSVG","hideTooltipSVG","tooltip_SVG","red","tooltip","texttest","boxShadow","visibility","yellow","rect","SVG_PathImage","parentElementSVG","arrayRegion","aElement","createElementNS","styleRegion","getValuesAuxiliaryMetricsRegionSVG","displayAuxiliaryMetricsRegionSVG","stopDisplayLegend","htmlTooltipRegionSVG","regionSVG","styleMainTooltipSVG","styleElementTooltipSVG","onMouseOver","parentElement","onMouseOut","displayPoint","getValuesMainMetricPoint","widthImage","getValuesMainMetricOrientedLink","getValuesMainMetricOrientedLinkB","colorA","colorB","NaN","updateOnlyInitialSpace","xMinMarginLeft","yMinMarginBottom","styleBackground","yMaxMarginTop","backgroundRepeat","opacity","styleSVG_2","defaultStyle","autoHide","hideHorizontalTrack","onDismiss","onClickBackdrop","dangerouslySetInnerHTML","__html","onChangeSwitchDisplayInitialSpace","newInitialSpace","fileReader","onChangeHandler","selectedFile","files","readerFile","FileReader","upload","onload","saveImportFile","extensionFile","readAsDataURL","readAsText","save","file","arrayFileName","parse","loadMultiRegions","loadMultiPoints","loadMultiLinks","onMultiListFileChanged","newData","multiDeletFile","findIndex","url","multiUploadDisplay","lenght","totalResult","PointValidator","newSpace","resultId","RegionValidator","LinkValidator","lien","UrlValidator","saveImportUrl","multi","pointUpdate","updatedPoint","loadMonoPoint","toLoad","selector","regionUpdate","updatedRegion","loadMonoRegion","linkUpdate","updatedLink","loadMonoLink","points","regions","links","loadTotal","panel","texteSettings","fetchMulti","loaderTotal","totalUrlInput","json","onToggleTotalUrl","collapseTotalUrl","onToggleMultiUrl","collapseMultiUrl","onToggleMultiUpload","collapseMultiUpload","onTotalUrlChanged","onTotalListUrlChanged","total","onMultiUrlChanged","multiUrlInput","onMultiListUrlChanged","addTotalUrlInput","addMultiUrlInput","totalDeletUrl","multiDeletUrl","tempo","totalUrlDisplay","multiUrlDisplay","delAll","toDel","oldData","find","fillSelectRegionSpace","onChangeSelectCoordinate","selectCoordinateSpaceDefault","valueExist","stockTmpCoordinatesSpace","selectCoordinateSpace","fillSelectPoint","tabsVariable","goToTab","contentTabEdit","hideBorder","active","onChangeTab","callParent","newPolice","pPolice","pSize","pStyle","setStateAsyncPolice","setStateAsyncsize","setStateAsyncStyle","handleChangesize","onChangePolice","onImageChanged","arrayImage","onChangeSwitchModeSVG","onChangeHeightBaseMap","onChangeWidthBaseMap","saveStyleData","uploadImage","nameUploadedImage","defineValueImage","imageUploaded","textDefault","labelClass","coordParse","coord","coordParseRegion","filterParse","element","onChangeSelectQuerryID","newGabaritFile","saveGabaritFile","queryID","onToggleSelectUrl","collapseSelectURL","saveGabaritURL","GabaritValidator","fileName","loadGabarit","loaded","globalGabarit","global","templateGabaritPoint","templateGabaritRegion","templateGabaritLink","templates","gab","fillGlobalGabaritDefault","fetchUrl","loadDefaultGabarit","newGabarit","fetchDataGabaritDefault","fillRegionDefault","uneRegion","newRegion","newAllRegion","fillPointDefault","unPoint","fillLinkDefault","unLink","fetchGabarit","onToggleGabaritUrl","onToggleGabarit","collapseGabarit","onGabaritUrlChanged","gabaritUrlInput","onGabaritDefaultUrlChanged","gabaritDefaultUrlInput","onGabaritListUrlChanged","addGabaritUrlInput","valid","addGabaritDefaultUrlInput","saveGabaritDefaultUrl","gabaritDeletUrl","gabaritDeletFile","gabarit","checkLoaderGabarit","loaderGabarit","tmpLabelAPosition","tmpLabelBPosition","tmpToolTipA","tmpToolTipB","generateValue","generateAux","filterPoint","posPoint","metaPoint","positionParameterPoint","mainMetricPoint","metricPoint","linkURLPoint","valueMetricPoint","drawGraphicMarkerPoint","shapePoint","sizeWidthPoint","sizeHeightPoint","colorPoint","associateOrientedLinksInPoint","associateOrientedLinksOutPoint","initialWidth","initialHeight","gabaritFileTmp","addColorBAckElement","labelfix","xylabel","xylabelfix","filtered","defaultColor","tooltipA","tooltipB","xylabelA","xylabelB","newID","labelCoordX","labelCoordY","labelCoord","pos","oneQuery","filterLink","posALink","posBLink","posCLink","nameLink","metaLink","labelLink","positionParameterLink","mainMetricALink","metricALink","mainMetricBLink","metricBLink","linkURLLink","sizeLink","colorALink","colorBLink","valueMetricALink","valueMetricBLink","pointInLink","pointOutLink","regionInLink","regionOutLink","isIncurvedLink","xylabelC","xylabelfixA","xylabelfixB","xylabelfixC","followlink","hoveringTooltiplink","hoveringTooltipTex","maA","maB","filterRegion","posRegion","metaRegion","positionParameterRegion","mainMetricRegion","metricRegion","linkURLRegion","idSVGRegion","modeRegion","imgRegion","orientedLinkAssociate","gabaritUrlDisplay","gabaritDisplay","readOnly","selectQuerryID","onRefreshChanged","refresh","onTimeZoneChanged","timezone","onPanelChanged","Id","onToggleDashboardData","collapseDashboardData","onToggleTimeSelector","collapseTimeSelector","onTogglePanelData","collapsePanelData","onTogglePrincipalTargets","collapsePrincipalTarget","goToTabCoordinateSpace","tabsCoordinateSpace","currentDashboard","mono","monoUrlInput","componentWillUnmount","simpleEditor","spaceInitialVisualisation","CoordinateSpace","PureComponent","setDefaults","saveDefaultGabaritFile","arrayLinks","fondIsActive","contourIsActive","contentJson","uid","editable","version","shemaVersion","actualPanel","panelList","panelId","panelType","panelTargets","promTargets","promGlobalTargets","Json","timeRange","to","personalTarget","timeQuery","promUrl","queryProm","queryPromGlobal","queryPromRange","listStep","jsonQueryReturn","jsonGlobalQueryReturn","mainTarget","mainQueryProm","mainQueryReturn","status","resultType","__name__","job","testMainQueryReturn","listCollapsePoint","listCollapseOrientedLink","orientedLinkToUpgrade","orientedLinkToDowngrade","checkIndexMultiLink","loopDrawOrientedLink","gabaritDefault","setEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./CoordinateSpace.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./CoordinateSpace.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./CoordinateSpace.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"div.inputCoor {\\n  margin-bottom: 2%; }\\n\\ndiv.buttonAddCoor {\\n  text-align: center; }\\n\", \"\",{\"version\":3,\"sources\":[\"CoordinateSpace.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,iBAAiB,EAAE;;AAErB;EACE,kBAAkB,EAAE\",\"file\":\"CoordinateSpace.css\",\"sourcesContent\":[\"div.inputCoor {\\n  margin-bottom: 2%; }\\n\\ndiv.buttonAddCoor {\\n  text-align: center; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./SimpleEditor.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./SimpleEditor.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./SimpleEditor.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"div.divSimpleEditor {\\n  width: 100%;\\n  /* margin: 2%;\\n  padding: 2%; */ }\\n\\ndiv.CoordinateSpaceInitital {\\n  /* margin: 1%; */\\n  /* margin-bottom: 8%; */ }\\n\\nh3.titreSection {\\n  margin-bottom: 2%;\\n  /*   color: blue; */ }\\n\\n.parameter-interface-container {\\n  width: 100%; }\\n\\n.parameter-interface-list-title {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-direction: row;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-justify-content: space-around;\\n      -ms-flex-pack: distribute;\\n          justify-content: space-around;\\n  border-bottom: 4px solid white;\\n  margin: 10px 0; }\\n\\n.parameter-interface-title {\\n  padding: 10px;\\n  list-style: none;\\n  cursor: pointer; }\\n\", \"\",{\"version\":3,\"sources\":[\"SimpleEditor.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAW;EACX;gBACc,EAAE;;AAElB;EACE,gBAAgB;EAChB,uBAAuB,EAAE;;AAE3B;EACE,iBAAiB;EACjB,mBAAmB,EAAE;;AAEvB;EACE,WAAW,EAAE;;AAEf;EACE,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,2BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,qCAA6B;MAA7B,yBAA6B;UAA7B,6BAA6B;EAC7B,8BAA8B;EAC9B,cAAc,EAAE;;AAElB;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe,EAAE\",\"file\":\"SimpleEditor.css\",\"sourcesContent\":[\"div.divSimpleEditor {\\n  width: 100%;\\n  /* margin: 2%;\\n  padding: 2%; */ }\\n\\ndiv.CoordinateSpaceInitital {\\n  /* margin: 1%; */\\n  /* margin-bottom: 8%; */ }\\n\\nh3.titreSection {\\n  margin-bottom: 2%;\\n  /*   color: blue; */ }\\n\\n.parameter-interface-container {\\n  width: 100%; }\\n\\n.parameter-interface-list-title {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  border-bottom: 4px solid white;\\n  margin: 10px 0; }\\n\\n.parameter-interface-title {\\n  padding: 10px;\\n  list-style: none;\\n  cursor: pointer; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { LinkURLClass } from './LinkURLClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { Metric } from 'types';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\n\nexport class CoordinateSpaceClass {\n  /** coordinate id */\n  id: number;\n  /** query */\n  linkURL: LinkURLClass;\n  meta: string;\n  lowerLimit: LowerLimitClass[];\n  label: string;\n  textObj: TextObject;\n  mainMetric: Metric;\n  metrics: Metric[];\n  colorMode: boolean;\n  traceBack: boolean;\n  traceBorder: boolean;\n  positionParameter: PositionParameterClass;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: string,\n    lowerLimit: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass\n  ) {\n    this.id = id;\n    this.linkURL = linkURL;\n    this.meta = meta;\n    this.lowerLimit = lowerLimit;\n    this.label = label;\n    this.textObj = textObj;\n    this.mainMetric = mainMetric;\n    this.metrics = metrics;\n    this.colorMode = colorMode;\n    this.traceBack = traceBack;\n    this.traceBorder = traceBorder;\n    this.positionParameter = positionParameter;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { CoordinateSpaceClass } from './CoordinateSpaceClass';\nimport { LinkURLClass } from './LinkURLClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { Metric } from 'types';\n//import { LinkClass } from './LinkClass';\nimport { PositionParameterClass } from './PositionParameterClass';\n\n/**\n * to do\n */\nexport class PointClass extends CoordinateSpaceClass {\n  name: string;\n  valueMetric: string;\n  drawGraphicMarker: SelectableValue<string>;\n  shape: SelectableValue<string>;\n  //sizeWidth: SelectableValue<string>;\n  sizeWidth: string;\n  sizeHeight: SelectableValue<string>;\n  rotateArrow: string;\n  positionShapeX: string;\n  positionShapeY: string;\n  color: string;\n  associateOrientedLinksIn: any[];\n  associateOrientedLinksOut: any[];\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  positionXDefault: string;\n  positionYDefault: string;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: string,\n    lowerLimitClass: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass,\n    name: string,\n    valueMetric: string,\n    drawGraphicMarker: SelectableValue<string>,\n    shape: SelectableValue<string>,\n    //sizeWidth: SelectableValue<string>,\n    sizeWidth: string,\n    sizeHeight: SelectableValue<string>,\n    rotateArrow: string,\n    positionShapeX: string,\n    positionShapeY: string,\n    color: string,\n    associateOrientedLinksIn: any[],\n    associateOrientedLinksOut: any[],\n    widthInitialSpaceDefault: string,\n    heightInitialSpaceDefault: string,\n    positionXDefault: string,\n    positionYDefault: string\n  ) {\n    super(id, linkURL, meta, lowerLimitClass, label, textObj, mainMetric, metrics, colorMode, traceBack, traceBorder, positionParameter);\n    this.name = name;\n    this.valueMetric = valueMetric;\n    this.drawGraphicMarker = drawGraphicMarker;\n    this.shape = shape;\n    this.sizeWidth = sizeWidth;\n    this.sizeHeight = sizeHeight;\n    this.rotateArrow = rotateArrow;\n    this.positionShapeX = positionShapeX;\n    this.positionShapeY = positionShapeY;\n    this.color = color;\n    this.associateOrientedLinksIn = associateOrientedLinksIn;\n    this.associateOrientedLinksOut = associateOrientedLinksOut;\n    this.widthInitialSpaceDefault = widthInitialSpaceDefault;\n    this.heightInitialSpaceDefault = heightInitialSpaceDefault;\n    this.positionXDefault = positionXDefault;\n    this.positionYDefault = positionYDefault;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\n\nexport class PositionParameterClass {\n  labelAPositionX: string;\n  labelAPositionY: string;\n  labelBPositionX: string;\n  labelBPositionY: string;\n  tooltipPositionA: SelectableValue<string>;\n  tooltipPositionB: SelectableValue<string>;\n\n  constructor(\n    labelAPositionX: string,\n    labelAPositionY: string,\n    labelBPositionX: string,\n    labelBPositionY: string,\n    tooltipPositionA: SelectableValue<string>,\n    tooltipPositionB: SelectableValue<string>\n  ) {\n    this.labelAPositionX = labelAPositionX;\n    this.labelAPositionY = labelAPositionY;\n    this.labelBPositionX = labelBPositionX;\n    this.labelBPositionY = labelBPositionY;\n    this.tooltipPositionA = tooltipPositionA;\n    this.tooltipPositionB = tooltipPositionB;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { LinkURLClass } from './LinkURLClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { Metric } from 'types';\nimport { CoordinateSpaceClass } from './CoordinateSpaceClass';\nimport { PositionParameterClass } from './PositionParameterClass';\n\nexport class OrientedLinkClass extends CoordinateSpaceClass {\n  name: string;\n  orientationLink: SelectableValue<string>;\n  size: string;\n  pointAPositionX: string;\n  pointAPositionY: string;\n  colorCoordinateA: string;\n  pointBPositionX: string;\n  pointBPositionY: string;\n  colorCoordinateB: string;\n  valueMainMetricA: string;\n  valueMainMetricB: string;\n  pointIn: string;\n  pointOut: string;\n  regionIn: string;\n  regionOut: string;\n  zIndex: number;\n  pointCPositionX: string;\n  pointCPositionY: string;\n  isIncurved: SelectableValue<boolean>;\n  mainMetricB: Metric;\n  metricsB: Metric[];\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  pointAPositionXDefault: string;\n  pointAPositionYDefault: string;\n  pointBPositionXDefault: string;\n  pointBPositionYDefault: string;\n  pointCPositionXDefault: string;\n  pointCPositionYDefault: string;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: string,\n    lowerLimitClass: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass,\n    name: string,\n    orientationLink: SelectableValue<string>,\n    size: string,\n    pointAPositionX: string,\n    pointAPositionY: string,\n    colorCoordinateA: string,\n    pointBPositionX: string,\n    pointBPositionY: string,\n    colorCoordinateB: string,\n    valueMainMetricA: string,\n    valueMainMetricB: string,\n    pointIn: string,\n    pointOut: string,\n    regionIn: string,\n    regionOut: string,\n    zIndex: number,\n    pointCPositionX: string,\n    pointCPositionY: string,\n    isIncurved: SelectableValue<boolean>,\n    mainMetricB: Metric,\n    metricsB: Metric[],\n    widthInitialSpaceDefault: string,\n    heightInitialSpaceDefault: string,\n    pointAPositionXDefault: string,\n    pointAPositionYDefault: string,\n    pointBPositionXDefault: string,\n    pointBPositionYDefault: string,\n    pointCPositionXDefault: string,\n    pointCPositionYDefault: string\n  ) {\n    super(id, linkURL, meta, lowerLimitClass, label, textObj, mainMetric, metrics, colorMode, traceBack, traceBorder, positionParameter);\n    this.name = name;\n    this.orientationLink = orientationLink;\n    this.size = size;\n    this.pointAPositionX = pointAPositionX;\n    this.pointAPositionY = pointAPositionY;\n    this.colorCoordinateA = colorCoordinateA;\n    this.pointBPositionX = pointBPositionX;\n    this.pointBPositionY = pointBPositionY;\n    this.colorCoordinateB = colorCoordinateB;\n    this.valueMainMetricA = valueMainMetricA;\n    this.valueMainMetricB = valueMainMetricB;\n    this.pointIn = pointIn;\n    this.pointOut = pointOut;\n    this.regionIn = regionIn;\n    this.regionOut = regionOut;\n    this.zIndex = zIndex;\n    this.pointCPositionX = pointCPositionX;\n    this.pointCPositionY = pointCPositionY;\n    this.isIncurved = isIncurved;\n    this.mainMetricB = mainMetricB;\n    this.metricsB = metricsB;\n    this.widthInitialSpaceDefault = widthInitialSpaceDefault;\n    this.heightInitialSpaceDefault = heightInitialSpaceDefault;\n    this.pointAPositionXDefault = pointAPositionXDefault;\n    this.pointAPositionYDefault = pointAPositionYDefault;\n    this.pointBPositionXDefault = pointBPositionXDefault;\n    this.pointBPositionYDefault = pointBPositionYDefault;\n    this.pointCPositionXDefault = pointCPositionXDefault;\n    this.pointCPositionYDefault = pointCPositionYDefault;\n  }\n}\n","import { Style } from 'components/Parametrage/styleComponent';\n\nexport interface GenerateTextObject {\n  /** legend element */\n  legendElement: string;\n  /** numeric format element */\n  numericFormatElement: string;\n  /** unity mesure element */\n  unit: string;\n  /** display object in text */\n  displayObjectInTooltip: boolean;\n  /** display object permanently */\n  // displayObjectPermanently: boolean;\n  /** color text element active */\n  addColorTextElement: boolean;\n  /** color text element */\n  colorTextElement: string;\n  /** color back element active */\n  addColorBackElement: boolean;\n  /** color back element */\n  colorBackElement: string;\n}\n\n/** value of textObjects component */\nexport class TextObject {\n  /** legend object */\n  // legend: boolean;\n  /** object value */\n  value: string;\n  /** text display in element or tooltip */\n  isTextTooltip: boolean;\n  /** back color region */\n  colorBack: string;\n  /** color text region */\n  colorText: string;\n  /** style */\n  style: Style;\n  /** style text region */\n  // styleText: string;\n  /** generate object text */\n  generateObjectText: boolean;\n  /** if generateObjectText is true when use variable to stock data */\n  valueGenerateObjectText: GenerateTextObject;\n  /** text value for auxiliary metrics */\n  generateAuxiliaryElement: GenerateTextObject;\n\n  constructor(\n    // legend: boolean,\n    value: string,\n    isTextTooltip: boolean,\n    colorBack: string,\n    colorText: string,\n    style: Style,\n    // styleText: string,\n    generateObjectText: boolean,\n    valueGenerateObjectText: GenerateTextObject,\n    generateAuxiliaryElement: GenerateTextObject\n  ) {\n    // this.legend = legend;\n    this.value = value;\n    this.isTextTooltip = isTextTooltip;\n    this.colorBack = colorBack;\n    this.colorText = colorText;\n    this.style = style;\n    // this.styleText = styleText;\n    this.generateObjectText = generateObjectText;\n    this.valueGenerateObjectText = valueGenerateObjectText;\n    this.generateAuxiliaryElement = generateAuxiliaryElement;\n  }\n}\n","/**\n * class for parametrage metric\n */\nexport class LinkURLClass {\n  /**\n   * link to follow when click data in dashboard\n   */\n  followLink: string;\n  /**\n   * link for tooltip\n   */\n  hoveringTooltipLink: string;\n  /**\n   * text for tooltip\n   */\n  hoveringTooltipText: string;\n\n  constructor(followLink: string, hoveringTooltipLink: string, hoveringTooltipText: string) {\n    this.followLink = followLink;\n    this.hoveringTooltipLink = hoveringTooltipLink;\n    this.hoveringTooltipText = hoveringTooltipText;\n  }\n\n  /**\n   * get followingLink\n   */\n  get getFollowLink(): string {\n    return this.followLink;\n  }\n\n  /**\n   * set followingLink\n   * @param {string} value new value\n   */\n  set setFollowLink(value: string) {\n    this.followLink = value;\n  }\n\n  /**\n   * get hoveringTooltipLink\n   */\n  get getHoveringTooltipLink(): string {\n    return this.hoveringTooltipLink;\n  }\n\n  /**\n   * setHoveringTooltipLink\n   * @param {string} value new value\n   */\n  set setHoveringTooltipLink(value: string) {\n    this.hoveringTooltipLink = value;\n  }\n\n  /**\n   * get hoveringTooltipText\n   */\n  get getHoveringTooltipText(): string {\n    return this.hoveringTooltipText;\n  }\n\n  /**\n   * set hoveringTooltipText\n   * @param {string} value new Value\n   */\n  set setHoveringTooltipText(value: string) {\n    this.hoveringTooltipText = value;\n  }\n}\n","import { RegionClass } from '../Models/RegionClass';\nimport { PointClass } from '../Models/PointClass';\nimport { DataFrame } from '@grafana/data';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\nexport const reqMetricRegion = (region: RegionClass, props: any) => {\n  const data: DataFrame[] = [];\n\n  for (const line of props.data.series) {\n    if (line.refId === region.mainMetric.refId) {\n      data.push(line);\n    }\n  }\n  region.mainMetric.returnQuery = data;\n};\n\nexport const reqMetricAuxRegion = (region: RegionClass, props: any) => {\n  for (const metric of region.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n};\n\nexport const reqMetricPoint = (point: PointClass, props: any) => {\n  const data: DataFrame[] = [];\n  for (const line of props.data.series) {\n    if (line.refId === point.mainMetric.refId) {\n      data.push(line);\n    }\n  }\n  point.mainMetric.returnQuery = data;\n};\n\nexport const reqMetricAuxPoint = (point: PointClass, props: any) => {\n  for (const metric of point.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n};\n\nexport const reqMetricLink = (link: OrientedLinkClass, props: any) => {\n  const data: DataFrame[] = [];\n  for (const line of props.data.series) {\n    if (line.refId === link.mainMetric.refId) {\n      data.push(line);\n    }\n  }\n  link.mainMetric.returnQuery = data;\n};\n\nexport const reqMetricAuxLink = (link: OrientedLinkClass, props: any) => {\n  for (const metric of link.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n};\n\nexport const reqMetricOrientedLink = (orientedLink: OrientedLinkClass, props: any) => {\n  const data: DataFrame[] = [];\n  const dataB: DataFrame[] = [];\n  for (const line of props.data.series) {\n    if (line.refId === orientedLink.mainMetric.refId) {\n      data.push(line);\n    }\n    if (line.refId === orientedLink.mainMetricB.refId) {\n      dataB.push(line);\n    }\n  }\n  orientedLink.mainMetric.returnQuery = data;\n  orientedLink.mainMetricB.returnQuery = dataB;\n};\n\nexport const reqMetricAuxOrientedLink = (orientedLink: OrientedLinkClass, props: any) => {\n  for (const metric of orientedLink.metrics) {\n    const data: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        data.push(line);\n      }\n    }\n    metric.returnQuery = data;\n  }\n  for (const metric of orientedLink.metricsB) {\n    const dataB: DataFrame[] = [];\n    for (const line of props.data.series) {\n      if (line.refId === metric.refId) {\n        dataB.push(line);\n      }\n    }\n    metric.returnQuery = dataB;\n  }\n};\n\nexport const reqUpdateMetrics = (props: any) => {\n  // Update regions\n  for (const region of props.options.regionCoordinateSpace) {\n    reqMetricRegion(region, props);\n    reqMetricAuxRegion(region, props);\n  }\n  // Update links\n  for (const link of props.options.arrayLinks) {\n    reqMetricLink(link, props);\n    reqMetricAuxLink(link, props);\n  }\n\n  // Update links\n  for (const orientedLink of props.options.arrayOrientedLinks) {\n    reqMetricOrientedLink(orientedLink, props);\n    reqMetricAuxOrientedLink(orientedLink, props);\n  }\n  // Update points\n  for (const point of props.options.arrayPoints) {\n    reqMetricPoint(point, props);\n    reqMetricAuxPoint(point, props);\n  }\n};\n","import { Metric } from 'types';\nimport { DataFrame } from '@grafana/data';\nimport { Filtred } from '../Functions/loaderGabarit';\n\n/** search is key and keyValue is in query */\nconst searchNameIsKey = (query: DataFrame, mainMetric: Metric): boolean => {\n  if (mainMetric.key === '' && mainMetric.keyValue === '') {\n    return true;\n  }\n  let remove = query.name?.split('{');\n  const nameQuery: string[] =\n    remove![1].split(',').flatMap((value) => {\n      return value.replace(/[\\\"{}]/gm, '');\n    }) || [];\n  if (nameQuery && nameQuery.length > 0) {\n    for (const oneQuery of nameQuery) {\n      const keyValue: string[] = oneQuery.split('=');\n      if (keyValue.length === 2) {\n        if (keyValue[0] === mainMetric.key && keyValue[1] === mainMetric.keyValue) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nconst searchNameIsFilter = (query: DataFrame, mainMetric: Metric): boolean => {\n  if (!mainMetric.filter) {\n    return true;\n  }\n  let res = 0;\n  const filters: Filtred[] = mainMetric.filter;\n  let remove = query.name?.split('{');\n  const nameQuery: string[] =\n    remove![1].split(',').map((value) => {\n      return value.replace(/[\\\"{}]/gm, '');\n    }) || [];\n  if (nameQuery && nameQuery.length > 0) {\n    for (const oneQuery of nameQuery) {\n      const keyValue: string[] = oneQuery.split('=');\n      for (const filter of filters) {\n        if (keyValue.length === 2) {\n          if (keyValue[0] === filter.label && keyValue[1] === filter.value) {\n            res++;\n          }\n        }\n      }\n    }\n    // console.log(res);\n    // console.log(filters.length)\n    if (res === filters.length) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getResultQuery = (mainMetric: Metric) => {\n  let cnt: number | null = null;\n  if (mainMetric.returnQuery && mainMetric.returnQuery.length > 0) {\n    const debug: number[] = [];\n    let countValue = 0;\n\n    cnt = 0;\n    if (!mainMetric.filter) {\n      for (const line of mainMetric.returnQuery) {\n        const result = searchNameIsKey(line, mainMetric);\n        if (result) {\n          const sizeQuery: number = line.fields[0].values.length;\n          // in grafana 7 change line.field[0] to line.field[1]\n          for (let i = 0; i < sizeQuery; i++) {\n            if (line.fields.length > 0 && line.fields[0].values.get(i)) {\n              cnt += line.fields[0].values.get(i);\n              debug.push(line.fields[0].values.get(i));\n              ++countValue;\n            }\n          }\n        }\n      }\n      if (mainMetric.manageValue === 'avg') {\n        cnt /= countValue;\n      } else if (mainMetric.manageValue === 'err') {\n        if (countValue > 1) {\n          cnt = null;\n        }\n      }\n    } else {\n      for (const line of mainMetric.returnQuery) {\n        const result = searchNameIsFilter(line, mainMetric);\n        if (result) {\n          const sizeQuery: number = line.fields[0].values.length;\n          // in grafana 7 change line.field[0] to line.field[1]\n          for (let i = 0; i < sizeQuery; i++) {\n            if (line.fields.length > 0 && line.fields[0].values.get(i)) {\n              cnt += line.fields[0].values.get(i);\n              debug.push(line.fields[0].values.get(i));\n              ++countValue;\n            }\n          }\n        }\n      }\n      if (mainMetric.manageValue === 'avg') {\n        cnt /= countValue;\n      } else if (mainMetric.manageValue === 'err') {\n        if (countValue > 1) {\n          cnt = null;\n        }\n      }\n    }\n  }\n\n  return cnt;\n};\n/*********************************** the best solution it's check the instant checbox in addquery */\n\n/*****************************Other solution but there are a problem with average of node_network_up */\n\n// export const getResultQuery = (mainMetric: Metric) => {\n//   let cnt: number | null = null;\n//   console.log(mainMetric.returnQuery);\n//   if (mainMetric.returnQuery && mainMetric.returnQuery.length > 0) {\n//     const debug: number[] = [];\n//     let countValue = 0;\n\n//     cnt = 0;\n//     for (const line of mainMetric.returnQuery) {\n//       const result = searchNameIsKey(line, mainMetric);\n//       if (result) {\n//         const sizeQuery: number = line.fields[0].values.length;\n//         // in grafana 7 change line.field[0] to line.field[1]\n//         for (let i = 0; i < sizeQuery; i++) {\n//           if (line.fields.length > 0 && line.fields[0].values.get(i)) {\n//             cnt += line.fields[0].values.get(i);\n//             debug.push(line.fields[0].values.get(i));\n//             ++countValue;\n//           }\n//           if (countValue > -1 && mainMetric.manageValue === 'sum') {\n//             break;\n//           }\n//         }\n//       }\n//     }\n//     if (mainMetric.manageValue === 'avg') {\n//       cnt /= countValue;\n//     } else if (mainMetric.manageValue === 'err') {\n//       if (countValue > -1) {\n//         cnt = null;\n//       }\n//     }\n//     console.log(debug);\n//   }\n\n//   return cnt;\n// };\n","import { CoordinateSpaceClass } from './CoordinateSpaceClass';\nimport { OrientedLinkClass } from './OrientedLinkClass';\nimport { LowerLimitClass } from './LowerLimitClass';\nimport { TextObject } from './TextObjectClass';\nimport { LinkURLClass } from './LinkURLClass';\nimport { Metric } from 'types';\nimport { PositionParameterClass } from './PositionParameterClass';\n\nexport interface Coord4D {\n  /** coordinate x min */\n  xMin: string;\n  /** coordinate x max */\n  xMax: string;\n  /** coordinate y min */\n  yMin: string;\n  /** coordinate y max */\n  yMax: string;\n}\n\nexport class RegionClass extends CoordinateSpaceClass {\n  /** id of region object svg */\n  idSVG: string;\n  /** id svg or coordinate */\n  mode: boolean;\n  orientedLink: OrientedLinkClass[];\n  /** if coordinate mode, stock coordinate here */\n  coords: Coord4D;\n  /** coordinate to creation */\n  coordsDefault: Coord4D;\n  /** background image region if coordinate mode */\n  img: string;\n  /** width of initial */\n  widthInitialSpaceDefault: string;\n  /** height of initial */\n  heightInitialSpaceDefault: string;\n\n  constructor(\n    id: number,\n    linkURL: LinkURLClass,\n    meta: string,\n    lowerLimitClass: LowerLimitClass[],\n    label: string,\n    textObj: TextObject,\n    mainMetric: Metric,\n    metrics: Metric[],\n    colorMode: boolean,\n    traceBack: boolean,\n    traceBorder: boolean,\n    positionParameter: PositionParameterClass,\n    idSVG: string,\n    orientedLink: OrientedLinkClass[],\n    coords: Coord4D,\n    coordsDefault: Coord4D,\n    mode: boolean,\n    img: string,\n    widthInitialSpaceDefault: string,\n    heightInitialSpaceDefault: string\n  ) {\n    super(id, linkURL, meta, lowerLimitClass, label, textObj, mainMetric, metrics, colorMode, traceBack, traceBorder, positionParameter);\n    this.idSVG = idSVG;\n    this.mode = mode;\n    this.orientedLink = orientedLink;\n    this.coords = coords;\n    this.coordsDefault = coordsDefault;\n    this.img = img;\n    this.widthInitialSpaceDefault = widthInitialSpaceDefault;\n    this.heightInitialSpaceDefault = heightInitialSpaceDefault;\n  }\n}\n","import { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { Metric } from 'types';\n\n/** init CoordinateSpaceExtendClass */\nexport const initRegionCoordinateSpace = (index: number): RegionClass => {\n  const newId: number = index + 1;\n  const initTextObject: TextObject = new TextObject(\n    '',\n    false,\n    'rgb(255, 255, 255, 0)',\n    'black',\n    { bold: false, italic: false, underline: false },\n    true,\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: false,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    },\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: true,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    }\n  );\n  const linkURL: LinkURLClass = new LinkURLClass('', '', '');\n  const coords: Coord4D = {\n    xMin: '0',\n    xMax: '0',\n    yMin: '0',\n    yMax: '0',\n  };\n  const coordsDefault: Coord4D = {\n    xMin: '0',\n    xMax: '0',\n    yMin: '0',\n    yMax: '0',\n  };\n  const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n  const newCoordinate: RegionClass = new RegionClass(\n    newId,\n    linkURL,\n    '',\n    [],\n    '',\n    initTextObject,\n    { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' },\n    [],\n    false,\n    false,\n    false,\n    positionParameter,\n    '',\n    [],\n    coords,\n    coordsDefault,\n    true,\n    '',\n    '',\n    ''\n  );\n  return newCoordinate;\n};\n\nexport const cloneRegionCoordinateSpace = (region: RegionClass): RegionClass => {\n  const initTextObject: TextObject = new TextObject(\n    // region.textObj.legend,\n    region.textObj.value,\n    region.textObj.isTextTooltip,\n    region.textObj.colorBack,\n    region.textObj.colorText,\n    region.textObj.style,\n    region.textObj.generateObjectText,\n    region.textObj.valueGenerateObjectText,\n    region.textObj.generateAuxiliaryElement\n  );\n  const linkURL: LinkURLClass = new LinkURLClass(region.linkURL.followLink, region.linkURL.hoveringTooltipLink, region.linkURL.hoveringTooltipText);\n  const coords: Coord4D = {\n    xMin: region.coords.xMin,\n    xMax: region.coords.xMax,\n    yMin: region.coords.yMin,\n    yMax: region.coords.yMax,\n  };\n  const coordsDefault: Coord4D = {\n    xMin: region.coords.xMin,\n    xMax: region.coords.xMax,\n    yMin: region.coords.yMin,\n    yMax: region.coords.yMax,\n  };\n  const positionParameter: PositionParameterClass = new PositionParameterClass(\n    region.positionParameter.labelAPositionX,\n    region.positionParameter.labelAPositionY,\n    region.positionParameter.labelBPositionX,\n    region.positionParameter.labelBPositionY,\n    region.positionParameter.tooltipPositionA,\n    region.positionParameter.tooltipPositionB\n  );\n  const mainMetric: Metric = {\n    key: region.mainMetric.key,\n    unit: region.mainMetric.unit,\n    format: region.mainMetric.format,\n    keyValue: region.mainMetric.keyValue,\n    refId: region.mainMetric.refId,\n    expr: region.mainMetric.expr,\n    returnQuery: region.mainMetric.returnQuery,\n    manageValue: region.mainMetric.manageValue,\n  };\n  const newCoordinate: RegionClass = new RegionClass(\n    region.id,\n    linkURL,\n    region.meta,\n    region.lowerLimit,\n    region.label,\n    initTextObject,\n    mainMetric,\n    region.metrics,\n    region.colorMode,\n    region.traceBack,\n    region.traceBorder,\n    positionParameter,\n    region.idSVG,\n    region.orientedLink,\n    coords,\n    coordsDefault,\n    region.mode,\n    region.img,\n    region.widthInitialSpaceDefault,\n    region.heightInitialSpaceDefault\n  );\n  return newCoordinate;\n};\n","import { TextObject } from '../Models/TextObjectClass';\nimport { LinkURLClass } from '../Models/LinkURLClass';\nimport { PositionParameterClass } from '../Models/PositionParameterClass';\nimport { Metric } from '../types';\nimport { PointClass } from '../Models/PointClass';\n//rgba(255, 255, 255, 0)\nexport const initPoint = (index: number): PointClass => {\n  const newId: number = index;\n  const initTextObject: TextObject = new TextObject(\n    '',\n    false,\n    'white',\n    'black',\n    { italic: false, bold: false, underline: false },\n    true,\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: false,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    },\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: true,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: true,\n      colorTextElement: '',\n      addColorBackElement: true,\n      colorBackElement: 'black',\n    }\n  );\n  const linkURL: LinkURLClass = new LinkURLClass('', '', '');\n\n  const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n  const newCoordinate: PointClass = new PointClass(\n    newId,\n    linkURL,\n    '',\n    [],\n    '',\n    initTextObject,\n    { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' },\n    [],\n    false,\n    false,\n    false,\n    positionParameter,\n    'point' + newId.toString(),\n    '',\n    { label: 'Yes', value: 'true' },\n    { label: 'Circle', value: 'circle' },\n    '12',\n    { label: 'Medium', value: 'medium' },\n    '0',\n    '0',\n    '0',\n    'black',\n    [],\n    [],\n    '0',\n    '0',\n    '0',\n    '0'\n  );\n  return newCoordinate;\n};\n\nexport const clonePoint = (point: PointClass): PointClass => {\n  const initTextObject: TextObject = new TextObject(\n    // point.textObj.legend,\n    point.textObj.value,\n    point.textObj.isTextTooltip,\n    point.textObj.colorBack,\n    point.textObj.colorText,\n    point.textObj.style,\n    point.textObj.generateObjectText,\n    point.textObj.valueGenerateObjectText,\n    point.textObj.generateAuxiliaryElement\n  );\n  const linkURL: LinkURLClass = new LinkURLClass(point.linkURL.followLink, point.linkURL.hoveringTooltipLink, point.linkURL.hoveringTooltipText);\n  const positionParameter: PositionParameterClass = new PositionParameterClass(\n    point.positionParameter.labelAPositionX,\n    point.positionParameter.labelAPositionY,\n    point.positionParameter.labelBPositionX,\n    point.positionParameter.labelBPositionY,\n    point.positionParameter.tooltipPositionA,\n    point.positionParameter.tooltipPositionB\n  );\n  const mainMetric: Metric = {\n    key: point.mainMetric.key,\n    unit: point.mainMetric.unit,\n    format: point.mainMetric.format,\n    keyValue: point.mainMetric.keyValue,\n    filter: point.mainMetric.filter,\n    refId: point.mainMetric.refId,\n    expr: point.mainMetric.expr,\n    returnQuery: point.mainMetric.returnQuery,\n    manageValue: point.mainMetric.manageValue,\n  };\n\n  const newCoordinate: PointClass = new PointClass(\n    point.id,\n    linkURL,\n    point.meta,\n    point.lowerLimit,\n    point.label,\n    initTextObject,\n    mainMetric,\n    point.metrics,\n    point.colorMode,\n    point.traceBack,\n    point.traceBorder,\n    positionParameter,\n    point.name,\n    point.valueMetric,\n    point.drawGraphicMarker,\n    point.shape,\n    point.sizeWidth,\n    point.sizeHeight,\n    point.rotateArrow,\n    point.positionShapeX,\n    point.positionShapeY,\n    point.color,\n    point.associateOrientedLinksIn,\n    point.associateOrientedLinksOut,\n    point.widthInitialSpaceDefault,\n    point.heightInitialSpaceDefault,\n    point.positionXDefault,\n    point.positionYDefault\n  );\n  return newCoordinate;\n};\n","import { TextObject } from '../Models/TextObjectClass';\nimport { LinkURLClass } from '../Models/LinkURLClass';\nimport { PositionParameterClass } from '../Models/PositionParameterClass';\nimport { Metric } from '../types';\nimport { OrientedLinkClass } from '../Models/OrientedLinkClass';\n\nexport const initOrientedLink = (newId: number, newZIndex: number): OrientedLinkClass => {\n  const num: number = newId;\n  const zIndex: number = newZIndex;\n  const initTextObject: TextObject = new TextObject(\n    '',\n    false,\n    'white',\n    'black',\n    { bold: false, italic: false, underline: false },\n    true,\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: false,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: false,\n      colorTextElement: 'white',\n      addColorBackElement: false,\n      colorBackElement: 'black',\n    },\n    {\n      legendElement: '',\n      numericFormatElement: '5',\n      unit: '',\n      displayObjectInTooltip: true,\n      // 'displayObjectPermanently': false,\n      addColorTextElement: true,\n      colorTextElement: 'white',\n      addColorBackElement: true,\n      colorBackElement: 'black',\n    }\n  );\n\n  const parametrageMetric: LinkURLClass = new LinkURLClass('', '', '');\n  const initPositionParameter: PositionParameterClass = new PositionParameterClass('', '', '', '', {}, {});\n  const initMainMetrics: Metric = { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' };\n  const initMainMetricsB: Metric = { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' };\n  const newCoordinate: OrientedLinkClass = new OrientedLinkClass(\n    num,\n    parametrageMetric,\n    '',\n    [],\n    '',\n    initTextObject,\n    // {\n    // \t'key': keyMainMetric || '',\n    // \t'unit': '',\n    // \t'format': '',\n    // \t'keyValue': keyValueMainMetric || '',\n    // \t'refId': refIdMainMetric || '',\n    // \t'manageValue': 'avg',\n    // }\n    initMainMetrics,\n    [],\n    false,\n    false,\n    false,\n    initPositionParameter,\n    'orientedLink' + num.toString(),\n    { label: 'Monodirectional', value: 'AB' },\n    '9',\n    '0',\n    '0',\n    '#5794F2',\n    '0',\n    '0',\n    '#E54658',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    zIndex,\n    '0',\n    '0',\n    {},\n    initMainMetricsB,\n    [],\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  );\n  return newCoordinate;\n};\n\nexport const cloneOrientedLink = (orientedLink: OrientedLinkClass): OrientedLinkClass => {\n  const initTextObject: TextObject = new TextObject(\n    //orientedLink.textObj.legend,\n    orientedLink.textObj.value,\n    orientedLink.textObj.isTextTooltip,\n    orientedLink.textObj.colorBack,\n    orientedLink.textObj.colorText,\n    orientedLink.textObj.style,\n    orientedLink.textObj.generateObjectText,\n    orientedLink.textObj.valueGenerateObjectText,\n    orientedLink.textObj.generateAuxiliaryElement\n  );\n  const linkURL: LinkURLClass = new LinkURLClass(\n    orientedLink.linkURL.followLink,\n    orientedLink.linkURL.hoveringTooltipLink,\n    orientedLink.linkURL.hoveringTooltipText\n  );\n  const positionParameter: PositionParameterClass = new PositionParameterClass(\n    orientedLink.positionParameter.labelAPositionX,\n    orientedLink.positionParameter.labelAPositionY,\n    orientedLink.positionParameter.labelBPositionX,\n    orientedLink.positionParameter.labelBPositionY,\n    orientedLink.positionParameter.tooltipPositionA,\n    orientedLink.positionParameter.tooltipPositionB\n  );\n  const mainMetric: Metric = {\n    key: orientedLink.mainMetric.key,\n    unit: orientedLink.mainMetric.unit,\n    format: orientedLink.mainMetric.format,\n    keyValue: orientedLink.mainMetric.keyValue,\n    refId: orientedLink.mainMetric.refId,\n    expr: orientedLink.mainMetric.expr,\n    returnQuery: orientedLink.mainMetric.returnQuery,\n    manageValue: orientedLink.mainMetric.manageValue,\n  };\n  const newCoordinate: OrientedLinkClass = new OrientedLinkClass(\n    orientedLink.id,\n    linkURL,\n    orientedLink.meta,\n    orientedLink.lowerLimit,\n    orientedLink.label,\n    initTextObject,\n    mainMetric,\n    orientedLink.metrics,\n    orientedLink.colorMode,\n    orientedLink.traceBack,\n    orientedLink.traceBorder,\n    positionParameter,\n    orientedLink.name,\n    orientedLink.orientationLink,\n    orientedLink.size,\n    orientedLink.pointAPositionX,\n    orientedLink.pointAPositionY,\n    orientedLink.colorCoordinateA,\n    orientedLink.pointBPositionX,\n    orientedLink.pointBPositionY,\n    orientedLink.colorCoordinateB,\n    orientedLink.valueMainMetricA,\n    orientedLink.valueMainMetricB,\n    orientedLink.pointIn,\n    orientedLink.pointOut,\n    orientedLink.regionIn,\n    orientedLink.regionOut,\n    orientedLink.zIndex,\n    orientedLink.pointCPositionX,\n    orientedLink.pointCPositionY,\n    orientedLink.isIncurved,\n    orientedLink.mainMetricB,\n    orientedLink.metricsB,\n    orientedLink.widthInitialSpaceDefault,\n    orientedLink.heightInitialSpaceDefault,\n    orientedLink.pointAPositionXDefault,\n    orientedLink.pointAPositionYDefault,\n    orientedLink.pointBPositionXDefault,\n    orientedLink.pointBPositionYDefault,\n    orientedLink.pointCPositionXDefault,\n    orientedLink.pointCPositionYDefault\n  );\n  return newCoordinate;\n};\n","import { InputClass } from './InputClass';\n\n/**\n * class ArayInput\n * @param id number\n * @param uneClassInput InputClass[]\n */\nexport class ArrayInputClass {\n  /**\n   * id\n   */\n  id: number;\n  /**\n   * array class InputClass\n   */\n  uneClassInput: InputClass[];\n\n  constructor(id: number, uneClassInput: InputClass[]) {\n    this.id = id;\n    this.uneClassInput = uneClassInput;\n  }\n\n  /**\n   * get id\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * set id\n   * @param id new id\n   */\n  setId(id: number) {\n    this.id = id;\n  }\n\n  /**\n   * get value of InputClass[]\n   */\n  getUneClassInput() {\n    return this.uneClassInput;\n  }\n\n  /**\n   * set a new InputClass[]\n   * @param uneClassInput new object InputClass[]\n   */\n  setUneClassInput(uneClassInput: InputClass[]) {\n    this.uneClassInput = uneClassInput;\n  }\n}\n","import React, { FunctionComponent } from 'react';\nimport { FormField, Button } from '@grafana/ui';\n\ntype InputButtonFieldProps = {\n  label: string;\n  value: string;\n  name: string;\n  required: boolean;\n  _handleChange: (event: any) => void;\n  id: string;\n  withLabel?: boolean;\n};\n\nconst InputButtonField: FunctionComponent<InputButtonFieldProps> = ({ label, value, name, required, _handleChange, id, withLabel }) => {\n  if (withLabel === true) {\n    return (\n      <div>\n        <FormField\n          label={label}\n          labelWidth={10}\n          inputWidth={20}\n          type=\"button\"\n          required={required}\n          name={name}\n          id={id}\n          onClick={_handleChange}\n          value={label || ''}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Button onClick={_handleChange} variant=\"danger\" id={id} size=\"md\">\n          Delete\n        </Button>\n        {/* <FormField label={''}\n\t\t\t\t\t\t\t\tinputWidth={20}\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\trequired={required}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tonClick={_handleChange}\n\t\t\t\t\t\t\t\tvalue={label || ''} /> */}\n      </div>\n    );\n  }\n};\n\nexport default InputButtonField;\n","import { FormField } from '@grafana/ui';\nimport React, { ChangeEvent, FunctionComponent } from 'react';\n// import { SelectableValue } from '@grafana/data';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  label: string;\n  name: string;\n  placeholder: string;\n  required: boolean;\n  value: string;\n  _handleChange: (event: ChangeEvent<HTMLInputElement>) => any;\n  disabled?: boolean;\n};\n\nexport const InputTextField: FunctionComponent<InputTextFieldProps> = ({ label, name, placeholder, required, value, _handleChange, disabled }) => (\n  <div>\n    <FormField\n      label={label}\n      labelWidth={15}\n      inputWidth={15}\n      type=\"text\"\n      required={required}\n      name={name}\n      value={value}\n      onChange={_handleChange}\n      placeholder={placeholder}\n      disabled={disabled ? disabled : false}\n    />\n  </div>\n);\n\nexport default InputTextField;\n\n// Math.round((label && label.length > 0 ? label.length : 1) * 1.7)\n","/**\n * class InputClass\n * @param id string\n * @param label string\n * @param name string\n * @param inputType string\n * @param required boolean\n * @param placeholder string?\n * @param value string?\n */\nexport class InputClass {\n  /**\n   * identiofiant unique\n   */\n  id: string;\n  /**\n   * label de l'input\n   */\n  label: string;\n  /**\n   * le nom de l'imput\n   */\n  name: string;\n  /**\n   * le type de l'input (button, text)\n   */\n  inputType: string;\n  /**\n   * obligatoire\n   */\n  required: boolean;\n  /**\n   * texte a afficher\n   */\n  placeholder?: string;\n  /**\n   * la value de l'input\n   */\n  value?: string;\n\n  constructor(id: string, label: string, name: string, inputType: string, required: boolean, placeholder?: string, value?: string) {\n    this.id = id;\n    this.label = label;\n    this.name = name;\n    this.inputType = inputType;\n    this.required = required;\n    this.placeholder = placeholder;\n    this.value = value;\n  }\n\n  /**\n   * get id\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * set id\n   * @param id new id\n   */\n  setId(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * get label\n   */\n  getLabel(): string {\n    return this.label;\n  }\n\n  /**\n   * set label\n   * @param label new label\n   */\n  setLabel(label: string) {\n    this.label = label;\n  }\n\n  /**\n   * get name\n   */\n  getName() {\n    return this.name;\n  }\n\n  /**\n   * set name\n   * @param name new name\n   */\n  setName(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * get type input\n   */\n  getInputType() {\n    return this.inputType;\n  }\n\n  /**\n   * set type input\n   * @param inputType new input type\n   */\n  setInputType(inputType: string) {\n    this.inputType = inputType;\n  }\n\n  /**\n   * get required\n   */\n  getRequired() {\n    return this.required;\n  }\n\n  /**\n   * set required\n   * @param required new value required\n   */\n  setRequired(required: boolean) {\n    this.required = required;\n  }\n\n  /**\n   * get placeholder\n   */\n  getPlaceholder() {\n    return this.placeholder;\n  }\n\n  /**\n   * set placeholder\n   * @param placeholder new value placeholder\n   */\n  setPlaceholder(placeholder: string) {\n    this.placeholder = placeholder;\n  }\n\n  /**\n   * get value\n   */\n  getValue() {\n    return this.value;\n  }\n\n  /**\n   * set value\n   * @param value new value\n   */\n  setValue(value: string) {\n    this.value = value;\n  }\n}\n","import { InputClass } from 'Models/InputClass';\n\nexport const createInputCoor = (id: number, isInitial: boolean): InputClass[] => {\n  const l10n = require('Localization/en.json');\n\n  const newFieldLabel: InputClass = new InputClass(\n    id.toString() + 'label',\n    l10n.basics.label,\n    'label' + id.toString(),\n    'text',\n    true,\n    'Label',\n    undefined\n  );\n  const newFieldPositionXMin: InputClass = new InputClass(\n    id.toString() + 'xMin',\n    l10n.inputCoordinate.minXPosition,\n    'positionXMin' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.minXPosition,\n    undefined\n  );\n  const newFieldPositionXMax: InputClass = new InputClass(\n    id.toString() + 'xMax',\n    l10n.inputCoordinate.maxXPosition,\n    'positionXMax' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.maxXPosition,\n    undefined\n  );\n  const newFieldPositionYMin: InputClass = new InputClass(\n    id.toString() + 'yMin',\n    l10n.inputCoordinate.minYPosition,\n    'positionYMin' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.minYPosition,\n    undefined\n  );\n  const newFieldPositionYMax: InputClass = new InputClass(\n    id.toString() + 'yMax',\n    l10n.inputCoordinate.maxYPosition,\n    'positionYMax' + id.toString(),\n    'text',\n    true,\n    l10n.inputCoordinate.maxYPosition,\n    undefined\n  );\n  // const newFieldKey: InputClass = new InputClass(id.toString() + 'key',\n  // \tl10n.inputCoordinate.key, 'key' + id.toString(),\n  // \t'text', true, l10n.inputCoordinate.key, undefined);\n  // const newFieldValueKey: InputClass = new InputClass(id.toString() + 'valueKey',\n  // \tl10n.inputCoordinate.valueKey, 'valueKey' + id.toString(),\n  // \t'text', true, l10n.inputCoordinate.valueKey, undefined);\n  // const newFieldButton: InputClass = new InputClass(id.toString() + 'supprimer',\n  // \tl10n.basics.delete, 'supprimer' + id.toString(),\n  // \t'button', false, undefined, l10n.basics.delete);\n\n  let finalArray: InputClass[] = [];\n  if (!isInitial) {\n    finalArray = [\n      newFieldLabel,\n      // newFieldButton,\n    ];\n  } else {\n    finalArray = [newFieldLabel, newFieldPositionXMin, newFieldPositionXMax, newFieldPositionYMin, newFieldPositionYMax];\n  }\n\n  return finalArray;\n};\n","import { RegionClass } from 'Models/RegionClass';\nimport { CoordinateSpaceInitial } from 'types';\n\n/**\n * Edit the parameter in Coor object\n * @param {string} name parameter to edit\n * @param {Coor} editCoor object to edit\n * @param {string} newValue value to insert in the parameter\n * @returns {Coor} object edit\n */\nexport const editGoodParameter = (\n  name: string,\n  editCoor: CoordinateSpaceInitial,\n  newValue: string,\n  widthBackground: number,\n  heigthBackground: number\n): CoordinateSpaceInitial => {\n  if (name.startsWith('positionXMin')) {\n    editCoor.coordinate.xMin = limitValueInitialSpace(newValue, 1, widthBackground, heigthBackground);\n    //editCoor.coordinate.xMin = newValue;\n  } else if (name.startsWith('positionXMax')) {\n    editCoor.coordinate.xMax = limitValueInitialSpace(newValue, 2, widthBackground, heigthBackground);\n    //editCoor.coordinate.xMax = newValue;\n  } else if (name.startsWith('positionYMin')) {\n    editCoor.coordinate.yMin = limitValueInitialSpace(newValue, 3, widthBackground, heigthBackground);\n    //editCoor.coordinate.yMin = newValue;\n  } else if (name.startsWith('positionYMax')) {\n    editCoor.coordinate.yMax = limitValueInitialSpace(newValue, 4, widthBackground, heigthBackground);\n    //editCoor.coordinate.yMax = newValue;\n  }\n  return editCoor;\n};\n\nexport const limitValueInitialSpace = (coorInitialSpace: string, position: number, widthBackground: number, heigthBackground: number): string => {\n  //let result = 0;\n  //result = parseInt(coorInitialSpace, 10);\n  // if (position === 1 || position === 2) {\n  //   //xMin + xMax\n  //   if (result > widthBackground) {\n  //     result = widthBackground;\n  //   }\n  // } else if (position === 3 || position === 4) {\n  //   //yMin + yMax\n  //   if (result > heigthBackground) {\n  //     result = heigthBackground;\n  //   }\n  // }\n  //console.log(defaultInitialSpace);\n  // if (!defaultInitialSpace) {\n  //   result = coorInt;\n  // } else {\n  //   if (coorInt > 100) {\n  //     result = 100;\n  //   } else if (coorInt < 0) {\n  //     result = 0;\n  //   } else if (coorInt >= 0 && coorInt <= 100) {\n  //     result = coorInt;\n  //   } else {\n  //     result = 0;\n  //   }\n  // }\n  return coorInitialSpace;\n};\n\nexport const editGoodParameterExtend = (\n  name: string,\n  editCoor: RegionClass,\n  newValue: string\n  // widthInitialSpace?: string,\n  // heightInitialSpace?: string\n): RegionClass => {\n  if (name.startsWith('positionXMin')) {\n    editCoor.coords.xMin = newValue;\n  } else if (name.startsWith('positionXMax')) {\n    editCoor.coords.xMax = newValue;\n  } else if (name.startsWith('positionYMin')) {\n    editCoor.coords.yMin = newValue;\n  } else if (name.startsWith('positionYMax')) {\n    editCoor.coords.yMax = newValue;\n  } else if (name.startsWith('label')) {\n    editCoor.label = newValue;\n  } else if (name.startsWith('image')) {\n    editCoor.img = newValue;\n  } else if (name.startsWith('key')) {\n    editCoor.mainMetric.key = newValue;\n  } else if (name.startsWith('valueKey')) {\n    editCoor.mainMetric.keyValue = newValue;\n  }\n  return editCoor;\n};\n","export class LowerLimitClass {\n  id: number;\n  lowerLimitMin: string;\n  lowerLimitMax: string;\n  backColor: string;\n  borderColor: string;\n  sizeBorder: string;\n  constructor(id: number, lowerLimitMin: string, lowerLimitMax: string, backColor: string, borderColor: string, sizeBorder: string) {\n    this.id = id;\n    this.lowerLimitMin = lowerLimitMin;\n    this.lowerLimitMax = lowerLimitMax;\n    this.backColor = backColor;\n    this.borderColor = borderColor;\n    this.sizeBorder = sizeBorder;\n  }\n\n  get getId(): number {\n    return this.id;\n  }\n\n  set setId(id: number) {\n    this.id = id;\n  }\n\n  get getlowerLimitMin(): string {\n    return this.lowerLimitMin;\n  }\n\n  set setlowerLimitMin(lowerLimitMin: string) {\n    this.lowerLimitMin = lowerLimitMin;\n  }\n\n  get getlowerLimitMax(): string {\n    return this.lowerLimitMax;\n  }\n\n  set setlowerLimitMax(lowerLimitMax: string) {\n    this.lowerLimitMax = lowerLimitMax;\n  }\n\n  get getSeuilbackColor(): string {\n    return this.backColor;\n  }\n\n  set setSeuilbackColor(couleur: string) {\n    this.backColor = couleur;\n  }\n\n  get getSeuilborderColor(): string {\n    return this.borderColor;\n  }\n\n  set setSeuilborderColor(couleur: string) {\n    this.borderColor = couleur;\n  }\n\n  get getsizeBorder(): string {\n    return this.sizeBorder;\n  }\n\n  set setsizeBorder(size: string) {\n    this.sizeBorder = size;\n  }\n}\n","import { ColorPicker, FormLabel } from '@grafana/ui';\nimport React, { FunctionComponent } from 'react';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  color: string;\n  keyInt: number;\n  text: string;\n  _onChange: Function;\n  width?: number;\n};\n\n/**\n * 1.7 -> taille approximative d'un caractere\n * @param param0 voir InputTextFieldProps\n */\nexport const InputSeriesColorPicker: FunctionComponent<InputTextFieldProps> = ({ color, keyInt, text, _onChange, width }) => (\n  <div className=\"form-field\">\n    <FormLabel width={15}>{text}</FormLabel>\n    <div\n      id=\"colorPicker\"\n      style={{\n        margin: '0.5%',\n        padding: '0.5%',\n        backgroundColor: '#1f1f20',\n        border: '3px solid black',\n      }}\n    >\n      <ColorPicker color={color} onChange={(newColor) => _onChange(keyInt, newColor)} />\n    </div>\n  </div>\n);\n\nexport default InputSeriesColorPicker;\n// width || Math.round(text.length * 1.7)\n","import React from 'react';\n\nimport { FormField } from '@grafana/ui';\n\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\n\nimport InputSeriesColorPicker from 'Functions/Input/inputSeriesColorPicker';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** trace border? */\n  traceBorder: boolean;\n  /** trace background? */\n  traceBack: boolean;\n  /** last array lowerLimit */\n  lowerLimit: LowerLimitClass[];\n  /** function parent to save lower limit */\n  lowerLimitCallBack: (lowerLimit: LowerLimitClass[], id?: number) => void;\n\n  isLink: boolean;\n}\n\ninterface State {\n  /** couleur du fond */\n  lowerLimit: LowerLimitClass[];\n  /** result html */\n  htmlResult: JSX.Element;\n}\n\n/**\n * edit color in fix mode\n */\nclass FixColor extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lowerLimit: this.props.lowerLimit,\n      htmlResult: <div></div>,\n    };\n  }\n\n  /**\n   * edit background color with Promise\n   */\n  setStateAsyncSeuil = (state: {\n    /**\n     * edit colorFond\n     */\n    lowerLimit: LowerLimitClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * save data\n   */\n  callBack = (): void => {\n    this.props.lowerLimitCallBack(this.state.lowerLimit);\n  };\n\n  /**\n   * change background color\n   */\n  onChangeColorFond = async (key: number, color: string) => {\n    const newSeuil: LowerLimitClass[] = this.state.lowerLimit;\n    newSeuil[0].backColor = color;\n    await this.setStateAsyncSeuil({\n      lowerLimit: newSeuil,\n    });\n    this.callBack();\n    this.initComponent();\n  };\n\n  /**\n   * change contour color\n   */\n  onChangeColorContour = async (key: number, color: string) => {\n    const newSeuil: LowerLimitClass[] = this.state.lowerLimit;\n    newSeuil[0].borderColor = color;\n    await this.setStateAsyncSeuil({\n      lowerLimit: newSeuil,\n    });\n    this.callBack();\n    this.initComponent();\n  };\n\n  /**\n   * change size color\n   */\n  onChangeSzContour = async (value: string) => {\n    const newSeuil: LowerLimitClass[] = this.state.lowerLimit;\n    newSeuil[0].sizeBorder = value;\n    await this.setStateAsyncSeuil({\n      lowerLimit: newSeuil,\n    });\n    this.callBack();\n    this.initComponent();\n  };\n\n  /**\n   * add button color\n   */\n  addButtonColor = (): JSX.Element[] => {\n    const key = '0';\n    const couleur: JSX.Element[] = [];\n    const l10n = require('Localization/en.json');\n    let textInputColor = '';\n    let labelSize = '';\n    let placeHolderSize = '';\n\n    if (this.props.isLink) {\n      textInputColor = 'Edit color';\n      labelSize = 'Edit size';\n      placeHolderSize = 'Edit size';\n    } else {\n      textInputColor = l10n.colorVariable.switchOutlineColor;\n      labelSize = l10n.colorVariable.thicknessOutline;\n      placeHolderSize = l10n.colorVariable.thicknessOutline;\n    }\n\n    if (this.props.isLink && this.props.traceBack) {\n      const keyContourDiv = key + 'ContourDiv';\n      couleur.push(\n        <div key={keyContourDiv}>\n          <InputSeriesColorPicker color={this.state.lowerLimit[0].backColor} keyInt={0} text={textInputColor} _onChange={this.onChangeColorFond} />\n\n          <FormField\n            labelWidth={15}\n            label={labelSize}\n            name=\"epaisseurContour\"\n            placeholder={placeHolderSize}\n            value={this.state.lowerLimit[0].sizeBorder}\n            onChange={(event) => this.onChangeSzContour(event.currentTarget.value)}\n          />\n        </div>\n      );\n    } else {\n      if (this.props.traceBack) {\n        const keyFondColorPicker = key + 'FondcolorPicker';\n        couleur.push(\n          <InputSeriesColorPicker\n            key={keyFondColorPicker}\n            color={this.state.lowerLimit[0].backColor}\n            keyInt={0}\n            text={l10n.colorVariable.switchBackgroundColor}\n            _onChange={this.onChangeColorFond}\n          />\n        );\n      }\n      if (this.props.traceBorder) {\n        const keyContourDiv = key + 'ContourDiv';\n        couleur.push(\n          <div key={keyContourDiv}>\n            <InputSeriesColorPicker\n              color={this.state.lowerLimit[0].borderColor}\n              keyInt={0}\n              text={textInputColor}\n              _onChange={this.onChangeColorContour}\n            />\n\n            <FormField\n              labelWidth={15}\n              label={labelSize}\n              name=\"epaisseurContour\"\n              placeholder={placeHolderSize}\n              value={this.state.lowerLimit[0].sizeBorder}\n              onChange={(event) => this.onChangeSzContour(event.currentTarget.value)}\n            />\n          </div>\n        );\n      }\n    }\n    return couleur;\n  };\n\n  /** create form */\n  initComponent = () => {\n    this.setState({\n      htmlResult: <div>{this.addButtonColor()}</div>,\n    });\n  };\n\n  /** init component when component is mount */\n  componentDidMount = async () => {\n    if (this.state.lowerLimit.length === 0) {\n      let defaultSizeBorder = '1';\n      if (this.props.isLink) {\n        defaultSizeBorder = '10';\n      }\n      await this.setStateAsyncSeuil({\n        lowerLimit: [new LowerLimitClass(0, '', '', '', '', defaultSizeBorder)],\n      });\n    }\n    this.initComponent();\n  };\n\n  /** init component when  update props */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.traceBorder !== this.props.traceBorder || prevProps.traceBack !== this.props.traceBack) {\n      this.initComponent();\n    }\n  };\n\n  /**\n   * result\n   */\n  render() {\n    return <div>{this.state.htmlResult}</div>;\n  }\n}\nexport default FixColor;\n","import React from 'react';\nimport { SimpleOptions } from 'types';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { Button, FormField } from '@grafana/ui';\n\nimport { ArrayInputClass } from 'Models/ArrayInputClass';\nimport { InputClass } from 'Models/InputClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\n\nimport InputSeriesColorPicker from 'Functions/Input/inputSeriesColorPicker';\nimport InputTextField from 'Functions/Input/inputText';\n\ninterface Props {\n  /** trace color border? */\n  traceBorder: boolean;\n  /** trace color back */\n  traceBack: boolean;\n  /** last lower limit array */\n  lowerLimit: LowerLimitClass[];\n  /** function parent to save lower limit */\n  lowerLimitCallBack: (lowerLimit: LowerLimitClass[], id?: number) => void;\n\n  isLink: boolean;\n}\n\ninterface State {\n  /**\n   * tableau d'input pour générer le form\n   */\n  arrayInputClass: ArrayInputClass[];\n  /**\n   * tableau des seuils qui sera renvoyé au parent\n   */\n  lowerLimit: LowerLimitClass[];\n  /**\n   * nombre de seuil\n   */\n  index: number;\n  /**\n   * nombre de variation à ajouter qui est affiché dans l'input\n   */\n  nbVariation: string;\n\n  /**\n   * fill dynamic input\n   */\n  dynamicInput: JSX.Element;\n  /** input final form */\n  displayInput: boolean;\n}\n\n/**\n * edit colors in variable mode\n */\nclass VariableColor extends React.Component<Props, State, PanelEditorProps<SimpleOptions>> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayInputClass: [],\n      lowerLimit: [],\n      index: 0,\n      nbVariation: '3',\n      dynamicInput: <br />,\n      displayInput: false,\n    };\n  }\n\n  /**\n   * set state for arrayInputClass whith Promise\n   */\n  setStateAsyncArrayInputClass = (state: {\n    /**\n     * edit arrayInputClass\n     */\n    arrayInputClass: ArrayInputClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * set state for seuil whith Promise\n   */\n  setStateAsyncLowerLimit = (state: {\n    /**\n     * edit seuil\n     */\n    lowerLimit: LowerLimitClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * set state for index whith Promise\n   */\n  setStateAsyncIndex = (state: {\n    /**\n     * edit index\n     */\n    index: number;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * set state for nbVariation whith Promise\n   */\n  setStateAsyncNbVariation = (state: {\n    /**\n     * edit nbVariation\n     */\n    nbVariation: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * send data to parent\n   */\n  callBack = () => {\n    this.fillVarInput();\n    this.props.lowerLimitCallBack(this.state.lowerLimit);\n  };\n\n  /** old function */\n  saveData = () => {\n    // const { onOptionsChange } = this.props;\n    // console.table(this.state.seuil);\n    // onOptionsChange({\n    // \t...this.props.options,\n    // \tseuil: this.state.seuil,\n    // });\n  };\n\n  /**\n   * add new seuil\n   * @param idx index for id\n   */\n  addInput = async (idx: number, newLowerLimit: LowerLimitClass) => {\n    await this.setStateAsyncArrayInputClass({\n      arrayInputClass: this.state.arrayInputClass\n        .slice()\n        .concat(\n          new ArrayInputClass(idx, [\n            new InputClass('gestCouleurMin' + idx.toString(), 'Seuil min', 'lowerLimitMin', 'text', false, 'Seuil min', undefined),\n            new InputClass('gestCouleurMax' + idx.toString(), 'Seuil max', 'lowerLimitMax', 'text', false, 'Seuil max', undefined),\n          ])\n        ),\n    });\n\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: this.state.lowerLimit.concat(newLowerLimit),\n    });\n\n    await this.setStateAsyncIndex({\n      index: idx + 1,\n    });\n  };\n\n  /**\n   * call function with value input change\n   * @param event event input\n   * @param idInput id input\n   * @param idLine index array\n   */\n  handleValueChange = async (event: string, idInput: string, idLine: number) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit.slice();\n    if (idInput === 'lowerLimitMin') {\n      cpy[idLine].lowerLimitMin = event;\n    } else {\n      cpy[idLine].lowerLimitMax = event;\n      if (cpy.length > idLine + 1) {\n        cpy[idLine + 1].lowerLimitMin = '>' + event;\n      }\n    }\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when colorFond value change\n   * @param key line index to modify\n   * @param color the new color to add\n   */\n  onChangeColorFond = async (key: number, color: string) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit;\n    cpy[key].backColor = color;\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call fonction when colorContour change\n   * @param key line index to modify\n   * @param color the new color to add\n   */\n  onChangeColorContour = async (key: number, color: string) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit;\n    cpy[key].borderColor = color;\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when sizeBorder value change\n   * @param key line index to modify\n   * @param size the new size to add\n   */\n  onChangeSzContour = async (key: number, size: string) => {\n    const cpy: LowerLimitClass[] = this.state.lowerLimit;\n    cpy[key].sizeBorder = size;\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: cpy,\n    });\n    this.callBack();\n  };\n\n  /**\n   * insert color picker\n   * @param keyInt index to edit line\n   * @returns JSX.Element\n   */\n  addButtonColor = (keyInt: number): JSX.Element[] => {\n    const key = keyInt.toString();\n    const couleur: JSX.Element[] = [];\n    const l10n = require('Localization/en.json');\n\n    if (this.props.traceBack) {\n      const keyFondColorPicker = key + 'FondcolorPicker';\n\n      couleur.push(\n        <InputSeriesColorPicker\n          key={keyFondColorPicker}\n          color={this.state.lowerLimit[keyInt].backColor}\n          keyInt={keyInt}\n          text={l10n.colorVariable.switchBackgroundColor}\n          _onChange={this.onChangeColorFond}\n        />\n      );\n    }\n    if (this.props.traceBorder) {\n      const keyContourDiv = key + 'ContourDiv';\n      let nameInputSize = '';\n      if (this.props.isLink) {\n        nameInputSize = 'Size';\n      } else {\n        nameInputSize = l10n.colorVariable.thicknessOutline;\n      }\n\n      couleur.push(\n        <div key={keyContourDiv}>\n          <InputSeriesColorPicker\n            color={this.state.lowerLimit[keyInt].borderColor}\n            keyInt={keyInt}\n            text={l10n.colorVariable.switchOutlineColor}\n            _onChange={this.onChangeColorContour}\n          />\n\n          <FormField\n            labelWidth={15}\n            label={nameInputSize}\n            name=\"epaisseurContour\"\n            placeholder={l10n.colorVariable.thicknessOutline}\n            value={this.state.lowerLimit[keyInt].sizeBorder}\n            onChange={(event) => this.onChangeSzContour(keyInt, event.currentTarget.value)}\n          />\n        </div>\n      );\n    }\n    return couleur;\n  };\n\n  /**\n   * call fonction when edit nbVariation\n   */\n  onChangeVariation = async (event: {\n    /** currentTarget is item that is being edited */\n    currentTarget: HTMLInputElement;\n  }) => {\n    await this.setStateAsyncNbVariation({ nbVariation: event.currentTarget.value });\n  };\n\n  /** generate array input */\n  test = async (newSeuil: LowerLimitClass[]) => {\n    const arrayInput: ArrayInputClass[] = this.state.arrayInputClass.slice();\n    let idx = this.state.index;\n    const pSeuil: LowerLimitClass[] = this.state.lowerLimit;\n\n    for (const line of newSeuil) {\n      arrayInput.push(\n        new ArrayInputClass(idx, [\n          new InputClass('gestCouleurMin' + idx.toString(), 'Seuil min', 'lowerLimitMin', 'text', false, 'Seuil min', undefined),\n          new InputClass('gestCouleurMax' + idx.toString(), 'Seuil max', 'lowerLimitMax', 'text', false, 'Seuil max', undefined),\n        ])\n      );\n      idx++;\n      pSeuil.push(line);\n    }\n    await this.setStateAsyncArrayInputClass({\n      arrayInputClass: arrayInput,\n    });\n\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: pSeuil,\n    });\n\n    await this.setStateAsyncIndex({\n      index: idx,\n    });\n  };\n\n  /**\n   * call addInput to prepare new inputs\n   * @param nb number inputs to add\n   */\n  addMultipleVariation = async (nb: number, seuil?: LowerLimitClass[]) => {\n    if (seuil) {\n      await this.test(seuil);\n      this.fillVarInput();\n    }\n  };\n\n  /** add new lower limit */\n  addVariation = async (nb: number, seuil?: LowerLimitClass[]) => {\n    for (let i = 0; i < nb; i++) {\n      let newSeuil: LowerLimitClass = seuil ? seuil[i] : new LowerLimitClass(i, '', '', '', '', '');\n      if (this.props.isLink) {\n        newSeuil = seuil ? seuil[i] : new LowerLimitClass(i, '', '', '', '', '10');\n      }\n      await this.addInput(i, newSeuil);\n    }\n    this.fillVarInput();\n  };\n\n  /**\n   * call function when display n input according to nbVariation\n   */\n  onClickVariation = async () => {\n    await this.setStateAsyncArrayInputClass({\n      arrayInputClass: [],\n    });\n    await this.setStateAsyncIndex({\n      index: 0,\n    });\n    await this.setStateAsyncLowerLimit({\n      lowerLimit: [],\n    });\n\n    this.setState({\n      displayInput: true,\n    });\n\n    const nb: number = parseInt(this.state.nbVariation, 10);\n    await this.addVariation(nb);\n  };\n\n  /**\n   * generate input seuil min and max with value\n   * @returns JSX.Element\n   */\n  fillVarInput = (): void => {\n    let final: JSX.Element[] = [];\n\n    if (this.state.lowerLimit.length === 0) {\n      this.setState({\n        dynamicInput: <br />,\n      });\n      return;\n    }\n\n    let i = 0;\n    for (const line of this.state.arrayInputClass) {\n      if (line.uneClassInput.length <= 0) {\n        this.setState({\n          dynamicInput: <br />,\n        });\n        return;\n      }\n      const result = line.uneClassInput.map((obj: InputClass) => (\n        <InputTextField\n          key={obj.id}\n          label={obj.label}\n          name={obj.name}\n          placeholder={obj.placeholder || ''}\n          required={obj.required}\n          value={\n            obj.name === 'lowerLimitMin'\n              ? line.id === 0\n                ? '-∞'\n                : this.state.lowerLimit[i].lowerLimitMin\n              : line.id === this.state.index - 1\n              ? '+∞'\n              : this.state.lowerLimit[i].lowerLimitMax\n          }\n          _handleChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this.handleValueChange(event.currentTarget.value, obj.name, line.id)}\n          disabled={obj.name === 'lowerLimitMin' || line.id === this.state.index - 1}\n        />\n      ));\n      i++;\n      const couleur: JSX.Element[] = this.addButtonColor(line.id);\n      const newKey = line.id.toString() + 'brGestColor';\n      final = final.concat(result.concat(couleur.concat(<br key={newKey} />)));\n    }\n    this.setState({\n      dynamicInput: <ul>{final}</ul>,\n    });\n  };\n\n  /**\n   * debug\n   */\n  infoSeuil = () => {\n    // console.group('info');\n    // console.log(this.state.lowerLimit);\n    // console.log(this.state.arrayInputClass);\n    // console.groupEnd();\n  };\n\n  /**\n   * component mount\n   */\n  componentDidMount = () => {\n    if (this.props.lowerLimit.length > 0) {\n      const nb: number = parseInt(this.state.nbVariation, 10);\n      this.addMultipleVariation(nb, this.props.lowerLimit);\n    }\n  };\n\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.traceBorder !== this.props.traceBorder || prevProps.traceBack !== this.props.traceBack) {\n      this.fillVarInput();\n    }\n  };\n\n  /**\n   * render\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <InputTextField\n          label={l10n.colorVariable.variationNumber}\n          name=\"nbVariation\"\n          placeholder={l10n.colorVariable.number}\n          required={true}\n          value={this.state.nbVariation}\n          _handleChange={this.onChangeVariation}\n        />\n        <Button onClick={this.onClickVariation}>{l10n.colorVariable.addColor}</Button>\n        <br />\n        <br />\n        {this.state.dynamicInput}\n      </div>\n    );\n  }\n}\nexport default VariableColor;\n","import React from 'react';\n\nimport { Switch, Collapse, FormLabel } from '@grafana/ui';\n\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\n\nimport FixColor from 'components/Parametrage/fixColor';\nimport VariableColor from 'components/Parametrage/VariableColor';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** last data */\n  coordinate: CoordinateSpaceClass;\n  /** function parent to save data */\n  callBack: (coordinate: CoordinateSpaceClass, id?: number) => void;\n  /** function parent to save lower limit */\n  lowerLimitCallBack: (lowerLimit: LowerLimitClass[], id?: number) => void;\n\n  isLink: boolean;\n}\n\ninterface State {\n  /** copy coordinate */\n  coordinate: CoordinateSpaceClass;\n  /** collapse */\n  openLowerLimit: boolean;\n}\n\n/**\n * def class\n */\nclass ManageLowerLimit extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      coordinate: this.props.coordinate,\n      openLowerLimit: false,\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncCoordinate = (state: {\n    /** new value */\n    coordinate: CoordinateSpaceClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncOpenLowerLimit = (state: {\n    /** new value */\n    openLowerLimit: boolean;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * save data in type\n   */\n  onSave = () => {\n    // console.log('lower');\n    // console.log(this.props.id);\n    this.props.callBack(this.props.coordinate);\n    this.props.lowerLimitCallBack(this.state.coordinate.lowerLimit);\n  };\n\n  /**\n   * Edit fondIsChecked with switch\n   */\n  onSwitchFond = async () => {\n    const newValue: CoordinateSpaceClass = this.state.coordinate;\n\n    newValue.traceBack = !newValue.traceBack;\n    await this.setStateAsyncCoordinate({ coordinate: newValue });\n    this.onSave();\n  };\n\n  /**\n   * Edit contourIsChecked with switch\n   */\n  onSwitchContour = async () => {\n    const newValue: CoordinateSpaceClass = this.state.coordinate;\n\n    newValue.traceBorder = !newValue.traceBorder;\n    await this.setStateAsyncCoordinate({ coordinate: newValue });\n    this.onSave();\n  };\n\n  /**\n   * switch colorMode -> fixe / variable\n   */\n  onSwitchColorMode = async () => {\n    const newValue: CoordinateSpaceClass = this.state.coordinate;\n\n    newValue.colorMode = !newValue.colorMode;\n    if (!this.state.coordinate.colorMode) {\n      let defaultSizeBorder = '';\n      if (this.props.isLink) {\n        defaultSizeBorder = '10';\n      }\n      newValue.lowerLimit = [new LowerLimitClass(0, '', '', '', '', defaultSizeBorder)];\n      await this.setStateAsyncCoordinate({ coordinate: newValue });\n    } else {\n      newValue.lowerLimit = [];\n      await this.setStateAsyncCoordinate({ coordinate: newValue });\n    }\n    this.onSave();\n  };\n\n  /** open or close toggle lower limit */\n  onToggleLowerLimit = (isOpen: boolean) => {\n    this.setState({\n      openLowerLimit: isOpen,\n    });\n  };\n\n  /** update component when coordinate props change */\n  componentDidUpdate = async (prevProps: Props) => {\n    if (prevProps.coordinate !== this.state.coordinate) {\n      await this.setStateAsyncCoordinate({\n        coordinate: prevProps.coordinate,\n      });\n      await this.setStateAsyncOpenLowerLimit({\n        openLowerLimit: false,\n      });\n    }\n  };\n\n  /**\n   * result\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n    // console.log(this.props.coordinate)\n    // console.log(this.props.id)\n    return (\n      <div>\n        <Collapse label={'Lower limit'} isOpen={this.state.openLowerLimit} onToggle={this.onToggleLowerLimit}>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.genericParameter.variableColor}</FormLabel>\n            <Switch label={''} checked={this.state.coordinate.colorMode} onChange={this.onSwitchColorMode} />\n          </div>\n\n          <br />\n          {!this.props.isLink ? (\n            <div>\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.genericParameter.traceBackground}</FormLabel>\n                <Switch label={''} checked={this.state.coordinate.traceBack} onChange={this.onSwitchFond} />\n              </div>\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.genericParameter.traceContour}</FormLabel>\n                <Switch label={''} checked={this.state.coordinate.traceBorder} onChange={this.onSwitchContour} />\n              </div>\n            </div>\n          ) : (\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>{'Color/Size'}</FormLabel>\n              <Switch label={''} checked={this.state.coordinate.traceBorder} onChange={this.onSwitchContour} />\n              {/* <Switch label={'Color/Size'} checked={this.state.coordinate.traceBorder} onChange={this.onSwitchContour} /> */}\n            </div>\n          )}\n\n          {this.state.coordinate.colorMode ? (\n            <VariableColor\n              traceBorder={this.state.coordinate.traceBorder}\n              traceBack={this.state.coordinate.traceBack}\n              lowerLimit={this.state.coordinate.lowerLimit}\n              lowerLimitCallBack={this.props.lowerLimitCallBack}\n              isLink={this.props.isLink}\n            />\n          ) : (\n            <FixColor\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              traceBorder={this.state.coordinate.traceBorder}\n              traceBack={this.state.coordinate.traceBack}\n              lowerLimit={this.state.coordinate.lowerLimit}\n              lowerLimitCallBack={this.props.lowerLimitCallBack}\n              isLink={this.props.isLink}\n            />\n          )}\n        </Collapse>\n      </div>\n    );\n  }\n}\nexport default ManageLowerLimit;\n","import React from 'react';\nimport { SimpleOptions, TManageValue, Metric } from 'types';\n\nimport { PanelEditorProps, SelectableValue, DataFrame } from '@grafana/data';\nimport { Select, FormField, Collapse, FormLabel } from '@grafana/ui';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n//import { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\ninterface Prop extends PanelEditorProps<SimpleOptions> {\n  /** id coordinate. Use to check if componentDidUpdate launch update */\n  idCoordinate: number;\n  /** parent data */\n  mainMetric: Metric;\n  /** call function when save data */\n  mainMetricB?: Metric;\n  /** call function when save data mainMetric*/\n  callBackToParent: (mainMetric: Metric, id?: number) => void;\n  /** call function when save data mainMetricB*/\n  callBackToParentMainMetricB?: (mainMetricB: Metric, id?: number) => void;\n  /** id coordinateSpace for link and point*/\n  id?: number;\n  /** check if is OrientedLink */\n  isLink: boolean;\n}\n\ninterface State {\n  /** data for manipulate mainMetric */\n  mainMetric: Metric;\n  /** data for manipulate mainMetric of OrientedLink if is bidirectionnal*/\n  mainMetricB: Metric;\n  /** collapse main metric open or close */\n  collapseMainMetric: boolean;\n  /** collapse linkA open or close */\n  collapseLinkA: boolean;\n  /** collapse linkB open or close */\n  collapseLinkB: boolean;\n  /** value for manage value (for query => ) */\n  selectManageValue: Array<SelectableValue<TManageValue>>;\n  /** default value for manage value */\n  selectDefaultManageValue: SelectableValue<TManageValue>;\n  /** select aux query */\n  selectQuery: Array<SelectableValue<DataFrame>>;\n  /** select main query */\n  selectQueryDefault: SelectableValue<DataFrame>;\n}\n\n/**\n * def\n */\nclass ManageQuery extends React.Component<Prop, State> {\n  constructor(props: Prop) {\n    super(props);\n    this.state = {\n      mainMetric: this.props.mainMetric,\n      mainMetricB: this.props.mainMetricB || { key: '', unit: '', format: '', keyValue: '', refId: '', manageValue: 'avg' },\n      collapseMainMetric: false,\n      collapseLinkA: false,\n      collapseLinkB: false,\n      selectManageValue: [],\n      selectDefaultManageValue: { value: 'avg', label: 'avg' },\n      selectQuery: [],\n      selectQueryDefault: [],\n    };\n  }\n\n  /** call back to parent */\n  callBack = () => {\n    this.props.callBackToParent(this.state.mainMetric, this.props.id);\n  };\n\n  /** call back to parent for mainMetricB */\n  callBackB = () => {\n    if (this.props.callBackToParentMainMetricB) {\n      this.props.callBackToParentMainMetricB(this.state.mainMetricB, this.props.id);\n    }\n  };\n\n  /** get mainMetricB of OrientedLink bidirectionnal */\n  getMainMetricB = (): any => {\n    let mainMetricB: any = {};\n    const arrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLink) {\n      if (orientedLink.id === this.props.idCoordinate) {\n        mainMetricB = orientedLink.mainMetricB;\n      }\n    }\n    return mainMetricB;\n  };\n\n  /** edit value for default select manage value */\n  onChangeSelectManageValue = (value: SelectableValue<TManageValue>) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.manageValue = value.value || 'err';\n    this.setState({\n      mainMetric: newMainMetric,\n      //selectDefaultManageValue: value,\n    });\n    this.callBack();\n  };\n\n  /** edit value for default select manage value */\n  onChangeSelectManageValueB = (value: SelectableValue<TManageValue>) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    //const arrayOrientedLinks: OrientedLink = this.props.options.arrayOrientedLinks\n    newMainMetric.manageValue = value.value || 'err';\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** edit value key for mainMetric */\n  _handleChangeKey = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.key = value;\n    this.setState({\n      mainMetric: newMainMetric,\n    });\n    this.callBack();\n  };\n\n  /** edit value key for mainMetric */\n  _handleChangeKeyB = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    newMainMetric.key = value;\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** edit value keyValue for mainMetric */\n  _handleChangeKeyValue = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.keyValue = value;\n    this.setState({\n      mainMetric: newMainMetric,\n    });\n    this.callBack();\n  };\n\n  /** edit value keyValue for mainMetric */\n  _handleChangeKeyValueB = (value: string) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    newMainMetric.keyValue = value;\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** edit value for select */\n  onChangeSelectQuery = (value: SelectableValue<DataFrame>) => {\n    const newMainMetric: Metric = this.state.mainMetric;\n    newMainMetric.refId = value.value?.refId || '';\n    newMainMetric.expr = '';\n    this.setState({\n      mainMetric: newMainMetric,\n      selectQueryDefault: value,\n    });\n    this.callBack();\n  };\n\n  /** edit value for select */\n  onChangeSelectQueryB = (value: SelectableValue<DataFrame>) => {\n    const newMainMetric: Metric = this.state.mainMetricB;\n    newMainMetric.refId = value.value?.refId || '';\n    newMainMetric.expr = '';\n    this.setState({\n      mainMetricB: newMainMetric,\n    });\n    this.callBackB();\n  };\n\n  /** switch value collapseMainMetric when click collapse */\n  onToggleMainMetric = (isOpen: boolean) => {\n    this.setState({\n      collapseMainMetric: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkA when click collapse */\n  onToggleLinkA = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkA: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkB when click collapse */\n  onToggleLinkB = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkB: isOpen,\n    });\n  };\n\n  private getDefaultQueryB = (): SelectableValue<DataFrame> => {\n    let defaultValue: SelectableValue<DataFrame> = { label: 'No value', value: undefined };\n    const mainMetricB: Metric = this.state.mainMetricB;\n    for (const value of this.state.selectQuery) {\n      if (mainMetricB.refId) {\n        if (mainMetricB.refId === value.label) {\n          defaultValue = value;\n        }\n      }\n    }\n    return defaultValue;\n  };\n\n  private getDefaultManageValue = (): SelectableValue<TManageValue> => {\n    let defaultValue: SelectableValue<TManageValue> = { label: 'avg', value: 'avg' };\n    const mainMetric: Metric = this.state.mainMetric;\n    for (const value of this.state.selectManageValue) {\n      if (mainMetric.manageValue) {\n        if (mainMetric.manageValue === value.value) {\n          defaultValue = value;\n        }\n      }\n    }\n    return defaultValue;\n  };\n\n  private getDefaultManageValueB = (): SelectableValue<TManageValue> => {\n    let defaultValue: SelectableValue<TManageValue> = { label: 'avg', value: 'avg' };\n    const mainMetricB: Metric = this.state.mainMetricB;\n    for (const value of this.state.selectManageValue) {\n      if (mainMetricB.manageValue) {\n        if (mainMetricB.manageValue === value.value) {\n          defaultValue = value;\n        }\n      }\n    }\n    return defaultValue;\n  };\n\n  /** add all query in select */\n  fillSelectQuery = () => {\n    const valueSelect: Array<SelectableValue<DataFrame>> = [];\n    const newMainMetric: Metric = this.state.mainMetric;\n\n    valueSelect.push({ value: undefined, label: 'No value' });\n    for (const line of this.props.data.series) {\n      let duplicate = false;\n      for (const valueSave of valueSelect) {\n        if (valueSave.value?.refId === line.refId) {\n          duplicate = true;\n          break;\n        }\n      }\n      if (!duplicate) {\n        valueSelect.push({ value: line, label: line.refId });\n      }\n    }\n    if (newMainMetric.refId === '') {\n      newMainMetric.refId = valueSelect.length > 0 ? valueSelect[0].value?.refId || '' : '';\n    }\n\n    const refId: string | undefined = this.state.mainMetric.refId;\n    let defaultValue: SelectableValue<DataFrame>;\n\n    defaultValue = { value: undefined, label: 'No value' };\n    if (refId) {\n      // console.log(valueSelect.filter((a) => { return a.value?.refId === refId; }));\n      for (const line of valueSelect) {\n        if (line.value?.refId === refId) {\n          defaultValue = line;\n          break;\n        }\n      }\n    }\n    this.setState({\n      mainMetric: newMainMetric,\n      selectQuery: valueSelect,\n      selectQueryDefault: defaultValue,\n    });\n  };\n\n  /** fill data when component mount */\n  componentDidMount = () => {\n    this.fillSelectQuery();\n    const newSelectManageValue: Array<SelectableValue<TManageValue>> = [\n      { value: 'avg', label: 'average' },\n      { value: 'sum', label: 'total' },\n      { value: 'err', label: 'error' },\n    ];\n    let defaultValue: SelectableValue<TManageValue> = newSelectManageValue[0];\n    for (const line of newSelectManageValue) {\n      if (line.value === this.state.mainMetric.manageValue) {\n        defaultValue = line;\n      }\n    }\n\n    this.setState({\n      selectManageValue: newSelectManageValue,\n      selectDefaultManageValue: defaultValue,\n    });\n  };\n\n  /** update with promise mainMetric state */\n  setStateAsyncMainMetric = (state: {\n    /** new value main metric */\n    mainMetric: Metric;\n  }) => {\n    return new Promise((resolve) => this.setState(state, resolve));\n  };\n\n  /** update with promise mainMetric state */\n  setStateAsyncMainMetricB = (state: {\n    /** new value main metric */\n    mainMetricB: Metric;\n  }) => {\n    return new Promise((resolve) => this.setState(state, resolve));\n  };\n\n  /** update data when props is update */\n  componentDidUpdate = async (prevProps: Prop) => {\n    if (prevProps.idCoordinate !== this.props.idCoordinate) {\n      this.setState({\n        collapseMainMetric: false,\n      });\n      await this.setStateAsyncMainMetric({ mainMetric: this.props.mainMetric });\n      if (this.props.mainMetricB) {\n        await this.setStateAsyncMainMetricB({ mainMetricB: this.props.mainMetricB });\n      }\n      this.fillSelectQuery();\n    }\n    if (prevProps.data.series !== this.props.data.series) {\n      this.fillSelectQuery();\n    }\n  };\n\n  private displayHtml = (): JSX.Element => {\n    let result: JSX.Element;\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.idCoordinate) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      result = (\n        <Collapse isOpen={this.state.collapseMainMetric} label=\"Main metric\" onToggle={this.onToggleMainMetric}>\n          <Collapse isOpen={this.state.collapseLinkA} label=\"Link A\" onToggle={this.onToggleLinkA}>\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>Query</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectQuery(value)}\n                allowCustomValue={false}\n                options={this.state.selectQuery}\n                width={30}\n                value={this.state.selectQueryDefault}\n              />\n            </div>\n            {/* <br /> */}\n            <FormField\n              label=\"Key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetric.key}\n              name=\"key\"\n              onChange={(event) => this._handleChangeKey(event.currentTarget.value)}\n            />\n            <FormField\n              label=\"Value key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetric.keyValue}\n              name=\"valueKey\"\n              onChange={(event) => this._handleChangeKeyValue(event.currentTarget.value)}\n            />\n            {/* <br /> */}\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>Manipulate</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectManageValue(value)}\n                allowCustomValue={false}\n                options={this.state.selectManageValue}\n                width={30}\n                value={this.getDefaultManageValue()}\n              />\n            </div>\n          </Collapse>\n          <Collapse isOpen={this.state.collapseLinkB} label=\"Link B\" onToggle={this.onToggleLinkB}>\n            <div style={{ display: 'flex', marginTop: '10px' }}>\n              <FormLabel width={15}>Query</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectQueryB(value)}\n                allowCustomValue={false}\n                options={this.state.selectQuery}\n                width={30}\n                value={this.getDefaultQueryB()}\n              />\n            </div>\n            {/* <br /> */}\n            <FormField\n              label=\"Key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetricB.key}\n              name=\"key\"\n              onChange={(event) => this._handleChangeKeyB(event.currentTarget.value)}\n            />\n            <FormField\n              label=\"Value key\"\n              labelWidth={15}\n              inputWidth={30}\n              type=\"text\"\n              value={this.state.mainMetricB.keyValue}\n              name=\"valueKey\"\n              onChange={(event) => this._handleChangeKeyValueB(event.currentTarget.value)}\n            />\n            {/* <br /> */}\n            <div style={{ display: 'flex' }}>\n              <FormLabel width={15}>Manipulate</FormLabel>\n              <Select\n                onChange={(value) => this.onChangeSelectManageValueB(value)}\n                allowCustomValue={false}\n                options={this.state.selectManageValue}\n                width={30}\n                value={this.getDefaultManageValueB()}\n              />\n            </div>\n          </Collapse>\n        </Collapse>\n      );\n    } else {\n      result = (\n        <Collapse isOpen={this.state.collapseMainMetric} label=\"Main metric\" onToggle={this.onToggleMainMetric}>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Query</FormLabel>\n            <Select\n              onChange={(value) => this.onChangeSelectQuery(value)}\n              allowCustomValue={false}\n              options={this.state.selectQuery}\n              width={30}\n              value={this.state.selectQueryDefault}\n            />\n          </div>\n          {/* <br /> */}\n          <FormField\n            label=\"Key\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            value={this.state.mainMetric.key}\n            name=\"key\"\n            onChange={(event) => this._handleChangeKey(event.currentTarget.value)}\n          />\n          <FormField\n            label=\"Value key\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            value={this.state.mainMetric.keyValue}\n            name=\"valueKey\"\n            onChange={(event) => this._handleChangeKeyValue(event.currentTarget.value)}\n          />\n          {/* <br /> */}\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Manipulate</FormLabel>\n            <Select\n              onChange={(value) => this.onChangeSelectManageValue(value)}\n              allowCustomValue={false}\n              options={this.state.selectManageValue}\n              width={30}\n              value={this.getDefaultManageValue()}\n            />\n          </div>\n        </Collapse>\n      );\n    }\n    return result;\n  };\n\n  /**\n   * result\n   */\n  render() {\n    return <div>{this.displayHtml()}</div>;\n  }\n}\nexport default ManageQuery;\n","import React from 'react';\n\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport InputTextField from 'Functions/Input/inputText';\n\ninterface Props {\n  /** id for coordinate space */\n  coordinateSpace: CoordinateSpaceClass;\n  /** save data to parent */\n  callBackToParent: (followLink: string, hoveringTooltipLink: string, hoveringTooltipText: string, textObj?: TextObject) => void;\n}\n\ninterface State {\n  /** link */\n  followLink: string;\n  /**\n   * link for tooltip\n   */\n  hoveringTooltipLink: string;\n  /**\n   * text for tooltip\n   */\n  hoveringTooltipText: string;\n}\n\n/**\n * def\n */\nclass ManageLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      followLink: this.props.coordinateSpace.linkURL.followLink,\n      hoveringTooltipLink: this.props.coordinateSpace.linkURL.hoveringTooltipLink,\n      hoveringTooltipText: this.props.coordinateSpace.linkURL.hoveringTooltipText,\n    };\n  }\n\n  /**\n   * edit followLink whith Promise\n   */\n  setStateAsyncFollowLink = (state: {\n    /**\n     * edit followLink\n     */\n    followLink: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * edit link for tooltip whith Promise\n   */\n  setStateAsyncHoveringTooltipLink = (state: {\n    /**\n     * edit hoveringTooltipLink\n     */\n    hoveringTooltipLink: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * edit text for tooltip whith Promise\n   */\n  setStateAsyncHoveringTooltipText = (state: {\n    /**\n     * edit hoveringTooltipText\n     */\n    hoveringTooltipText: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /**\n   * save data\n   */\n  callBack = () => {\n    this.props.callBackToParent(this.state.followLink, this.state.hoveringTooltipLink, this.state.hoveringTooltipText, undefined);\n  };\n\n  /**\n   * call function when follow link change\n   */\n  onChangeFollowLink = async (value: string) => {\n    await this.setStateAsyncFollowLink({\n      followLink: value,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when follow link change\n   */\n  onChangeHoveringTooltipLink = async (value: string) => {\n    await this.setStateAsyncHoveringTooltipLink({\n      hoveringTooltipLink: value,\n    });\n    this.callBack();\n  };\n\n  /**\n   * call function when follow link change\n   */\n  onChangeHoveringTooltipText = async (value: string) => {\n    await this.setStateAsyncHoveringTooltipText({\n      hoveringTooltipText: value,\n    });\n    this.callBack();\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.coordinateSpace.id !== this.props.coordinateSpace.id) {\n      this.setState({\n        followLink: prevProps.coordinateSpace.linkURL.followLink,\n        hoveringTooltipLink: prevProps.coordinateSpace.linkURL.hoveringTooltipLink,\n        hoveringTooltipText: prevProps.coordinateSpace.linkURL.hoveringTooltipText,\n      });\n    }\n  }\n\n  /**\n   * result\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <InputTextField\n          label={l10n.metricPrincipalSetting.followLink}\n          name=\"followLink\"\n          placeholder={l10n.metricPrincipalSetting.link}\n          required={false}\n          value={this.state.followLink}\n          _handleChange={(event: { currentTarget: HTMLInputElement }) => this.onChangeFollowLink(event.currentTarget.value)}\n        />\n\n        <InputTextField\n          label={l10n.metricPrincipalSetting.linkTooltip}\n          name=\"linkTooltip\"\n          placeholder={l10n.metricPrincipalSetting.link}\n          required={false}\n          value={this.state.hoveringTooltipLink}\n          _handleChange={(event: { currentTarget: HTMLInputElement }) => this.onChangeHoveringTooltipLink(event.currentTarget.value)}\n        />\n\n        <InputTextField\n          label={l10n.metricPrincipalSetting.textInTooltip}\n          name=\"textTooltip\"\n          placeholder={l10n.metricPrincipalSetting.text}\n          required={false}\n          value={this.state.hoveringTooltipText}\n          _handleChange={(event: { currentTarget: HTMLInputElement }) => this.onChangeHoveringTooltipText(event.currentTarget.value)}\n        />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\nexport default ManageLink;\n","import React from 'react';\n\nimport { Switch, FormLabel } from '@grafana/ui';\n\nexport interface Style {\n  bold: boolean;\n  italic: boolean;\n  underline: boolean;\n}\n\ninterface Props {\n  oldStyle: Style;\n  saveParent: (style: Style) => void;\n}\n\ninterface State {\n  style: Style;\n}\n\n/**\n * def\n */\nclass StyleComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      style: this.props.oldStyle, //{ bold: false, italic: false, underline: false },\n    };\n  }\n\n  /** save data in Parent */\n  callBack = () => {\n    this.props.saveParent(this.state.style);\n  };\n\n  /** change bold */\n  onChangeBold = () => {\n    const style = this.state.style;\n    style.bold = !style.bold;\n    this.setState({\n      style: style,\n    });\n    this.callBack();\n  };\n\n  /** change italic */\n  onChangeItalic = () => {\n    const style = this.state.style;\n    style.italic = !style.italic;\n    this.setState({\n      style: style,\n    });\n    this.callBack();\n  };\n\n  /** change underline */\n  onChangeUnderline = () => {\n    const style = this.state.style;\n    style.underline = !style.underline;\n    this.setState({\n      style: style,\n    });\n    this.callBack();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    return (\n      <section>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Bold</FormLabel>\n          <Switch label=\"\" checked={this.state.style.bold} onChange={this.onChangeBold} />\n        </div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Italic</FormLabel>\n          <Switch label=\"\" checked={this.state.style.italic} onChange={this.onChangeItalic} />\n        </div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Underline</FormLabel>\n          <Switch label=\"\" checked={this.state.style.underline} onChange={this.onChangeUnderline} />\n        </div>\n        {/* <Button onChange={this.onChangeBold}>Bold</Button>\n        <Button onChange={this.onChangeItalic}>Italic</Button>\n        <Button onChange={this.onChangeUnderline}>Underline</Button> */}\n      </section>\n    );\n  }\n}\nexport default StyleComponent;\n","import React from 'react';\nimport { Switch, FormLabel } from '@grafana/ui';\n\nimport { Style } from 'components/Parametrage/styleComponent';\nimport StyleComponent from 'components/Parametrage/styleComponent';\n\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport InputTextField from 'Functions/Input/inputText';\nimport InputSeriesColorPicker from 'Functions/Input/inputSeriesColorPicker';\n\ninterface Props {\n  /** id coordinate */\n  coordinateSpace: CoordinateSpaceClass;\n  /** call function to save data in parent */\n  callBackToParent: (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject) => void;\n}\n\ninterface State {\n  /** get text object */\n  textObject: TextObject;\n}\n\n/**\n * def\n */\nclass TextObjects extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      textObject: this.props.coordinateSpace.textObj,\n    };\n  }\n\n  /** save data in async mode */\n  stateAsyncTextObject = (state: {\n    /** new text object */\n    textObject: TextObject;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      //this.callBack();\n    });\n  };\n\n  /** call back to parent */\n  callBack = () => {\n    this.props.callBackToParent(undefined, undefined, undefined, this.state.textObject);\n  };\n\n  // /** change value for legend input */\n  // onSwitchLegend = async () => {\n  // \tconst newTextObject: TextObject = this.state.textObject;\n\n  // \tnewTextObject.legend = !newTextObject.legend;\n  // \tawait this.stateAsyncTextObject({ textObject: newTextObject });\n  // \tthis.callBack();\n  // }\n\n  /** change value for value input */\n  onChangeValeur = async (value: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.value = value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for back color input */\n  onChangeBackColor = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.colorBack = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for color region */\n  onChangeColorText = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.colorText = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for style text region */\n  // onChangeStyleText = async (event: {\n  //   /** target for style text region input */\n  //   currentTarget: HTMLInputElement;\n  // }) => {\n  //   const newTextObject: TextObject = this.state.textObject;\n\n  //   newTextObject.styleText = event.currentTarget.value;\n  //   await this.stateAsyncTextObject({ textObject: newTextObject });\n  //   this.callBack();\n  // };\n\n  /** switch value for generate text object */\n  onSwitchGenerateObjectText = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateObjectText = !this.state.textObject.generateObjectText;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for legend element */\n  onChangeLegendElement = async (event: {\n    /** target for legend text element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.legendElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for unity mesure element */\n  onChangeunit = async (event: {\n    /** target for unity mesure element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.unit = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change format for numeric text object */\n  onChangeFormatageNumeriqueTextObject = async (event: {\n    /** target for numeric format text object input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.numericFormatElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** switch value for display object text */\n  onSwitchdisplayObjectInTooltip = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.displayObjectInTooltip = !this.state.textObject.generateAuxiliaryElement.displayObjectInTooltip;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  // /** switch value for display object permanently */\n  // onSwitchDisplayObjectPermanently = async () => {\n  // \tconst newTextObject: TextObject = this.state.textObject;\n\n  // \tnewTextObject.generateAuxiliaryElement.displayObjectPermanently =\n  // \t\t!this.state.textObject.generateAuxiliaryElement.displayObjectPermanently;\n  // \tawait this.stateAsyncTextObject({ textObject: newTextObject });\n  // \tthis.callBack();\n  // }\n\n  /** choice to apply color or not for text element */\n  onSwitchAddColorTextElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.addColorTextElement = !this.state.textObject.generateAuxiliaryElement.addColorTextElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** choice to apply color or not for back element */\n  onSwitchAddColorBackElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.addColorBackElement = !this.state.textObject.generateAuxiliaryElement.addColorBackElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** switch display text */\n  onSwitchisTextTooltip = async () => {\n    // console.clear();\n    // console.log('am here --');\n\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.isTextTooltip = !this.state.textObject.isTextTooltip;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for color text element */\n  onChangeColorTextElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.colorTextElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for back element */\n  onChangeColorBackElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.generateAuxiliaryElement.colorBackElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for legend element */\n  onChangeValueGenerateObjectTextLegendElement = async (event: {\n    /** target for legend text element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.legendElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for unity mesure element */\n  onChangeValueGenerateObjectTextunit = async (event: {\n    /** target for unity mesure element input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.unit = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change format for numeric text object */\n  onChangeValueGenerateObjectTextFormatageNumeriqueTextObject = async (event: {\n    /** target for numeric format text object input */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.numericFormatElement = event.currentTarget.value;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** switch value for display object text */\n  onSwitchValueGenerateObjectTextdisplayObjectInTooltip = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.displayObjectInTooltip = !this.state.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  // /** switch value for display object permanently */\n  // onSwitchValueGenerateObjectTextDisplayObjectPermanently = async () => {\n  // \tconst newTextObject: TextObject = this.state.textObject;\n\n  // \tnewTextObject.valueGenerateObjectText.displayObjectPermanently =\n  // \t\t!this.state.textObject.valueGenerateObjectText.displayObjectPermanently;\n  // \tawait this.stateAsyncTextObject({ textObject: newTextObject });\n  // \tthis.callBack();\n  // }\n\n  /** choice to apply color or not for text element */\n  onSwitchValueGenerateObjectTextAddColorTextElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.addColorTextElement = !this.state.textObject.valueGenerateObjectText.addColorTextElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** choice to apply color or not for back element */\n  onSwitchValueGenerateObjectTextAddColorBackElement = async () => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.addColorBackElement = !this.state.textObject.valueGenerateObjectText.addColorBackElement;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for color text element */\n  onChangeValueGenerateObjectTextColorTextElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.colorTextElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  /** change value for back element */\n  onChangeValueGenerateObjectTextColorBackElement = async (key: number, color: string) => {\n    const newTextObject: TextObject = this.state.textObject;\n\n    newTextObject.valueGenerateObjectText.colorBackElement = color;\n    await this.stateAsyncTextObject({ textObject: newTextObject });\n    this.callBack();\n  };\n\n  saveData = (style: Style): void => {\n    const newText = this.state.textObject;\n    newText.style = style;\n    this.setState({\n      textObject: newText,\n    });\n    this.callBack();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        {/* <div>\n\t\t\t\t\t<h4>{l10n.textObject.titleTextObject}</h4>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tlabel={l10n.textObject.optionalLegend}\n\t\t\t\t\t\tchecked={this.state.textObject.legend}\n\t\t\t\t\t\tonChange={this.onSwitchLegend} />\n\t\t\t\t\t<br /><br />\n\t\t\t\t</div> */}\n\n        <div>\n          <h4>{l10n.textObject.principalMetric}</h4>\n\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Display text in region or tooltip</FormLabel>\n            <Switch label=\"\" checked={this.state.textObject.isTextTooltip} onChange={this.onSwitchisTextTooltip} />\n          </div>\n\n          <h5 hidden={this.state.textObject.isTextTooltip}>{l10n.textObject.textRegion}</h5>\n          <h5 hidden={!this.state.textObject.isTextTooltip}>{l10n.textObject.textBubble}</h5>\n\n          <InputSeriesColorPicker\n            color={this.state.textObject.colorBack}\n            keyInt={0}\n            text={l10n.textObject.colorBackground}\n            _onChange={this.onChangeBackColor}\n          />\n\n          <InputSeriesColorPicker\n            color={this.state.textObject.colorText}\n            keyInt={0}\n            text={l10n.textObject.colorText}\n            _onChange={this.onChangeColorText}\n          />\n\n          <StyleComponent oldStyle={this.state.textObject.style} saveParent={this.saveData} />\n\n          {/* <InputTextField\n            label={l10n.textObject.textStyle}\n            name=\"textStyleTextObject\"\n            placeholder={l10n.textObject.style}\n            required={false}\n            value={this.state.textObject.styleText}\n            _handleChange={this.onChangeStyleText}\n          /> */}\n          <br />\n          <br />\n        </div>\n        <div>\n          <h4>Generate text object</h4>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.generateTextObject}</FormLabel>\n            <Switch label={''} checked={this.state.textObject.generateObjectText} onChange={this.onSwitchGenerateObjectText} />\n          </div>\n\n          {this.state.textObject.generateObjectText && (\n            <div>\n              {/* <h4>Object text</h4> */}\n              <InputTextField\n                label={l10n.textObject.legend}\n                name=\"legendTextObject\"\n                placeholder={l10n.textObject.legend}\n                required={false}\n                value={this.state.textObject.valueGenerateObjectText.legendElement}\n                _handleChange={this.onChangeValueGenerateObjectTextLegendElement}\n              />\n              <InputTextField\n                label={l10n.textObject.digitalFormatting}\n                name=\"formatageNumeriqueTextObject\"\n                placeholder={l10n.textObject.digitalFormatting}\n                required={false}\n                value={this.state.textObject.valueGenerateObjectText.numericFormatElement}\n                _handleChange={this.onChangeValueGenerateObjectTextFormatageNumeriqueTextObject}\n              />\n              <InputTextField\n                label={l10n.textObject.mesureUnit}\n                name=\"mesureUnityTextObject\"\n                placeholder={l10n.textObject.unit}\n                required={false}\n                value={this.state.textObject.valueGenerateObjectText.unit}\n                _handleChange={this.onChangeValueGenerateObjectTextunit}\n              />\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.textObject.objectDisplayTextTooltip}</FormLabel>\n                <Switch\n                  label={''}\n                  checked={this.state.textObject.valueGenerateObjectText.displayObjectInTooltip}\n                  onChange={this.onSwitchValueGenerateObjectTextdisplayObjectInTooltip}\n                />\n              </div>\n\n              {/* <Switch\n\t\t\t\t\t\t\t\tlabel={l10n.textObject.objectDisplayInPermanentlyHover}\n\t\t\t\t\t\t\t\tchecked={this.state.textObject.valueGenerateObjectText.displayObjectPermanently}\n\t\t\t\t\t\t\t\tonChange={this.onSwitchValueGenerateObjectTextDisplayObjectPermanently}\n\t\t\t\t\t\t\t/> */}\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.textObject.colorText}</FormLabel>\n                <Switch\n                  label={''}\n                  checked={this.state.textObject.valueGenerateObjectText.addColorTextElement}\n                  onChange={this.onSwitchValueGenerateObjectTextAddColorTextElement}\n                />\n              </div>\n\n              {this.state.textObject.valueGenerateObjectText.addColorTextElement && (\n                <InputSeriesColorPicker\n                  color={this.state.textObject.valueGenerateObjectText.colorTextElement}\n                  keyInt={0}\n                  text={l10n.textObject.colorTextOptional}\n                  _onChange={this.onChangeValueGenerateObjectTextColorTextElement}\n                />\n              )}\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>{l10n.textObject.backgroundColor}</FormLabel>\n                <Switch\n                  label={''}\n                  checked={this.state.textObject.valueGenerateObjectText.addColorBackElement}\n                  onChange={this.onSwitchValueGenerateObjectTextAddColorBackElement}\n                />\n              </div>\n\n              {this.state.textObject.valueGenerateObjectText.addColorBackElement && (\n                <InputSeriesColorPicker\n                  color={this.state.textObject.valueGenerateObjectText.colorBackElement}\n                  keyInt={0}\n                  text={l10n.textObject.optionalBackgroundColor}\n                  _onChange={this.onChangeValueGenerateObjectTextColorBackElement}\n                />\n              )}\n            </div>\n          )}\n          <br />\n          <br />\n        </div>\n\n        <div>\n          <h4>{l10n.textObject.auxiliaryElement}</h4>\n          <InputTextField\n            label={l10n.textObject.legend}\n            name=\"legendTextObject\"\n            placeholder={l10n.textObject.legend}\n            required={false}\n            value={this.state.textObject.generateAuxiliaryElement.legendElement}\n            _handleChange={this.onChangeLegendElement}\n          />\n          <InputTextField\n            label={l10n.textObject.digitalFormatting}\n            name=\"formatageNumeriqueTextObject\"\n            placeholder={l10n.textObject.digitalFormatting}\n            required={false}\n            value={this.state.textObject.generateAuxiliaryElement.numericFormatElement}\n            _handleChange={this.onChangeFormatageNumeriqueTextObject}\n          />\n          <InputTextField\n            label={l10n.textObject.mesureUnit}\n            name=\"mesureUnityTextObject\"\n            placeholder={l10n.textObject.unit}\n            required={false}\n            value={this.state.textObject.generateAuxiliaryElement.unit}\n            _handleChange={this.onChangeunit}\n          />\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.objectDisplayTextTooltip}</FormLabel>\n            <Switch\n              label={''}\n              checked={this.state.textObject.generateAuxiliaryElement.displayObjectInTooltip}\n              onChange={this.onSwitchdisplayObjectInTooltip}\n            />\n          </div>\n\n          {/* <Switch\n\t\t\t\t\t\tlabel={l10n.textObject.objectDisplayInPermanentlyHover}\n\t\t\t\t\t\tchecked={this.state.textObject.generateAuxiliaryElement.displayObjectPermanently}\n\t\t\t\t\t\tonChange={this.onSwitchDisplayObjectPermanently}\n\t\t\t\t\t/> */}\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.colorText}</FormLabel>\n            <Switch\n              label={''}\n              checked={this.state.textObject.generateAuxiliaryElement.addColorTextElement}\n              onChange={this.onSwitchAddColorTextElement}\n            />\n          </div>\n\n          {this.state.textObject.generateAuxiliaryElement.addColorTextElement && (\n            <InputSeriesColorPicker\n              color={this.state.textObject.generateAuxiliaryElement.colorTextElement}\n              keyInt={0}\n              text={l10n.textObject.colorTextOptional}\n              _onChange={this.onChangeColorTextElement}\n            />\n          )}\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>{l10n.textObject.backgroundColor}</FormLabel>\n            <Switch\n              label={''}\n              checked={this.state.textObject.generateAuxiliaryElement.addColorBackElement}\n              onChange={this.onSwitchAddColorBackElement}\n            />\n          </div>\n\n          {this.state.textObject.generateAuxiliaryElement.addColorBackElement && (\n            <InputSeriesColorPicker\n              color={this.state.textObject.generateAuxiliaryElement.colorBackElement}\n              keyInt={0}\n              text={l10n.textObject.optionalBackgroundColor}\n              _onChange={this.onChangeColorBackElement}\n            />\n          )}\n          <br />\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\nexport default TextObjects;\n","import React from 'react';\nimport { SimpleOptions } from 'types';\n\nimport { Collapse } from '@grafana/ui';\nimport { PanelEditorProps } from '@grafana/data';\n\n// import { RegionClass } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport ManageLink from './manageLink';\nimport TextObjects from './textObjects';\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** id coordinate */\n  coordinateSpace: CoordinateSpaceClass;\n  /** call function to save data in parent */\n  callBackToParent: (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject) => void;\n}\n\ninterface State {\n  /** open or close collapse main metric */\n  collapseLink: boolean;\n  /** open or close text object */\n  collapseTextObject: boolean;\n}\n\n/**\n * class ParametresGeneriques\n */\nclass ParametresGeneriques extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapseLink: false,\n      collapseTextObject: false,\n    };\n  }\n\n  /** switch value collapseLink when click collapse */\n  onToggleLinkCollapse = (isOpen: boolean) => {\n    this.setState({\n      collapseLink: isOpen,\n    });\n  };\n\n  /** switch value collapseTextObject when click collapse */\n  onToggleTextObject = (isOpen: boolean) => {\n    this.setState({\n      collapseTextObject: isOpen,\n    });\n  };\n\n  /** close collapse when coordinateSpace object change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.coordinateSpace !== this.props.coordinateSpace) {\n      this.setState({\n        collapseLink: false,\n        collapseTextObject: false,\n      });\n    }\n  };\n\n  /** HTML */\n  render() {\n    // const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapseLink} label=\"Manage link\" onToggle={this.onToggleLinkCollapse}>\n          <div>\n            <ManageLink coordinateSpace={this.props.coordinateSpace} callBackToParent={this.props.callBackToParent} />\n          </div>\n        </Collapse>\n\n        <Collapse isOpen={this.state.collapseTextObject} label=\"Text object\" onToggle={this.onToggleTextObject}>\n          <div>\n            <TextObjects coordinateSpace={this.props.coordinateSpace} callBackToParent={this.props.callBackToParent} />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\nexport default ParametresGeneriques;\n","import React from 'react';\nimport { SimpleOptions, TManageValue, Metric } from '../../types';\n\nimport { PanelEditorProps, SelectableValue, DataFrame } from '@grafana/data';\nimport { Select, FormField, Collapse, FormLabel, Button } from '@grafana/ui';\nimport { PointClass } from 'Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** id coordinate. Use to check if componentDidUpdate launch update */\n  idCoordinate: number;\n  /** parent data */\n  metrics: Metric[];\n  /** check if coordinateSpace is OrientedLink */\n  isLink?: boolean;\n  /** check if coordinateSpace is Point */\n  isPoint?: boolean;\n  /** check if coordinateSpace is Region */\n  isRegion?: boolean;\n}\n\ninterface State {\n  /** collapse AuxMetric open or close */\n  collapse: boolean;\n  /** collapse linkA if orientedLink is bidirectionnal open or close */\n  collapseLinkA: boolean;\n  /** collapse linkB if orientedLink is bidirectionnal open or close */\n  collapseLinkB: boolean;\n  // /**  */\n  // selectQuery: Array<SelectableValue<DataFrame>>;\n  // /** */\n  // selectQueryDefault: SelectableValue<DataFrame>;\n  /** */\n  currentRefQuery: string;\n  /** */\n  currentRefQueryB: string;\n}\n/**\n * def\n */\nclass ManageAuxiliaryQuery extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      collapseLinkA: false,\n      collapseLinkB: false,\n      // selectQuery: [],\n      // selectQueryDefault: [],\n      currentRefQuery: '',\n      currentRefQueryB: '',\n    };\n  }\n\n  private saveAuxMetrics = (newAuxMetrics: Metric[], isLinkB: boolean) => {\n    const idCurrentCoordinateSpace: number = this.props.idCoordinate;\n    if (this.props.isPoint) {\n      const newArrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of newArrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          point.metrics = newAuxMetrics;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: newArrayPoints,\n      });\n    } else if (this.props.isLink) {\n      const newArrayLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of newArrayLink) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          if (isLinkB) {\n            orientedLink.metricsB = newAuxMetrics;\n          } else {\n            orientedLink.metrics = newAuxMetrics;\n          }\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: newArrayLink,\n      });\n      // console.log('arrayLinks');\n      // console.log(this.props.options.arrayOrientedLinks);\n    } else if (this.props.isRegion) {\n      const newArrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of newArrayRegion) {\n        if (region.id === idCurrentCoordinateSpace) {\n          region.metrics = newAuxMetrics;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: newArrayRegion,\n      });\n    }\n  };\n\n  private getAuxiliaryMetrics = (isLinkB: boolean): Metric[] => {\n    let auxiliaryMetrics: Metric[] = [];\n    const idCurrentCoordinateSpace: number = this.props.idCoordinate;\n    if (this.props.isLink) {\n      const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of arrayOrientedLinks) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          if (isLinkB) {\n            auxiliaryMetrics = orientedLink.metricsB;\n          } else {\n            auxiliaryMetrics = orientedLink.metrics;\n          }\n        }\n      }\n    } else if (this.props.isPoint) {\n      const arrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of arrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          auxiliaryMetrics = point.metrics;\n        }\n      }\n    } else if (this.props.isRegion) {\n      const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of arrayRegions) {\n        if (region.id === idCurrentCoordinateSpace) {\n          auxiliaryMetrics = region.metrics;\n        }\n      }\n    }\n    return auxiliaryMetrics;\n  };\n\n  // private getReferenceMainMetric = (isLinkB: boolean): string => {\n  //   let newRefId = '';\n  //   const idCurrentCoordinateSpace: number = this.props.idCoordinate;\n  //   if (this.props.isLink) {\n  //     const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n  //     for (const orientedLink of arrayOrientedLinks) {\n  //       if (orientedLink.id === idCurrentCoordinateSpace) {\n  //         if (isLinkB) {\n  //           newRefId = orientedLink.mainMetricB.refId || '';\n  //         } else {\n  //           newRefId = orientedLink.mainMetric.refId || '';\n  //         }\n  //       }\n  //     }\n  //   } else if (this.props.isPoint) {\n  //     const newArrayPoints: PointClass[] = this.props.options.arrayPoints;\n  //     for (const point of newArrayPoints) {\n  //       if (point.id === idCurrentCoordinateSpace) {\n  //         newRefId = point.mainMetric.refId || '';\n  //       }\n  //     }\n  //   } else if (this.props.isRegion) {\n  //     const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n  //     for (const region of arrayRegions) {\n  //       if (region.id === idCurrentCoordinateSpace) {\n  //         newRefId = region.mainMetric.refId || '';\n  //       }\n  //     }\n  //   }\n  //   const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n  //   for (const metric of newAuxiliaryMetrics) {\n  //     if (metric.refId !== newRefId) {\n  //       metric.refId = newRefId;\n  //       this.saveAuxMetrics(newAuxiliaryMetrics, isLinkB);\n  //     }\n  //   }\n  //   return newRefId;\n  // };\n\n  /** switch value collapse when click collapse */\n  private onToggleCollapse = (isOpen: boolean) => {\n    this.setState({\n      collapse: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkA when click collapse */\n  private onToggleCollapseLinkA = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkA: isOpen,\n    });\n  };\n\n  /** switch value collapseLinkB when click collapse */\n  private onToggleCollapseLinkB = (isOpen: boolean) => {\n    this.setState({\n      collapseLinkB: isOpen,\n    });\n  };\n\n  private getAllQuery = (id: string): Array<SelectableValue<DataFrame>> => {\n    let allQuery: Array<SelectableValue<DataFrame>> = [];\n    allQuery.push({ id: id, value: undefined, label: 'No value' });\n    for (const line of this.props.data.series) {\n      let duplicate = false;\n      for (const valueSave of allQuery) {\n        if (valueSave.value?.refId === line.refId) {\n          duplicate = true;\n          break;\n        }\n      }\n      if (!duplicate) {\n        allQuery.push({ id: id, value: line, label: line.refId });\n      }\n    }\n    return allQuery;\n  };\n\n  private getCurrentQuery = (id: string, isLinkB: boolean): SelectableValue<DataFrame> => {\n    let currentQuery: SelectableValue<DataFrame> = [];\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    // console.log('linkA');\n    // console.log(newAuxiliaryMetrics);\n    currentQuery = { id: id, label: newAuxiliaryMetrics[parseInt(id, 10)].refId };\n    return currentQuery;\n  };\n\n  private getCurrentQueryB = (id: string, isLinkB: boolean): SelectableValue<DataFrame> => {\n    let currentQuery: SelectableValue<DataFrame> = [];\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    // console.log('linkB');\n    // console.log(newAuxiliaryMetrics);\n    currentQuery = { id: id, label: newAuxiliaryMetrics[parseInt(id, 10)].refId };\n    return currentQuery;\n  };\n\n  /** edit value for select */\n  private onChangeSelectQuery = (event: any) => {\n    //console.log(event);\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].refId = event.label;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  /** edit value for select */\n  private onChangeSelectQueryB = (event: any) => {\n    //console.log(event);\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].refId = event.label;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private onChangeKey = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    const idCurrentAuxMetrics: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[idCurrentAuxMetrics].key = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  private onChangeKeyB = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const idCurrentAuxMetrics: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[idCurrentAuxMetrics].key = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private onChangeValueKey = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    const id: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[id].keyValue = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  private onChangeValueKeyB = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const id: number = event.currentTarget.id;\n    const value: string = event.currentTarget.value;\n    newAuxiliaryMetrics[id].keyValue = value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private onChangeManageValue = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    // console.log(event);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].manageValue = event.value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n  };\n\n  private onChangeManageValueB = (event: any) => {\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    const id: number = event.id;\n    newAuxiliaryMetrics[id].manageValue = event.value;\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n  };\n\n  private addAuxiliaryMetric = () => {\n    // const refIdMetric: string = this.state.currentRefQuery;\n    let newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    newAuxiliaryMetrics.push({\n      key: '',\n      unit: '',\n      format: '',\n      keyValue: '',\n      refId: '',\n      manageValue: 'avg',\n    });\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n    this.displayInputs(false);\n  };\n\n  private addAuxiliaryMetricB = () => {\n    // const refIdMetric: string = this.state.currentRefQueryB;\n    let newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    newAuxiliaryMetrics.push({\n      key: '',\n      unit: '',\n      format: '',\n      keyValue: '',\n      refId: '',\n      manageValue: 'avg',\n    });\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n    this.displayInputs(true);\n  };\n\n  private deleteAuxiliaryMetric = (event: any) => {\n    const id: number = event.currentTarget.id;\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(false);\n    newAuxiliaryMetrics.splice(id, 1);\n    this.saveAuxMetrics(newAuxiliaryMetrics, false);\n    this.displayInputs(false);\n  };\n\n  private deleteAuxiliaryMetricB = (event: any) => {\n    const id: number = event.currentTarget.id;\n    const newAuxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(true);\n    newAuxiliaryMetrics.splice(id, 1);\n    this.saveAuxMetrics(newAuxiliaryMetrics, true);\n    this.displayInputs(true);\n  };\n\n  private getAllManageValue = (id: string): Array<SelectableValue<TManageValue>> => {\n    const selectManageValue: Array<SelectableValue<TManageValue>> = [\n      { id: id, value: 'avg', label: 'average' },\n      { id: id, value: 'sum', label: 'total' },\n      { id: id, value: 'err', label: 'error' },\n    ];\n    return selectManageValue;\n  };\n\n  private getCurrentManageValue = (id: number, isLinkB: boolean): SelectableValue<TManageValue> => {\n    let label = '';\n    const auxMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n    if (auxMetrics[id].manageValue === 'avg') {\n      label = 'average';\n    } else if (auxMetrics[id].manageValue === 'sum') {\n      label = 'total';\n    } else if (auxMetrics[id].manageValue === 'err') {\n      label = 'error';\n    }\n    const value: SelectableValue<TManageValue> = {\n      id: id,\n      value: auxMetrics[id].manageValue,\n      label: label,\n    };\n    return value;\n  };\n\n  private generateInputs = (index: number, isLinkB: boolean): JSX.Element => {\n    const id: number = index;\n    //const refIdMetric: string = this.state.currentQuery.label || '';\n    const auxMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n    const idCoordinateSpace: string = this.props.idCoordinate?.toString() || '';\n\n    const styleTitle = {\n      marginTop: '10px',\n      textAlign: 'center',\n    } as React.CSSProperties;\n\n    const styleMainDiv = {\n      marginTop: '5px',\n      border: '1px solid rgb(23, 23, 24)',\n    } as React.CSSProperties;\n\n    const styleContent = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: '5px',\n    } as React.CSSProperties;\n\n    const styleSelect = {\n      display: 'flex',\n      flexDirection: 'row',\n      marginBottom: '2px',\n    } as React.CSSProperties;\n\n    // const styleReferenceMetric = {\n    //   width: '416px',\n    //   height: '35px',\n    //   border: '1px solid #262628',\n    //   borderRadius: '0 3px 3px 0',\n    //   backgroundColor: '#09090b',\n    //   padding: '8px',\n    //   fontSize: '14px',\n    //   lineHeight: '18px',\n    //   color: '#d8d9da',\n    //   marginBottom: '0px',\n    // } as React.CSSProperties;\n\n    let item: JSX.Element;\n    if (isLinkB) {\n      item = (\n        <div key={idCoordinateSpace + 'mainDiv' + id.toString()} style={styleMainDiv}>\n          <p key={idCoordinateSpace + 'title' + id.toString()} style={styleTitle}>\n            {'Metric ' + (id + 1).toString()}\n          </p>\n          <div key={idCoordinateSpace + 'content' + id.toString()} style={styleContent}>\n            <div key={idCoordinateSpace + 'inputs' + id.toString()}>\n              {/* <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={10}>\n                  Query\n                </FormLabel>\n                <p key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()} style={styleReferenceMetric}>\n                  {refIdMetric}\n                </p>\n              </div> */}\n              <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={{ display: 'flex' }}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={15}>\n                  Query\n                </FormLabel>\n                <Select\n                  key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()}\n                  onChange={this.onChangeSelectQueryB}\n                  allowCustomValue={false}\n                  options={this.getAllQuery(id.toString())}\n                  width={30}\n                  value={this.getCurrentQueryB(id.toString(), isLinkB)}\n                />\n              </div>\n              <FormField\n                key={idCoordinateSpace + 'inputKey' + id.toString()}\n                id={id.toString()}\n                label=\"Key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].key}\n                name=\"key\"\n                onChange={this.onChangeKeyB}\n              />\n              <FormField\n                key={idCoordinateSpace + 'valueKey' + id.toString()}\n                id={id.toString()}\n                label=\"Value key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].keyValue}\n                name=\"valueKey\"\n                onChange={this.onChangeValueKeyB}\n              />\n              <div key={idCoordinateSpace + 'divTypeOfValue' + id.toString()} id={id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelTypeOfValue' + id.toString()} width={15}>\n                  Value\n                </FormLabel>\n                <Select\n                  key={idCoordinateSpace + 'selectTypeOfValue' + id.toString()}\n                  onChange={this.onChangeManageValueB}\n                  allowCustomValue={false}\n                  options={this.getAllManageValue(id.toString())}\n                  width={30}\n                  value={this.getCurrentManageValue(id, isLinkB)}\n                />\n              </div>\n            </div>\n            <div key={idCoordinateSpace + 'buttonDelete' + id.toString()}>\n              <Button id={id.toString()} onClick={this.deleteAuxiliaryMetricB} variant={'danger'}>\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      item = (\n        <div key={idCoordinateSpace + 'mainDiv' + id.toString()} style={styleMainDiv}>\n          <p key={idCoordinateSpace + 'title' + id.toString()} style={styleTitle}>\n            {'Metric ' + (id + 1).toString()}\n          </p>\n          <div key={idCoordinateSpace + 'content' + id.toString()} style={styleContent}>\n            <div key={idCoordinateSpace + 'inputs' + id.toString()}>\n              {/* <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={15}>\n                  Query\n                </FormLabel>\n                <p key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()} style={styleReferenceMetric}>\n                  {refIdMetric}\n                </p>\n              </div> */}\n              <div key={idCoordinateSpace + 'refBloc' + id.toString()} style={{ display: 'flex' }}>\n                <FormLabel key={idCoordinateSpace + 'labelref' + id.toString()} width={15}>\n                  Query\n                </FormLabel>\n                <Select\n                  key={this.props.idCoordinate?.toString() || '' + 'refValue' + id.toString()}\n                  onChange={this.onChangeSelectQuery}\n                  allowCustomValue={false}\n                  options={this.getAllQuery(id.toString())}\n                  width={30}\n                  value={this.getCurrentQuery(id.toString(), isLinkB)}\n                />\n              </div>\n              <FormField\n                key={idCoordinateSpace + 'inputKey' + id.toString()}\n                id={id.toString()}\n                label=\"Key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].key}\n                name=\"key\"\n                onChange={this.onChangeKey}\n              />\n              <FormField\n                key={idCoordinateSpace + 'valueKey' + id.toString()}\n                id={id.toString()}\n                label=\"Value key\"\n                labelWidth={15}\n                inputWidth={30}\n                type=\"text\"\n                value={auxMetrics[id].keyValue}\n                name=\"valueKey\"\n                onChange={this.onChangeValueKey}\n              />\n              <div key={idCoordinateSpace + 'divTypeOfValue' + id.toString()} id={id.toString()} style={styleSelect}>\n                <FormLabel key={idCoordinateSpace + 'labelTypeOfValue' + id.toString()} width={15}>\n                  Value\n                </FormLabel>\n                <Select\n                  key={idCoordinateSpace + 'selectTypeOfValue' + id.toString()}\n                  onChange={this.onChangeManageValue}\n                  allowCustomValue={false}\n                  options={this.getAllManageValue(id.toString())}\n                  width={30}\n                  value={this.getCurrentManageValue(id, isLinkB)}\n                />\n              </div>\n            </div>\n            <div key={idCoordinateSpace + 'buttonDelete' + id.toString()}>\n              <Button id={id.toString()} onClick={this.deleteAuxiliaryMetric} variant={'danger'}>\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return <div key={idCoordinateSpace + 'listInputOneMetric' + id.toString()}>{item}</div>;\n  };\n\n  private displayInputs = (isLinkB: boolean) => {\n    const idCoordinateSpace: string = this.props.idCoordinate?.toString() || '';\n    let auxiliaryMetrics: Metric[] = this.getAuxiliaryMetrics(isLinkB);\n\n    const mapItems: JSX.Element[] = [];\n    let index = 0;\n\n    auxiliaryMetrics.forEach(() => {\n      const item: JSX.Element = this.generateInputs(index, isLinkB);\n      mapItems.push(item);\n      index++;\n    });\n\n    return <div key={idCoordinateSpace + 'listInputAllMetrics'}>{mapItems}</div>;\n  };\n\n  componentDidMount = () => {\n    //this.fillSelectQuery();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    const idCoordinateSpace: string = this.props.idCoordinate?.toString() || '';\n    const styleButtonAdd = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: '10px',\n    } as React.CSSProperties;\n\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.idCoordinate) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      return (\n        <Collapse isOpen={this.state.collapse} label=\"Auxiliary metrics\" onToggle={this.onToggleCollapse}>\n          <Collapse isOpen={this.state.collapseLinkA} label=\"Link A\" onToggle={this.onToggleCollapseLinkA}>\n            {this.displayInputs(false)}\n            <div key={idCoordinateSpace + 'buttonAdd'} style={styleButtonAdd}>\n              <Button onClick={this.addAuxiliaryMetric}>Add Auxiliary Metric</Button>\n            </div>\n          </Collapse>\n          <Collapse isOpen={this.state.collapseLinkB} label=\"Link B\" onToggle={this.onToggleCollapseLinkB}>\n            {this.displayInputs(true)}\n            <div key={idCoordinateSpace + 'buttonAdd'} style={styleButtonAdd}>\n              <Button onClick={this.addAuxiliaryMetricB}>Add Auxiliary Metric</Button>\n            </div>\n          </Collapse>\n        </Collapse>\n      );\n    } else {\n      return (\n        <Collapse isOpen={this.state.collapse} label=\"Auxiliary metrics\" onToggle={this.onToggleCollapse}>\n          {this.displayInputs(false)}\n          <div key={idCoordinateSpace + 'buttonAdd'} style={styleButtonAdd}>\n            <Button onClick={this.addAuxiliaryMetric}>Add Auxiliary Metric</Button>\n          </div>\n        </Collapse>\n      );\n    }\n  }\n}\nexport default ManageAuxiliaryQuery;\n","import React, { CSSProperties } from 'react';\nimport { SimpleOptions, Metric } from 'types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Button, Select, Alert, FormField, FormLabel } from '@grafana/ui';\n\nimport { ArrayInputClass } from 'Models/ArrayInputClass';\nimport { CoordinateSpaceClass } from 'Models/CoordinateSpaceClass';\nimport { InputClass } from 'Models/InputClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { RegionClass } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\nimport InputButtonField from 'Functions/Input/inputButton';\nimport InputTextField from 'Functions/Input/inputText';\nimport { createInputCoor } from 'Functions/CreateInput/createInputCoor';\nimport { editGoodParameterExtend } from 'Functions/EditParameter/editGoodParameter';\nimport { returnAllId } from 'Functions/searchIDLimit';\nimport { cloneRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n\nimport ManageLowerLimit from 'components/Parametrage/manageLowerLimit';\nimport ManageQuery from './manageQuery';\nimport ParametresGeneriques from 'components/Parametrage/parametresGeneriques';\n\nimport 'style/CoordinateSpace.css';\nimport ManageAuxiliaryQuery from './manageAuxiliaryQuery';\n\nexport declare type AlertVariant = 'success' | 'warning' | 'error' | 'info';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** if it's parent component is add then don't display delete button  */\n  isAddCoordinate: boolean;\n  /** coordinate to edit */\n  coordinate: RegionClass;\n  /** save data in parent */\n  callBackToParent: (id: number, newCoordinate?: RegionClass) => void;\n  /** id coordinateSpace */\n  id?: number;\n}\n\ninterface State {\n  /** stock coordinates in array object for Parent Component */\n  arrayCoor: RegionClass;\n  /** stock HTML input coordinates */\n  arrayInput: ArrayInputClass[];\n  /** stock html form */\n  htmlInput: JSX.Element;\n  /** display alert when form error */\n  hiddenAlert: boolean;\n  /** text to display alert */\n  titleAlert: string;\n  /** alert type */\n  severityAlert: AlertVariant;\n  /** choice svg mode */\n  selectedRadio: string;\n  /** selectedSVG */\n  allIDSelected: Array<SelectableValue<string>>;\n  /** selectedDefault id svg */\n  selectedDefaultSVG: SelectableValue<string>;\n}\n\n/**\n * component edit space coordinate\n */\nclass CoordinateSpace extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayCoor: cloneRegionCoordinateSpace(this.props.coordinate),\n      arrayInput: [],\n      htmlInput: <div></div>,\n      hiddenAlert: true,\n      titleAlert: 'Error: label is empty',\n      severityAlert: 'error',\n      selectedRadio: 'svgMode',\n      allIDSelected: [],\n      selectedDefaultSVG: [],\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncArrayCoor = (state: {\n    /** new espace coordinate */\n    arrayCoor: RegionClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncArrayInput = (state: {\n    /** new line in array input */\n    arrayInput: ArrayInputClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** add inputs for a new coordiante */\n  addInput = async (id: number) => {\n    await this.setStateAsyncArrayInput({\n      arrayInput: this.state.arrayInput.concat([new ArrayInputClass(id, createInputCoor(id, false))]),\n    });\n  };\n\n  /**\n   * Delete array input and value\n   * @param {event} event event click delete button\n   */\n  deleteOwnInput = (): void => {\n    const del: boolean = confirm('Delete \"' + this.state.arrayCoor.label + '\" ?');\n    // alert(del);\n    if (del) {\n      this.props.callBackToParent(this.state.arrayCoor.id, undefined);\n    }\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   * @param {number} index id of input\n   */\n  _handleChange(currentTarget: string, name: string, index: number): void {\n    let tmp: RegionClass = this.state.arrayCoor;\n    // const widthInitialSpaceDefault = (\n    //   parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) -\n    //    parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)).toString();\n    // const heightInitialSpaceDefault = (\n    //   parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) -\n    //    parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10)).toString();\n    tmp = editGoodParameterExtend(name, tmp, currentTarget);\n    this.setState({\n      arrayCoor: tmp,\n    });\n    this.fillInputEspaceCoor();\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * Get value of input with state.arrayCoor\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  getGoodValue(id: number, param: string): string {\n    let value: string;\n\n    value = '';\n    if (param.startsWith('positionXMin')) {\n      value = this.state.arrayCoor.coords.xMin;\n    } else if (param.startsWith('positionXMax')) {\n      value = this.state.arrayCoor.coords.xMax;\n    } else if (param.startsWith('positionYMin')) {\n      value = this.state.arrayCoor.coords.yMin;\n    } else if (param.startsWith('positionYMax')) {\n      value = this.state.arrayCoor.coords.yMax;\n    } else if (param.startsWith('label')) {\n      value = this.state.arrayCoor.label;\n    } else if (param.startsWith('image')) {\n      value = this.state.arrayCoor.img;\n    } else if (param.startsWith('key')) {\n      value = this.state.arrayCoor.mainMetric.key;\n    } else if (param.startsWith('valueKey')) {\n      value = this.state.arrayCoor.mainMetric.keyValue;\n    }\n    return value;\n  }\n\n  /** create dynamic input */\n  fillInputEspaceCoor(): void {\n    const { arrayInput } = this.state;\n    let finalItem: JSX.Element[] = [];\n\n    for (const line of arrayInput) {\n      const mapItems = line.getUneClassInput().map((obj: InputClass) =>\n        obj.getInputType() === 'text' ? (\n          <InputTextField\n            key={obj.getId()}\n            label={obj.getLabel()}\n            name={obj.getName()}\n            placeholder={obj.getPlaceholder() || ''}\n            required={obj.getRequired()}\n            value={this.getGoodValue(line.getId(), obj.getName())}\n            _handleChange={(event: {\n              /** get currentTarget in event element */\n              currentTarget: HTMLInputElement;\n            }) => this._handleChange(event.currentTarget.value, obj.getName(), line.getId())}\n          />\n        ) : !this.props.isAddCoordinate ? (\n          <InputButtonField\n            key={obj.getId()}\n            label={obj.getLabel()}\n            value={obj.getValue() || ''}\n            name={obj.getName()}\n            required={obj.getRequired()}\n            _handleChange={this.deleteOwnInput}\n            id={obj.getId()}\n          />\n        ) : (\n          <div></div>\n        )\n      );\n      const divKey: string = 'inputCoor' + line.getId().toString();\n      const newInput: JSX.Element = (\n        <div key={'addCoordinate' + divKey} className=\"inputCoor\">\n          {mapItems}\n        </div>\n      );\n      finalItem = finalItem.concat(newInput);\n    }\n    this.setState((prevState: State) => ({\n      htmlInput: <ul>{finalItem}</ul>,\n      selectedRadio: prevState.arrayCoor.mode ? 'svgMode' : 'coordinateMode',\n    }));\n  }\n\n  /** edit value for selectedDefaultValue and edit idSVG arrayCoor */\n  onChangeSelectSVG = (value: SelectableValue<string>) => {\n    // const newId: SelectableValue<string> = value;\n    const coordinate: RegionClass = this.state.arrayCoor;\n    coordinate.idSVG = value.value || '';\n    this.setState({\n      selectedDefaultSVG: value,\n      arrayCoor: coordinate,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** call function to return arrayCoor a SimpleEditor */\n  callBack = (): void => {\n    // Define defaultCoor + defaultWidth + default height to creation of region\n    let newArrayCoor = this.state.arrayCoor;\n    newArrayCoor.coordsDefault = {\n      xMin: this.state.arrayCoor.coords.xMin,\n      xMax: this.state.arrayCoor.coords.xMax,\n      yMin: this.state.arrayCoor.coords.yMin,\n      yMax: this.state.arrayCoor.coords.yMax,\n    };\n    newArrayCoor.widthInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)\n    ).toString();\n    newArrayCoor.heightInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10)\n    ).toString();\n    this.setState({\n      arrayCoor: newArrayCoor,\n    });\n\n    const waitAlert = 3000;\n\n    if (this.state.arrayCoor.label === '') {\n      this.setState({\n        severityAlert: 'error',\n        titleAlert: 'Error: label is empty',\n        hiddenAlert: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          hiddenAlert: true,\n        });\n      }, waitAlert);\n      //console.log('ok');\n    } else {\n      this.props.callBackToParent(this.state.arrayCoor.id, this.state.arrayCoor);\n      this.setState({\n        severityAlert: 'success',\n        titleAlert: 'Save',\n        hiddenAlert: false,\n      });\n      if (!this.props.isAddCoordinate) {\n        setTimeout(() => {\n          this.setState({\n            hiddenAlert: true,\n          });\n        }, waitAlert);\n      }\n    }\n  };\n\n  /** save data in parent */\n  callBackToOther = (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject): void => {\n    const oldCoor: RegionClass = this.state.arrayCoor;\n    if (followLink || followLink === '') {\n      oldCoor.linkURL.followLink = followLink;\n    }\n    if (hoveringTooltipLink || hoveringTooltipLink === '') {\n      oldCoor.linkURL.hoveringTooltipLink = hoveringTooltipLink;\n    }\n    if (hoveringTooltipText || hoveringTooltipText === '') {\n      oldCoor.linkURL.hoveringTooltipText = hoveringTooltipText;\n    }\n    if (textObj) {\n      oldCoor.textObj = textObj;\n    }\n    this.setState({\n      arrayCoor: oldCoor,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** update lower limit */\n  callBackManageLowerLimit = (coordiante: CoordinateSpaceClass) => {\n    const newValue: RegionClass = this.state.arrayCoor;\n\n    newValue.colorMode = coordiante.colorMode;\n    newValue.traceBorder = coordiante.traceBorder;\n    newValue.traceBack = coordiante.traceBack;\n    this.setState({\n      arrayCoor: newValue,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** save lower limit data */\n  callBackLowerLimit = (lowerLimit: LowerLimitClass[]) => {\n    const newValue: RegionClass = this.state.arrayCoor;\n    newValue.lowerLimit = lowerLimit;\n    this.setState({\n      arrayCoor: newValue,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** save mainMetric data */\n  callBackMainMetric = (mainMetric: Metric): void => {\n    const newValue: RegionClass = this.state.arrayCoor;\n    newValue.mainMetric = mainMetric;\n    this.setState({\n      arrayCoor: newValue,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** change value radio button checker to pass svg or coordinate mode */\n  onChangeRadioMode = (event: {\n    /** get current value to target */\n    currentTarget: HTMLInputElement;\n  }) => {\n    const coordinate: RegionClass = this.state.arrayCoor;\n\n    coordinate.mode = event.currentTarget.value === 'svgMode' ? true : false;\n    this.setState({\n      selectedRadio: event.currentTarget.value,\n      arrayCoor: coordinate,\n    });\n    if (this.props.isAddCoordinate === false) {\n      this.callBack();\n    }\n  };\n\n  /** add all id SVG in select */\n  fillSelectSVG = () => {\n    const selectedIDSvg: Array<SelectableValue<string>> = [];\n    if (this.state.allIDSelected.length > 0) {\n      const allIDSelected: Array<SelectableValue<string>> = this.state.allIDSelected;\n      let defaultSVG: SelectableValue<string> = allIDSelected[0];\n      for (const line of allIDSelected) {\n        if (line.value === this.state.arrayCoor.idSVG) {\n          defaultSVG = line;\n        }\n      }\n      this.setState({\n        selectedDefaultSVG: defaultSVG,\n      });\n      return;\n    }\n    const timeRefresh = 1000;\n    if (this.props.options.baseMap.modeSVG) {\n      const refresh = setInterval(() => {\n        const data: string[] = returnAllId(this.props.options.coordinateSpaceInitial.coordinate, this.props.options.baseMap);\n\n        if (data.length > 0) {\n          for (const line of data) {\n            selectedIDSvg.push({ value: line, label: line });\n          }\n          let defaultSVG: SelectableValue<string> = selectedIDSvg[0];\n          for (const line of selectedIDSvg) {\n            if (line.value === this.state.arrayCoor.idSVG) {\n              defaultSVG = line;\n            }\n          }\n          this.setState({\n            allIDSelected: selectedIDSvg,\n            selectedDefaultSVG: defaultSVG,\n          });\n          clearInterval(refresh);\n        }\n        // else {\n        // \tconsole.error('error search id');\n        // }\n      }, timeRefresh);\n    }\n  };\n\n  /**\n   * fill input whith data\n   * this function is called by mount and update event\n   */\n  getDataInInput = async () => {\n    await this.addInput(this.props.coordinate.id);\n    this.fillInputEspaceCoor();\n    this.fillSelectSVG();\n  };\n\n  /** call function in load component */\n  componentDidMount = () => {\n    this.getDataInInput();\n  };\n\n  /** function is call when props is update. Update state */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps.coordinate.id !== this.props.coordinate.id) {\n      await this.setStateAsyncArrayCoor({\n        arrayCoor: cloneRegionCoordinateSpace(this.props.coordinate),\n      });\n      await this.setStateAsyncArrayInput({\n        arrayInput: [],\n      });\n      this.getDataInInput();\n    }\n    // if (prevProps.data.series !== this.props.data.series) {\n    // \tthis.fillSelectQuery();\n    // }\n  };\n\n  /** return html */\n  render() {\n    const styleAlert = {\n      position: 'fixed',\n      bottom: '5%',\n      right: '5%',\n      zIndex: 9999,\n    } as CSSProperties;\n\n    return (\n      <div>\n        <div style={styleAlert} hidden={this.state.hiddenAlert}>\n          <Alert title={this.state.titleAlert} severity={this.state.severityAlert} />\n        </div>\n        <div>{this.state.htmlInput}</div>\n        <div>\n          <ManageQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.arrayCoor.id}\n            mainMetric={this.state.arrayCoor.mainMetric}\n            callBackToParent={this.callBackMainMetric}\n            isLink={false}\n          />\n        </div>\n        {!this.props.isAddCoordinate && (\n          <div>\n            <ManageAuxiliaryQuery\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              idCoordinate={this.state.arrayCoor.id}\n              metrics={this.state.arrayCoor.metrics}\n              //callBackToParent={this.callBackAuxiliaryMetric}\n              isRegion={true}\n            />\n          </div>\n        )}\n        <div>\n          <ParametresGeneriques\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinateSpace={this.state.arrayCoor}\n            callBackToParent={this.callBackToOther}\n          />\n        </div>\n        <div>\n          <ManageLowerLimit\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinate={this.state.arrayCoor}\n            callBack={this.callBackManageLowerLimit}\n            lowerLimitCallBack={this.callBackLowerLimit}\n            isLink={false}\n          />\n        </div>\n        <br />\n        <div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"svgMode\" checked={this.state.selectedRadio === 'svgMode'} onChange={this.onChangeRadioMode} />\n              SVG mode\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"coordinateMode\" checked={this.state.selectedRadio === 'coordinateMode'} onChange={this.onChangeRadioMode} />\n              Coordinate mode\n            </label>\n          </div>\n          <br></br>\n          {this.state.selectedRadio === 'svgMode' ? (\n            <div className=\"svgMode\">\n              <div style={{ display: 'flex' }}>\n                <FormLabel width={15}>Zone SVG</FormLabel>\n                <Select\n                  onChange={(value) => this.onChangeSelectSVG(value)}\n                  allowCustomValue={false}\n                  options={this.state.allIDSelected}\n                  width={10}\n                  value={this.state.selectedDefaultSVG}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"classRegion\">\n              <FormField\n                label=\"Image\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.img}\n                name=\"image\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'image', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"X min\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.xMin}\n                name=\"positionXMin\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionXMin', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"X max\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.xMax}\n                name=\"positionXMax\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionXMax', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"Y min\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.yMin}\n                name=\"positionYMin\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionYMin', this.state.arrayCoor.id)}\n              />\n              <FormField\n                label=\"Y max\"\n                labelWidth={15}\n                inputWidth={20}\n                type=\"text\"\n                value={this.state.arrayCoor.coords.yMax}\n                name=\"positionYMax\"\n                onChange={(event) => this._handleChange(event.currentTarget.value, 'positionYMax', this.state.arrayCoor.id)}\n              />\n            </div>\n          )}\n        </div>\n        <br />\n        <div style={{ textAlign: 'center' }} className=\"buttonSave\">\n          {this.props.isAddCoordinate && (\n            <Button style={{ marginRight: '1%' }} onClick={() => this.callBack()}>\n              Save\n            </Button>\n          )}\n          {!this.props.isAddCoordinate && (\n            <Button onClick={this.deleteOwnInput} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n        {/* <Button onClick={() => console.log(this.state.arrayCoor)}>load</Button> */}\n      </div>\n    );\n  }\n}\nexport default CoordinateSpace;\n","import { Background } from 'types';\n\nimport { Coord4D } from 'Models/RegionClass';\n\nexport interface Coor4DNum {\n  xMin: number;\n  xMax: number;\n  yMin: number;\n  yMax: number;\n}\n\n/** verif limit for one coordinate */\n// const verifAllLimit = (n: number, limit: number[], isWith: boolean) => {\n//   //console.log(n);\n//   if (isWith) {\n//     if (limit[0] <= n && limit[1] >= n) {\n//       return true;\n//     }\n//   } else {\n//     if (limit[2] <= n && limit[3] >= n) {\n//       return true;\n//     }\n//   }\n//   return false;\n// };\n\n// /** search all coordinate if atribute is d */\n// const searchOtherLimitDAttribute = (data: string, limit: number[]): boolean => {\n//   const parseWithLetter = [];\n//   const regex = /[a-zA-Z]{1}[0-9.\\W]*/g;\n//   let tmp;\n\n//   do {\n//     tmp = regex.exec(data);\n//     if (tmp) {\n//       parseWithLetter.push(tmp.toString());\n//     }\n//   } while (tmp);\n//   //console.log(parseWithLetter);\n//   for (const line of parseWithLetter) {\n//     const tmpBis: string[] = line.split(' ');\n//     //const tmpTest: string[] = line.split(/,| /);\n\n//     let index = 0;\n//     // console.log(tmpBis);\n//     //console.log(tmpTest);\n//     // console.log(limit);\n//     for (const lineTmp of tmpBis) {\n//       if (lineTmp === '') {\n//         break;\n//       }\n//       if (index !== 0 && index % 2 !== 0) {\n//         if (!verifAllLimit(parseInt(lineTmp, 10), limit, true)) {\n//           //console.log('no');\n//           return true;\n//         }\n//       } else if (index !== 0) {\n//         if (!verifAllLimit(parseInt(lineTmp, 10), limit, false)) {\n//           //console.log('no');\n//           return true;\n//         }\n//       }\n//       ++index;\n//     }\n//   }\n//   //console.log('ok');\n//   return false;\n// };\n\n/** search if x and y are in limit */\n// const searchOtherLimitXYAttribute = (element: HTMLElement, limit: number[], labelX: string, labelY: string): boolean => {\n//   //console.log(element);\n//   const x: number = parseInt(element.getAttribute(labelX) || '0', 10);\n//   const y: number = parseInt(element.getAttribute(labelY) || '0', 10);\n\n//   if (x !== null && y !== null) {\n//     if (verifAllLimit(x, limit, true) && verifAllLimit(y, limit, false)) {\n//       return false;\n//     }\n//   }\n//   return true;\n// };\n\n/** search if x1|2 and y1|2 are in limit */\n// const searchOtherLimitXnYnAttribute = (element: HTMLElement, limit: number[]): boolean => {\n//   const x1: number = parseInt(element.getAttribute('x1') || '0', 10);\n//   const x2: number = parseInt(element.getAttribute('x2') || '0', 10);\n//   const y1: number = parseInt(element.getAttribute('y1') || '0', 10);\n//   const y2: number = parseInt(element.getAttribute('y2') || '0', 10);\n//   if (x1 && x2 && y1 && y2) {\n//     if (verifAllLimit(x1, limit, true) && verifAllLimit(x2, limit, true) && verifAllLimit(y1, limit, false) && verifAllLimit(y2, limit, false)) {\n//       return false;\n//     }\n//   }\n//   return true;\n// };\n\n// /** search if region id svg is in limit */\n// const regionIsOverLimit = (element: HTMLElement | null, limit: number[]): boolean => {\n//   //console.log(element);\n//   if (!element) {\n//     //console.log('1');\n//     return true;\n//   }\n//   let attribute: string | null = element.getAttribute('d');\n//   //console.log(attribute);\n//   if (attribute) {\n//     //console.log('2');\n//     return searchOtherLimitDAttribute(attribute, limit);\n//   }\n//   attribute = element.getAttribute('x');\n//   //console.log(attribute);\n//   if (attribute) {\n//     //console.log('3');\n//     return searchOtherLimitXYAttribute(element, limit, 'x', 'y');\n//   }\n//   attribute = element.getAttribute('x1');\n//   if (attribute) {\n//     //console.log('4');\n//     return searchOtherLimitXnYnAttribute(element, limit);\n//   }\n//   attribute = element.getAttribute('cx');\n//   if (attribute) {\n//     //console.log('5');\n//     return searchOtherLimitXYAttribute(element, limit, 'cx', 'cy');\n//   }\n//   return true;\n// };\n\n/** convert initial percent coordinate from -100 -> 100 to 0 -> 100 */\nconst convertInitialCoordinate = (n: number) => {\n  const midPercent = 50;\n\n  n = n >= 0 ? (n / 2 || 0) + midPercent : -n / 2 - midPercent;\n  return n;\n};\n\nexport const pixelToPercent = (coordinate: Coord4D, baseMap: Background): Coor4DNum => {\n  const limit: number[] = [\n    parseInt(coordinate.xMin, 10),\n    parseInt(coordinate.xMax, 10),\n    parseInt(coordinate.yMin, 10),\n    parseInt(coordinate.yMax, 10),\n  ];\n\n  limit[0] = convertInitialCoordinate(limit[0]);\n  limit[1] = convertInitialCoordinate(limit[1]);\n  limit[2] = convertInitialCoordinate(limit[2]);\n  limit[3] = convertInitialCoordinate(limit[3]);\n\n  const sizeHeight: number = parseInt(baseMap.height, 10);\n  const sizeWidth: number = parseInt(baseMap.width, 10);\n  const percent = 100;\n\n  limit[0] = limit[0] / percent || 0;\n  limit[0] = sizeWidth * limit[0];\n  limit[1] = limit[1] / percent || 0;\n  limit[1] = sizeWidth * limit[1];\n  limit[2] = limit[2] / percent || 0;\n  limit[2] = sizeHeight * limit[2];\n  limit[3] = limit[3] / percent || 0;\n  limit[3] = sizeHeight * limit[3];\n  return {\n    xMin: limit[0],\n    xMax: limit[1],\n    yMin: limit[2],\n    yMax: limit[3],\n  };\n};\n\n/** return all id list in principal id */\nexport const returnAllId = (coordinate: Coord4D, baseMap: Background): string[] => {\n  const arrId: string[] = [];\n  const arrIdVerif: string[] = [];\n  const listElement: NodeListOf<Element> | undefined = document.getElementById(baseMap.idSVG)?.querySelectorAll('*[id]');\n  //console.log(listElement);\n  // const filtered = [listElement].filter();\n  //     function(e) {\n  //       return\n  //     },\n  //     [octpath,octrect,octellipse]\n  // );\n\n  //console.log(listElement);\n\n  if (listElement) {\n    // const limit: number[] = [\n    //   parseInt(coordinate.xMin, 10),\n    //   parseInt(coordinate.xMax, 10),\n    //   parseInt(coordinate.yMin, 10),\n    //   parseInt(coordinate.yMax, 10),\n    // ];\n\n    // limit[0] = convertInitialCoordinate(limit[0]);\n    // limit[1] = convertInitialCoordinate(limit[1]);\n    // limit[2] = convertInitialCoordinate(limit[2]);\n    // limit[3] = convertInitialCoordinate(limit[3]);\n\n    // const sizeHeight: number = parseInt(baseMap.height, 10);\n    // const sizeWidth: number = parseInt(baseMap.width, 10);\n    // const percent = 100;\n\n    // limit[0] = limit[0] / percent || 0;\n    // limit[0] = sizeWidth * limit[0];\n    // limit[1] = limit[1] / percent || 0;\n    // limit[1] = sizeWidth * limit[1];\n    // limit[2] = limit[2] / percent || 0;\n    // limit[2] = sizeHeight * limit[2];\n    // limit[3] = limit[3] / percent || 0;\n    // limit[3] = sizeHeight * limit[3];\n    // const coordInt = pixelToPercent(coordinate, baseMap);\n    // const limit: number[] = [coordInt.xMin, coordInt.xMax, coordInt.yMin, coordInt.yMax];\n    Array.from(listElement).forEach((e: Element) => {\n      //console.log(e);\n      // if (!regionIsOverLimit(document.getElementById(e.id), limit)) {\n      //   //console.log('is pushed');\n      //   arrId.push(e.id);\n      // }\n      if (e.localName === 'path' || e.localName === 'rect' || e.localName === 'ellipse') {\n        arrId.push(e.id);\n      }\n      arrIdVerif.push(e.id);\n    });\n    //console.log(arrId.length);\n    arrId.sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n      return 0;\n    });\n  } else {\n    console.error('id svg not found');\n  }\n  return arrId;\n};\n","import { SelectableValue } from '@grafana/data';\n/**\n * class InputClass\n */\nexport class InputSelectableClass {\n  id: string;\n  label: string;\n  name: string;\n  input_type: string;\n  required: boolean;\n  optionValues: Array<SelectableValue<any>>;\n  defaultValueColor: string;\n  placeholder?: string;\n  value?: string;\n\n  constructor(\n    id: string,\n    label: string,\n    name: string,\n    input_type: string,\n    optionValues: Array<SelectableValue<any>>,\n    defaultValueColor: string,\n    required: boolean,\n    placeholder?: string,\n    value?: string\n  ) {\n    this.id = id;\n    this.label = label;\n    this.name = name;\n    this.input_type = input_type;\n    this.optionValues = optionValues;\n    this.defaultValueColor = defaultValueColor;\n    this.required = required;\n    this.placeholder = placeholder;\n    this.value = value;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  setId(id: string) {\n    this.id = id;\n  }\n\n  getLabel(): string {\n    return this.label;\n  }\n\n  setLabel(label: string) {\n    this.label = label;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  setName(name: string) {\n    this.name = name;\n  }\n\n  getInputType() {\n    return this.input_type;\n  }\n\n  setInputType(input_type: string) {\n    this.input_type = input_type;\n  }\n\n  getRequired() {\n    return this.required;\n  }\n\n  setRequired(required: boolean) {\n    this.required = required;\n  }\n\n  getPlaceholder() {\n    return this.placeholder;\n  }\n\n  setPlaceholder(placeholder: string) {\n    this.placeholder = placeholder;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value: string) {\n    this.value = value;\n  }\n\n  getOptionValues() {\n    return this.optionValues;\n  }\n\n  setOptionValues(optionValues: Array<SelectableValue<any>>) {\n    this.optionValues = optionValues;\n  }\n\n  getDefaultValueColor() {\n    return this.defaultValueColor;\n  }\n\n  setDefaultValueColor(defaultValueColor: string) {\n    this.defaultValueColor = defaultValueColor;\n  }\n}\n","import { InputSelectableClass } from 'Models/InputSelectableClass';\n//import { SelectableValue } from '@grafana/data';\n//import { RegionClass } from 'Models/RegionClass';\n\nexport const createInputsPoint = (id: number): InputSelectableClass[] => {\n  const newFieldDrawGraphicMarker: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'drawGraphicMarker',\n    'Display ',\n    'drawGraphicMarker' + id.toString(),\n    'select',\n    [\n      { value: 'true', label: 'Yes' },\n      { value: 'false', label: 'No' },\n    ],\n    '',\n    true,\n    'drawGraphicMarker',\n    undefined\n  );\n  const newFieldShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'shape',\n    'Shape',\n    'shape' + id.toString(),\n    'select',\n    [\n      { value: 'none', label: 'None' },\n      { value: 'circle', label: 'Circle' },\n      { value: 'square', label: 'Square' },\n      { value: 'diamond', label: 'Diamond' },\n    ],\n    '',\n    true,\n    'Shape',\n    undefined\n  );\n  const newFieldSizeWidthShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'sizeWidth',\n    'Size (px)',\n    'sizeWidth' + id.toString(),\n    'text',\n    // [\n    //   { value: 'small', label: 'Small' },\n    //   { value: 'medium', label: 'Medium' },\n    //   { value: 'large', label: 'Large' },\n    // ],\n    [],\n    '',\n    true,\n    'SizeWidth',\n    undefined\n  );\n  const newFieldSizeHeightShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'sizeHeight',\n    'Width',\n    'sizeHeight' + id.toString(),\n    'select',\n    [\n      { value: 'small', label: 'Small' },\n      { value: 'medium', label: 'Medium' },\n      { value: 'large', label: 'Large' },\n    ],\n    '',\n    true,\n    'SizeHeight',\n    undefined\n  );\n  const newFieldRotateArrow: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'rotateArrow',\n    'Orientation',\n    'rotateArrow' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'RotateArrow',\n    undefined\n  );\n  const newFieldPositionXShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'positionShapeX',\n    'Position X',\n    'positionShapeX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Position X Shape',\n    undefined\n  );\n  const newFieldPositionYShape: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'positionShapeY',\n    'Position Y',\n    'positionShapeY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Position Y Shape',\n    undefined\n  );\n  const newFieldLabel: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'labelPoint',\n    'Label',\n    'labelPoint' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Label',\n    undefined\n  );\n  const newFieldButton: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'deletePoint',\n    'Delete',\n    'delete' + id.toString(),\n    'button',\n    [],\n    '',\n    true,\n    undefined,\n    'Delete'\n  );\n\n  const finalArray: InputSelectableClass[] = [\n    newFieldLabel,\n    newFieldDrawGraphicMarker,\n    newFieldShape,\n    newFieldSizeWidthShape,\n    newFieldSizeHeightShape,\n    newFieldRotateArrow,\n    newFieldPositionXShape,\n    newFieldPositionYShape,\n    newFieldButton,\n  ];\n  return finalArray;\n};\n","import { FormField } from '@grafana/ui';\nimport React, { ChangeEvent, FunctionComponent } from 'react';\n// import { SelectableValue } from '@grafana/data';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  label: string;\n  name: string;\n  placeholder: string;\n  required: boolean;\n  value: string;\n  _handleChange: (event: ChangeEvent<HTMLInputElement>) => any;\n  shape: string;\n};\n\nexport const InputTextPoint: FunctionComponent<InputTextFieldProps> = ({ label, name, placeholder, required, value, _handleChange, shape }) => {\n  if (name !== undefined) {\n    if (shape !== 'arrow' && name.startsWith('rotateArrow')) {\n      return <div></div>;\n    } else {\n      return (\n        <div>\n          <FormField\n            label={label}\n            labelWidth={15}\n            inputWidth={20}\n            type=\"text\"\n            required={required}\n            name={name}\n            value={value}\n            onChange={_handleChange}\n            placeholder={placeholder}\n          />\n        </div>\n      );\n    }\n  } else {\n    return (\n      <div>\n        <FormField\n          label={label}\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={required}\n          name={name}\n          value={value}\n          onChange={_handleChange}\n          placeholder={placeholder}\n        />\n      </div>\n    );\n  }\n};\n\nexport default InputTextPoint;\n","import { InputSelectableClass } from './InputSelectableClass';\n\n/**\n * class ArayInput\n * @param id number\n * @param uneClassInput InputClass[]\n */\nexport class ArrayInputSelectableClass {\n  /**\n   * id\n   */\n  id: number;\n  /**\n   * array class InputClass\n   */\n  uneClassInput: InputSelectableClass[];\n\n  constructor(id: number, uneClassInput: InputSelectableClass[]) {\n    this.id = id;\n    this.uneClassInput = uneClassInput;\n  }\n\n  /**\n   * get id\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * set id\n   * @param id new id\n   */\n  setId(id: number) {\n    this.id = id;\n  }\n\n  /**\n   * get value of InputClass[]\n   */\n  getUneClassInput() {\n    return this.uneClassInput;\n  }\n\n  /**\n   * set a new InputClass[]\n   * @param uneClassInput new object InputClass[]\n   */\n  setUneClassInput(uneClassInput: InputSelectableClass[]) {\n    this.uneClassInput = uneClassInput;\n  }\n}\n","import { PointClass } from 'Models/PointClass';\nimport { SelectableValue } from '@grafana/data';\n\n/**\n * Edit the parameter in Coor object\n * @param {string} name parameter to edit\n * @param {Coor} editCoor object to edit\n * @param {string} newValue value to insert in the parameter\n * @returns {Coor} object edit\n */\nexport const editGoodParameterPoint = (\n  name: string,\n  editCoor: PointClass,\n  newValue: string,\n  newValueSelect: SelectableValue<any>,\n  widthInitialSPaceDefault?: string,\n  heightInitialSPaceDefault?: string\n  //pointIsUpdatedFromEditor: boolean\n  //currentPoint: PointClass,\n): PointClass => {\n  if (name.startsWith('label')) {\n    editCoor.label = newValue;\n  } else if (name.startsWith('drawGraphicMarker')) {\n    editCoor.drawGraphicMarker = newValueSelect;\n  } else if (name.startsWith('shape')) {\n    editCoor.shape = newValueSelect;\n  } else if (name.startsWith('sizeWidth')) {\n    editCoor.sizeWidth = newValue;\n  } else if (name.startsWith('sizeHeight')) {\n    editCoor.sizeHeight = newValueSelect;\n  } else if (name.startsWith('rotateArrow')) {\n    editCoor.rotateArrow = newValue;\n  } else if (name.startsWith('positionShapeX')) {\n    editCoor.positionShapeX = newValue;\n    editCoor.positionXDefault = newValue;\n    editCoor.widthInitialSpaceDefault = widthInitialSPaceDefault || '';\n  } else if (name.startsWith('positionShapeY')) {\n    editCoor.positionShapeY = newValue;\n    editCoor.positionYDefault = newValue;\n    editCoor.heightInitialSpaceDefault = heightInitialSPaceDefault || '';\n  } else if (name.startsWith('color')) {\n    editCoor.color = newValue;\n  } else if (name.startsWith('refIdMainMetric')) {\n    editCoor.mainMetric.refId = newValue;\n  } else if (name.startsWith('keyMainMetric')) {\n    editCoor.mainMetric.key = newValue;\n  } else if (name.startsWith('keyValueMainMetric')) {\n    editCoor.mainMetric.keyValue = newValue;\n  }\n  //console.log(editCoor);\n  return editCoor;\n};\n","import React, { FunctionComponent } from 'react';\nimport { Select, FormLabel } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\ntype InputSelectProps = {\n  _onChange: Function;\n  data: Array<SelectableValue<string>>;\n  defaultValue: SelectableValue<string>;\n  index?: number;\n  name?: string;\n  shape?: string;\n  label?: string;\n};\n\nconst InputSelectPoint: FunctionComponent<InputSelectProps> = ({ _onChange, data, index, defaultValue, name, shape, label }) => {\n  if (name !== undefined) {\n    if (shape !== 'arrow' && name.startsWith('sizeHeight')) {\n      return <div></div>;\n    } else {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginBottom: '2px',\n          }}\n        >\n          <FormLabel width={15}>{label}</FormLabel>\n          <Select onChange={(value) => _onChange(value, name, index)} allowCustomValue={false} options={data} value={defaultValue} width={20} />\n        </div>\n      );\n    }\n  } else {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: '2px',\n        }}\n      >\n        <FormLabel width={15}>{label}</FormLabel>\n        <Select onChange={(value) => _onChange(value, name, index)} allowCustomValue={false} options={data} value={defaultValue} width={20} />\n      </div>\n    );\n  }\n};\n\nexport default InputSelectPoint;\n","import React from 'react';\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { FormField, Collapse, Select, FormLabel, Button } from '@grafana/ui';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { PointClass } from 'Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  callBackToParentZIndex: (zIndex: number, id: number) => void;\n  isPoint: boolean;\n  isLink: boolean;\n  isRegion: boolean;\n  id: number;\n}\n\ninterface State {\n  /** get text object */\n  collapsepositionParameter: boolean;\n  collapseLabel: boolean;\n  collapseTooltip: boolean;\n  collapseLayerLevel: boolean;\n  orientedLinkComparedToDowngrade: any;\n  orientedLinkComparedToUpgrade: any;\n}\n\n/**\n * def\n */\nclass PositionParameter extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapsepositionParameter: false,\n      collapseLabel: false,\n      collapseTooltip: false,\n      collapseLayerLevel: false,\n      orientedLinkComparedToDowngrade: {},\n      orientedLinkComparedToUpgrade: {},\n    };\n  }\n\n  private savePositionParameter = (newPositionParameter: PositionParameterClass) => {\n    const idCurrentCoordinateSpace: number = this.props.id || 0;\n    if (this.props.isPoint) {\n      const newArrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of newArrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          point.positionParameter = newPositionParameter;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: newArrayPoints,\n      });\n    } else if (this.props.isLink) {\n      const newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of newArrayOrientedLink) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          orientedLink.positionParameter = newPositionParameter;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: newArrayOrientedLink,\n      });\n    } else if (this.props.isRegion) {\n      const newArrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of newArrayRegion) {\n        if (region.id === idCurrentCoordinateSpace) {\n          region.positionParameter = newPositionParameter;\n        }\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: newArrayRegion,\n      });\n    }\n  };\n\n  private getPositionParameter = (): PositionParameterClass => {\n    let positionParameter: PositionParameterClass = {\n      labelAPositionX: '0',\n      labelAPositionY: '0',\n      labelBPositionX: '0',\n      labelBPositionY: '0',\n      tooltipPositionA: {},\n      tooltipPositionB: {},\n    };\n    const idCurrentCoordinateSpace: number = this.props.id || 0;\n    if (this.props.isLink) {\n      const newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n      for (const orientedLink of newArrayOrientedLink) {\n        if (orientedLink.id === idCurrentCoordinateSpace) {\n          positionParameter = orientedLink.positionParameter;\n        }\n      }\n    } else if (this.props.isPoint) {\n      const arrayPoints: PointClass[] = this.props.options.arrayPoints;\n      for (const point of arrayPoints) {\n        if (point.id === idCurrentCoordinateSpace) {\n          positionParameter = point.positionParameter;\n        }\n      }\n    } else if (this.props.isRegion) {\n      const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n      for (const region of arrayRegions) {\n        if (region.id === idCurrentCoordinateSpace) {\n          positionParameter = region.positionParameter;\n        }\n      }\n    }\n    return positionParameter;\n  };\n\n  // private callBack() {\n  //   this.props.callBackToParent(this.state.positionParameter, this.props.id || 0);\n  // }\n\n  private callBackZIndex(zIndex: number, id: number) {\n    this.props.callBackToParentZIndex(zIndex, id);\n  }\n\n  private handleChangeLabelAPositionX = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelAPositionX = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeLabelAPositionY = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelAPositionY = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeLabelBPositionX = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelBPositionX = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeLabelBPositionY = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.labelBPositionY = event.currentTarget.value;\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeTooltipPositionA = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.tooltipPositionA = { label: event.value, value: event.value };\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeTooltipPositionB = (event: any) => {\n    const newPositionParameter = this.getPositionParameter();\n    newPositionParameter.tooltipPositionB = { label: event.value, value: event.value };\n    this.savePositionParameter(newPositionParameter);\n    // this.setState({\n    //   positionParameter: newPositionParameter,\n    // });\n    // this.callBack();\n  };\n\n  private handleChangeSelectOrientedLinkToUpgrade = (event: any) => {\n    const newOrientedLinkComparedToToUpgrade: SelectableValue<OrientedLinkClass> = {\n      label: event.label,\n      value: event.value,\n    };\n    this.setState({\n      orientedLinkComparedToUpgrade: newOrientedLinkComparedToToUpgrade,\n    });\n  };\n\n  private handleChangeSelectOrientedLinkToDowngrade = (event: any) => {\n    const newOrientedLinkComaparedToDowngrade: SelectableValue<OrientedLinkClass> = {\n      label: event.label,\n      value: event.value,\n    };\n    this.setState({\n      orientedLinkComparedToDowngrade: newOrientedLinkComaparedToDowngrade,\n    });\n  };\n\n  private downgradeLayerLevel = () => {\n    const orientedLinkComparedTo: OrientedLinkClass = this.state.orientedLinkComparedToDowngrade.value;\n    const zIndex: number = orientedLinkComparedTo.zIndex - 1;\n    this.callBackZIndex(zIndex, this.props.id || 0);\n  };\n\n  private upgradeLayerLevel = () => {\n    const orientedLinkComparedTo: OrientedLinkClass = this.state.orientedLinkComparedToUpgrade.value;\n    const zIndex: number = orientedLinkComparedTo.zIndex + 1;\n    this.callBackZIndex(zIndex, this.props.id || 0);\n  };\n\n  private defineListOrientedLink = (): Array<SelectableValue<OrientedLinkClass>> => {\n    let listOptions: Array<SelectableValue<OrientedLinkClass>> = [];\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n\n    arrayOrientedLinks.forEach((orientedLink) => {\n      let selectableValue = {\n        label: orientedLink.label || orientedLink.name,\n        value: orientedLink,\n      };\n      listOptions.push(selectableValue);\n    });\n    return listOptions;\n  };\n\n  private defineLabelPositionInputs = (): JSX.Element => {\n    let item: JSX.Element;\n    const positionParameter: PositionParameterClass = this.getPositionParameter();\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.id) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      item = (\n        <div>\n          <div>\n            <div>\n              <FormField\n                label=\"Label A Position X\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelAPositionX}\n                onChange={this.handleChangeLabelAPositionX}\n                placeholder={'Label A Position X'}\n              />\n              <FormField\n                label=\"Label A Position Y\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelAPositionY}\n                onChange={this.handleChangeLabelAPositionY}\n                placeholder={'Label A Position Y'}\n              />\n            </div>\n          </div>\n          <div>\n            <div>\n              <FormField\n                label=\"Label B Position X\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelBPositionX}\n                onChange={this.handleChangeLabelBPositionX}\n                placeholder={'Label B Position X'}\n              />\n              <FormField\n                label=\"Label B Position Y\"\n                labelWidth={10}\n                inputWidth={20}\n                type=\"text\"\n                value={positionParameter.labelBPositionY}\n                onChange={this.handleChangeLabelBPositionY}\n                placeholder={'Label B Position Y'}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      item = (\n        <div>\n          <FormField\n            label=\"Position X\"\n            labelWidth={10}\n            inputWidth={20}\n            type=\"text\"\n            value={positionParameter.labelAPositionX}\n            onChange={this.handleChangeLabelAPositionX}\n            placeholder={'Position X'}\n          />\n          <FormField\n            label=\"Position Y\"\n            labelWidth={10}\n            inputWidth={20}\n            type=\"text\"\n            value={positionParameter.labelAPositionY}\n            onChange={this.handleChangeLabelAPositionY}\n            placeholder={'Position Y'}\n          />\n        </div>\n      );\n    }\n\n    return item;\n  };\n\n  private defineTooltipPositionInputs = (): JSX.Element => {\n    let item: JSX.Element;\n    const optionsSelectTooltipPosition: Array<SelectableValue<string>> = [\n      { label: 'Top', value: 'Top' },\n      { label: 'Bottom', value: 'Bottom' },\n      { label: 'Left', value: 'Left' },\n      { label: 'Right', value: 'Right' },\n    ];\n    const positionParameter: PositionParameterClass = this.getPositionParameter();\n    let currentOrientedLink: any;\n    const arrayOrientedLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLinks) {\n      if (orientedLink.id === this.props.id) {\n        currentOrientedLink = orientedLink;\n      }\n    }\n\n    if (this.props.isLink && currentOrientedLink && currentOrientedLink.orientationLink.value === 'double') {\n      item = (\n        <div>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={10}>Tooltip A Position</FormLabel>\n            <Select\n              onChange={this.handleChangeTooltipPositionA}\n              allowCustomValue={false}\n              options={optionsSelectTooltipPosition}\n              value={positionParameter.tooltipPositionA}\n              width={20}\n            />\n          </div>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={10}>Tooltip B Position</FormLabel>\n            <Select\n              onChange={this.handleChangeTooltipPositionB}\n              allowCustomValue={false}\n              options={optionsSelectTooltipPosition}\n              value={positionParameter.tooltipPositionB}\n              width={20}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      item = (\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={10}>Tooltip position</FormLabel>\n          <Select\n            onChange={this.handleChangeTooltipPositionA}\n            allowCustomValue={false}\n            options={optionsSelectTooltipPosition}\n            value={positionParameter.tooltipPositionA}\n            width={20}\n          />\n        </div>\n      );\n    }\n    return item;\n  };\n\n  defineLayerLevel = (): JSX.Element => {\n    let item: JSX.Element;\n    const options: Array<SelectableValue<OrientedLinkClass>> = this.defineListOrientedLink();\n\n    if (this.props.isLink) {\n      item = (\n        <Collapse\n          isOpen={this.state.collapseLayerLevel}\n          label={'LayerLevel'}\n          onToggle={(isOpen) => {\n            this.setState({\n              collapseLayerLevel: isOpen,\n            });\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Upgrade on </FormLabel>\n            <Select\n              onChange={this.handleChangeSelectOrientedLinkToUpgrade}\n              allowCustomValue={false}\n              options={options}\n              value={this.state.orientedLinkComparedToUpgrade}\n              width={15}\n            />\n            <Button onClick={this.upgradeLayerLevel}>Submit</Button>\n          </div>\n          <div style={{ display: 'flex' }}>\n            <FormLabel width={15}>Downgrade on</FormLabel>\n            <Select\n              onChange={this.handleChangeSelectOrientedLinkToDowngrade}\n              allowCustomValue={false}\n              options={options}\n              value={this.state.orientedLinkComparedToDowngrade}\n              width={15}\n            />\n            <Button onClick={this.downgradeLayerLevel}>Submit</Button>\n          </div>\n        </Collapse>\n      );\n    } else {\n      item = <div></div>;\n    }\n\n    return item;\n  };\n\n  render() {\n    return (\n      <Collapse\n        isOpen={this.state.collapsepositionParameter}\n        label={'Position Parameter'}\n        onToggle={(isOpen) => {\n          this.setState({\n            collapsepositionParameter: isOpen,\n          });\n        }}\n      >\n        <Collapse\n          isOpen={this.state.collapseLabel}\n          label={'Label'}\n          onToggle={(isOpen) => {\n            this.setState({\n              collapseLabel: isOpen,\n            });\n          }}\n        >\n          <div>{this.defineLabelPositionInputs()}</div>\n        </Collapse>\n        <Collapse\n          isOpen={this.state.collapseTooltip}\n          label={'Tooltip'}\n          onToggle={(isOpen) => {\n            this.setState({\n              collapseTooltip: isOpen,\n            });\n          }}\n        >\n          <div>{this.defineTooltipPositionInputs()}</div>\n        </Collapse>\n        <div>{this.defineLayerLevel()}</div>\n      </Collapse>\n    );\n  }\n}\n\nexport default PositionParameter;\n","import React, { CSSProperties } from 'react';\nimport { createInputsPoint } from '../../../Functions/CreateInput/createInputsPoint';\nimport InputTextPoint from '../../../Functions/Input/inputTextPoint';\nimport { InputSelectableClass } from '../../../Models/InputSelectableClass';\nimport { ArrayInputSelectableClass } from '../../../Models/ArrayInputSelectableClass';\nimport { editGoodParameterPoint } from '../../../Functions/EditParameter/editGoodParameterPoint';\nimport { PointClass } from '../../../Models/PointClass';\nimport InputSelectPoint from '../../../Functions/Input/inputSelectPoint';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { Button, AlertVariant, Alert } from '@grafana/ui';\nimport { SimpleOptions, Metric } from '../../../types';\n\nimport ManageQuery from '../manageQuery';\nimport ManageAuxiliaryQuery from '../manageAuxiliaryQuery';\nimport { TextObject } from '../../../Models/TextObjectClass';\nimport { CoordinateSpaceClass } from '../../../Models/CoordinateSpaceClass';\nimport { LowerLimitClass } from '../../../Models/LowerLimitClass';\nimport PositionParameter from '../../Parametrage/positionParameters';\nimport ParametresGeneriques from '../../Parametrage/parametresGeneriques';\nimport ManageLowerLimit from '../../Parametrage/manageLowerLimit';\nimport { clonePoint } from 'Functions/initPoint';\n\n/**\n * IProps\n */\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /**\n   * save data in Parent\n   */\n  callBackToParent: (id: number, newCoordinate?: PointClass) => void;\n\n  /** point to edit */\n  point: PointClass;\n\n  isAddPoint: boolean;\n\n  id?: number;\n}\n\n/**\n * IState\n */\ninterface State {\n  /** */\n  arrayInput: ArrayInputSelectableClass[];\n  /** */\n  arrayPointClass: PointClass[];\n  /** */\n  point: PointClass;\n  /** */\n  htmlInput: JSX.Element;\n  /** display alert when form error */\n  hiddenAlert: boolean;\n  /** text to display alert */\n  titleAlert: string;\n  /** alert type */\n  severityAlert: AlertVariant;\n}\n\n/**\n * IndexParametrage\n */\nexport default class Point extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayInput: [],\n      point: clonePoint(this.props.point),\n      arrayPointClass: [],\n      htmlInput: <div></div>,\n      hiddenAlert: true,\n      titleAlert: 'Error: label is empty',\n      severityAlert: 'error',\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncArrayCoor = (state: {\n    /** new espace coordinate */\n    point: PointClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncArrayInput = (state: {\n    /** new line in array input */\n    arrayInput: ArrayInputSelectableClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** add inputs for a new coordiante */\n  addInput = async (id: number) => {\n    await this.setStateAsyncArrayInput({\n      arrayInput: this.state.arrayInput.concat([new ArrayInputSelectableClass(id, createInputsPoint(id))]),\n    });\n  };\n\n  /**\n   * Delete array input and value\n   * @param {event} event event click delete button\n   */\n  deleteOwnInput = (): void => {\n    const label = this.state.point.label || this.state.point.name;\n    const del: boolean = confirm('Delete \"' + label + '\" ?');\n    // alert(del);\n    if (del) {\n      this.props.callBackToParent(this.state.point.id, undefined);\n    }\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   * @param {number} index id of input\n   */\n  _handleChange(currentTarget: string, name: string, index: number): void {\n    // if (name.startsWith('positionShapeX')) {\n    //   let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    //   newArrayPoint.forEach(point => {\n    //     if (point.id === this.props.id) {\n    //       point.positionXDefault = point.positionShapeX;\n    //       point.widthInitialSpaceDefault = (parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) - parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)).toString();\n    //     }\n    //   })\n    //   this.props.options.arrayPoints = newArrayPoint;\n    // }\n    // if (name.startsWith('positionShapeY')) {\n    //   let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    //   newArrayPoint.forEach(point => {\n    //     if (point.id === this.props.id) {\n    //       point.positionYDefault = point.positionShapeY;\n    //       point.heightInitialSpaceDefault = (parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) - parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10)).toString();\n    //     }\n    //   })\n    //   this.props.options.arrayPoints = newArrayPoint;\n    // }\n    let tmp: PointClass = this.state.point;\n    const widthInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)\n    ).toString();\n    const heightInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10)\n    ).toString();\n    tmp = editGoodParameterPoint(name, tmp, currentTarget, {}, widthInitialSpaceDefault, heightInitialSpaceDefault);\n    this.setState({\n      point: tmp,\n    });\n    this.generateInputsPoint();\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n    //console.log(this.state.point);\n  }\n\n  /**\n   * Get value of input with state.arrayPointClass\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  private getGoodValue(param: string): any {\n    let value: string;\n    let valueSelect: SelectableValue<any>;\n\n    value = '';\n    valueSelect = {};\n\n    if (\n      param.startsWith('drawGraphicMarker') ||\n      param.startsWith('shape') ||\n      //param.startsWith('sizeWidth') ||\n      param.startsWith('sizeHeight') ||\n      param.startsWith('linkWithCoordinateSpace')\n    ) {\n      if (param.startsWith('drawGraphicMarker')) {\n        valueSelect = this.state.point.drawGraphicMarker;\n      } else if (param.startsWith('shape')) {\n        valueSelect = this.state.point.shape;\n      } else if (param.startsWith('sizeWidth')) {\n        //value = this.state.point.sizeWidth;\n      } else if (param.startsWith('sizeHeight')) {\n        valueSelect = this.state.point.sizeHeight;\n      }\n      return valueSelect;\n    } else {\n      if (param.startsWith('rotateArrow')) {\n        value = this.state.point.rotateArrow;\n      } else if (param.startsWith('positionShapeX')) {\n        value = this.state.point.positionShapeX;\n      } else if (param.startsWith('positionShapeY')) {\n        value = this.state.point.positionShapeY;\n      } else if (param.startsWith('label')) {\n        value = this.state.point.label;\n      } else if (param.startsWith('color')) {\n        value = this.state.point.color;\n      } else if (param.startsWith('sizeWidth')) {\n        value = this.state.point.sizeWidth;\n      }\n      return value;\n    }\n  }\n\n  /** create dynamic input */\n  generateInputsPoint(): void {\n    const { arrayInput } = this.state;\n    let item: JSX.Element = <div></div>;\n    let finalItem: JSX.Element[] = [];\n\n    for (const line of arrayInput) {\n      const mapItems: JSX.Element[] = [];\n      line.uneClassInput.forEach((obj: InputSelectableClass) => {\n        if (obj.input_type === 'text') {\n          item = (\n            <InputTextPoint\n              key={obj.id}\n              label={obj.label}\n              name={obj.name}\n              placeholder={obj.placeholder || ''}\n              required={obj.required}\n              value={this.getGoodValue(obj.name)}\n              _handleChange={(event: {\n                /**\n                 * get currentTarget in event element\n                 */\n                currentTarget: HTMLInputElement;\n              }) => {\n                this._handleChange(event.currentTarget.value, obj.name, line.id);\n              }}\n              shape={this.getGoodValue('shape').value}\n            />\n          );\n        } else if (obj.input_type === 'select') {\n          item = (\n            <InputSelectPoint\n              key={obj.id}\n              _onChange={(value: SelectableValue<string>, name: string, index: number) => {\n                const newPoint: PointClass = this.state.point;\n                editGoodParameterPoint(\n                  name,\n                  newPoint,\n                  '',\n                  value\n                  //this.props.options.arrayPoints[this.props.id || 0],\n                );\n                this.setState({\n                  point: newPoint,\n                });\n                this.generateInputsPoint();\n                if (this.props.isAddPoint === false) {\n                  this.callBack();\n                }\n              }}\n              name={obj.name}\n              index={line.id}\n              data={obj.optionValues}\n              defaultValue={this.getGoodValue(obj.name)}\n              shape={this.getGoodValue('shape').value}\n              label={obj.label}\n            />\n          );\n        } else {\n          item = <div key={obj.id}></div>;\n        }\n        mapItems.push(item);\n      });\n\n      const newInputList: JSX.Element = (\n        <div key={'inputPoint' + line.id.toString()} className=\"inputCoor\" id={'point' + line.id.toString()}>\n          {mapItems}\n        </div>\n      );\n      finalItem = finalItem.concat(newInputList);\n    }\n    this.setState((prevState: State) => ({\n      htmlInput: <ul>{finalItem}</ul>,\n    }));\n  }\n\n  /** call function to return arrayCoor a SimpleEditor */\n  callBack = (): void => {\n    const waitAlert = 3000;\n\n    if (this.state.point.label === '') {\n      this.setState({\n        severityAlert: 'error',\n        titleAlert: 'Error: label is empty',\n        hiddenAlert: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          hiddenAlert: true,\n        });\n      }, waitAlert);\n      //console.log('ok');\n    } else {\n      this.props.callBackToParent(this.state.point.id, this.state.point);\n      this.setState({\n        severityAlert: 'success',\n        titleAlert: 'Save',\n        hiddenAlert: false,\n      });\n      if (!this.props.isAddPoint) {\n        setTimeout(() => {\n          this.setState({\n            hiddenAlert: true,\n          });\n        }, waitAlert);\n      }\n    }\n  };\n\n  private callBackToOther = (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject): void => {\n    const oldCoor: PointClass = this.state.point;\n    if (followLink) {\n      oldCoor.linkURL.followLink = followLink;\n    }\n    if (hoveringTooltipLink) {\n      oldCoor.linkURL.hoveringTooltipLink = hoveringTooltipLink;\n    }\n    if (hoveringTooltipText) {\n      oldCoor.linkURL.hoveringTooltipText = hoveringTooltipText;\n    }\n    if (textObj) {\n      oldCoor.textObj = textObj;\n    }\n    this.setState({\n      point: oldCoor,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  /** update lower limit */\n  private callBackManageLowerLimit = (coordinate: CoordinateSpaceClass, id?: number) => {\n    const newValue: PointClass = this.state.point;\n    newValue.colorMode = coordinate.colorMode;\n    newValue.traceBorder = coordinate.traceBorder;\n    newValue.traceBack = coordinate.traceBack;\n    this.setState({\n      point: newValue,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  /** save lower limit data */\n  private callBackLowerLimit = (lowerLimit: LowerLimitClass[], id?: number) => {\n    const newValue: PointClass = this.state.point;\n    newValue.lowerLimit = lowerLimit;\n    this.setState({\n      point: newValue,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  private callBackMainMetric = (mainMetric: Metric, id?: number): void => {\n    const newValue: PointClass = this.state.point;\n    newValue.mainMetric = mainMetric;\n    this.setState({\n      point: newValue,\n    });\n    if (this.props.isAddPoint === false) {\n      this.callBack();\n    }\n  };\n\n  /**\n   * fill input whith data\n   * this function is called by mount and update event\n   */\n  getDataInInput = async () => {\n    await this.addInput(this.props.point.id);\n    this.generateInputsPoint();\n  };\n\n  /** call function in load component */\n  componentDidMount = () => {\n    this.getDataInInput();\n  };\n\n  /** function is call when props is update. Update state */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps.point.id !== this.props.point.id) {\n      await this.setStateAsyncArrayCoor({\n        point: clonePoint(this.props.point),\n      });\n      await this.setStateAsyncArrayInput({\n        arrayInput: [],\n      });\n      this.getDataInInput();\n    }\n    // if (prevProps.data.series !== this.props.data.series) {\n    // \tthis.fillSelectQuery();\n    // }\n  };\n\n  /**\n   * render()\n   */\n  render() {\n    const styleAlert = {\n      position: 'fixed',\n      bottom: '5%',\n      right: '5%',\n      zIndex: 9999,\n    } as CSSProperties;\n\n    return (\n      <div>\n        <div style={styleAlert} hidden={this.state.hiddenAlert}>\n          <Alert title={this.state.titleAlert} severity={this.state.severityAlert} />\n        </div>\n        <div>\n          <ManageQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.point.id}\n            mainMetric={this.state.point.mainMetric}\n            callBackToParent={this.callBackMainMetric}\n            isLink={false}\n          />\n        </div>\n        {!this.props.isAddPoint && (\n          <div>\n            <ManageAuxiliaryQuery\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              idCoordinate={this.state.point.id}\n              metrics={this.state.point.metrics}\n              //callBackToParent={this.callBackAuxiliaryMetric}\n              isPoint={true}\n            />\n          </div>\n        )}\n        <div>\n          <ParametresGeneriques\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinateSpace={this.state.point}\n            callBackToParent={this.callBackToOther}\n          />\n        </div>\n        <div>\n          <ManageLowerLimit\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinate={this.state.point}\n            callBack={this.callBackManageLowerLimit}\n            lowerLimitCallBack={this.callBackLowerLimit}\n            isLink={false}\n          />\n        </div>\n        <div>\n          <PositionParameter\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            callBackToParentZIndex={() => {}}\n            isPoint={true}\n            isLink={false}\n            isRegion={false}\n            id={this.state.point.id}\n          />\n        </div>\n        <div>{this.state.htmlInput}</div>\n        <div style={{ textAlign: 'center' }} className=\"buttonSave\">\n          {this.props.isAddPoint && (\n            <Button style={{ marginRight: '1%' }} onClick={() => this.callBack()}>\n              Save\n            </Button>\n          )}\n          {!this.props.isAddPoint && (\n            <Button onClick={this.deleteOwnInput} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import { FormField } from '@grafana/ui';\nimport React, { ChangeEvent, FunctionComponent } from 'react';\nimport { SelectableValue } from '@grafana/data';\n\n/**\n * props\n */\ntype InputTextFieldProps = {\n  label: string;\n  name: string;\n  placeholder: string;\n  required: boolean;\n  value: string;\n  _handleChange: (event: ChangeEvent<HTMLInputElement>) => any;\n  isIncurved: SelectableValue<boolean>;\n};\n\nexport const InputTextOrientedLink: FunctionComponent<InputTextFieldProps> = ({\n  label,\n  name,\n  placeholder,\n  required,\n  value,\n  _handleChange,\n  isIncurved,\n}) => {\n  if (name.startsWith('pointCX') || name.startsWith('pointCY')) {\n    if (isIncurved.value) {\n      return (\n        <div>\n          <FormField\n            label={label}\n            labelWidth={15}\n            inputWidth={20}\n            type=\"text\"\n            required={required}\n            name={name}\n            value={value}\n            onChange={_handleChange}\n            placeholder={placeholder}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  } else {\n    return (\n      <div>\n        <FormField\n          label={label}\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={required}\n          name={name}\n          value={value}\n          onChange={_handleChange}\n          placeholder={placeholder}\n        />\n      </div>\n    );\n  }\n};\n\nexport default InputTextOrientedLink;\n","import React, { FunctionComponent } from 'react';\nimport { Select, FormLabel } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\ntype InputSelectProps = {\n  _onChange: Function;\n  data: Array<SelectableValue<string>>;\n  defaultValue: SelectableValue<string>;\n  name: string;\n  index?: number;\n  label?: string;\n};\n\nconst InputSelectOrientedLink: FunctionComponent<InputSelectProps> = ({ _onChange, data, index, defaultValue, name, label }) => {\n  //console.log(defaultValue);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        marginBottom: '2px',\n      }}\n    >\n      <FormLabel width={15}>{label}</FormLabel>\n      <Select onChange={(value) => _onChange(value, name, index)} allowCustomValue={false} options={data} value={defaultValue} width={20} />\n    </div>\n  );\n};\n\nexport default InputSelectOrientedLink;\n","import { InputSelectableClass } from 'Models/InputSelectableClass';\nimport { SelectableValue } from '@grafana/data';\n\nexport const createInputsOrientedLink = (\n  id: number,\n  dataCoordinateSpace: Array<SelectableValue<string>>,\n  dataPoint: Array<SelectableValue<string>>\n): InputSelectableClass[] => {\n  const newFieldOrientationLink: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'orientationLink',\n    'Orientation',\n    'orientationLink' + id.toString(),\n    'select',\n    [\n      { label: 'Nodirectional', value: 'no' },\n      { label: 'Monodirectional', value: 'AB' },\n      { label: 'Bidirectional', value: 'double' },\n    ],\n    '',\n    true,\n    'Orientation',\n    undefined\n  );\n  const newFieldSize: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'size',\n    'Size (px)',\n    'size' + id.toString(),\n    'text',\n    // [\n    //   { value: 'Small', label: 'Small' },\n    //   { value: 'Medium', label: 'Medium' },\n    //   { value: 'Large', label: 'Large' },\n    // ],\n    [],\n    '',\n    true,\n    'Size',\n    undefined\n  );\n  const newFieldPointAPositionX: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointAX',\n    'CoordinateClick A - X',\n    'pointAX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointA-X',\n    undefined\n  );\n  const newFieldPointAPositionY: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointAY',\n    'CoordinateClick A - Y',\n    'pointAY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointA-Y',\n    undefined\n  );\n  const newFieldPointBPositionX: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointBX',\n    'CoordinateClick B - X',\n    'pointBX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointB-X',\n    undefined\n  );\n  const newFieldPointBPositionY: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointBY',\n    'CoordinateClick B - Y',\n    'pointBY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointB-Y',\n    undefined\n  );\n  const newFieldLabelLink: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'labelLink',\n    'Label',\n    'label' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'Label',\n    undefined\n  );\n  const newFieldRegionIn: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'regionIn',\n    'AssociateRegionIn',\n    'regionIn' + id.toString(),\n    'select',\n    dataCoordinateSpace,\n    '',\n    true,\n    'Associate Region In',\n    undefined\n  );\n  const newFieldRegionOut: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'regionOut',\n    'AssociateRegionOut',\n    'regionOut' + id.toString(),\n    'select',\n    dataCoordinateSpace,\n    '',\n    true,\n    'Associate Region Out',\n    undefined\n  );\n  const newFieldPointIn: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointIn',\n    'AssociatePointIn',\n    'pointIn' + id.toString(),\n    'select',\n    dataPoint,\n    '',\n    true,\n    'Associate Point In',\n    undefined\n  );\n  const newFieldPointOut: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointOut',\n    'AssociatePointOut',\n    'pointOut' + id.toString(),\n    'select',\n    dataPoint,\n    '',\n    true,\n    'Associate Point Out',\n    undefined\n  );\n  const newFieldIsIncurved: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'isIncurved',\n    'Incurved',\n    'isIncurved' + id.toString(),\n    'select',\n    [\n      { label: 'Yes', value: true },\n      { label: 'No', value: false },\n    ],\n    '',\n    true,\n    'Incurved',\n    undefined\n  );\n  const newFieldPointCPositionX: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointCX',\n    'CoordinateClick C - X',\n    'pointCX' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointC-X',\n    undefined\n  );\n  const newFieldPointCPositionY: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'pointCY',\n    'CoordinateClick C - Y',\n    'pointCY' + id.toString(),\n    'text',\n    [],\n    '',\n    true,\n    'PointC-Y',\n    undefined\n  );\n  const newFieldButton: InputSelectableClass = new InputSelectableClass(\n    id.toString() + 'deleteLink',\n    'Delete',\n    'delete' + id.toString(),\n    'button',\n    [],\n    '',\n    false,\n    undefined,\n    'delete'\n  );\n\n  const finalArray: InputSelectableClass[] = [\n    newFieldLabelLink,\n    newFieldOrientationLink,\n    newFieldSize,\n    newFieldPointIn,\n    newFieldRegionIn,\n    newFieldPointAPositionX,\n    newFieldPointAPositionY,\n    newFieldPointOut,\n    newFieldRegionOut,\n    newFieldPointBPositionX,\n    newFieldPointBPositionY,\n    newFieldIsIncurved,\n    newFieldPointCPositionX,\n    newFieldPointCPositionY,\n    newFieldButton,\n  ];\n  return finalArray;\n};\n","import { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { SelectableValue } from '@grafana/data';\n\n/**\n * Edit the parameter in Coor object\n * @param {string} name parameter to edit\n * @param {Coor} editCoor object to edit\n * @param {string} newValue value to insert in the parameter\n * @returns {Coor} object edit\n */\nexport const editGoodParameterOrientedLink = (\n  name: string,\n  editCoor: OrientedLinkClass,\n  newValue: string,\n  newValueSelect: SelectableValue<any>,\n  widthInitialSpace?: string,\n  heightInitialSpace?: string\n): OrientedLinkClass => {\n  if (name.startsWith('label')) {\n    editCoor.label = newValue;\n  } else if (name.startsWith('orientationLink')) {\n    editCoor.orientationLink = newValueSelect;\n  } else if (name.startsWith('pointAX')) {\n    editCoor.pointAPositionX = newValue;\n    editCoor.pointAPositionXDefault = newValue;\n    editCoor.widthInitialSpaceDefault = widthInitialSpace || '';\n  } else if (name.startsWith('pointAY')) {\n    editCoor.pointAPositionY = newValue;\n    editCoor.pointAPositionYDefault = newValue;\n    editCoor.heightInitialSpaceDefault = heightInitialSpace || '';\n  } else if (name.startsWith('pointBX')) {\n    editCoor.pointBPositionX = newValue;\n    editCoor.pointBPositionXDefault = newValue;\n    editCoor.widthInitialSpaceDefault = widthInitialSpace || '';\n  } else if (name.startsWith('pointBY')) {\n    editCoor.pointBPositionY = newValue;\n    editCoor.pointBPositionYDefault = newValue;\n    editCoor.heightInitialSpaceDefault = heightInitialSpace || '';\n  } else if (name.startsWith('colorCoordinateA')) {\n    editCoor.colorCoordinateA = newValue;\n  } else if (name.startsWith('colorCoordinateB')) {\n    editCoor.colorCoordinateB = newValue;\n  } else if (name.startsWith('refIdMainMetric')) {\n    editCoor.mainMetric.refId = newValue;\n  } else if (name.startsWith('keyMainMetric')) {\n    editCoor.mainMetric.key = newValue;\n  } else if (name.startsWith('keyValueMainMetric')) {\n    editCoor.mainMetric.keyValue = newValue;\n  } else if (name.startsWith('isIncurved')) {\n    editCoor.isIncurved = newValueSelect;\n  } else if (name.startsWith('pointCX')) {\n    editCoor.pointCPositionX = newValue;\n    editCoor.pointCPositionXDefault = newValue;\n    editCoor.widthInitialSpaceDefault = widthInitialSpace || '';\n  } else if (name.startsWith('pointCY')) {\n    editCoor.pointCPositionY = newValue;\n    editCoor.pointCPositionYDefault = newValue;\n    editCoor.heightInitialSpaceDefault = heightInitialSpace || '';\n  } else if (name.startsWith('pointIn')) {\n    editCoor.pointIn = newValue;\n  } else if (name.startsWith('pointOut')) {\n    editCoor.pointOut = newValue;\n  } else if (name.startsWith('regionIn')) {\n    editCoor.regionIn = newValue;\n  } else if (name.startsWith('regionOut')) {\n    editCoor.regionOut = newValue;\n  } else if (name.startsWith('size')) {\n    editCoor.size = newValue;\n  }\n  return editCoor;\n};\n","import React, { CSSProperties } from 'react';\nimport { ArrayInputSelectableClass } from '../../../Models/ArrayInputSelectableClass';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport InputTextOrientedLink from '../../../Functions/Input/inputTextOrientedLink';\nimport InputSelectOrientedLink from '../../../Functions/Input/inputSelectOrientedLink';\nimport { OrientedLinkClass } from '../../../Models/OrientedLinkClass';\nimport { createInputsOrientedLink } from '../../../Functions/CreateInput/createInputsOrientedLink';\nimport { editGoodParameterOrientedLink } from '../../../Functions/EditParameter/editGoodParameterOrientedLink';\nimport { TextObject } from '../../../Models/TextObjectClass';\nimport { SimpleOptions, Metric } from '../../../types';\nimport { AlertVariant, Alert, Button } from '@grafana/ui';\nimport ParametresGeneriques from '../../Parametrage/parametresGeneriques';\nimport { LowerLimitClass } from '../../../Models/LowerLimitClass';\nimport { CoordinateSpaceClass } from '../../../Models/CoordinateSpaceClass';\nimport ManageLowerLimit from '../../Parametrage/manageLowerLimit';\nimport PositionParameter from '../../Parametrage/positionParameters';\nimport ManageQuery from '../../CoordinateSpace/manageQuery';\nimport ManageAuxiliaryQuery from '../../CoordinateSpace/manageAuxiliaryQuery';\nimport { cloneOrientedLink } from '../../../Functions/initOrientedLink';\n\n/**\n * IProps\n */\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** save data in Parent */\n  callBackToParent: (id: number, newCoordinate?: OrientedLinkClass) => void;\n\n  /** link to edit */\n  orientedLink: OrientedLinkClass;\n\n  /** check if is add or edit component*/\n  isAddLink: boolean;\n\n  /** id */\n  id?: number;\n}\n\n/**\n * IState\n */\ninterface State {\n  /**\n   * to do\n   */\n  arrayInput: ArrayInputSelectableClass[];\n  /**\n   * to do\n   */\n  arrayOrientedLink: OrientedLinkClass[];\n  /** */\n  orientedLink: OrientedLinkClass;\n  /** */\n  htmlInput: JSX.Element;\n  /** display alert when form error */\n  hiddenAlert: boolean;\n  /** text to display alert */\n  titleAlert: string;\n  /** alert type */\n  severityAlert: AlertVariant;\n}\n\n/**\n * IndexParametrage\n */\nexport default class OrientedLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayInput: [],\n      orientedLink: cloneOrientedLink(this.props.orientedLink),\n      arrayOrientedLink: [],\n      //debug: false,\n      htmlInput: <div></div>,\n      hiddenAlert: true,\n      titleAlert: 'Error: label is empty',\n      severityAlert: 'error',\n    };\n  }\n\n  /** update state with promise */\n  setStateAsyncOrientedLink = (state: {\n    /** new espace coordinate */\n    orientedLink: OrientedLinkClass;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update state with promise */\n  setStateAsyncArrayInput = (state: {\n    /** new line in array input */\n    arrayInput: ArrayInputSelectableClass[];\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** add inputs for a new coordiante */\n  addInput = async (id: number) => {\n    await this.setStateAsyncArrayInput({\n      arrayInput: this.state.arrayInput.concat([\n        new ArrayInputSelectableClass(id, createInputsOrientedLink(id, this.defineDataRegion(), this.defineDataPoint())),\n      ]),\n    });\n  };\n\n  private defineDataRegion(): Array<SelectableValue<string>> {\n    const { regionCoordinateSpace } = this.props.options;\n    const optionRegionNull: SelectableValue<string> = { label: 'None', value: '' };\n    const arrayOptionsRegion: Array<SelectableValue<string>> = [];\n\n    arrayOptionsRegion.push(optionRegionNull);\n\n    regionCoordinateSpace.forEach((region) => {\n      const optionRegion: SelectableValue<string> = {\n        label: region.label,\n        value: region.label,\n      };\n      arrayOptionsRegion.push(optionRegion);\n    });\n    return arrayOptionsRegion;\n  }\n\n  private defineDataPoint(): Array<SelectableValue<string>> {\n    const { arrayPoints } = this.props.options;\n    const optionPointNull: SelectableValue<string> = { label: 'None', value: '' };\n    const arrayOptionsPoint: Array<SelectableValue<string>> = [];\n\n    arrayOptionsPoint.push(optionPointNull);\n\n    arrayPoints.forEach((point) => {\n      let valueLabel = point.label || point.name;\n\n      const optionPoint: SelectableValue<string> = {\n        label: valueLabel,\n        value: valueLabel,\n      };\n      arrayOptionsPoint.push(optionPoint);\n    });\n\n    return arrayOptionsPoint;\n  }\n\n  /**\n   * Delete array input and value\n   * @param {event} event event click delete button\n   */\n  deleteOwnInput = (): void => {\n    const label = this.state.orientedLink.label || this.state.orientedLink.name;\n    const del: boolean = confirm('Delete \"' + label + '\" ?');\n    // alert(del);\n    if (del) {\n      this.props.callBackToParent(this.state.orientedLink.id, undefined);\n    }\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   * @param {number} index id of input\n   */\n  _handleChange(currentTarget: string, name: string, index: number): void {\n    let tmp: OrientedLinkClass = this.state.orientedLink;\n    const widthInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)\n    ).toString();\n    const heightInitialSpaceDefault = (\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10)\n    ).toString();\n    tmp = editGoodParameterOrientedLink(name, tmp, currentTarget, {}, widthInitialSpaceDefault, heightInitialSpaceDefault);\n    this.setState({\n      orientedLink: tmp,\n    });\n    this.generateInputsOrientedLink();\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * Get value of input with state.arrayPointClass\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  private getGoodValue(name: string): any {\n    let value: string;\n    let valueSelect: SelectableValue<any>;\n    let valueMetric: Metric;\n\n    value = '';\n    valueSelect = {};\n\n    if (\n      name.startsWith('orientationLink') ||\n      name.startsWith('isIncurved') ||\n      name.startsWith('pointIn') ||\n      name.startsWith('pointOut') ||\n      name.startsWith('regionIn') ||\n      name.startsWith('regionOut')\n    ) {\n      if (name.startsWith('orientationLink')) {\n        valueSelect = this.state.orientedLink.orientationLink;\n      } else if (name.startsWith('isIncurved')) {\n        valueSelect = this.state.orientedLink.isIncurved;\n      } else if (name.startsWith('pointIn')) {\n        valueSelect = {\n          label: this.state.orientedLink.pointIn,\n          value: this.state.orientedLink.pointIn,\n        };\n      } else if (name.startsWith('pointOut')) {\n        valueSelect = {\n          label: this.state.orientedLink.pointOut,\n          value: this.state.orientedLink.pointOut,\n        };\n      } else if (name.startsWith('regionIn')) {\n        valueSelect = {\n          label: this.state.orientedLink.regionIn,\n          value: this.state.orientedLink.regionIn,\n        };\n      } else if (name.startsWith('regionOut')) {\n        valueSelect = {\n          label: this.state.orientedLink.regionOut,\n          value: this.state.orientedLink.regionOut,\n        };\n      }\n      return valueSelect;\n    } else if (name.startsWith('mainMetric')) {\n      valueMetric = this.state.orientedLink.mainMetric;\n      return valueMetric;\n    } else {\n      if (name.startsWith('label')) {\n        value = this.state.orientedLink.label;\n      } else if (name.startsWith('pointAX')) {\n        value = this.state.orientedLink.pointAPositionX;\n      } else if (name.startsWith('pointAY')) {\n        value = this.state.orientedLink.pointAPositionY;\n      } else if (name.startsWith('pointBX')) {\n        value = this.state.orientedLink.pointBPositionX;\n      } else if (name.startsWith('pointBY')) {\n        value = this.state.orientedLink.pointBPositionY;\n      } else if (name.startsWith('colorCoordinateA')) {\n        value = this.state.orientedLink.colorCoordinateA;\n      } else if (name.startsWith('colorCoordinateB')) {\n        value = this.state.orientedLink.colorCoordinateB;\n      } else if (name.startsWith('refIdMainMetric')) {\n        value = this.state.orientedLink.mainMetric.refId || '';\n      } else if (name.startsWith('keyMainMetric')) {\n        value = this.state.orientedLink.mainMetric.key || '';\n      } else if (name.startsWith('keyValueMainMetric')) {\n        value = this.state.orientedLink.mainMetric.keyValue || '';\n      } else if (name.startsWith('pointCX')) {\n        value = this.state.orientedLink.pointCPositionX;\n      } else if (name.startsWith('pointCY')) {\n        value = this.state.orientedLink.pointCPositionY;\n      } else if (name.startsWith('size')) {\n        value = this.state.orientedLink.size;\n      }\n      return value;\n    }\n  }\n\n  /** set point in/out to empty in if orientedLink is associate to region in/out\n   *  set region in/out to empty in if orientedLink is associate to point in/out\n   */\n  private updateAssociatePointAndRegion = (orientedLink: OrientedLinkClass, name: string) => {\n    if (name.startsWith('pointIn')) {\n      orientedLink = editGoodParameterOrientedLink('regionIn', orientedLink, '', {});\n    } else if (name.startsWith('regionIn')) {\n      orientedLink = editGoodParameterOrientedLink('pointIn', orientedLink, '', {});\n    } else if (name.startsWith('pointOut')) {\n      orientedLink = editGoodParameterOrientedLink('regionOut', orientedLink, '', {});\n    } else if (name.startsWith('regionOut')) {\n      orientedLink = editGoodParameterOrientedLink('pointOut', orientedLink, '', {});\n    }\n  };\n\n  /** create dynamic input */\n  generateInputsOrientedLink(): void {\n    const { arrayInput } = this.state;\n    let finalItem: JSX.Element[] = [];\n    let item: JSX.Element = <div></div>;\n\n    for (const line of arrayInput) {\n      const mapItems: JSX.Element[] = [];\n      line.uneClassInput.forEach((obj) => {\n        if (obj.input_type === 'text') {\n          item = (\n            <InputTextOrientedLink\n              key={obj.id}\n              label={obj.label}\n              name={obj.name}\n              placeholder={obj.placeholder || ''}\n              required={obj.required}\n              value={this.getGoodValue(obj.name)}\n              _handleChange={(event: {\n                /**\n                 * get currentTarget in event element\n                 */\n                currentTarget: HTMLInputElement;\n              }) => {\n                this._handleChange(event.currentTarget.value, obj.name, line.id);\n              }}\n              isIncurved={this.getGoodValue('isIncurved')}\n            />\n          );\n        } else if (obj.input_type === 'select') {\n          item = (\n            <InputSelectOrientedLink\n              key={obj.id}\n              _onChange={(value: SelectableValue<string>, name: string, index: number) => {\n                const newOrientedLink: OrientedLinkClass = this.state.orientedLink;\n                editGoodParameterOrientedLink(name, newOrientedLink, value.value || '', value);\n                this.updateAssociatePointAndRegion(newOrientedLink, name);\n                this.setState({\n                  orientedLink: newOrientedLink,\n                });\n                this.generateInputsOrientedLink();\n                if (this.props.isAddLink === false) {\n                  this.callBack();\n                }\n              }}\n              name={obj.name}\n              index={line.id}\n              data={obj.optionValues}\n              defaultValue={this.getGoodValue(obj.name)}\n              label={obj.label}\n            />\n          );\n        } else {\n          item = <div key={obj.id}></div>;\n        }\n        mapItems.push(item);\n      });\n      const newInputList: JSX.Element = (\n        <div key={'inputOrientedLink' + line.id.toString()} className=\"inputCoor\" id={'orientedLink' + line.id.toString()}>\n          {mapItems}\n        </div>\n      );\n      finalItem = finalItem.concat(newInputList);\n    }\n    this.setState((prevState: State) => ({\n      htmlInput: <ul>{finalItem}</ul>,\n    }));\n  }\n\n  /** call function to return arrayCoor a SimpleEditor */\n  callBack = (): void => {\n    const waitAlert = 3000;\n\n    if (this.state.orientedLink.label === '') {\n      this.setState({\n        severityAlert: 'error',\n        titleAlert: 'Error: label is empty',\n        hiddenAlert: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          hiddenAlert: true,\n        });\n      }, waitAlert);\n      //console.log('ok');\n    } else {\n      this.props.callBackToParent(this.state.orientedLink.id, this.state.orientedLink);\n      this.setState({\n        severityAlert: 'success',\n        titleAlert: 'Save',\n        hiddenAlert: false,\n      });\n      if (!this.props.isAddLink) {\n        setTimeout(() => {\n          this.setState({\n            hiddenAlert: true,\n          });\n        }, waitAlert);\n      }\n    }\n  };\n\n  /** update data for manageLink and textObject */\n  private callBackToOther = (followLink?: string, hoveringTooltipLink?: string, hoveringTooltipText?: string, textObj?: TextObject): void => {\n    const oldCoor: OrientedLinkClass = this.state.orientedLink;\n    if (followLink) {\n      oldCoor.linkURL.followLink = followLink;\n    }\n    if (hoveringTooltipLink) {\n      oldCoor.linkURL.hoveringTooltipLink = hoveringTooltipLink;\n    }\n    if (hoveringTooltipText) {\n      oldCoor.linkURL.hoveringTooltipText = hoveringTooltipText;\n    }\n    if (textObj) {\n      oldCoor.textObj = textObj;\n    }\n    this.setState({\n      orientedLink: oldCoor,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** update lower limit */\n  private callBackManageLowerLimit = (coordinate: CoordinateSpaceClass, id?: number) => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.colorMode = coordinate.colorMode;\n    newValue.traceBorder = coordinate.traceBorder;\n    newValue.traceBack = coordinate.traceBack;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save lower limit data */\n  private callBackLowerLimit = (lowerLimit: LowerLimitClass[], id?: number) => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.lowerLimit = lowerLimit;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save data of mainMetric */\n  private callBackMainMetric = (mainMetric: Metric, id?: number): void => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.mainMetric = mainMetric;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save data of mainMetric */\n  private callBackMainMetricB = (mainMetricB: Metric, id?: number): void => {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.mainMetricB = mainMetricB;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  };\n\n  /** save data of zIndex */\n  private callBackZIndex(zIndexUpdated: number, id: number) {\n    const newValue: OrientedLinkClass = this.state.orientedLink;\n    newValue.zIndex = zIndexUpdated;\n    this.setState({\n      orientedLink: newValue,\n    });\n    if (this.props.isAddLink === false) {\n      this.callBack();\n    }\n  }\n\n  /**\n   * fill input whith data\n   * this function is called by mount and update event\n   */\n  getDataInInput = async () => {\n    await this.addInput(this.props.orientedLink.id);\n    this.generateInputsOrientedLink();\n  };\n\n  /** call function in load component */\n  componentDidMount = () => {\n    this.getDataInInput();\n  };\n\n  /** function is call when props is update. Update state */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps.orientedLink.id !== this.props.orientedLink.id) {\n      await this.setStateAsyncOrientedLink({\n        orientedLink: cloneOrientedLink(this.props.orientedLink),\n      });\n      await this.setStateAsyncArrayInput({\n        arrayInput: [],\n      });\n      this.getDataInInput();\n    }\n    // if (prevProps.data.series !== this.props.data.series) {\n    // \tthis.fillSelectQuery();\n    // }\n  };\n\n  /**\n   * render()\n   */\n  render() {\n    const styleAlert = {\n      position: 'fixed',\n      bottom: '5%',\n      right: '5%',\n      zIndex: 9999,\n    } as CSSProperties;\n\n    return (\n      <div>\n        <div style={styleAlert} hidden={this.state.hiddenAlert}>\n          <Alert title={this.state.titleAlert} severity={this.state.severityAlert} />\n        </div>\n        <div>\n          <ManageQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.orientedLink.id}\n            mainMetric={this.state.orientedLink.mainMetric}\n            mainMetricB={this.state.orientedLink.mainMetricB}\n            callBackToParent={this.callBackMainMetric}\n            callBackToParentMainMetricB={this.callBackMainMetricB}\n            isLink={true}\n          />\n        </div>\n        <div>\n          <ManageAuxiliaryQuery\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            idCoordinate={this.state.orientedLink.id}\n            metrics={this.state.orientedLink.metrics}\n            isLink={true}\n          />\n        </div>\n        <div>\n          <ParametresGeneriques\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinateSpace={this.state.orientedLink}\n            callBackToParent={this.callBackToOther}\n          />\n        </div>\n        <div>\n          <ManageLowerLimit\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            coordinate={this.state.orientedLink}\n            callBack={this.callBackManageLowerLimit}\n            lowerLimitCallBack={this.callBackLowerLimit}\n            isLink={true}\n          />\n        </div>\n        <div>\n          <PositionParameter\n            options={this.props.options}\n            onOptionsChange={this.props.onOptionsChange}\n            data={this.props.data}\n            callBackToParentZIndex={this.callBackZIndex.bind(this)}\n            isPoint={false}\n            isLink={true}\n            isRegion={false}\n            id={this.state.orientedLink.id}\n          />\n        </div>\n        <div>{this.state.htmlInput}</div>\n        <div style={{ textAlign: 'center' }} className=\"buttonSave\">\n          {this.props.isAddLink && (\n            <Button style={{ marginRight: '1%' }} onClick={() => this.callBack()}>\n              Save\n            </Button>\n          )}\n          {!this.props.isAddLink && (\n            <Button onClick={this.deleteOwnInput} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { SimpleOptions } from 'types';\nimport { PanelEditorProps } from '@grafana/data';\n\nimport { RegionClass } from 'Models/RegionClass';\nimport { PointClass } from 'Models/PointClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\n\nimport { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\nimport { initPoint } from 'Functions/initPoint';\nimport { initOrientedLink } from 'Functions/initOrientedLink';\n\nimport CoordinateSpace from 'components/CoordinateSpace/coordinateSpace';\nimport Point from './point/point';\nimport OrientedLink from './orientedLink/orientedLink';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** return to edit mode after save */\n  returnEditMode?: () => void;\n  isRegion: boolean;\n  isPoint: boolean;\n  isLink: boolean;\n}\n\ninterface State {\n  /** data for new CoordinateSpaceExtendClass */\n  coordinate?: RegionClass;\n  point?: PointClass;\n  orientedLink?: OrientedLinkClass;\n}\n\n/** Add new coordinate space */\nclass AddCoordinate extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      coordinate: undefined,\n      point: undefined,\n      orientedLink: undefined,\n    };\n  }\n\n  /** search new id for espacecoordinneesclass */\n  searchNewId = (allCoordinateSpace: RegionClass[]): number => {\n    let id = -1;\n\n    for (const line of allCoordinateSpace) {\n      if (line.id > id) {\n        id = line.id;\n      }\n    }\n    id += 1;\n    return id;\n  };\n\n  private defineIdPoint = (): number => {\n    let id = 1;\n    if (this.props.options.arrayPoints.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayPoints[this.props.options.arrayPoints.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  private defineIdOrientedLink = (): number => {\n    let id = 1;\n    if (this.props.options.arrayOrientedLinks.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayOrientedLinks[this.props.options.arrayOrientedLinks.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  lastId = () => {\n    const allRegion = this.props.options.regionCoordinateSpace;\n    let id = 0;\n    for (const line of allRegion) {\n      if (line.id > id) {\n        id = line.id;\n      }\n    }\n    return id;\n  };\n\n  /** call init class for coordinate state */\n  componentDidMount = (): void => {\n    if (this.props.isRegion) {\n      this.setState({\n        coordinate: initRegionCoordinateSpace(this.lastId()),\n      });\n    } else if (this.props.isPoint) {\n      let id = this.defineIdPoint();\n      this.setState({\n        point: initPoint(id),\n      });\n    } else if (this.props.isLink) {\n      let id = this.defineIdOrientedLink();\n      const newZIndex: number = this.props.options.zIndexOrientedLink + 1;\n      this.setState({\n        orientedLink: initOrientedLink(id, newZIndex),\n      });\n      this.props.onOptionsChange({\n        ...this.props.options,\n        zIndexOrientedLink: newZIndex,\n      });\n    }\n  };\n\n  /** update onOptionsChange */\n  setAsyncOption = (newIdx: number) => {\n    return Promise.resolve('Success').then(() => {\n      if (this.props.isRegion) {\n        this.props.onOptionsChange({\n          ...this.props.options,\n          indexRegion: newIdx,\n        });\n      } else if (this.props.isPoint) {\n        this.props.onOptionsChange({\n          ...this.props.options,\n          indexPoint: newIdx,\n        });\n      } else if (this.props.isLink) {\n        this.props.onOptionsChange({\n          ...this.props.options,\n          indexOrientedLink: newIdx,\n        });\n      }\n    });\n  };\n\n  /** send data of region for parent */\n  callBack = async (id: number, newCoordinate?: RegionClass) => {\n    if (newCoordinate) {\n      const allCoordinateSpace: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n      await this.setAsyncOption(newCoordinate.id);\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: allCoordinateSpace.concat(newCoordinate),\n      });\n      if (this.props.returnEditMode) {\n        this.props.returnEditMode();\n      }\n      // this.componentDidMount();\n    }\n  };\n\n  /** send data of point for parent */\n  callBackPoint = async (id: number, newCoordinate?: PointClass) => {\n    if (newCoordinate) {\n      const allCoordinateSpace: PointClass[] = this.props.options.arrayPoints.slice();\n      await this.setAsyncOption(newCoordinate.id);\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: allCoordinateSpace.concat(newCoordinate),\n      });\n      if (this.props.returnEditMode) {\n        this.props.returnEditMode();\n      }\n    }\n  };\n\n  /** send data of orientedLink for parent */\n  callBackOrientedLink = async (id: number, newCoordinate?: OrientedLinkClass) => {\n    if (newCoordinate) {\n      const allCoordinateSpace: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n      await this.setAsyncOption(newCoordinate.id);\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: allCoordinateSpace.concat(newCoordinate),\n      });\n      if (this.props.returnEditMode) {\n        this.props.returnEditMode();\n      }\n    }\n  };\n\n  /** result */\n  render() {\n    if (this.props.isRegion) {\n      return (\n        <div>\n          {this.state.coordinate && (\n            <CoordinateSpace\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              coordinate={this.state.coordinate}\n              callBackToParent={this.callBack}\n              isAddCoordinate={true}\n            />\n          )}\n        </div>\n      );\n    } else if (this.props.isPoint) {\n      return (\n        <div>\n          {this.state.point && (\n            <Point\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              point={this.state.point}\n              callBackToParent={this.callBackPoint}\n              isAddPoint={true}\n            />\n          )}\n        </div>\n      );\n    } else if (this.props.isLink) {\n      return (\n        <div>\n          {this.state.orientedLink && (\n            <OrientedLink\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              orientedLink={this.state.orientedLink}\n              callBackToParent={this.callBackOrientedLink}\n              isAddLink={true}\n            />\n          )}\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\nexport default AddCoordinate;\n","export const isNumFloat = (value: string): number => {\n  if (String(value).match(/^-{0,1}\\d+$/) || String(value).match(/^\\d+\\.\\d+$/)) {\n    return 1;\n  }\n  return 0;\n};\n","/** parse color for svg */\nexport interface Color {\n  /** base color */\n  color: string;\n  /** transparency level */\n  transparency: string;\n}\n\nexport const parseColor = (color: string): Color => {\n  let colorEdit: string = color;\n  let transparency = '';\n  if (color.indexOf('#') > -1) {\n    colorEdit = color.replace('rgba', 'rgb');\n    if (colorEdit.indexOf(',') > -1) {\n      const arrayColor: string[] = colorEdit.split(',');\n      colorEdit = arrayColor[0] + ',' + arrayColor[1] + ',' + arrayColor[2] + ')';\n      if (arrayColor.length > 3) {\n        transparency = arrayColor[3].replace(')', '');\n      }\n    }\n  }\n  return { color: colorEdit, transparency: transparency };\n};\n","/* eslint-disable prettier/prettier */\nimport React, { CSSProperties } from 'react';\nimport { SimpleOptions, Metric } from 'types';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { Tooltip } from '@grafana/ui';\n\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\n\n//import { calculRealCoordinate } from 'Functions/otherFunction';\nimport { getLowerLimit, LowerLimit } from 'Functions/getLowerLimit';\nimport { getResultQuery } from 'Functions/getResultQuery';\nimport { parseColor, Color } from 'Functions/parseColor';\nimport { reqMetricRegion, reqMetricAuxRegion } from 'Functions/fetchMetrics';\n//import { searchMinMaxIdSVG, Coord4DInt } from 'Functions/searchMinMaxIdSVG';\nimport { Style } from 'components/Parametrage/styleComponent';\n// import { Coor4DNum, pixelToPercent } from 'Functions/searchIDLimit';\n// import { Coor4DNum } from 'Functions/searchIDLimit';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** object CoordinateSpace */\n  uneCoor: RegionClass;\n  /** use limit */\n  useLimit: boolean;\n  /** limit */\n  limit: Coord4D;\n  /** id region */\n  id: string;\n  /** if button SimplePanel is active, block all onClick region space */\n  //isEnabled: boolean;\n  /** if button Add Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddLinkIsActive: boolean;\n  /** if button Add Incurved Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddIncurvedLinkIsActive: boolean;\n  /** width when region has been created */\n  widthInitialSpaceDefault: string;\n  /** height when region has been created */\n  heightInitialSpaceDefault: string;\n}\n\ninterface State {\n  /** value of tooltip */\n  tooltipValue: JSX.Element | null;\n  /** background color with lower limit */\n  backgroundColor: string;\n  /** border color with lower llimit */\n  borderColor: string;\n  /** size border with lower limit */\n  sizeBorder: number;\n  /** html result */\n  htmlResult: JSX.Element;\n  /** value return by query */\n  valueQuery: string;\n}\n\ninterface CoorHTML {\n  /** coordinate left */\n  left: string;\n  /** coordinate right */\n  right: string;\n  /** coordinate top */\n  top: string;\n  /** coordinate bottom */\n  bottom: string;\n}\n\ninterface Tooltip {\n  tooltipValue: JSX.Element | null;\n  backgroundColor: string;\n  borderColor: string;\n  sizeBorder: number;\n  valueQuery: string;\n}\n\n/**\n * Draw rectangle\n */\nexport default class DrawRectangleExtend extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      tooltipValue: null,\n      backgroundColor: 'rgba(255, 255, 255, 0)',\n      borderColor: 'rgba(255, 255, 255, 0)',\n      sizeBorder: 1,\n      htmlResult: <div></div>,\n      valueQuery: '',\n    };\n  }\n\n  /**\n   * Edit color Zone in SVG\n   * @param {string} id id is equal to zone for change color in Svg\n   * @param {string} color define the color for Svg zone\n   */\n  editColorSvgZone = (id: string, color: string, border: string, sizeBorder: string): void => {\n    const colorSVG: Color = parseColor(color);\n    const colorBorderSVG: Color = parseColor(border);\n    const changeColorElement: HTMLElement | null = document.getElementById(id);\n\n    // if (id === 'rect45') {\n    //   console.log('am here');\n    // }\n\n    if (changeColorElement) {\n      changeColorElement.style.fill = colorSVG.color;\n      changeColorElement.style.fillOpacity = colorSVG.transparency;\n      changeColorElement.style.stroke = colorBorderSVG.color;\n      changeColorElement.style.strokeOpacity = colorBorderSVG.transparency;\n      changeColorElement.style.strokeWidth = sizeBorder;\n    }\n  };\n\n  generateValueMetricElement = (region: RegionClass, valueQuery: number | null): string => {\n    let converValueQuery = 'NaN';\n    const roundMetrics: number = region.textObj.valueGenerateObjectText\n      ? parseInt(region.textObj.valueGenerateObjectText.numericFormatElement, 10)\n      : 1;\n\n    if (valueQuery && region.textObj.valueGenerateObjectText && region.textObj.valueGenerateObjectText.numericFormatElement !== '' && roundMetrics) {\n      converValueQuery = (valueQuery || 0).toPrecision(roundMetrics).toString();\n    } else if (valueQuery) {\n      converValueQuery = valueQuery.toString();\n    }\n    // (Math.round(valueQuery * roundMetrics + Number.EPSILON) / roundMetrics).toString()\n    let value: string = converValueQuery;\n    if (region.textObj.valueGenerateObjectText && converValueQuery !== 'NaN') {\n      value = region.textObj.valueGenerateObjectText.legendElement + ' ' + converValueQuery + ' ' + region.textObj.valueGenerateObjectText.unit;\n    }\n\n    return value;\n  };\n\n  /** fill state for tooltip, color zone and calc round query */\n  setStateTooltip = (\n    lowerLimit: LowerLimit,\n    region: RegionClass,\n    valueQuery: number | null\n    //link: boolean\n  ): Tooltip => {\n    const styleTooltip = {\n      color: region.textObj.colorText,\n      backgroundColor: region.textObj.colorBack,\n    } as CSSProperties;\n\n    const styleMetrics = {\n      color: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      backgroundColor: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorBackElement : 'black',\n    } as CSSProperties;\n\n    const valueQueryResult: string = this.generateValueMetricElement(region, valueQuery);\n\n    const tooltipValue: JSX.Element | null =\n      valueQueryResult !== 'NaN' ? (\n        <div>\n          <div style={styleTooltip}>\n            {/* {link && <a href={region.linkURL.hoveringTooltipLink}>{region.linkURL.hoveringTooltipText}</a>} */}\n            <a href={region.linkURL.hoveringTooltipLink}>{region.linkURL.hoveringTooltipText}</a>\n            {region.textObj.isTextTooltip && <p>{region.label}</p>}\n          </div>\n          <div style={styleMetrics}>\n            {region.textObj.generateObjectText &&\n              region.textObj.valueGenerateObjectText &&\n              region.textObj.valueGenerateObjectText.displayObjectInTooltip && <p>{valueQueryResult}</p>}\n          </div>\n          <div>{this.displayValuesAuxMetrics()}</div>\n        </div>\n      ) : null;\n    return {\n      tooltipValue: tooltipValue,\n      backgroundColor: lowerLimit.colorBack,\n      borderColor: lowerLimit.colorBorder,\n      sizeBorder: lowerLimit.sizeBorder,\n      valueQuery: valueQueryResult,\n    };\n  };\n\n  displayValueQuery = (region: RegionClass): boolean => {\n    if (\n      region.textObj.generateObjectText &&\n      region.textObj.valueGenerateObjectText &&\n      !region.textObj.valueGenerateObjectText.displayObjectInTooltip\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  getPositionTextObjectRegionSVG = (idSVG: string): CoorHTML => {\n    const coor: CoorHTML = { top: '0', bottom: '0', left: '0', right: '0' };\n    let elementSVG: any;\n    if (this.props.options.baseMap.isUploaded) {\n      elementSVG = document.getElementById(idSVG);\n    } else {\n      elementSVG = document.getElementById('oct' + idSVG);\n    }\n    if (elementSVG) {\n      let xSVG = 0;\n      let ySVG = 0;\n      let widthSVG = 0;\n      let heightSVG = 0;\n      let top = '';\n      let left = '';\n      if (elementSVG.localName === 'path') {\n        const allValues: string = elementSVG.attributes['d'].nodeValue;\n        const arrayAllValues: string[] = allValues.split(' ');\n        let iX = -2;\n        let xMin = 1000000;\n        let xMax = 0;\n        let iY = -1;\n        let yMin = 1000000;\n        let yMax = 0;\n        for (let i = 0; i < arrayAllValues.length; i++) {\n          let valueToCheck = parseInt(arrayAllValues[i], 10);\n          if (i === iX + 3) {\n            if (valueToCheck < xMin) {\n              xMin = valueToCheck;\n            }\n            if (valueToCheck > xMax) {\n              xMax = valueToCheck;\n            }\n            iX = i;\n          }\n          if (i === iY + 3) {\n            if (valueToCheck < yMin) {\n              yMin = valueToCheck;\n            }\n            if (valueToCheck > yMax) {\n              yMax = valueToCheck;\n            }\n            iY = i;\n          }\n        }\n        left = xMax.toString();\n        top = yMax.toString();\n      } else if (elementSVG.localName === 'ellipse') {\n        xSVG = parseInt(elementSVG.attributes['cx'].nodeValue, 10);\n        ySVG = parseInt(elementSVG.attributes['cy'].nodeValue, 10);\n        const rX = parseInt(elementSVG.attributes['rx'].nodeValue, 10) * 2;\n        const rY = parseInt(elementSVG.attributes['ry'].nodeValue, 10) * 2;\n        left = (xSVG + rX).toString();\n        top = (ySVG + rY).toString();\n      } else if (elementSVG.localName === 'rect') {\n        xSVG = parseInt(elementSVG.attributes['x'].nodeValue, 10);\n        ySVG = parseInt(elementSVG.attributes['y'].nodeValue, 10);\n        widthSVG = parseInt(elementSVG.attributes['width'].nodeValue, 10);\n        heightSVG = parseInt(elementSVG.attributes['height'].nodeValue, 10);\n        left = (xSVG + widthSVG).toString();\n        top = (ySVG + heightSVG).toString();\n      }\n      coor.top = top;\n      coor.left = left;\n    }\n    return coor;\n  };\n\n  /** generate tooltip for metrics and apply color with lower limit */\n  generateTooltipAndEditColor = (region: RegionClass, valueQuery: number | null) => {\n    let stateIsFill = false;\n    const lowerLimit: LowerLimit = getLowerLimit(region, valueQuery);\n\n    if (region.mode) {\n      this.editColorSvgZone(region.idSVG, lowerLimit.colorBack, lowerLimit.colorBorder, lowerLimit.sizeBorder.toString());\n    }\n\n    // const resultTooltip: Tooltip = this.setStateTooltip(lowerLimit, region, valueQuery, this.props.isEnabled);\n    const resultTooltip: Tooltip = this.setStateTooltip(lowerLimit, region, valueQuery);\n    //if (valueQuery) {\n    //if (region.mode && ((!region.textObj.isTextTooltip) || this.displayValueQuery(region))) {\n    if (region.mode) {\n      //const coordinateWrite: Coord4DInt | null = searchMinMaxIdSVG(region.idSVG);\n      const coordinateTextObject: CoorHTML = this.getPositionTextObjectRegionSVG(region.idSVG);\n      //if (coordinateWrite) {\n      stateIsFill = true;\n      const style: Style = region.textObj.style;\n      const styleWrite = {\n        width: 'auto',\n        position: 'absolute',\n        zIndex: 999,\n        // left: coordinateWrite.xMax - (coordinateWrite.xMax - coordinateWrite.xMin),\n        // top: coordinateWrite.yMax,\n        left: coordinateTextObject.left + 'px',\n        top: coordinateTextObject.top + 'px',\n        border: '1px solid black',\n        // backgroundColor: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorBackElement : 'black',\n        // color: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      } as CSSProperties;\n\n      const styleLabelTooltipSVG = {\n        textDecoration: this.defineTextDecoration(style),\n        fontStyle: this.defineFontStyle(style),\n        fontWeight: this.defineFontWeight(style),\n        fontSize: this.props.options.display.size,\n        fontFamily: this.props.options.display.police,\n        color: region.textObj.colorText,\n        backgroundColor: region.textObj.colorBack,\n        margin: 0,\n        padding: '5px 5px 0 5px',\n      } as React.CSSProperties;\n\n      const styleMainMetricTooltipSVG = {\n        textDecoration: this.defineTextDecoration(style),\n        fontStyle: this.defineFontStyle(style),\n        fontWeight: this.defineFontWeight(style),\n        color: region.textObj.valueGenerateObjectText.addColorTextElement ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n        backgroundColor: region.textObj.valueGenerateObjectText.addColorBackElement\n          ? region.textObj.valueGenerateObjectText.colorBackElement\n          : 'black',\n        fontSize: this.props.options.display.size,\n        fontFamily: this.props.options.display.police,\n        margin: 0,\n        padding: '5px 5px 0 5px',\n      } as React.CSSProperties;\n\n      let htmlResult = (\n        <div style={styleWrite}>\n          {!region.textObj.isTextTooltip && <p style={styleLabelTooltipSVG}>{region.label}</p>}\n          {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && (\n            <p style={styleMainMetricTooltipSVG}>{this.displayValueQuery(region) && resultTooltip.valueQuery}</p>\n          )}\n        </div>\n      );\n      if (region.textObj.isTextTooltip && region.textObj.valueGenerateObjectText.displayObjectInTooltip) {\n        htmlResult = <div></div>;\n      }\n      this.setState({\n        htmlResult: htmlResult,\n        tooltipValue: resultTooltip.tooltipValue,\n        backgroundColor: resultTooltip.backgroundColor,\n        borderColor: resultTooltip.borderColor,\n        sizeBorder: resultTooltip.sizeBorder,\n        valueQuery: resultTooltip.valueQuery,\n      });\n      //}\n      //}\n    }\n    if (!stateIsFill) {\n      this.setState({\n        tooltipValue: resultTooltip.tooltipValue,\n        backgroundColor: resultTooltip.backgroundColor,\n        borderColor: resultTooltip.borderColor,\n        sizeBorder: resultTooltip.sizeBorder,\n        valueQuery: resultTooltip.valueQuery,\n      });\n    }\n  };\n\n  /** get data metrics and fill state */\n  reqMetrics = () => {\n    const region: RegionClass = this.props.uneCoor;\n\n    reqMetricRegion(region, this.props);\n    if (region.mainMetric.returnQuery && region.mainMetric.returnQuery.length > 0) {\n      const cnt: number | null = getResultQuery(region.mainMetric);\n\n      this.generateTooltipAndEditColor(region, cnt);\n    } else {\n      this.generateTooltipAndEditColor(region, null);\n    }\n  };\n\n  getValuesAuxiliaryMetrics = (): string[] => {\n    const region: RegionClass = this.props.uneCoor;\n    reqMetricAuxRegion(region, this.props);\n    const mainMetric: Metric = region.mainMetric;\n    //console.log(mainMetric.refId);\n    const auxiliaryMetrics: Metric[] = region.metrics;\n    //console.log(auxiliaryMetrics);\n    let valueAuxiliaryMetric: string[] = [];\n    //const countMetrics: number = auxiliaryMetrics.length;\n    auxiliaryMetrics.forEach((metric: Metric) => {\n      let countTotalValues = 0;\n      let resultTotalValues = 0;\n      let result = '';\n      if (metric.returnQuery && metric.returnQuery.length > 0) {\n        let numberLoop: number = metric.returnQuery?.length || 0;\n        if (metric.key !== '' && metric.keyValue !== '') {\n          for (let i = 0; i < numberLoop; i++) {\n            let line = metric.returnQuery[i];\n            if (line.fields[0].labels) {\n              if (mainMetric.refId !== '') {\n                if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                  if (line.fields[0].labels[metric.key] === metric.keyValue) {\n                    const countValues: number = line.fields[0].values.length;\n                    for (let i = 0; i < countValues; i++) {\n                      if (line.fields[0].values.get(i)) {\n                        resultTotalValues += line.fields[0].values.get(i);\n                        countTotalValues++;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < numberLoop; i++) {\n            let line = metric.returnQuery[i];\n            if (line.fields[0].labels) {\n              if (mainMetric.refId) {\n                if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                  const countValues: number = line.fields[0].values.length;\n                  for (let i = 0; i < countValues; i++) {\n                    if (line.fields[0].values.get(i)) {\n                      resultTotalValues += line.fields[0].values.get(i);\n                      countTotalValues++;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (metric.manageValue === 'avg') {\n          result = (resultTotalValues / countTotalValues).toString();\n        } else if (metric.manageValue === 'sum') {\n          result = resultTotalValues.toString();\n        } else if (metric.manageValue === 'err') {\n          if (countTotalValues > 1) {\n            result = 'error';\n          } else {\n            result = resultTotalValues.toString();\n          }\n        }\n      }\n      if (result !== '') {\n        valueAuxiliaryMetric.push(result);\n      }\n    });\n    return valueAuxiliaryMetric;\n  };\n\n  private getConvertValueAuxMetrics = (valueBrut: string): string => {\n    let result = '';\n    const region: RegionClass = this.props.uneCoor;\n    //const roundValue: string = region.textObj.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(region.textObj.generateAuxiliaryElement.numericFormatElement, 10) || 1;\n    const unit: string = region.textObj.generateAuxiliaryElement.unit;\n    //if (roundValue !== '') {\n    result = parseFloat(valueBrut).toPrecision(roundValue).toString();\n    // } else {\n    //   result = valueBrut;\n    // }\n    return result + ' ' + unit;\n  };\n\n  private displayValuesAuxMetrics = (): JSX.Element => {\n    let html: JSX.Element[] = [];\n    const region: RegionClass = this.props.uneCoor;\n    const valuesAuxMetrics: string[] = this.getValuesAuxiliaryMetrics();\n    const auxMetrics: Metric[] = region.metrics;\n    const addColorText: boolean = region.textObj.generateAuxiliaryElement.addColorTextElement;\n    const addColorBack: boolean = region.textObj.generateAuxiliaryElement.addColorBackElement;\n    const legend: string = region.textObj.generateAuxiliaryElement.legendElement;\n    let colorText = '';\n    let colorBack = '';\n\n    if (addColorText) {\n      colorText = region.textObj.generateAuxiliaryElement.colorTextElement;\n    } else {\n      colorText = 'white';\n    }\n\n    if (addColorBack) {\n      colorBack = region.textObj.generateAuxiliaryElement.colorBackElement;\n    } else {\n      colorBack = 'black';\n    }\n\n    const styleTitle = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleTitle2 = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleContent = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    if (auxMetrics.length > 0) {\n      html.push(\n        <p key={'region' + region.id + 'contentToolTip1'} style={styleTitle}>\n          Auxiliary Metric\n        </p>\n      );\n      html.push(\n        <p key={'region' + region.id + 'contentToolTip2'} style={styleTitle}>\n          {legend}\n        </p>\n      );\n      let index = 1;\n      for (const metric of auxMetrics) {\n        const valueAuxMetric: string = this.getConvertValueAuxMetrics(valuesAuxMetrics[index - 1]);\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip3'} style={styleTitle2}>\n            + Metric {index}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip4'} style={styleContent}>\n            - Reference : {metric.refId}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip5'} style={styleContent}>\n            - Value : {!isNaN(parseFloat(valueAuxMetric)) && valueAuxMetric}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip6'} style={styleContent}>\n            - Key : {metric.key}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip7'} style={styleContent}>\n            - KeyValue : {metric.keyValue}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.id + 'contentToolTip8'} style={styleContent}>\n            - Type : {metric.manageValue}\n          </p>\n        );\n        index++;\n      }\n    }\n    return <div style={{ backgroundColor: colorBack }}>{html}</div>;\n  };\n\n  /**\n   * to do\n   * @param coordinateX\n   *\n   */\n  private defineLimitX(coordinateX: number) {\n    let result: number = coordinateX;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < -100) {\n    //     result = -100;\n    //   }\n    // }\n    return result;\n  }\n\n  /**\n   * to do\n   * @param coordinateY\n   *\n   */\n  private defineLimitY(coordinateY: number) {\n    let result: number = coordinateY;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   //console.log(coordinateY);\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < -100) {\n    //     result = -100;\n    //   }\n    // }\n    return result;\n  }\n\n  getCoordinatePxAdaptToInitialSpace = (\n    region: RegionClass,\n    coorRegion: Coord4D,\n    coorRegionDefault: Coord4D,\n    widthInitialSpaceDefault: number,\n    heightInitialSpaceDefault: number\n  ): CoorHTML => {\n    // const widthImage: number = parseInt(this.props.options.baseMap.width, 10);\n    // const heightImage: number = parseInt(this.props.options.baseMap.height, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    //const defaultReferentiel: boolean = this.props.options.coordinateSpaceInitial.defaultReferentiel;\n    // let xMinPx = 0;\n    // let xMaxPx = 0;\n    // let yMinPx = 0;\n    // let yMaxPx = 0;\n    let leftPx = 0;\n    let rightPx = 0;\n    let topPx = 0;\n    let bottomPx = 0;\n\n    // if (!defaultReferentiel) {\n    //   if (xMax < 0) {\n    //     xMinPx = (xMax + 100) * (widthImage / 200);\n    //     xMaxPx = (xMin + 100) * (widthImage / 200);\n    //   } else {\n    //     xMinPx = (xMin + 100) * (widthImage / 200);\n    //     xMaxPx = (xMax + 100) * (widthImage / 200);\n    //   }\n    // } else {\n    //     xMinPx = xMin * (widthImage / 100);\n    //     xMaxPx = xMax * (widthImage / 100);\n    // }\n\n    // if (!defaultReferentiel) {\n    //   if (yMax < 0) {\n    //     yMinPx = (yMax + 100) * (heightImage / 200);\n    //     yMaxPx = (yMin + 100) * (heightImage / 200);\n    //   } else {\n    //     yMinPx = (yMin + 100) * (heightImage / 200);\n    //     yMaxPx = (yMax + 100) * (heightImage / 200);\n    //   }\n    // } else {\n    //     yMinPx = yMin * (heightImage / 100);\n    //     yMaxPx = yMax * (heightImage / 100);\n    // }\n\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n\n    if (parseInt(coorRegion.xMin, 10) < 0 && parseInt(coorRegion.xMax, 10) < 0) {\n      //console.log('--');\n      // leftPx = xMinPx + ((this.defineLimitX(parseInt(coorRegion.xMax, 10)) + 100) / 2) * (widthInitialSpace / 100) - ((widthImage - xMaxPx) / 100);\n      // rightPx = ((widthImage - xMaxPx) / 100) + widthImage - ((this.defineLimitX(parseInt(coorRegion.xMin, 10)) + 100) / 2) * (widthInitialSpace / 100) - xMinPx;\n      // leftPx = this.defineLimitX(parseInt(coorRegion.xMin, 10) / (parseInt(this.props.heightInitialSpaceDefault, 10) / xMax));\n      // rightPx = ((widthImage - xMaxPx) / 100) + widthImage - ((this.defineLimitX(parseInt(coorRegion.xMin, 10)) + 100) / 2) * (widthInitialSpace / 100) - xMinPx;\n      // leftPx = xMinPx + (parseInt(coorRegion.xMax, 10) * (widthInitialSpace / 200) + widthInitialSpace / 2);\n      // rightPx = widthInitialSpace - (parseInt(coorRegion.xMin, 10) * (widthInitialSpace / 200) + widthInitialSpace / 2) - xMinPx;\n    } else {\n      // if (!defaultReferentiel) {\n      //   //console.log('-+');\n      //   leftPx = xMinPx + (this.defineLimitX(parseInt(coorRegion.xMin, 10)) * (widthInitialSpace / 200) + widthInitialSpace / 2);\n      //   rightPx = widthImage - (this.defineLimitX(parseInt(coorRegion.xMax, 10)) * (widthInitialSpace / 200) + widthInitialSpace / 2) - xMinPx;\n      // } else {\n      //   //console.log('++');\n      //   leftPx = xMinPx + (this.defineLimitX(parseInt(coorRegion.xMin, 10)) * widthInitialSpace) / 100;\n      //   rightPx = widthImage - ((this.defineLimitX(parseInt(coorRegion.xMax, 10)) * widthInitialSpace) / 100) - xMinPx;\n      // }\n      //leftPx  = xMinPx + ((parseInt(coorRegion.xMin, 10) + 100) / 2) * (widthInitialSpace / 100) - ((widthImage - xMaxPx) / 100);\n      //rightPx = ((widthImage - xMaxPx) / 100) + widthImage - ((parseInt(coorRegion.xMax, 10) + 100) / 2) * (widthInitialSpace / 100) - xMinPx;\n    }\n\n    if (parseInt(coorRegion.yMin, 10) < 0 && parseInt(coorRegion.yMax, 10) < 0) {\n      // topPx = (heightImage - yMaxPx) + ((this.defineLimitY(parseInt(coorRegion.yMin, 10)) - 100) / 2 * (-1)) * (heightInitialSpace / 100) - (yMinPx / 200);\n      // bottomPx = yMinPx + ((this.defineLimitY(parseInt(coorRegion.yMax, 10)) + 100) / 2 ) * (heightInitialSpace / 100) - ((heightImage - yMaxPx) / 200);\n      // topPx = (heightImage - yMaxPx) + (heightInitialSpace / 2 - (parseInt(coorRegion.yMin, 10)) * (heightInitialSpace / 2 / 100));\n      // bottomPx = (heightImage - yMinPx) + (heightInitialSpace / 2 - (parseInt(coorRegion.yMin, 10)) * (heightInitialSpace / 2 / 100));\n    } else {\n      // if (!defaultReferentiel) {\n      //   topPx = (heightImage - yMaxPx) + ((this.defineLimitY(parseInt(coorRegion.yMax, 10)) - 100) / 2 * (-1)) * (heightInitialSpace / 100) - yMinPx / 200;\n      //   bottomPx = yMinPx + ((this.defineLimitY(parseInt(coorRegion.yMin, 10)) + 100) / 2 ) * (heightInitialSpace / 100) - (heightImage - yMaxPx) / 200;\n      //   //topPx = (heightImage - yMaxPx) + (heightInitialSpace / 2 - (parseInt(coorRegion.yMax, 10)) * (heightInitialSpace / 2 / 100));\n      //   //bottomPx = (heightImage - yMinPx) + (heightInitialSpace / 2 - (parseInt(coorRegion.yMin, 10)) * (heightInitialSpace / 2 / 100));\n      // } else {\n      //   topPx = (heightImage - yMaxPx) + ((this.defineLimitY(100 - parseInt(coorRegion.yMax, 10)) * heightInitialSpace) / 100);\n      //   bottomPx = yMinPx + ((this.defineLimitY(parseInt(coorRegion.yMin, 10)) * heightInitialSpace) / 100) - ((heightImage - yMaxPx) / 200);\n      // }\n    }\n    // console.log(widthInitialSpaceDefault);\n    // console.log(xMin)\n    // console.log(xMax)\n    // console.log(widthInitialSpace);\n    // console.log(ratioLeft);\n\n    // if (parseInt(orientedLink.widthInitialSpaceDefault, 10) !== widthInitialSpace) {\n    //   xA = xMinInitialSpace + widthInitialSpace * ratioXA;\n    //   xB = xMinInitialSpace + widthInitialSpace * ratioXB;\n    // } else {\n    //   xA = widthInitialSpace * parseInt(orientedLink.pointAPositionX, 10) / parseInt(orientedLink.widthInitialSpaceDefault, 10);\n    //   xB = widthInitialSpace * parseInt(orientedLink.pointBPositionX, 10) / parseInt(orientedLink.widthInitialSpaceDefault, 10);\n    // }\n\n    const ratioLeft = parseInt(coorRegionDefault.xMin, 10) / widthInitialSpaceDefault;\n    const ratioRight = (widthInitialSpaceDefault - parseInt(coorRegionDefault.xMax, 10)) / widthInitialSpaceDefault;\n    const ratioTop = (heightInitialSpaceDefault - parseInt(coorRegionDefault.yMax, 10)) / heightInitialSpaceDefault;\n    const ratioBottom = parseInt(coorRegionDefault.yMin, 10) / heightInitialSpaceDefault;\n    leftPx = Math.round(this.defineLimitX(xMin + widthInitialSpace * ratioLeft));\n    rightPx = Math.round(this.defineLimitX(widthInitialSpace * ratioRight + (widthInitialSpaceDefault - xMax)));\n    topPx = Math.round(this.defineLimitY(heightInitialSpace * ratioTop + (heightInitialSpaceDefault - yMax)));\n    bottomPx = Math.round(this.defineLimitY(yMin + heightInitialSpace * ratioBottom));\n\n    let newArrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    newArrayRegion.forEach((currentRegion) => {\n      if (currentRegion.id === region.id) {\n        currentRegion.coords.xMin = leftPx.toString();\n        currentRegion.coords.xMax = (widthInitialSpaceDefault - rightPx).toString();\n        currentRegion.coords.yMin = bottomPx.toString();\n        currentRegion.coords.yMax = (heightInitialSpaceDefault - topPx).toString();\n      }\n    });\n    this.props.options.regionCoordinateSpace = newArrayRegion;\n\n    let result: CoorHTML = {\n      top: topPx.toString() + 'px',\n      bottom: bottomPx.toString() + 'px',\n      left: leftPx.toString() + 'px',\n      right: rightPx.toString() + 'px',\n    };\n    return result;\n  };\n\n  /** final region zone . Call function after reqMetrics*/\n  renduFinal = () => {\n    if (this.props.uneCoor.mode) {\n      return;\n    }\n    const region: RegionClass = this.props.uneCoor;\n    const pBorder: string = this.state.sizeBorder.toString() + 'px solid ' + this.state.borderColor;\n\n    const backColor: string = region.textObj.colorBack;\n    const textColor: string = region.textObj.colorText;\n\n    //const coorHTML: CoorHTML = calculRealCoordinate(region, this.props.useLimit, this.props.limit);\n    const coorHTML: CoorHTML = this.getCoordinatePxAdaptToInitialSpace(\n      region,\n      region.coords,\n      region.coordsDefault,\n      parseInt(region.widthInitialSpaceDefault, 10),\n      parseInt(region.heightInitialSpaceDefault, 10)\n    );\n    const style: Style = region.textObj.style;\n\n    const styleDiv = {\n      position: 'absolute',\n      border: pBorder,\n      top: coorHTML.top,\n      bottom: coorHTML.bottom,\n      left: coorHTML.left,\n      right: coorHTML.right,\n      zIndex: 999,\n      justifyContent: 'center',\n      background: 'url(' + region.img + ') no-repeat center center',\n      backgroundColor: this.state.backgroundColor,\n      backgroundSize: 'contain',\n      cursor: 'pointer',\n    } as React.CSSProperties;\n\n    const styleTextDiv = {\n      backgroundColor: backColor,\n      textDecoration: this.defineTextDecoration(style),\n      fontStyle: this.defineFontStyle(style),\n      fontWeight: this.defineFontWeight(style),\n      color: textColor,\n      verticalAlign: 'middle',\n    } as React.CSSProperties;\n\n    const styleMetricsDiv = {\n      backgroundColor: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorBackElement : 'black',\n      color: region.textObj.valueGenerateObjectText ? region.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      verticalAlign: 'middle',\n    } as React.CSSProperties;\n\n    let value: JSX.Element;\n\n    if (this.props.buttonAddLinkIsActive || this.props.buttonAddIncurvedLinkIsActive) {\n      //console.log('active');\n      value = (\n        <div style={styleDiv} id={this.props.id}>\n          {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n            <div>\n              <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n              <div style={styleMetricsDiv}>\n                {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n      if (\n        region.textObj.isTextTooltip ||\n        (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) ||\n        region.textObj.generateAuxiliaryElement.displayObjectInTooltip\n      ) {\n        if (this.state.tooltipValue) {\n          value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n        } else {\n          <div>{value}</div>;\n        }\n      }\n    } else {\n      //console.log('not active');\n      value = (\n        <div style={styleDiv} id={this.props.id}>\n          <a href={region.linkURL.followLink}>\n            <div style={{ height: '100%', width: '100%' }}>\n              {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n                <div>\n                  <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n                  <div style={styleMetricsDiv}>\n                    {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n                  </div>\n                </div>\n              )}\n            </div>\n          </a>\n        </div>\n      );\n      if (\n        region.textObj.isTextTooltip ||\n        (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) ||\n        region.textObj.generateAuxiliaryElement.displayObjectInTooltip\n      ) {\n        if (this.state.tooltipValue) {\n          value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n        } else {\n          <div>{value}</div>;\n        }\n      }\n    }\n    // if (!this.props.isEnabled && region.linkURL.followLink !== '') {\n    //   console.log('not active');\n    //   value = (\n    //     <div style={styleDiv} id={this.props.id}>\n    //       <a href={region.linkURL.followLink}>\n    //         <div style={{height: '100%', width: '100%'}} >\n    //           {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n    //             <div>\n    //               <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n    //               <div style={styleMetricsDiv}>\n    //                 {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n    //               </div>\n    //             </div>\n    //           )}\n    //         </div>\n    //       </a>\n    //     </div>\n    //   );\n    //   if (region.textObj.isTextTooltip || (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) || region.textObj.generateAuxiliaryElement.displayObjectInTooltip) {\n    //     value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n    //   }\n    // } else {\n    //   console.log('active');\n    //   value = (\n    //     <div style={styleDiv} id={this.props.id}>\n    //       {(!region.textObj.isTextTooltip || region.textObj.generateObjectText) && (\n    //         <div>\n    //           <div style={styleTextDiv}>{!region.textObj.isTextTooltip && region.label}</div>\n    //           <div style={styleMetricsDiv}>\n    //             {region.textObj.generateObjectText && !region.textObj.valueGenerateObjectText.displayObjectInTooltip && this.state.valueQuery}\n    //           </div>\n    //         </div>\n    //       )}\n    //     </div>\n    //   );\n    //   if (region.textObj.isTextTooltip || (region.textObj.generateObjectText && region.textObj.valueGenerateObjectText.displayObjectInTooltip) || region.textObj.generateAuxiliaryElement.displayObjectInTooltip) {\n    //     value = <Tooltip content={this.state.tooltipValue}>{value}</Tooltip>;\n    //   }\n    // }\n    this.setState({\n      htmlResult: value,\n    });\n  };\n\n  /** fill state to display data in html */\n  fillState = async () => {\n    await Promise.resolve('Success').then(() => {\n      this.reqMetrics();\n    });\n    await Promise.resolve('Success').then(() => {\n      this.renduFinal();\n    });\n  };\n\n  private defineTextDecoration = (mainStyle: Style): string => {\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (mainStyle: Style): string => {\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (mainStyle: Style): any => {\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  /**\n   * update props\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.fillState();\n    }\n  }\n\n  /** load prometheus value */\n  componentDidMount = () => {\n    this.fillState();\n  };\n\n  /** render */\n  render() {\n    // console.log(this.props.uneCoor.metrics);\n    // console.log(this.getValuesAuxiliaryMetrics());\n    return this.state.htmlResult;\n  }\n}\n","import { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { RegionClass } from 'Models/RegionClass';\n\nexport interface LowerLimit {\n  /** color for background */\n  colorBack: string;\n  /** border color */\n  colorBorder: string;\n  /** size border */\n  sizeBorder: number;\n}\n\n/**\n * Get color with lower limit and prometheus value\n * @returns {LowerLimit} new color value\n */\nexport const getLowerLimit = (coordinate: RegionClass, value: number | null): LowerLimit => {\n  const lowerLimit: LowerLimitClass[] = coordinate.lowerLimit;\n  const result: LowerLimit = { colorBack: '', colorBorder: '', sizeBorder: 0 };\n\n  if (coordinate.colorMode && value) {\n    for (const line of lowerLimit) {\n      const min: string = line.lowerLimitMin.replace('>', '');\n      const minFloat: number = parseFloat(min);\n      const maxFloat: number = parseFloat(line.lowerLimitMax);\n      if ((minFloat <= value || !line.lowerLimitMin) && (maxFloat >= value || !line.lowerLimitMax)) {\n        if (lowerLimit.length > 0) {\n          result.colorBack = coordinate.traceBack ? line.backColor : '';\n          result.colorBorder = coordinate.traceBorder ? line.borderColor : '';\n          result.sizeBorder = coordinate.traceBorder ? parseInt(line.sizeBorder, 10) : 0;\n          break;\n        }\n      }\n    }\n  } else {\n    if (lowerLimit.length > 0) {\n      result.colorBack = coordinate.traceBack ? lowerLimit[0].backColor : '';\n      result.colorBorder = coordinate.traceBorder ? lowerLimit[0].borderColor : '';\n      result.sizeBorder = coordinate.traceBorder ? parseInt(lowerLimit[0].sizeBorder, 10) : 0;\n    }\n  }\n  return result;\n};\n","import React from 'react';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions, CoordinateSpaceInitial } from 'types';\n\nimport { isNumFloat } from 'Functions/isNumFloat';\nimport DrawRectangleExtend from './drawRectangleExtend';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  /** color of border */\n  color: string;\n  /** coordinate space initial */\n  coordinateInitial: CoordinateSpaceInitial;\n  /** id region */\n  id: string;\n  /** if button SimplePanel is active, block all onClick region space */\n  //isEnabled: boolean;\n  /** if button Add Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddLinkIsActive: boolean;\n  /** if button Add Incurved Oriented Link of SimplePanel is active, block all onClick region space */\n  buttonAddIncurvedLinkIsActive: boolean;\n}\n\n// tslint:disable-next-line: no-empty-interface\ninterface State {\n  /** stock html for result */\n  resultHTML: JSX.Element;\n}\n\n/**\n * Draw inititial viewing space rectangle\n */\nexport default class DrawRectangle extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      resultHTML: <div></div>,\n    };\n  }\n\n  /**\n   * Transform coordinate percent for css\n   * @param {number} size value of coordinate\n   * @param {boolean} isMax true if x or y is max value\n   * @returns coordinate to percent\n   */\n  transformCoordonneesToPx = (size: number, isMax: boolean, position: number): number => {\n    /**\n     *\n     * V1 -100-100\n     *\n     */\n    // if (size > 100) {\n    //   size = 100;\n    // } else if (size < 0 && size < -100) {\n    //   size = -100;\n    // }\n    // if (size >= 0) {\n    //   size /= 2;\n    //   size = isMax ? 50 - size : 50 + size;\n    // } else {\n    //   size *= -1;\n    //   size /= 2;\n    //   size = 50 - size;\n    // }\n    // return size;\n\n    /**\n     *\n     * Correctif client 0-100\n     *\n     */\n    let result = 0;\n    // if (!this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   // console.log(position);\n    //   // console.log('-');\n    //   if (size > 100) {\n    //     // console.log('>100');\n    //     // console.log(position);\n    //     size = 100;\n    //   } else if (size < 0 && size < -100) {\n    //     // console.log('<-100');\n    //     // console.log(position);\n    //     size = -100;\n    //   }\n    //   if (size >= 0) {\n    //     // console.log('>0');\n    //     // console.log(position);\n    //     size /= 2;\n    //     size = isMax ? 50 - size : 50 + size;\n    //   } else {\n    //     // console.log('<0');\n    //     // console.log(position);\n    //     size *= -1;\n    //     size /= 2;\n    //     size = 50 - size;\n    //   }\n    //   result = size;\n    //   // console.log(result);\n    // } else {\n    //   // console.log(position);\n    //   // console.log('+');\n    //   if (position === 1) {\n    //     result = size;\n    //   } else if (position === 2) {\n    //     result = 100 - size;\n    //   } else if (position === 3) {\n    //     result = size;\n    //   } else if (position === 4) {\n    //     result = 100 - size;\n    //   }\n    // }\n    // console.log(result);\n    return result;\n  };\n\n  limitValueBorder = (value: number, position: number): number => {\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const heigthBackground = parseInt(this.props.options.baseMap.height, 10);\n    let result = value;\n    if (position === 1 || position === 2) {\n      //xMin + xMax\n      if (value > widthBackground) {\n        result = widthBackground;\n      }\n    } else if (position === 3 || position === 4) {\n      //yMin + yMax\n      if (value > heigthBackground) {\n        result = heigthBackground;\n      }\n    }\n    return result;\n  };\n\n  getPositionBorder = (value: number, position: number): number => {\n    const widthBackground = parseInt(this.props.options.baseMap.width, 10);\n    const heigthBackground = parseInt(this.props.options.baseMap.height, 10);\n    let result = 0;\n    if (position === 1) {\n      //xMin\n      result = value;\n    } else if (position === 2) {\n      //xMax\n      result = widthBackground - value;\n    } else if (position === 3) {\n      //yMax\n      result = heigthBackground - value;\n    } else if (position === 4) {\n      //yMin\n      result = value;\n    }\n    return result;\n  };\n\n  fillCoordinate = (): JSX.Element => {\n    const { options } = this.props;\n    const xMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMax, 10);\n    let mapItems: JSX.Element[];\n    mapItems = options.regionCoordinateSpace.map((line: RegionClass, index: number) => (\n      <DrawRectangleExtend\n        key={'drawRectangleExtend' + index.toString()}\n        uneCoor={line}\n        useLimit={false}\n        limit={options.coordinateSpaceInitial.coordinate}\n        onOptionsChange={this.props.onOptionsChange}\n        options={this.props.options}\n        data={this.props.data}\n        id={'region' + line.id.toString()}\n        //isEnabled={this.props.isEnabled}\n        buttonAddLinkIsActive={this.props.buttonAddLinkIsActive}\n        buttonAddIncurvedLinkIsActive={this.props.buttonAddIncurvedLinkIsActive}\n        widthInitialSpaceDefault={(xMaxInitialSpace - xMinInitialSpace).toString()}\n        heightInitialSpaceDefault={(yMaxInitialSpace - yMinInitialSpace).toString()}\n      />\n    ));\n    return <ul>{mapItems}</ul>;\n  };\n\n  /** creaate rectrangle */\n  createRectangle = (): void => {\n    const line: Coord4D = this.props.coordinateInitial.coordinate;\n    let pLeft: string;\n    let pRight: string;\n    let pTop: string;\n    let pBottom: string;\n    let xMin = 0;\n    let xMax = 0;\n    let yMin = 0;\n    let yMax = 0;\n    const pBorder: string = this.props.coordinateInitial.displayArea ? '3px solid ' + this.props.color : '';\n\n    xMin = isNumFloat(line.xMin) ? parseInt(line.xMin, 10) : 0;\n    xMax = isNumFloat(line.xMax) ? parseInt(line.xMax, 10) : 0;\n    yMin = isNumFloat(line.yMin) ? parseInt(line.yMin, 10) : 0;\n    yMax = isNumFloat(line.yMax) ? parseInt(line.yMax, 10) : 0;\n\n    // pLeft = this.transformCoordonneesToPx(xMin, false, 1).toString() + '%';\n    // pRight = this.transformCoordonneesToPx(xMax, true, 2).toString() + '%';\n    // pBottom = this.transformCoordonneesToPx(yMin, false, 3).toString() + '%';\n    // pTop = this.transformCoordonneesToPx(yMax, true, 4).toString() + '%';\n    pLeft = this.getPositionBorder(xMin, 1).toString() + 'px';\n    pRight = this.getPositionBorder(xMax, 2).toString() + 'px';\n    pTop = this.getPositionBorder(yMax, 3).toString() + 'px';\n    pBottom = this.getPositionBorder(yMin, 4).toString() + 'px';\n\n    // if (xMax >= 0) {\n    //   // console.log('pLeft xMax +');\n    //   pLeft = this.transformCoordonneesToPx(xMin, false, 1).toString() + 'px';\n    //   // console.log(pLeft);\n    //   // console.log('pRight xMax +');\n    //   pRight = this.transformCoordonneesToPx(xMax, true, 2).toString() + 'px';\n    //   // console.log(pRight);\n    // } else {\n    //   xMin = xMin * -1;\n    //   // console.log('pRight xMax -');\n    //   pRight = this.transformCoordonneesToPx(xMin, false, 1).toString() + 'px';\n    //   // console.log(pRight);\n    //   // console.log('pLeft xMax -');\n    //   pLeft = this.transformCoordonneesToPx(xMax, true, 2).toString() + 'px';\n    //   // console.log(pLeft);\n    // }\n    // if (yMax >= 0) {\n    //   // console.log('pBottom yMax +');\n    //   pBottom = this.transformCoordonneesToPx(yMin, false, 3).toString() + 'px';\n    //   // console.log(pBottom);\n    //   // console.log('pTop yMax +');\n    //   pTop = this.transformCoordonneesToPx(yMax, true, 4).toString() + 'px';\n    //   // console.log(pTop);\n    // } else {\n    //   yMin = yMin * -1;\n    //   // console.log('pTop yMax -');\n    //   pTop = this.transformCoordonneesToPx(yMin, false, 3).toString() + 'px';\n    //   // console.log(pTop);\n    //   // console.log('pBottom yMax -');\n    //   pBottom = this.transformCoordonneesToPx(yMax, true, 4).toString() + 'px';\n    //   // console.log(pBottom);\n    // }\n\n    const data: JSX.Element = (\n      <div\n        style={{\n          border: pBorder,\n          bottom: pBottom,\n          left: pLeft,\n          position: 'absolute',\n          right: pRight,\n          top: pTop,\n        }}\n        id={this.props.id}\n      >\n        {/* {this.fillCoordinate()} */}\n      </div>\n    );\n    this.setState({\n      resultHTML: data,\n    });\n  };\n\n  /** update state when props coordinateInitial change */\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      this.createRectangle();\n    }\n  }\n\n  /** create rectangle when component mount */\n  componentDidMount = () => {\n    this.createRectangle();\n  };\n\n  /**\n   * render\n   */\n  render() {\n    const test = {\n      position: 'absolute',\n      textAlign: 'center',\n      height: this.props.options.baseMap.height + 'px',\n      width: this.props.options.baseMap.width + 'px',\n    } as React.CSSProperties;\n\n    return <div style={test}>{this.state.resultHTML}</div>;\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { Tooltip } from '@grafana/ui';\nimport { SimpleOptions, Metric } from 'types';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { PointClass } from 'Models/PointClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  drawGraphicMarker: SelectableValue<string>;\n  shape: SelectableValue<string>;\n  size: string;\n  positionShapeX: string;\n  positionShapeY: string;\n  label: string;\n  color: string;\n  widthImage: number;\n  heightImage: number;\n  police: string;\n  sizePolice: string;\n  //style: Style;\n  idPoint: string;\n  name: string;\n  textObject: TextObject;\n  seuil: LowerLimitClass[];\n  valueMainMetric: string;\n  refMainMetric: string;\n  associateOrientedLinkIn: any[];\n  associateOrientedLinkOut: any[];\n  labelPositionX: string;\n  labelPositionY: string;\n  tooltipPosition: SelectableValue<any>;\n  auxiliaryMetrics: Metric[];\n  valuesAuxiliaryMetrics: string[];\n  linkUrl: LinkURLClass;\n  buttonAddLinkIsActive: boolean;\n  buttonAddIncurvedLinkIsActive: boolean;\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  positionXDefault: string;\n  positionYDefault: string;\n}\n\ninterface State {}\n\n/**\n * to do\n */\nexport default class DrawPoint extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * to do\n   * @param coordinateX\n   *\n   */\n  private defineLimitX(coordinateX: number) {\n    let result: number = coordinateX;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < -100) {\n    //     result = -100;\n    //   }\n    // }\n    // if (coordinateX > parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10)) {\n    //   console.log('trop grand');\n    //   result = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    // } else if (coordinateX < parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10)) {\n    //   console.log('trop petit');\n    //   result = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    // }\n    // console.log('x draw')\n    // console.log(result)\n    return result;\n  }\n\n  /**\n   * to do\n   * @param coordinateY\n   *\n   */\n  private defineLimitY(coordinateY: number) {\n    let result: number = coordinateY;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   //console.log(coordinateY);\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < -100) {\n    //     result = -100;\n    //   }\n    // }\n    // console.log('y draw')\n    // console.log(result);\n    return result;\n  }\n\n  /**\n   * to do\n   * @param defineCenter\n   * @param sizeGraphicMarkerPx\n   * @param shapeGraphicMarker\n   */\n  private definePositionX(positionX: number, initialSpace: Coord4D, size: number, shape: string): number {\n    // console.log('x avant');\n    // console.log(this.props.positionXDefault);\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const ratioX = parseInt(this.props.positionXDefault, 10) / parseInt(this.props.widthInitialSpaceDefault, 10);\n    //let x = this.defineLimitX(xMin + widthInitialSpace * ratioX) - (size + parseInt(this.defineBorderSize(), 10));\n    let x = Math.round(this.defineLimitX(xMin + widthInitialSpace * ratioX) - (size + parseInt(this.defineBorderSize(), 10)));\n    // console.log(xMin);\n    // console.log(widthInitialSpace);\n    // console.log(ratioX);\n    // console.log(this.props.widthInitialSpaceDefault);\n    // console.log('x après');\n    // console.log(x);\n    let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.forEach((point) => {\n      if (point.name === this.props.name) {\n        point.positionShapeX = x.toString();\n      }\n    });\n    this.props.options.arrayPoints = newArrayPoint;\n    // if (!defaultReferentiel) {\n    //   if (xMin < 0 && xMax < 0) {console.log('update x');\n    //     xMinPx = (xMax + 100) * (this.props.widthImage / 200);\n    //     xMaxPx = (xMin + 100) * (this.props.widthImage / 200);\n    //   } else {\n    //     xMinPx = (xMin + 100) * (this.props.widthImage / 200);\n    //     xMaxPx = (xMax + 100) * (this.props.widthImage / 200);\n    //   }\n    //   x =\n    //     xMinPx + (this.defineLimitX(positionX) * (widthInitialSpace / 200) + widthInitialSpace / 2) - (size + parseInt(this.defineBorderSize(), 10));\n    // } else {\n    //   xMinPx = xMin * (this.props.widthImage / 100);\n    //   xMaxPx = xMax * (this.props.widthImage / 100);\n    //   x = xMinPx + this.defineLimitX(positionX) * (widthInitialSpace / 100) - (size + parseInt(this.defineBorderSize(), 10));\n    // }\n    // x =\n    //   this.defineLimitX(xMin + positionX / (parseInt(this.props.widthInitialSpaceDefault, 10) / xMax) - xMin / 2) -\n    //   (size + parseInt(this.defineBorderSize(), 10));\n    // if (xMin > 0) {\n    //   x =\n    //     this.defineLimitX(positionX / (parseInt(this.props.widthInitialSpaceDefault, 10) / xMax) + xMin) -\n    //     (size + parseInt(this.defineBorderSize(), 10));\n    // } else {\n    //   x = this.defineLimitX(positionX / (parseInt(this.props.widthInitialSpaceDefault, 10) / xMax)) - (size + parseInt(this.defineBorderSize(), 10));\n    // }\n    // if (parseInt(this.props.widthInitialSpaceDefault, 10) - widthInitialSpace === 0) {\n    //   x =\n    //     this.defineLimitX(widthInitialSpace * positionX / parseInt(this.props.widthInitialSpaceDefault, 10)) -\n    //     (size + parseInt(this.defineBorderSize(), 10));\n    // } else {\n    //   x =\n    //     this.defineLimitX(xMin + widthInitialSpace * positionX / parseInt(this.props.widthInitialSpaceDefault, 10)) -\n    //     (size + parseInt(this.defineBorderSize(), 10));\n    // }\n    // this.props.options.arrayPoints.forEach(point => {\n    //   if (point.name === this.props.name) {\n    //     point.positionShapeX = x.toString();\n    //   }\n    // })\n    return x;\n  }\n\n  /**\n   * to do\n   * @param defineCenter\n   * @param sizeGraphicMarkerPx\n   * @param shapeGraphicMarker\n   */\n  private definePositionY(positionY: number, initialSpace: SelectableValue<RegionClass>, size: number, shapeGraphicMarker: string): number {\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const heightInitialSpace: number = yMax - yMin;\n    const ratioY =\n      (parseInt(this.props.heightInitialSpaceDefault, 10) - parseInt(this.props.positionYDefault, 10)) /\n      parseInt(this.props.heightInitialSpaceDefault, 10);\n    let y = Math.round(\n      this.defineLimitY(this.props.heightImage - yMax + heightInitialSpace * ratioY) - (size + parseInt(this.defineBorderSize(), 10))\n    );\n    let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.forEach((point) => {\n      if (point.name === this.props.name) {\n        point.positionShapeY = (this.props.heightImage - y).toString();\n      }\n    });\n    this.props.options.arrayPoints = newArrayPoint;\n    // let y = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioY;\n    // let yMinPx = 0;\n    // let yMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   if (yMin < 0 && yMax < 0) {\n    //     yMinPx = (yMax + 100) * (this.props.heightImage / 200);\n    //     yMaxPx = (yMin + 100) * (this.props.heightImage / 200);\n    //   } else {\n    //     yMinPx = (yMin + 100) * (this.props.heightImage / 200);\n    //     yMaxPx = (yMax + 100) * (this.props.heightImage / 200);\n    //   }\n    //   y =\n    //     this.defineValueToAdaptPositionYToInitialSpace(yMinPx, yMaxPx) +\n    //     (heightInitialSpace / 2 - this.defineLimitY(positionY) * (heightInitialSpace / 2 / 100) - (size + parseInt(this.defineBorderSize(), 10)));\n    // } else {\n    //   yMinPx = yMin * (this.props.heightImage / 100);\n    //   yMaxPx = yMax * (this.props.heightImage / 100);\n    // const heightInitialSpace: number = yMax - yMin;\n    //   y =\n    //     this.defineValueToAdaptPositionYToInitialSpace(yMinPx, yMaxPx) +\n    //     this.defineLimitY(100 - positionY) * (heightInitialSpace / 100) -\n    //     (size + parseInt(this.defineBorderSize(), 10));\n    // }\n    // y =\n    //   this.props.heightImage -\n    //   yMax +\n    //   this.defineLimitY(parseInt(this.props.heightInitialSpaceDefault, 10) - positionY) /\n    //     (parseInt(this.props.heightInitialSpaceDefault, 10) / yMax) -\n    //   (size + parseInt(this.defineBorderSize(), 10)) -\n    //   yMin / 2;\n    //y = this.defineLimitY(positionY / (parseInt(this.props.heightInitialSpaceDefault, 10) / yMax)) - (size + parseInt(this.defineBorderSize(), 10));\n    // if (parseInt(this.props.heightInitialSpaceDefault, 10) - heightInitialSpace === 0) {\n    //   y =\n    //     this.defineLimitY(heightInitialSpace * ((heightInitialSpace - positionY) / parseInt(this.props.heightInitialSpaceDefault, 10))) -\n    //     (size + parseInt(this.defineBorderSize(), 10));\n    // } else {\n    //   y =\n    //     this.defineLimitY(yMin + heightInitialSpace * ((heightInitialSpace - positionY) / parseInt(this.props.heightInitialSpaceDefault, 10))) -\n    //     (size + parseInt(this.defineBorderSize(), 10));\n    // }\n    // y =\n    //   this.defineLimitY(\n    //     this.props.heightImage -\n    //       yMax +\n    //       heightInitialSpace * ((parseInt(this.props.heightInitialSpaceDefault, 10) - positionY) / parseInt(this.props.heightInitialSpaceDefault, 10))\n    //   ) -\n    //   (size + parseInt(this.defineBorderSize(), 10));\n    // this.props.options.arrayPoints.forEach(point => {\n    //   if (point.name === this.props.name) {\n    //     point.positionShapeY = y.toString();\n    //   }\n    // })\n    return y;\n  }\n\n  // private defineValueToAdaptPositionYToInitialSpace = (yMinPx: number, yMaxPx: number): number => {\n  //   let valueToAdaptPositionToInitialSpace = 0;\n  //   if (yMaxPx > yMinPx) {\n  //     valueToAdaptPositionToInitialSpace = this.props.heightImage - yMaxPx;\n  //   } else {\n  //     valueToAdaptPositionToInitialSpace = this.props.heightImage - yMinPx;\n  //   }\n  //   return valueToAdaptPositionToInitialSpace;\n  // };\n\n  /**\n   * to do\n   * @param sizeGraphicMarker\n   * @param shapeGraphicMarker\n   */\n  private defineSizeGraphicMarkerPx(size: string, shape: string) {\n    if (this.props.shape.value === 'none') {\n      return 0;\n    } else {\n      // if (size === 'small') {\n      //   return 4;\n      // } else if (size === 'medium') {\n      //   return 6;\n      // } else if (size === 'large') {\n      //   return 8;\n      // } else {\n      //   return 0;\n      // }\n      return parseInt(size, 10) / 2;\n    }\n  }\n\n  defineBorderRadius = (): number => {\n    let result = 0;\n    const shape: string = this.props.shape.value || '';\n    if (shape === 'circle') {\n      result = 50;\n    }\n    // console.log('radius');\n    // console.log(shape);\n    // console.log(result);\n    return result;\n  };\n\n  defineRotate = (): string => {\n    let result = 'rotate(0deg)';\n    const shape: string = this.props.shape.value || '';\n    if (shape === 'diamond') {\n      result = 'rotate(45deg)';\n    }\n    // console.log('rotate');\n    // console.log(shape);\n    // console.log(result);\n    return result;\n  };\n\n  // definePadding = (size: number): string => {\n  //   let result = size + 'px';\n  //   if (this.props.shape.value === 'none') {\n  //     result = '0px';\n  //   }\n  //   console.log(result);\n  //   return result;\n  // };\n\n  /**\n   * to do\n   * @param positionX\n   * @param positionY\n   * @param color\n   * @param sizeGraphicMarkerPx\n   * @param shapeGraphicMarker\n   */\n  private drawPoint(drawGraphicMarker: string, size: number, positionShapeX: number, positionShapeY: number): any {\n    const valueToolTip: JSX.Element | null = this.defineContentTooltip('point');\n    const linkUrlPoint = this.props.linkUrl.followLink;\n    const borderRadius = this.defineBorderRadius() + 'px';\n    const rotate = this.defineRotate();\n    // const padding = this.definePadding(size);\n    // console.log(this.props.shape.value);\n    // console.log(borderRadius);\n    // console.log(rotate);\n    if (drawGraphicMarker === 'true') {\n      if (this.props.buttonAddLinkIsActive || this.props.buttonAddIncurvedLinkIsActive) {\n        if (valueToolTip === null) {\n          return (\n            <div\n              style={{\n                border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                backgroundColor: this.defineBackgroundColor(),\n                borderRadius: borderRadius,\n                padding: size + 'px',\n                position: 'absolute',\n                zIndex: 1000,\n                left: positionShapeX,\n                top: positionShapeY,\n                transform: rotate,\n              }}\n              id={this.props.idPoint}\n            ></div>\n          );\n        } else {\n          return (\n            <Tooltip key={'tooltip' + this.props.name} content={valueToolTip} placement={this.props.tooltipPosition.value}>\n              <div\n                style={{\n                  border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                  backgroundColor: this.defineBackgroundColor(),\n                  borderRadius: borderRadius,\n                  padding: size + 'px',\n                  position: 'absolute',\n                  zIndex: 1000,\n                  left: positionShapeX,\n                  top: positionShapeY,\n                  transform: rotate,\n                }}\n                id={this.props.idPoint}\n              ></div>\n            </Tooltip>\n          );\n        }\n      } else {\n        if (valueToolTip === null) {\n          return (\n            <div>\n              <a\n                href={linkUrlPoint}\n                style={{\n                  border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                  backgroundColor: this.defineBackgroundColor(),\n                  borderRadius: borderRadius,\n                  padding: size + 'px',\n                  position: 'absolute',\n                  zIndex: 1000,\n                  left: positionShapeX,\n                  top: positionShapeY,\n                  transform: rotate,\n                }}\n                id={this.props.idPoint}\n              ></a>\n            </div>\n          );\n        } else {\n          return (\n            <Tooltip key={'tooltip' + this.props.name} content={valueToolTip} placement={this.props.tooltipPosition.value}>\n              <a\n                href={linkUrlPoint}\n                style={{\n                  border: this.defineBorderSize() + 'px solid ' + this.defineBorderColor(),\n                  backgroundColor: this.defineBackgroundColor(),\n                  borderRadius: borderRadius,\n                  padding: size + 'px',\n                  position: 'absolute',\n                  zIndex: 1000,\n                  left: positionShapeX,\n                  top: positionShapeY,\n                  transform: rotate,\n                }}\n                id={this.props.idPoint}\n              ></a>\n            </Tooltip>\n          );\n        }\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n\n  private definePositionLabelX = (coordinateX: number): number => {\n    const positionLabel: number = parseInt(this.props.labelPositionX, 10);\n    let result = 0;\n    if (this.props.drawGraphicMarker.value === 'true') {\n      result = coordinateX + positionLabel + parseInt(this.props.size, 10) + 5;\n      // if (this.props.size.value === 'large') {\n      //   result = coordinateX + positionLabel + 18;\n      // } else if (this.props.size.value === 'medium') {\n      //   result = coordinateX + positionLabel + 14;\n      // }\n    } else {\n      result = coordinateX + positionLabel;\n    }\n    return result;\n  };\n\n  private definePositionLabelY = (coordinateY: number): number => {\n    const inverseAxeY = -1;\n    const positionLabel: number = parseInt(this.props.labelPositionY, 10) * inverseAxeY;\n    let result = 0;\n    if (this.props.drawGraphicMarker.value === 'true') {\n      result = coordinateY + positionLabel + parseInt(this.props.size, 10) + 5;\n      // if (this.props.size.value === 'large') {\n      //   result = coordinateY + positionLabel + 18;\n      // } else if (this.props.size.value === 'medium') {\n      //   result = coordinateY + positionLabel + 14;\n      // }\n    } else {\n      result = coordinateY + positionLabel;\n    }\n    return result;\n  };\n\n  private displayLabel(label: string, name: string, positionX: number, positionY: number, police: string) {\n    const valueToolTip: JSX.Element | null = this.defineContentTooltip('label');\n    if (valueToolTip === null) {\n      return (\n        <div\n          style={{\n            textDecoration: this.defineTextDecoration(),\n            fontStyle: this.defineFontStyle(),\n            fontWeight: this.defineFontWeight(),\n            fontSize: this.props.sizePolice,\n            fontFamily: police,\n            color: this.props.textObject.colorText || 'black',\n            position: 'absolute',\n            zIndex: 1000,\n            top: this.definePositionLabelY(positionY),\n            left: this.definePositionLabelX(positionX),\n          }}\n        >\n          {this.defineTextObject(this.props.valueMainMetric)}\n        </div>\n      );\n    } else {\n      return (\n        <Tooltip key={'tooltipLabel' + this.props.name} content={valueToolTip} placement={this.props.tooltipPosition.value}>\n          <div\n            style={{\n              textDecoration: this.defineTextDecoration(),\n              fontStyle: this.defineFontStyle(),\n              fontWeight: this.defineFontWeight(),\n              fontSize: this.props.sizePolice,\n              fontFamily: police,\n              color: this.props.textObject.colorText || 'black',\n              position: 'absolute',\n              zIndex: 1000,\n              top: this.definePositionLabelY(positionY),\n              left: this.definePositionLabelX(positionX),\n            }}\n          >\n            {this.defineTextObject(this.props.valueMainMetric)}\n          </div>\n        </Tooltip>\n      );\n    }\n  }\n\n  private defineMainMetric = (mainMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.valueGenerateObjectText.unit;\n    const decimal: string = this.props.textObject.valueGenerateObjectText.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(mainMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = mainMetric + ' ' + unit;\n    }\n    // console.log('result');\n    // console.log(result);\n    return result;\n  };\n\n  private defineAuxMetric = (auxMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.generateAuxiliaryElement.unit;\n    const decimal: string = this.props.textObject.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(auxMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = auxMetric + ' ' + unit;\n    }\n    return result;\n  };\n\n  private defineTextObject = (mainMetric: string): JSX.Element => {\n    let htmlTextObject: JSX.Element[] = [];\n    let htmlMainMetric: JSX.Element[] = [];\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n\n    const styleLabel = {\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n      textAlign: 'center',\n      margin: 0,\n      padding: '0 5px',\n    } as CSSProperties;\n\n    const styleMainMetric = {\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n      margin: 0,\n      padding: 0,\n      whiteSpace: 'nowrap',\n    } as CSSProperties;\n\n    if (!dislayTextObjectInTooltip) {\n      htmlTextObject.push(\n        <p key={'contentTextObject1' + this.props.name} style={styleLabel}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n\n    if (displayMainMetric) {\n      if (!displayMainMetricInTooltip) {\n        if (legendMainMetric) {\n          htmlMainMetric.push(\n            <p key={'contentTextObject2' + this.props.name} style={styleMainMetric}>\n              {legendMainMetric}\n            </p>\n          );\n        }\n        // Condition Display NaN none Point\n        htmlMainMetric.push(\n          <p key={'contentTextObject3' + this.props.name} style={styleMainMetric}>\n            {!isNaN(parseFloat(this.defineMainMetric(mainMetric))) && this.defineMainMetric(mainMetric)}\n          </p>\n        );\n      }\n    }\n\n    let styleMainDiv = {\n      backgroundColor: backColoTextObject,\n      border: '1px solid black',\n    } as CSSProperties;\n\n    if (!displayMainMetric || (displayMainMetric && displayMainMetricInTooltip)) {\n      styleMainDiv = {\n        backgroundColor: backColoTextObject,\n      };\n    }\n\n    return (\n      <div style={styleMainDiv}>\n        {htmlTextObject}\n        <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>{htmlMainMetric}</div>\n      </div>\n    );\n  };\n\n  private defineHtmlLinkTooltip = (): JSX.Element => {\n    let result: JSX.Element = <div></div>;\n    if (this.props.linkUrl.hoveringTooltipText !== '') {\n      result = (\n        <a\n          style={{ fontFamily: this.props.police, fontSize: '11px', marginBottom: '0px', textAlign: 'center' }}\n          href={this.props.linkUrl.hoveringTooltipLink}\n        >\n          {this.props.linkUrl.hoveringTooltipText}\n        </a>\n      );\n    }\n    return result;\n  };\n\n  private defineContentTooltip(localisation: string): JSX.Element | null {\n    const contentTooltip: JSX.Element[] = [];\n    const contentTooltipMainMetric: JSX.Element[] = [];\n    const contentTooltipAuxMetric: JSX.Element[] = [];\n    const contentTooltipAssociateLink: JSX.Element[] = [];\n    const arrayOrientedLinksIn: any[] = this.props.associateOrientedLinkIn;\n    const arrayOrientedLinksOut: any[] = this.props.associateOrientedLinkOut;\n    const refMainMetric: string = this.props.refMainMetric;\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n    const displayAuxMetricInTooltip: boolean = this.props.textObject.generateAuxiliaryElement.displayObjectInTooltip;\n    const addTextColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorTextElement;\n    const addBackColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorBackElement;\n    const textColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorTextElement;\n    const backColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorBackElement;\n    const legendAuxMetric: string = this.props.textObject.generateAuxiliaryElement.legendElement;\n\n    const styleMainTitle = {\n      fontFamily: this.props.police,\n      fontSize: '11px',\n      marginBottom: '0px',\n      textAlign: 'center',\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleMainMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleAuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    // const styleTitle2MainMetric = {\n    //   fontFamily: this.props.police,\n    //   fontSize: '10px',\n    //   marginTop: '5px',\n    //   marginLeft: '5px',\n    //   marginBottom: '0px',\n    //   color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    // } as React.CSSProperties;\n\n    const styleTitle2AuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentMainMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentAuxMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleAssociateLink = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n    } as React.CSSProperties;\n\n    const styleContentAssociateLink = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n    } as React.CSSProperties;\n\n    if (dislayTextObjectInTooltip) {\n      contentTooltip.push(\n        <p key={localisation + 'ContentTooltip1' + this.props.name} style={styleMainTitle}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n\n    if (displayMainMetric && displayMainMetricInTooltip) {\n      if (legendMainMetric) {\n        contentTooltipMainMetric.push(\n          <p key={localisation + 'ContentTooltip2' + this.props.name} style={styleTitleMainMetric}>\n            {legendMainMetric}\n          </p>\n        );\n      }\n\n      contentTooltipMainMetric.push(\n        <p key={localisation + 'ContentTooltip3' + this.props.name} style={styleTitleMainMetric}>\n          Main Metric\n        </p>\n      );\n\n      contentTooltipMainMetric.push(\n        <p key={localisation + 'ContentTooltip4' + this.props.name} style={styleContentMainMetrics}>\n          - Reference : {refMainMetric}\n        </p>\n      );\n\n      contentTooltipMainMetric.push(\n        <p key={localisation + 'ContentTooltip5' + this.props.name} style={styleContentMainMetrics}>\n          - Value : {this.defineMainMetric(this.props.valueMainMetric)}\n        </p>\n      );\n    }\n\n    if (displayAuxMetricInTooltip) {\n      if (legendAuxMetric) {\n        contentTooltipMainMetric.push(\n          <p key={localisation + 'ContentTooltip6' + this.props.name} style={styleTitleAuxMetric}>\n            {legendAuxMetric}\n          </p>\n        );\n      }\n      if (this.props.auxiliaryMetrics.length > 0) {\n        contentTooltipAuxMetric.push(\n          <p key={localisation + 'ContentTooltip7' + this.props.name} style={styleTitleAuxMetric}>\n            Auxiliary Metric\n          </p>\n        );\n        let index = 1;\n        this.props.auxiliaryMetrics.forEach((metric) => {\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip8' + this.props.name} style={styleTitle2AuxMetric}>\n              + Metric {index}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip9' + this.props.name} style={styleContentAuxMetrics}>\n              - Reference : {metric.refId}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip10' + this.props.name} style={styleContentAuxMetrics}>\n              - Value :{' '}\n              {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1]))) &&\n                this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1])}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip11' + this.props.name} style={styleContentAuxMetrics}>\n              - Key : {metric.key}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip12' + this.props.name} style={styleContentAuxMetrics}>\n              - KeyValue : {metric.keyValue}\n            </p>\n          );\n          contentTooltipAuxMetric.push(\n            <p key={index.toString() + localisation + 'ContentTooltip13' + this.props.name} style={styleContentAuxMetrics}>\n              - Type : {metric.manageValue}\n            </p>\n          );\n          index++;\n        });\n      }\n    }\n\n    if (arrayOrientedLinksIn.length !== 0) {\n      contentTooltipAssociateLink.push(\n        <p key={localisation + 'ContentTooltip14' + this.props.name} style={styleTitleAssociateLink}>\n          Associate Link In :\n        </p>\n      );\n      arrayOrientedLinksIn.forEach((orientedLinkIn) => {\n        const nameOrientedLink: string = orientedLinkIn.label || orientedLinkIn.name;\n        contentTooltipAssociateLink.push(\n          <p key={localisation + 'ContentTooltip15' + this.props.name + nameOrientedLink} style={styleContentAssociateLink}>\n            - {nameOrientedLink}\n          </p>\n        );\n      });\n    }\n\n    if (arrayOrientedLinksOut.length !== 0) {\n      contentTooltipAssociateLink.push(\n        <p key={localisation + 'ContentTooltip16' + this.props.name} style={styleTitleAssociateLink}>\n          Associate Link Out :\n        </p>\n      );\n      arrayOrientedLinksOut.forEach((orientedLinkOut) => {\n        const nameOrientedLink: string = orientedLinkOut.label || orientedLinkOut.name;\n        contentTooltipAssociateLink.push(\n          <p key={localisation + 'ContentTooltip17' + this.props.name + nameOrientedLink} style={styleContentAssociateLink}>\n            - {nameOrientedLink}\n          </p>\n        );\n        console.log(nameOrientedLink);\n      });\n    }\n    if (contentTooltip.length === 0 && contentTooltipMainMetric.length === 0 && contentTooltipAssociateLink.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        <div style={{ border: '1px solid black', padding: 0 }}>\n          {contentTooltip}\n          <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>\n            {contentTooltipMainMetric}\n          </div>\n          <div style={{ backgroundColor: addBackColorAuxMetric ? backColorAuxMetric : backColoTextObject, padding: '0 5px' }}>\n            {contentTooltipAuxMetric}\n          </div>\n          <div>{contentTooltipAssociateLink}</div>\n          {this.defineHtmlLinkTooltip()}\n        </div>\n      </div>\n    );\n  }\n\n  private defineBackgroundColor() {\n    let colorBackground = '';\n\n    if (this.props.seuil.length > 0) {\n      if (this.props.seuil[0].backColor !== '') {\n        colorBackground = this.props.seuil[0].backColor;\n      } else {\n        colorBackground = 'black';\n      }\n    } else {\n      colorBackground = 'black';\n    }\n\n    const valueMainMetric: number = parseInt(this.props.valueMainMetric, 10);\n    let index = 0;\n\n    this.props.seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBackground = level.backColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBackground = level.backColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBackground = level.backColor;\n      }\n\n      index++;\n    });\n\n    if (colorBackground === '') {\n      colorBackground = 'black';\n    }\n\n    return colorBackground;\n  }\n\n  private defineBorderColor() {\n    let colorBorder = '';\n\n    if (this.props.seuil.length > 0) {\n      if (this.props.seuil[0].borderColor !== '') {\n        colorBorder = this.props.seuil[0].borderColor;\n      } else {\n        colorBorder = 'black';\n      }\n    } else {\n      colorBorder = 'black';\n    }\n\n    const valueMainMetric: number = parseInt(this.props.valueMainMetric, 10);\n    let index = 0;\n\n    this.props.seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBorder = level.borderColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBorder = level.borderColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBorder = level.borderColor;\n      }\n\n      index++;\n    });\n\n    return colorBorder;\n  }\n\n  private defineBorderSize() {\n    let sizeBorder = '';\n\n    if (this.props.seuil.length > 0) {\n      sizeBorder = this.props.seuil[0].sizeBorder;\n    } else {\n      sizeBorder = '1';\n    }\n\n    const valueMainMetric: number = parseInt(this.props.valueMainMetric, 10);\n    let index = 0;\n\n    this.props.seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        sizeBorder = level.sizeBorder;\n      }\n      index++;\n    });\n\n    return sizeBorder;\n  }\n\n  private defineTextDecoration = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (): any => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  /**\n   * render\n   */\n  render() {\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const shape: string = this.props.shape.value || '';\n    const size: number = this.defineSizeGraphicMarkerPx(this.props.size || '', shape);\n    const valuePositionX: number = parseInt(this.props.positionShapeX, 10) || 0;\n    const valuePositionY: number = parseInt(this.props.positionShapeY, 10) || 0;\n    const positionShapeX: number = this.definePositionX(valuePositionX, initialSpace, size, shape);\n    const positionShapeY: number = this.definePositionY(valuePositionY, initialSpace, size, shape);\n    const label: string = this.props.label;\n    const name: string = this.props.name;\n    const drawGraphicMarker: string = this.props.drawGraphicMarker.value || '';\n    const police = this.props.police;\n\n    return (\n      <div key={this.props.name} style={{ cursor: 'pointer' }}>\n        {this.displayLabel(label, name, positionShapeX, positionShapeY, police)}\n        {this.drawPoint(drawGraphicMarker, size, positionShapeX, positionShapeY)}\n      </div>\n    );\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { Coord4D, RegionClass } from 'Models/RegionClass';\nimport { Tooltip } from '@grafana/ui';\nimport { SimpleOptions, Metric } from 'types';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { PointClass } from 'Models/PointClass';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  id: string;\n  pointAPositionX: string;\n  pointAPositionY: string;\n  pointBPositionX: string;\n  pointBPositionY: string;\n  colorA: string;\n  colorB: string;\n  orientationLink: string;\n  label: string;\n  associatePointIn: string;\n  associatePointOut: string;\n  associateRegionIn: string;\n  associateRegionOut: string;\n  widthImage: number;\n  heightImage: number;\n  name: string;\n  refMainMetricA: string;\n  refMainMetricB: string;\n  valueMainMetricA: string;\n  valueMainMetricB: string;\n  textObject: TextObject;\n  traceBorder: boolean;\n  seuil: LowerLimitClass[];\n  labelAPositionX: string;\n  labelAPositionY: string;\n  labelBPositionX: string;\n  labelBPositionY: string;\n  tooltipPositionA: SelectableValue<any>;\n  tooltipPositionB: SelectableValue<any>;\n  zIndex: number;\n  pointCPositionX: string;\n  pointCPositionY: string;\n  isIncurved: SelectableValue<boolean>;\n  auxiliaryMetrics: Metric[];\n  auxiliaryMetricsB: Metric[];\n  valuesAuxiliaryMetrics: string[];\n  valuesAuxiliaryMetricsB: string[];\n  police: string;\n  sizePolice: string;\n  linkUrl: LinkURLClass;\n  size: string;\n  widthInitialSpaceDefault: string;\n  heightInitialSpaceDefault: string;\n  positionXADefault: string;\n  positionYADefault: string;\n  positionXBDefault: string;\n  positionYBDefault: string;\n  positionXCDefault: string;\n  positionYCDefault: string;\n}\n\ninterface State {\n  //pointTest: JSX.Element;\n}\n\nexport default class DrawOrientedLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      //pointTest: <div></div>,\n    };\n  }\n\n  /**\n   * to do\n   * @param coordinateX\n   *\n   */\n  private defineLimitX(coordinateX: number) {\n    let result: number = coordinateX;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateX > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateX < -100) {\n    //     result = -100;\n    //   }\n    // }\n    return result;\n  }\n\n  /**\n   * to do\n   * @param coordinateY\n   *\n   */\n  private defineLimitY(coordinateY: number) {\n    let result: number = coordinateY;\n    // if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < 0) {\n    //     result = 0;\n    //   }\n    // } else {\n    //   if (coordinateY > 100) {\n    //     result = 100;\n    //   }\n    //   if (coordinateY < -100) {\n    //     result = -100;\n    //   }\n    // }\n    return result;\n  }\n\n  private synchroLinkX(positionX: number, name?: string): number {\n    //console.log(positionX);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const ratioX = positionX / parseInt(this.props.widthInitialSpaceDefault, 10);\n    let x = Math.round(this.defineLimitX(xMin + widthInitialSpace * ratioX));\n    let newArrayLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayLink.forEach((link) => {\n      if (link.name === this.props.name) {\n        if (name === 'xA') {\n          link.pointAPositionX = x.toString();\n        } else if (name === 'xB') {\n          link.pointBPositionX = x.toString();\n        } else if (name === 'xC') {\n          link.pointCPositionX = x.toString();\n        }\n      }\n    });\n    this.props.options.arrayOrientedLinks = newArrayLink;\n\n    // if (!defaultReferentiel) {\n    //   if (xMin < 0 && xMax < 0) {\n    //     xMinPx = (xMax + 100) * (this.props.widthImage / 200);\n    //     xMaxPx = (xMin + 100) * (this.props.widthImage / 200);\n    //   } else {\n    //     xMinPx = (xMin + 100) * (this.props.widthImage / 200);\n    //     xMaxPx = (xMax + 100) * (this.props.widthImage / 200);\n    //   }\n    //   x = xMinPx + (this.defineLimitX(positionX) * (widthInitialSpace / 200) + widthInitialSpace / 2);\n    // } else {\n    //   xMinPx = xMin * (this.props.widthImage / 100);\n    //   xMaxPx = xMax * (this.props.widthImage / 100);\n    //   const widthInitialSpace: number = xMaxPx - xMinPx;\n    //   x = xMinPx + this.defineLimitX(positionX) * (widthInitialSpace / 100);\n    // }\n    //x = this.defineLimitX(positionX / (parseInt(this.props.widthInitialSpaceDefault, 10) / xMax));\n    // if (parseInt(this.props.widthInitialSpaceDefault, 10) - widthInitialSpace === 0) {\n    //   x = this.defineLimitX(widthInitialSpace * positionX / parseInt(this.props.widthInitialSpaceDefault, 10));\n    // } else {\n    //   x = this.defineLimitX(xMin + widthInitialSpace * positionX / parseInt(this.props.widthInitialSpaceDefault, 10));\n    // }\n    return x;\n  }\n\n  private synchroLinkY(positionY: number, name?: string): number {\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    const heightInitialSpace: number = yMax - yMin;\n    const ratioY = (parseInt(this.props.heightInitialSpaceDefault, 10) - positionY) / parseInt(this.props.heightInitialSpaceDefault, 10);\n    let y = Math.round(this.defineLimitY(this.props.heightImage - yMax + heightInitialSpace * ratioY));\n    let newArrayLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayLink.forEach((link) => {\n      if (link.name === this.props.name) {\n        if (name === 'yA') {\n          link.pointAPositionY = (this.props.heightImage - y).toString();\n        } else if (name === 'yB') {\n          link.pointBPositionY = (this.props.heightImage - y).toString();\n        } else if (name === 'yC') {\n          link.pointCPositionY = (this.props.heightImage - y).toString();\n        }\n      }\n    });\n    this.props.options.arrayOrientedLinks = newArrayLink;\n\n    // if (!defaultReferentiel) {\n    //   if (yMin < 0 && yMax < 0) {\n    //     yMinPx = (yMax + 100) * (this.props.heightImage / 200);\n    //     yMaxPx = (yMin + 100) * (this.props.heightImage / 200);\n    //   } else {\n    //     yMinPx = (yMin + 100) * (this.props.heightImage / 200);\n    //     yMaxPx = (yMax + 100) * (this.props.heightImage / 200);\n    //   }\n    //   y =\n    //     this.defineValueToAdaptPositionYToInitialSpace(yMinPx, yMaxPx) +\n    //     (heightInitialSpace / 2 - this.defineLimitY(positionY) * (heightInitialSpace / 200));\n    // } else {\n    //   yMinPx = yMin * (this.props.heightImage / 100);\n    //   yMaxPx = yMax * (this.props.heightImage / 100);\n    //   const heightInitialSpace: number = yMaxPx - yMinPx;\n    //   y = this.defineValueToAdaptPositionYToInitialSpace(yMinPx, yMaxPx) + this.defineLimitY(100 - positionY) * (heightInitialSpace / 100);\n    // }\n    // y =\n    //   this.props.heightImage -\n    //   yMax +\n    //   this.defineLimitY(parseInt(this.props.heightInitialSpaceDefault, 10) - positionY) /\n    //     (parseInt(this.props.heightInitialSpaceDefault, 10) / yMax) -\n    //   yMin / 2;\n    // y = this.defineLimitY(positionY / (parseInt(this.props.heightInitialSpaceDefault, 10) / yMax));\n    // y = this.defineLimitY(\n    //   this.props.heightImage -\n    //     yMax +\n    //     heightInitialSpace * ((parseInt(this.props.heightInitialSpaceDefault, 10) - positionY) / parseInt(this.props.heightInitialSpaceDefault, 10))\n    // );\n    return y;\n  }\n\n  // private defineValueToAdaptPositionYToInitialSpace = (yMinPx: number, yMaxPx: number): number => {\n  //   let valueToAdaptPositionToInitialSpace = 0;\n  //   if (yMaxPx > yMinPx) {\n  //     valueToAdaptPositionToInitialSpace = this.props.heightImage - yMaxPx;\n  //   } else {\n  //     valueToAdaptPositionToInitialSpace = this.props.heightImage - yMinPx;\n  //   }\n  //   return valueToAdaptPositionToInitialSpace;\n  // };\n\n  private labelSynchroX = (whatLabel: string): number => {\n    let result = 0;\n    let labelMainMetric: HTMLElement | null = null;\n    if (whatLabel === 'A') {\n      labelMainMetric = document.getElementById('labelMainMetric' + this.props.id);\n    } else {\n      labelMainMetric = document.getElementById('labelMainMetricB' + this.props.id);\n    }\n    if (labelMainMetric?.offsetWidth) {\n      result = labelMainMetric?.offsetWidth / 2;\n    }\n    return result;\n  };\n\n  private labelSynchroY = (whatLabel: string): number => {\n    let result = 0;\n    let labelMainMetric: HTMLElement | null = null;\n    if (whatLabel === 'A') {\n      labelMainMetric = document.getElementById('labelMainMetric' + this.props.id);\n    } else {\n      labelMainMetric = document.getElementById('labelMainMetricB' + this.props.id);\n    }\n    if (labelMainMetric?.offsetHeight) {\n      result = labelMainMetric?.offsetHeight / 2;\n    }\n    return result;\n  };\n\n  /**\n   * to do\n   */\n  private defineParallelOrientedLinks = (): number[] => {\n    const arrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    const listParallelOrientedLinks: number[] = [];\n    listParallelOrientedLinks.push(parseInt(this.props.id, 10));\n    arrayOrientedLink.forEach((orientedLink) => {\n      if (this.props.name !== orientedLink.name) {\n        if (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '') {\n          //console.log('//1');\n          if (this.props.associateRegionIn === orientedLink.regionIn || this.props.associateRegionIn === orientedLink.regionOut) {\n            //console.log('//1.1');\n            if (this.props.associateRegionOut === orientedLink.regionIn || this.props.associateRegionOut === orientedLink.regionOut) {\n              //console.log('//1.2');\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n          //console.log('//2');\n          if (this.props.associatePointIn === orientedLink.pointIn || this.props.associatePointIn === orientedLink.pointOut) {\n            //console.log('//2.1');\n            if (this.props.associatePointOut === orientedLink.pointIn || this.props.associatePointOut === orientedLink.pointOut) {\n              //console.log('//2.2');\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n          //console.log('//3');\n          if (this.props.associateRegionIn === orientedLink.regionIn || this.props.associateRegionIn === orientedLink.regionOut) {\n            //console.log('//3.1');\n            if (this.props.associatePointOut === orientedLink.pointOut || this.props.associatePointOut === orientedLink.pointIn) {\n              //console.log('//3.2');\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        } else if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n          //console.log('//4');\n          if (this.props.associatePointIn === orientedLink.pointIn || this.props.associatePointIn === orientedLink.pointOut) {\n            //console.log('//4.1');\n            if (this.props.associateRegionOut === orientedLink.regionOut || this.props.associateRegionOut === orientedLink.regionIn) {\n              //console.log('//4.2');\n              listParallelOrientedLinks.push(orientedLink.id);\n            }\n          }\n        }\n      }\n    });\n    const listParallelOrientedLinkSorted: number[] = listParallelOrientedLinks.sort((a, b) => a - b);\n    return listParallelOrientedLinkSorted;\n  };\n\n  private defineCoor4DRegion = (region: RegionClass): Coord4D => {\n    let coor4D: Coord4D = { xMin: '0', xMax: '0', yMin: '0', yMax: '0' };\n    let xMin = 0;\n    let xMax = 0;\n    let yMin = 0;\n    let yMax = 0;\n    if (region.idSVG !== '') {\n      const heightPanel: number = parseInt(this.props.options.baseMap.height, 10);\n      const widthPanel: number = parseInt(this.props.options.baseMap.width, 10);\n      const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n      const xMinInitialSpace: number = parseInt(initialSpace.xMin, 10);\n      const xMinPx: number = (xMinInitialSpace + 100) * (widthPanel / 200);\n      const xMaxInitialSpace: number = parseInt(initialSpace.xMax, 10);\n      const xMaxPx: number = (xMaxInitialSpace + 100) * (widthPanel / 200);\n      const widthInitialSpace: number = xMaxPx - xMinPx;\n      const yMinInitialSpace: number = parseInt(initialSpace.yMin, 10);\n      const yMinPx: number = (yMinInitialSpace + 100) * (heightPanel / 200);\n      const yMaxInitialSpace: number = parseInt(initialSpace.yMax, 10);\n      const yMaxPx: number = (yMaxInitialSpace + 100) * (heightPanel / 200);\n      const heightInitialSpace: number = yMaxPx - yMinPx;\n      let regionSVGHtml: any;\n      if (this.props.options.baseMap.isUploaded) {\n        regionSVGHtml = document.getElementById(region.idSVG);\n      } else {\n        regionSVGHtml = document.getElementById('oct' + region.idSVG);\n      }\n      let width = 0;\n      let height = 0;\n      let xMinSVG = 0;\n      let xMaxSVG = 0;\n      let yMaxSVG = 0;\n      let yMinSVG = 0;\n      if (regionSVGHtml) {\n        if (regionSVGHtml.localName === 'rect') {\n          width = parseInt(regionSVGHtml.attributes['width'].nodeValue, 10);\n          height = parseInt(regionSVGHtml.attributes['height'].nodeValue, 10);\n          xMinSVG = parseInt(regionSVGHtml.attributes['x'].nodeValue, 10);\n          xMaxSVG = xMinSVG + width;\n          yMaxSVG = parseInt(regionSVGHtml.attributes['y'].nodeValue, 10);\n          yMinSVG = yMaxSVG + height;\n        } else if (regionSVGHtml.localName === 'ellipse') {\n          const rX: number = parseInt(regionSVGHtml.attributes['rx'].nodeValue, 10);\n          const rY: number = parseInt(regionSVGHtml.attributes['ry'].nodeValue, 10);\n          xMinSVG = parseInt(regionSVGHtml.attributes['cx'].nodeValue, 10) - rX;\n          xMaxSVG = parseInt(regionSVGHtml.attributes['cx'].nodeValue, 10) + rX;\n          yMinSVG = parseInt(regionSVGHtml.attributes['cy'].nodeValue, 10) + rY;\n          yMaxSVG = parseInt(regionSVGHtml.attributes['cy'].nodeValue, 10) - rY;\n        } else if (regionSVGHtml.localName === 'path') {\n          const allValues: string = regionSVGHtml.attributes['d'].nodeValue;\n          const arrayAllValues: string[] = allValues.split(' ');\n          let iX = -2;\n          let xMin = 1000000;\n          let xMax = 0;\n          let iY = -1;\n          let yMin = 1000000;\n          let yMax = 0;\n          for (let i = 0; i < arrayAllValues.length; i++) {\n            let valueToCheck = parseInt(arrayAllValues[i], 10);\n            if (i === iX + 3) {\n              if (valueToCheck < xMin) {\n                xMin = valueToCheck;\n              }\n              if (valueToCheck > xMax) {\n                xMax = valueToCheck;\n              }\n              iX = i;\n            }\n            if (i === iY + 3) {\n              if (valueToCheck < yMin) {\n                yMin = valueToCheck;\n              }\n              if (valueToCheck > yMax) {\n                yMax = valueToCheck;\n              }\n              iY = i;\n            }\n          }\n          xMinSVG = xMin;\n          xMaxSVG = xMax;\n          yMinSVG = yMax;\n          yMaxSVG = yMin;\n        }\n      }\n      const xMinSVGCoor: number = Math.round((xMinSVG - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n      const xMaxSVGCoor: number = Math.round((xMaxSVG - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n      const yMinSVGCoor: number = Math.round((yMinSVG - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2 * -1;\n      const yMaxSVGCoor: number = Math.round((yMaxSVG - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2 * -1;\n      xMin = xMinSVGCoor;\n      xMax = xMaxSVGCoor;\n      yMin = yMinSVGCoor;\n      yMax = yMaxSVGCoor;\n\n      if (xMin < 0 && xMax < 0) {\n        xMin = xMaxSVGCoor;\n        xMax = xMinSVGCoor;\n      }\n      if (yMin < 0 && yMax < 0) {\n        yMin = yMaxSVGCoor;\n        yMax = yMinSVGCoor;\n      }\n    } else {\n      xMin = parseInt(region.coords.xMin, 10);\n      xMax = parseInt(region.coords.xMax, 10);\n      yMin = parseInt(region.coords.yMin, 10);\n      yMax = parseInt(region.coords.yMax, 10);\n    }\n    coor4D = { xMin: xMin.toString(), xMax: xMax.toString(), yMin: yMin.toString(), yMax: yMax.toString() };\n    return coor4D;\n  };\n\n  getPaddingPoint = (point: PointClass, idMultiLink: number): number => {\n    let result = 0;\n    const pointHtml = document.getElementById(point.name);\n    if (pointHtml) {\n      result = parseInt(pointHtml.style.padding.substring(-2), 10);\n      if (idMultiLink === 2) {\n        result = result / 2;\n      }\n    }\n    return result;\n  };\n\n  private ifMultiLinkWithRegionDefineX = (isIn: boolean, idMultiLink: number): number => {\n    let xResult = 0;\n    const arrayRegions = this.props.options.regionCoordinateSpace;\n    const arrayPoints = this.props.options.arrayPoints;\n    let xMinIn = 0;\n    let xMaxIn = 0;\n    let xMinOut = 0;\n    let xMaxOut = 0;\n    let yMinIn = 0;\n    let yMaxIn = 0;\n    let yMinOut = 0;\n    let yMaxOut = 0;\n    let xMidIn = 0;\n    let xMidOut = 0;\n    let yMidIn = 0;\n    let yMidOut = 0;\n\n    if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associateRegionOut !== '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinIn = parseInt(this.props.pointAPositionX, 10);\n      xMaxIn = parseInt(this.props.pointAPositionX, 10);\n      yMinIn = parseInt(this.props.pointAPositionY, 10);\n      yMaxIn = parseInt(this.props.pointAPositionY, 10);\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinOut = parseInt(this.props.pointBPositionX, 10);\n      xMaxOut = parseInt(this.props.pointBPositionX, 10);\n      yMinOut = parseInt(this.props.pointBPositionY, 10);\n      yMaxOut = parseInt(this.props.pointBPositionY, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinOut = parseInt(this.props.pointBPositionX, 10);\n      xMaxOut = parseInt(this.props.pointBPositionX, 10);\n      yMinOut = parseInt(this.props.pointBPositionY, 10);\n      yMaxOut = parseInt(this.props.pointBPositionY, 10);\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associatePointOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinIn = parseInt(this.props.pointAPositionX, 10);\n      xMaxIn = parseInt(this.props.pointAPositionX, 10);\n      yMinIn = parseInt(this.props.pointAPositionY, 10);\n      yMaxIn = parseInt(this.props.pointAPositionY, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n    } else {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    }\n\n    xMidIn = (xMinIn + xMaxIn) / 2;\n    xMidOut = (xMinOut + xMaxOut) / 2;\n    yMidIn = (yMinIn + yMaxIn) / 2;\n    yMidOut = (yMinOut + yMaxOut) / 2;\n\n    if (isIn) {\n      if (idMultiLink === 0) {\n        if (yMidIn > yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x1');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x2');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x3');\n            xResult = xMinIn;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x4');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x5');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x6');\n            xResult = xMinIn;\n          }\n        } else if (yMidIn === yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x7');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x8');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x9');\n            xResult = xMinIn;\n          }\n        }\n      } else if (idMultiLink === 1) {\n        if (yMidIn > yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x10');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x11');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x12');\n            xResult = xMaxIn;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x13');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x14');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x15');\n            xResult = xMaxIn;\n          }\n        } else if (yMidIn === yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x16');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x17');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x18');\n            xResult = xMinIn;\n          }\n        }\n      } else if (idMultiLink === 2) {\n        if (yMidIn > yMidOut) {\n          if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n            //console.log('x19');\n            xResult = (xMinIn + xMaxIn) / 2;\n          } else if (xMidIn > xMidOut) {\n            //console.log('x20');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x21');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              //console.log('xmin');\n              xResult = xMinIn;\n            } else {\n              //console.log('xmax');\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x22');\n            xResult = (xMinIn + xMaxIn) / 2;\n          }\n        } else if (yMidIn < yMidOut) {\n          if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n            //console.log('x23');\n            xResult = (xMinIn + xMaxIn) / 2;\n          } else if (xMidIn > xMidOut) {\n            //console.log('x24');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x25');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x26');\n            xResult = (xMinIn + xMaxIn) / 2;\n          }\n        } else if (yMidIn === yMidOut) {\n          if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n            //console.log('x27');\n            xResult = (xMinIn + xMaxIn) / 2;\n          } else if (xMidIn > xMidOut) {\n            //console.log('x28');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMaxIn;\n            } else {\n              xResult = xMinIn;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x29');\n            if (xMinIn < 0 && xMaxIn < 0) {\n              xResult = xMinIn;\n            } else {\n              xResult = xMaxIn;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x30');\n            xResult = xMinIn;\n          }\n        }\n      }\n    } else {\n      if (idMultiLink === 0) {\n        if (yMidIn > yMidOut) {\n          //console.log('x31');\n          if (xMidIn > xMidOut) {\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x32');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x33');\n            xResult = xMinOut;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x34');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x35');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x36');\n            xResult = xMinOut;\n          }\n        } else if (yMidIn === yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x37');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x38');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x39');\n            xResult = xMinOut;\n          }\n        }\n      } else if (idMultiLink === 1) {\n        if (yMidIn > yMidOut) {\n          //console.log('x40');\n          if (xMidIn > xMidOut) {\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x41');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x42');\n            xResult = xMaxOut;\n          }\n        } else if (yMidIn < yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x43');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x44');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x45');\n            xResult = xMaxOut;\n          }\n        } else if (yMidIn === yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x46');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x47');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x48');\n            xResult = xMinOut;\n          }\n        }\n      } else if (idMultiLink === 2) {\n        if (yMidIn > yMidOut) {\n          if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n            //console.log('x49');\n            xResult = (xMinOut + xMaxOut) / 2;\n          } else if (xMidIn > xMidOut) {\n            //console.log('x50');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x51');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x52');\n            xResult = (xMinOut + xMaxOut) / 2;\n          }\n        } else if (yMidIn < yMidOut) {\n          if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n            //console.log('x53');\n            xResult = (xMinOut + xMaxOut) / 2;\n          } else if (xMidIn > xMidOut) {\n            //console.log('x54');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x55');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x56');\n            xResult = (xMinOut + xMaxOut) / 2;\n          }\n        } else if (yMidIn === yMidOut) {\n          if (xMidIn > xMidOut) {\n            //console.log('x57');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMinOut;\n            } else {\n              xResult = xMaxOut;\n            }\n          } else if (xMidIn < xMidOut) {\n            //console.log('x58');\n            if (xMinOut < 0 && xMaxOut < 0) {\n              xResult = xMaxOut;\n            } else {\n              xResult = xMinOut;\n            }\n          } else if (xMidIn === xMidOut) {\n            //console.log('x59');\n            xResult = xMinOut;\n          }\n        }\n      }\n    }\n\n    return xResult;\n  };\n\n  private ifMultiLinkWithRegionDefineY = (isIn: boolean, idMultiLink: number): number => {\n    let yResult = 0;\n    const arrayPoints = this.props.options.arrayPoints;\n    const arrayRegions = this.props.options.regionCoordinateSpace;\n    let xMinIn = 0;\n    let xMaxIn = 0;\n    let xMinOut = 0;\n    let xMaxOut = 0;\n    let yMinIn = 0;\n    let yMaxIn = 0;\n    let yMinOut = 0;\n    let yMaxOut = 0;\n    let xMidIn = 0;\n    let xMidOut = 0;\n    let yMidIn = 0;\n    let yMidOut = 0;\n\n    if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associateRegionOut !== '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinIn = parseInt(this.props.pointAPositionX, 10);\n      xMaxIn = parseInt(this.props.pointAPositionX, 10);\n      yMinIn = parseInt(this.props.pointAPositionY, 10);\n      yMaxIn = parseInt(this.props.pointAPositionY, 10);\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n      xMinOut = parseInt(this.props.pointBPositionX, 10);\n      xMaxOut = parseInt(this.props.pointBPositionX, 10);\n      yMinOut = parseInt(this.props.pointBPositionY, 10);\n      yMaxOut = parseInt(this.props.pointBPositionY, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinOut = parseInt(this.props.pointBPositionX, 10);\n      xMaxOut = parseInt(this.props.pointBPositionX, 10);\n      yMinOut = parseInt(this.props.pointBPositionY, 10);\n      yMaxOut = parseInt(this.props.pointBPositionY, 10);\n    } else if (this.props.associatePointIn === '' && this.props.associateRegionIn === '' && this.props.associatePointOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n      xMinIn = parseInt(this.props.pointAPositionX, 10);\n      xMaxIn = parseInt(this.props.pointAPositionX, 10);\n      yMinIn = parseInt(this.props.pointAPositionY, 10);\n      yMaxIn = parseInt(this.props.pointAPositionY, 10);\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n      arrayPoints.forEach((point) => {\n        let paddingPoint = this.getPaddingPoint(point, idMultiLink);\n        let name: string = point.label || point.name;\n        if (name === this.props.associatePointIn) {\n          xMinIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinIn < 0 && xMaxIn < 0) {\n            xMinIn = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxIn = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinIn < 0 && yMaxIn < 0) {\n            yMinIn = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxIn = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n\n        if (name === this.props.associatePointOut) {\n          xMinOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          xMaxOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n          yMinOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          yMaxOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n\n          if (xMinOut < 0 && xMaxOut < 0) {\n            xMinOut = parseInt(point.positionShapeX, 10) + paddingPoint;\n            xMaxOut = parseInt(point.positionShapeX, 10) - paddingPoint;\n          }\n\n          if (yMinOut < 0 && yMaxOut < 0) {\n            yMinOut = parseInt(point.positionShapeY, 10) + paddingPoint;\n            yMaxOut = parseInt(point.positionShapeY, 10) - paddingPoint;\n          }\n        }\n      });\n    } else {\n      arrayRegions.forEach((region) => {\n        if (region.label === this.props.associateRegionIn) {\n          xMinIn = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxIn = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinIn = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxIn = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n\n        if (region.label === this.props.associateRegionOut) {\n          xMinOut = parseInt(this.defineCoor4DRegion(region).xMin, 10);\n          xMaxOut = parseInt(this.defineCoor4DRegion(region).xMax, 10);\n          yMinOut = parseInt(this.defineCoor4DRegion(region).yMin, 10);\n          yMaxOut = parseInt(this.defineCoor4DRegion(region).yMax, 10);\n        }\n      });\n    }\n\n    xMidIn = (xMinIn + xMaxIn) / 2;\n    xMidOut = (xMinOut + xMaxOut) / 2;\n    yMidIn = (yMinIn + yMaxIn) / 2;\n    yMidOut = (yMinOut + yMaxOut) / 2;\n\n    if (isIn) {\n      if (idMultiLink === 0) {\n        if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n          if (yMidIn > yMidOut) {\n            //console.log('y1');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y2');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y3');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          }\n        } else if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y4');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y5');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y6');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y7');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y8');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y9');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          }\n        } else if (xMidIn === xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y10');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y11');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          }\n        }\n      } else if (idMultiLink === 1) {\n        if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n          if (yMidIn > yMidOut) {\n            //console.log('y12');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y13');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y14');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          }\n        } else if (xMidIn > xMidOut) {\n          //console.log('y16');\n          if (yMidIn > yMidOut) {\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y17');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y18');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y19');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y20');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y21');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          }\n        } else if (xMidIn === xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y22');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y23');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          }\n        }\n      } else if (idMultiLink === 2) {\n        if ((xMidOut > xMinIn && xMidOut < xMaxIn) || (xMidOut < xMinIn && xMidOut > xMaxIn)) {\n          if (yMidIn > yMidOut) {\n            //console.log('y24');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y25');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y26');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          }\n        } else if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y28');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y29');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y30');\n            yResult = (yMinIn + yMaxIn) / 2;\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y31');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y32');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y33');\n            yResult = (yMinIn + yMaxIn) / 2;\n          }\n        } else if (xMidIn === xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y34');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMaxIn;\n            } else {\n              yResult = yMinIn;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y35');\n            if (yMinIn < 0 && yMaxIn < 0) {\n              yResult = yMinIn;\n            } else {\n              yResult = yMaxIn;\n            }\n          }\n        }\n      }\n    } else {\n      if (idMultiLink === 0) {\n        if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n          if (yMidIn > yMidOut) {\n            //console.log('y37');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y38');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y39');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          }\n        } else if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y40');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y41');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y42');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y43');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y44');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y45');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          }\n        } else if (xMidIn === xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y46');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y47');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          }\n        }\n      } else if (idMultiLink === 1) {\n        if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n          if (yMidIn > yMidOut) {\n            //console.log('y49');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y50');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y51');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          }\n        } else if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y52');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y53');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y54');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y55');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y56');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y57');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          }\n        } else if (xMidIn === xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y58');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y59');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          }\n        }\n      } else if (idMultiLink === 2) {\n        if ((xMidIn > xMinOut && xMidIn < xMaxOut) || (xMidIn < xMinOut && xMidIn > xMaxOut)) {\n          if (yMidIn > yMidOut) {\n            //console.log('y61');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y62');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y64');\n            yResult = (yMinOut + yMaxOut) / 2;\n          }\n        } else if (xMidIn > xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y65');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y66');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y67');\n            yResult = (yMinOut + yMaxOut) / 2;\n          }\n        } else if (xMidIn < xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y68');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y69');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          } else if (yMidIn === yMidOut) {\n            //console.log('y70');\n            yResult = (yMinOut + yMaxOut) / 2;\n          }\n        } else if (xMidIn === xMidOut) {\n          if (yMidIn > yMidOut) {\n            //console.log('y71');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMinOut;\n            } else {\n              yResult = yMaxOut;\n            }\n          } else if (yMidIn < yMidOut) {\n            //console.log('y72');\n            if (yMinOut < 0 && yMaxOut < 0) {\n              yResult = yMaxOut;\n            } else {\n              yResult = yMinOut;\n            }\n          }\n        }\n      }\n    }\n    return yResult;\n  };\n\n  // private ifMultiLinkWithPointDefineX = (isIn: boolean, idMultiLink: number): number => {\n  //   let xResult = 0;\n  //   const arrayPoints: PointClass[] = this.props.options.arrayPoints;\n  //   let xIn = 0;\n  //   let yIn = 0;\n  //   let xOut = 0;\n  //   let yOut = 0;\n  //   const ajustPosition = 5;\n  //   arrayPoints.forEach(point => {\n  //     let name: string = point.label || point.name;\n  //     if (name === this.props.associatePointIn) {\n  //       xIn = parseInt(point.positionShapeX, 10);\n  //       yIn = parseInt(point.positionShapeY, 10);\n  //     }\n  //     if (name === this.props.associatePointOut) {\n  //       xOut = parseInt(point.positionShapeX, 10);\n  //       yOut = parseInt(point.positionShapeY, 10);\n  //     }\n  //   });\n\n  //   const angleRadian: number = Math.atan2(yIn - yOut, xIn - xOut);\n  //   const angleDegre: number = (angleRadian * 180) / Math.PI;\n\n  //   if (isIn) {\n  //     if (idMultiLink === 0) {\n  //       if (angleDegre === 0 || angleDegre === 180 || angleDegre === -180) {\n  //         xResult = xIn;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         xResult = xIn - ajustPosition * (angleDegre / 90);\n  //       } else if (angleDegre === 90) {\n  //         xResult = xIn + ajustPosition;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         xResult = xIn + ajustPosition * (((angleDegre - 180) / 90) * -1);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         xResult = xIn + ajustPosition * ((angleDegre / 90) * -1);\n  //       } else if (angleDegre === -90) {\n  //         xResult = xIn + ajustPosition;\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         xResult = xIn - ajustPosition * ((angleDegre + 180) / 90);\n  //       }\n  //     } else if (idMultiLink === 1) {\n  //       if (angleDegre === 0 || angleDegre === 180 || angleDegre === -180) {\n  //         xResult = xIn;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         xResult = xIn + ajustPosition * (angleDegre / 90);\n  //       } else if (angleDegre === 90) {\n  //         xResult = xIn - ajustPosition;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         xResult = xIn - ajustPosition * (((angleDegre - 180) / 90) * -1);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         xResult = xIn - ajustPosition * ((angleDegre / 90) * -1);\n  //       } else if (angleDegre === -90) {\n  //         xResult = xIn - ajustPosition;\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         xResult = xIn + ajustPosition * ((angleDegre + 180) / 90);\n  //       }\n  //     } else if (idMultiLink === 2) {\n  //       xResult = xIn;\n  //     }\n  //   } else {\n  //     if (idMultiLink === 0) {\n  //       if (angleDegre === 0 || angleDegre === 180 || angleDegre === -180) {\n  //         xResult = xOut;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         xResult = xOut - ajustPosition * (angleDegre / 90);\n  //       } else if (angleDegre === 90) {\n  //         xResult = xOut + ajustPosition;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         xResult = xOut + ajustPosition * (((angleDegre - 180) / 90) * -1);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         xResult = xOut + ajustPosition * ((angleDegre / 90) * -1);\n  //       } else if (angleDegre === -90) {\n  //         xResult = xOut + ajustPosition;\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         xResult = xOut - ajustPosition * ((angleDegre + 180) / 90);\n  //       }\n  //     } else if (idMultiLink === 1) {\n  //       if (angleDegre === 0 || angleDegre === 180 || angleDegre === -180) {\n  //         xResult = xOut;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         xResult = xOut + ajustPosition * (angleDegre / 90);\n  //       } else if (angleDegre === 90) {\n  //         xResult = xOut - ajustPosition;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         xResult = xOut - ajustPosition * (((angleDegre - 180) / 90) * -1);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         xResult = xOut - ajustPosition * ((angleDegre / 90) * -1);\n  //       } else if (angleDegre === -90) {\n  //         xResult = xOut - ajustPosition;\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         xResult = xOut + ajustPosition * ((angleDegre + 180) / 90);\n  //       }\n  //     } else if (idMultiLink === 2) {\n  //       xResult = xOut;\n  //     }\n  //   }\n  //   return xResult;\n  // };\n\n  // private ifMultiLinkWithPointDefineY = (isIn: boolean, idMultiLink: number): number => {\n  //   let yResult = 0;\n  //   const arrayPoints: PointClass[] = this.props.options.arrayPoints;\n  //   let xIn = 0;\n  //   let yIn = 0;\n  //   let xOut = 0;\n  //   let yOut = 0;\n  //   const ajustPosition = 5;\n  //   arrayPoints.forEach(point => {\n  //     let name: string = point.label || point.name;\n  //     if (name === this.props.associatePointIn) {\n  //       xIn = parseInt(point.positionShapeX, 10);\n  //       yIn = parseInt(point.positionShapeY, 10);\n  //     }\n  //     if (name === this.props.associatePointOut) {\n  //       xOut = parseInt(point.positionShapeX, 10);\n  //       yOut = parseInt(point.positionShapeY, 10);\n  //     }\n  //   });\n\n  //   const angleRadian: number = Math.atan2(yIn - yOut, xIn - xOut);\n  //   const angleDegre: number = (angleRadian * 180) / Math.PI;\n\n  //   if (isIn) {\n  //     if (idMultiLink === 0) {\n  //       if (angleDegre === 0) {\n  //         yResult = yIn + ajustPosition;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         yResult = yIn + ajustPosition * (((angleDegre - 90) / 90) * -1);\n  //       } else if (angleDegre === 90 || angleDegre === -90) {\n  //         yResult = yIn;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         yResult = yIn + ajustPosition * ((angleDegre - 90) / 90);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         yResult = yIn + ajustPosition * ((angleDegre + 90) / 90);\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         yResult = yIn + ajustPosition * (((angleDegre + 90) / 90) * -1);\n  //       } else if (angleDegre === 180 || angleDegre === -180) {\n  //         yResult = yIn + ajustPosition;\n  //       }\n  //     } else if (idMultiLink === 1) {\n  //       if (angleDegre === 0) {\n  //         yResult = yIn - ajustPosition;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         yResult = yIn - ajustPosition * (((angleDegre - 90) / 90) * -1);\n  //       } else if (angleDegre === 90 || angleDegre === -90) {\n  //         yResult = yIn;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         yResult = yIn - ajustPosition * ((angleDegre - 90) / 90);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         yResult = yIn - ajustPosition * ((angleDegre + 90) / 90);\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         yResult = yIn - ajustPosition * (((angleDegre + 90) / 90) * -1);\n  //       } else if (angleDegre === 180 || angleDegre === -180) {\n  //         yResult = yIn - ajustPosition;\n  //       }\n  //     } else if (idMultiLink === 2) {\n  //       yResult = yIn;\n  //     }\n  //   } else {\n  //     if (idMultiLink === 0) {\n  //       if (angleDegre === 0) {\n  //         yResult = yOut + ajustPosition;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         yResult = yOut + ajustPosition * (((angleDegre - 90) / 90) * -1);\n  //       } else if (angleDegre === 90 || angleDegre === -90) {\n  //         yResult = yOut;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         yResult = yOut + ajustPosition * ((angleDegre - 90) / 90);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         yResult = yOut + ajustPosition * ((angleDegre + 90) / 90);\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         yResult = yOut + ajustPosition * (((angleDegre + 90) / 90) * -1);\n  //       } else if (angleDegre === 180 || angleDegre === -180) {\n  //         yResult = yOut + ajustPosition;\n  //       }\n  //     } else if (idMultiLink === 1) {\n  //       if (angleDegre === 0) {\n  //         yResult = yOut - ajustPosition;\n  //       } else if (angleDegre > 0 && angleDegre < 90) {\n  //         yResult = yOut - ajustPosition * (((angleDegre - 90) / 90) * -1);\n  //       } else if (angleDegre === 90 || angleDegre === -90) {\n  //         yResult = yOut;\n  //       } else if (angleDegre > 90 && angleDegre < 180) {\n  //         yResult = yOut - ajustPosition * ((angleDegre - 90) / 90);\n  //       } else if (angleDegre < 0 && angleDegre > -90) {\n  //         yResult = yOut - ajustPosition * ((angleDegre + 90) / 90);\n  //       } else if (angleDegre < -90 && angleDegre > -180) {\n  //         yResult = yOut - ajustPosition * (((angleDegre + 90) / 90) * -1);\n  //       } else if (angleDegre === 180 || angleDegre === -180) {\n  //         yResult = yOut - ajustPosition;\n  //       }\n  //     } else if (idMultiLink === 2) {\n  //       yResult = yOut;\n  //     }\n  //   }\n  //   return yResult;\n  // };\n\n  // private getX = (labelPoint: string): number => {\n  //   let result = 0;\n  //   const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n  //   for (const point of arrayPoint) {\n  //     if (point.label === labelPoint || point.name === labelPoint) {\n  //       result = this.synchroLinkX(parseInt(point.positionShapeX, 10));\n  //     }\n  //   }\n  //   return result;\n  // };\n\n  // private getY = (labelPoint: string): number => {\n  //   let result = 0;\n  //   const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n  //   for (const point of arrayPoint) {\n  //     if (point.label === labelPoint || point.name === labelPoint) {\n  //       result = this.synchroLinkY(parseInt(point.positionShapeY, 10));\n  //     }\n  //   }\n  //   return result;\n  // };\n\n  /**\n   * to do\n   */\n  private drawLink(xA0: number, yA0: number, xB0: number, yB0: number, xCByClick0: number, yCByClick0: number, orientationLink: string) {\n    const listParallelOrientedLinks: number[] = this.defineParallelOrientedLinks();\n    let xA = 0;\n    let yA = 0;\n    let xB = 0;\n    let yB = 0;\n    let xCByClick = 0;\n    let yCByClick = 0;\n\n    if (listParallelOrientedLinks.length > 1) {\n      //console.log('multi');\n      let indexOrientedLink = 0;\n      listParallelOrientedLinks.forEach((index) => {\n        if (index === parseInt(this.props.id, 10)) {\n          if (indexOrientedLink === 0) {\n            if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n              //console.log('m0-1');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 0));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 0));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 0));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 0));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '') {\n              //console.log('m0-2');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 0));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 0));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 0));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 0));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n              //console.log('m0-3');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 0));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 0));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 0));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 0));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n              //console.log('m0-4');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 0));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 0));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 0));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 0));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            }\n          } else if (indexOrientedLink === 1) {\n            if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n              //console.log('m1-1');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 1));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 1));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 1));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 1));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '') {\n              //console.log('m1-2');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 1));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 1));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 1));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 1));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n              //console.log('m1-3');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 1));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 1));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 1));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 1));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n              //console.log('m1-4');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 1));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 1));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 1));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 1));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            }\n          } else if (indexOrientedLink === 2) {\n            if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n              //console.log('m2-1');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '') {\n              //console.log('m2-2');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n              //console.log('m2-3');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n              //console.log('m2-4');\n              xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n              yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n              xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n              yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n              xCByClick = xCByClick0 || (xA + xB) / 2;\n              yCByClick = yCByClick0 || (yA + yB) / 2;\n            }\n          }\n        }\n        indexOrientedLink++;\n      });\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      //console.log('1');\n      xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n      yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n      xB = xB0;\n      yB = yB0;\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associateRegionOut !== '' && this.props.associateRegionIn === '' && this.props.associatePointIn === '') {\n      //console.log('2');\n      xA = xA0;\n      yA = yA0;\n      xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n      yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associateRegionIn !== '' && this.props.associateRegionOut !== '') {\n      //console.log('3');\n      xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n      yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n      xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n      yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut === '' && this.props.associateRegionOut === '') {\n      //console.log('4');\n      xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n      yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n      xB = xB0;\n      yB = yB0;\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associatePointOut !== '' && this.props.associatePointIn === '' && this.props.associateRegionIn === '') {\n      //console.log('5');\n      xA = xA0;\n      yA = yA0;\n      xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n      yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associatePointIn !== '' && this.props.associatePointOut !== '') {\n      //console.log('6');\n      xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n      yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n      xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n      yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associatePointIn !== '' && this.props.associateRegionOut !== '') {\n      //console.log('7');\n      xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n      yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n      xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n      yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else if (this.props.associateRegionIn !== '' && this.props.associatePointOut !== '') {\n      //console.log('8');\n      xA = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(true, 2));\n      yA = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(true, 2));\n      xB = this.synchroLinkX(this.ifMultiLinkWithRegionDefineX(false, 2));\n      yB = this.synchroLinkY(this.ifMultiLinkWithRegionDefineY(false, 2));\n      xCByClick = xCByClick0 || (xA + xB) / 2;\n      yCByClick = yCByClick0 || (yA + yB) / 2;\n    } else {\n      //console.log('9');\n      xA = xA0;\n      yA = yA0;\n      xB = xB0;\n      yB = yB0;\n      xCByClick = xCByClick0;\n      yCByClick = yCByClick0;\n    }\n\n    let xC = 0;\n    let yC = 0;\n\n    if (this.props.isIncurved.value) {\n      xC = xCByClick;\n      yC = yCByClick;\n    } else {\n      xC = (xA + xB) / 2;\n      yC = (yA + yB) / 2;\n    }\n\n    // console.log(xA);\n    // console.log(yA);\n    // console.log(xB);\n    // console.log(yB);\n    // console.log(xC);\n    // console.log(yC);\n\n    const distanceAC: number = Math.sqrt((xA - xC) * (xA - xC) + (yA - yC) * (yA - yC));\n    const angleRadianAC: number = Math.atan2(yA - yC, xA - xC);\n    const angleDegreeAC: number = (angleRadianAC * 180) / Math.PI;\n    const xMidAC: number = (xA + xC) / 2;\n    const yMidAC: number = (yA + yC) / 2;\n    const xArrowAC: number = xMidAC - distanceAC / 2;\n    const yArrowAC: number = yMidAC;\n\n    const distanceBC: number = Math.sqrt((xB - xC) * (xB - xC) + (yB - yC) * (yB - yC));\n    const angleRadianBC: number = Math.atan2(yB - yC, xB - xC);\n    const angleDegreeBC: number = (angleRadianBC * 180) / Math.PI;\n    const xMidBC: number = (xB + xC) / 2;\n    const yMidBC: number = (yB + yC) / 2;\n    const xArrowBC: number = xMidBC - distanceBC / 2;\n    const yArrowBC: number = yMidBC;\n\n    const distanceAB: number = Math.sqrt((xA - xB) * (xA - xB) + (yA - yB) * (yA - yB));\n    const angleRadianAB: number = Math.atan2(yA - yB, xA - xB);\n    const angleDegreeAB: number = (angleRadianAB * 180) / Math.PI;\n    const xMidAB: number = (xA + xB) / 2;\n    const yMidAB: number = (yA + yB) / 2;\n    const xArrowAB: number = xMidAB - distanceAB / 2;\n    const yArrowAB: number = yMidAB;\n\n    //const angleRadianBA: number = Math.atan2(yB - yA, xB - xA);\n    //const angleDegreeBA: number = (angleRadianBA * 180) / Math.PI;\n\n    const sizeArrowTriangle = 8;\n\n    const valueTooltipMonodirectional: JSX.Element | null = this.defineValueTooptip('monodirectional');\n    const valueTooltipBidirectionalA: JSX.Element | null = this.defineValueTooptip('bidirectional', 'A');\n    const valueTooltipBidirectionalB: JSX.Element | null = this.defineValueTooptip('bidirectional', 'B');\n    const linkUrlOrientedLink: string = this.props.linkUrl.followLink;\n    const inverseAxeY = -1;\n\n    if (orientationLink === 'double') {\n      let first: JSX.Element = <div></div>;\n      if (valueTooltipBidirectionalA) {\n        first = (\n          <Tooltip content={valueTooltipBidirectionalA} placement={this.props.tooltipPositionA.value}>\n            <div\n              id=\"linkA\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAC - sizeArrowTriangle / 2,\n                left: xArrowAC,\n                transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                width: distanceAC,\n              }}\n            >\n              <div\n                id=\"arrow1\"\n                style={{\n                  display: 'flex',\n                  alignContent: 'stretch',\n                }}\n              >\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineBorderSize('A') + 'px solid transparent',\n                    borderRight: this.defineBorderSize('A') + 'px solid transparent',\n                    borderBottom: this.defineBorderSize('A') + 'px solid ' + this.defineColorLink('A'),\n                    transform: 'rotate(270deg)',\n                  }}\n                ></div>\n                <div\n                  style={{\n                    border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                    backgroundColor: this.defineColorLink('A'),\n                    width: distanceAC,\n                  }}\n                ></div>\n              </div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        first = (\n          <div\n            id=\"linkA\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowAC - sizeArrowTriangle / 2,\n              left: xArrowAC,\n              transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n              width: distanceAC,\n            }}\n          >\n            <div\n              id=\"arrow1\"\n              style={{\n                display: 'flex',\n                alignContent: 'stretch',\n              }}\n            >\n              <div\n                className=\"arrowTriangle\"\n                style={{\n                  width: '0',\n                  height: '0',\n                  borderLeft: this.defineBorderSize('A') + 'px solid transparent',\n                  borderRight: this.defineBorderSize('A') + 'px solid transparent',\n                  borderBottom: this.defineBorderSize('A') + 'px solid ' + this.defineColorLink('A'),\n                  transform: 'rotate(270deg)',\n                }}\n              ></div>\n              <div\n                style={{\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                  backgroundColor: this.defineColorLink('A'),\n                  width: distanceAC,\n                }}\n              ></div>\n            </div>\n          </div>\n        );\n      }\n      let second: JSX.Element = <div></div>;\n      if (valueTooltipBidirectionalB) {\n        second = (\n          <Tooltip content={valueTooltipBidirectionalB} placement={this.props.tooltipPositionB.value}>\n            <div\n              id=\"linkB\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowBC - sizeArrowTriangle / 2,\n                left: xArrowBC,\n                transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                width: distanceBC,\n              }}\n            >\n              <div\n                id=\"arrow2\"\n                style={{\n                  display: 'flex',\n                  alignContent: 'stretch',\n                }}\n              >\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineBorderSize('B') + 'px solid transparent',\n                    borderRight: this.defineBorderSize('B') + 'px solid transparent',\n                    borderBottom: this.defineBorderSize('B') + 'px solid ' + this.defineColorLink('B'),\n                    transform: 'rotate(270deg)',\n                  }}\n                ></div>\n                <div\n                  style={{\n                    border: this.defineBorderSize('B') + ' solid ' + this.defineColorLink('B'),\n                    backgroundColor: this.defineColorLink('B'),\n                    width: distanceBC,\n                  }}\n                ></div>\n              </div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        second = (\n          <div\n            id=\"linkB\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowBC - sizeArrowTriangle / 2,\n              left: xArrowBC,\n              transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n              width: distanceBC,\n            }}\n          >\n            <div\n              id=\"arrow2\"\n              style={{\n                display: 'flex',\n                alignContent: 'stretch',\n              }}\n            >\n              <div\n                className=\"arrowTriangle\"\n                style={{\n                  width: '0',\n                  height: '0',\n                  borderLeft: this.defineBorderSize('B') + 'px solid transparent',\n                  borderRight: this.defineBorderSize('B') + 'px solid transparent',\n                  borderBottom: this.defineBorderSize('B') + 'px solid ' + this.defineColorLink('B'),\n                  transform: 'rotate(270deg)',\n                }}\n              ></div>\n              <div\n                style={{\n                  border: this.defineBorderSize('B') + ' solid ' + this.defineColorLink('B'),\n                  backgroundColor: this.defineColorLink('B'),\n                  width: distanceBC,\n                }}\n              ></div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <a href={linkUrlOrientedLink} id=\"link\">\n          <div>\n            {first}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidAC + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xMidAC + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                fontSize: this.props.sizePolice,\n                //border: '1px solid black',\n                backgroundColor: 'white',\n                color: this.defineColorTextLabel(),\n                padding: '0',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </div>\n          <div>\n            {second}\n            <div\n              id={'labelMainMetricB' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidBC + parseInt(this.props.labelBPositionY, 10) * inverseAxeY - this.labelSynchroY('B'),\n                left: xMidBC + parseInt(this.props.labelBPositionX, 10) - this.labelSynchroX('B'),\n                fontSize: this.props.sizePolice,\n                //border: '1px solid black',\n                backgroundColor: 'white',\n                color: this.defineColorTextLabel(),\n                padding: '0',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricB)}\n            </div>\n          </div>\n        </a>\n      );\n    } else if (orientationLink === 'AB') {\n      let first: JSX.Element = <div></div>;\n      if (valueTooltipMonodirectional) {\n        first = (\n          <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n            <div\n              id=\"partA\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAC - sizeArrowTriangle / 2,\n                left: xArrowAC,\n                transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                width: distanceAC,\n              }}\n            >\n              <div\n                style={{\n                  padding: parseInt(this.defineBorderSize('A'), 10) / 2 + 'px',\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                  backgroundColor: this.defineColorLink('A'),\n                  width: distanceAC,\n                }}\n              ></div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        first = (\n          <div\n            id=\"partA\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowAC - sizeArrowTriangle / 2,\n              left: xArrowAC,\n              transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n              width: distanceAC,\n            }}\n          >\n            <div\n              style={{\n                padding: parseInt(this.defineBorderSize('A'), 10) / 2 + 'px',\n                border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                backgroundColor: this.defineColorLink('A'),\n                width: distanceAC,\n              }}\n            ></div>\n          </div>\n        );\n      }\n      let second: JSX.Element = <div></div>;\n      if (valueTooltipMonodirectional) {\n        second = (\n          <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n            <div\n              id=\"partB\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowBC - sizeArrowTriangle / 2,\n                left: xArrowBC,\n                transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                width: distanceBC,\n              }}\n            >\n              <div\n                id=\"arrow2\"\n                style={{\n                  display: 'flex',\n                }}\n              >\n                <div\n                  style={{\n                    border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                    backgroundColor: this.defineColorLink('A'),\n                    width: distanceBC,\n                  }}\n                ></div>\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineBorderSize('A') + 'px solid transparent',\n                    borderRight: this.defineBorderSize('A') + 'px solid transparent',\n                    borderBottom: this.defineBorderSize('A') + 'px solid ' + this.defineColorLink('A'),\n                    transform: 'rotate(90deg)',\n                  }}\n                ></div>\n              </div>\n            </div>\n          </Tooltip>\n        );\n      } else {\n        second = (\n          <div\n            id=\"partB\"\n            style={{\n              position: 'absolute',\n              zIndex: this.props.zIndex,\n              top: yArrowBC - sizeArrowTriangle / 2,\n              left: xArrowBC,\n              transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n              width: distanceBC,\n            }}\n          >\n            <div\n              id=\"arrow2\"\n              style={{\n                display: 'flex',\n              }}\n            >\n              <div\n                style={{\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                  backgroundColor: this.defineColorLink('A'),\n                  width: distanceBC,\n                }}\n              ></div>\n              <div\n                className=\"arrowTriangle\"\n                style={{\n                  width: '0',\n                  height: '0',\n                  borderLeft: this.defineBorderSize('A') + 'px solid transparent',\n                  borderRight: this.defineBorderSize('A') + 'px solid transparent',\n                  borderBottom: this.defineBorderSize('A') + 'px solid ' + this.defineColorLink('A'),\n                  transform: 'rotate(90deg)',\n                }}\n              ></div>\n            </div>\n          </div>\n        );\n      }\n      if (this.props.isIncurved.value) {\n        return (\n          <a href={linkUrlOrientedLink}>\n            {first}\n            {second}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yC + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xC + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      } else {\n        let first: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          first = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"link\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowAB - sizeArrowTriangle / 2,\n                  left: xArrowAB,\n                  transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                  width: distanceAB,\n                }}\n              >\n                <div\n                  id=\"arrow1\"\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <div\n                    className=\"arrowTriangle\"\n                    style={{\n                      //position: 'absolute',\n                      width: '0',\n                      height: '0',\n                      borderLeft: this.defineBorderSize('A') + 'px solid transparent',\n                      borderRight: this.defineBorderSize('A') + 'px solid transparent',\n                      borderBottom: this.defineBorderSize('A') + 'px solid ' + this.defineColorLink('A'),\n                      transform: 'rotate(270deg)',\n                    }}\n                  ></div>\n                  <div\n                    style={{\n                      border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                      backgroundColor: this.defineColorLink('A'),\n                      width: distanceAB,\n                    }}\n                  ></div>\n                </div>\n              </div>\n            </Tooltip>\n          );\n        } else {\n          first = (\n            <div\n              id=\"link\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAB - sizeArrowTriangle / 2,\n                left: xArrowAB,\n                transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                width: distanceAB,\n              }}\n            >\n              <div\n                id=\"arrow1\"\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n              >\n                <div\n                  className=\"arrowTriangle\"\n                  style={{\n                    //position: 'absolute',\n                    width: '0',\n                    height: '0',\n                    borderLeft: this.defineBorderSize('A') + 'px solid transparent',\n                    borderRight: this.defineBorderSize('A') + 'px solid transparent',\n                    borderBottom: this.defineBorderSize('A') + 'px solid ' + this.defineColorLink('A'),\n                    transform: 'rotate(270deg)',\n                  }}\n                ></div>\n                <div\n                  style={{\n                    border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                    backgroundColor: this.defineColorLink('A'),\n                    width: distanceAB,\n                  }}\n                ></div>\n              </div>\n            </div>\n          );\n        }\n        return (\n          <a href={linkUrlOrientedLink} target=\"_blank\">\n            {first}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidAB + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xMidAB + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      }\n    } else if (orientationLink === 'no') {\n      if (this.props.isIncurved.value) {\n        let first: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          first = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"partA\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowAC,\n                  left: xArrowAC,\n                  transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                  height: this.defineBorderSize('A') + 'px',\n                  width: distanceAC,\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                  backgroundColor: this.defineColorLink('A'),\n                }}\n              ></div>\n            </Tooltip>\n          );\n        } else {\n          first = (\n            <div\n              id=\"partA\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAC,\n                left: xArrowAC,\n                transform: 'rotate(' + angleDegreeAC.toString() + 'deg)',\n                height: this.defineBorderSize('A') + 'px',\n                width: distanceAC,\n                border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                backgroundColor: this.defineColorLink('A'),\n              }}\n            ></div>\n          );\n        }\n        let second: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          second = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"partB\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowBC,\n                  left: xArrowBC,\n                  transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                  height: this.defineBorderSize('A') + 'px',\n                  width: distanceBC,\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                  backgroundColor: this.defineColorLink('A'),\n                }}\n              ></div>\n            </Tooltip>\n          );\n        } else {\n          second = (\n            <div\n              id=\"partB\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowBC,\n                left: xArrowBC,\n                transform: 'rotate(' + angleDegreeBC.toString() + 'deg)',\n                height: this.defineBorderSize('A') + 'px',\n                width: distanceBC,\n                border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                backgroundColor: this.defineColorLink('A'),\n              }}\n            ></div>\n          );\n        }\n        return (\n          <a href={linkUrlOrientedLink}>\n            {first}\n            {second}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yC + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xC + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      } else {\n        let first: JSX.Element = <div></div>;\n        if (valueTooltipMonodirectional) {\n          first = (\n            <Tooltip content={valueTooltipMonodirectional} placement={this.props.tooltipPositionA.value}>\n              <div\n                id=\"link\"\n                style={{\n                  position: 'absolute',\n                  zIndex: this.props.zIndex,\n                  top: yArrowAB,\n                  left: xArrowAB,\n                  transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                  width: distanceAB,\n                  height: this.defineBorderSize('A') + 'px',\n                  border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                  backgroundColor: this.defineColorLink('A'),\n                }}\n              ></div>\n            </Tooltip>\n          );\n        } else {\n          first = (\n            <div\n              id=\"link\"\n              style={{\n                position: 'absolute',\n                zIndex: this.props.zIndex,\n                top: yArrowAB,\n                left: xArrowAB,\n                transform: 'rotate(' + angleDegreeAB.toString() + 'deg)',\n                width: distanceAB,\n                height: this.defineBorderSize('A') + 'px',\n                border: this.defineBorderSize('A') + ' solid ' + this.defineColorLink('A'),\n                backgroundColor: this.defineColorLink('A'),\n              }}\n            ></div>\n          );\n        }\n        return (\n          <a href={linkUrlOrientedLink} target=\"_blank\">\n            {first}\n            <div\n              id={'labelMainMetric' + this.props.id}\n              style={{\n                textDecoration: this.defineTextDecoration(),\n                fontStyle: this.defineFontStyle(),\n                fontWeight: this.defineFontWeight(),\n                position: 'absolute',\n                zIndex: 9999,\n                top: yMidAB + parseInt(this.props.labelAPositionY, 10) * inverseAxeY - this.labelSynchroY('A'),\n                left: xMidAB + parseInt(this.props.labelAPositionX, 10) - this.labelSynchroX('A'),\n                backgroundColor: 'white',\n                fontSize: this.props.sizePolice,\n                color: this.defineColorTextLabel(),\n                padding: '0',\n                cursor: 'pointer',\n              }}\n            >\n              {this.defineTextObject(this.props.valueMainMetricA)}\n            </div>\n          </a>\n        );\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n\n  // private defineBackgroundColor() {\n  //   let colorBackground = '';\n\n  //   if (this.props.seuil.length > 0) {\n  //     if (this.props.seuil[0].backColor !== '') {\n  //       colorBackground = this.props.seuil[0].backColor;\n  //     } else {\n  //       colorBackground = 'black';\n  //     }\n  //   } else {\n  //     colorBackground = 'black';\n  //   }\n\n  //   const valueMainMetric: number = parseInt(this.props.valueMainMetricA, 10);\n  //   let index = 0;\n  //   this.props.seuil.forEach((level: LowerLimitClass) => {\n  //     let lowerLimitMin = 0;\n\n  //     if (level.lowerLimitMin === '') {\n  //       lowerLimitMin = 0;\n  //     } else {\n  //       lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n  //     }\n\n  //     if (lowerLimitMin === 0) {\n  //       if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n  //         colorBackground = level.backColor;\n  //       }\n  //     } else if (this.props.seuil.length === index + 1) {\n  //       if (valueMainMetric > lowerLimitMin) {\n  //         colorBackground = level.backColor;\n  //       }\n  //     } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n  //       colorBackground = level.backColor;\n  //     }\n\n  //     index++;\n  //   });\n\n  //   return colorBackground;\n  // }\n\n  private defineColorLink(link: string) {\n    let colorBorder = '';\n    let seuil: LowerLimitClass[] = this.props.seuil;\n    let valueMainMetric = 0;\n\n    if (link === 'A') {\n      valueMainMetric = parseInt(this.props.valueMainMetricA, 10);\n    } else {\n      valueMainMetric = parseInt(this.props.valueMainMetricB, 10);\n    }\n\n    if (this.props.traceBorder) {\n      if (seuil.length > 0) {\n        if (seuil[0].backColor !== '') {\n          colorBorder = seuil[0].backColor;\n        } else {\n          colorBorder = 'black';\n        }\n      } else {\n        colorBorder = 'black';\n      }\n    } else {\n      colorBorder = 'black';\n    }\n\n    let index = 0;\n    seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          colorBorder = level.backColor;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          colorBorder = level.backColor;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        colorBorder = level.backColor;\n      }\n\n      index++;\n    });\n\n    return colorBorder;\n  }\n\n  defineBorderSize(link: string) {\n    let sizeBorder = '';\n    let seuil: LowerLimitClass[] = this.props.seuil;\n    let valueMainMetric = 0;\n\n    if (link === 'A') {\n      valueMainMetric = parseInt(this.props.valueMainMetricA, 10);\n    } else {\n      valueMainMetric = parseInt(this.props.valueMainMetricB, 10);\n    }\n\n    if (this.props.traceBorder) {\n      //sizeBorder = seuil[0].sizeBorder;\n      if (seuil.length > 0) {\n        if (seuil[0].sizeBorder !== '') {\n          sizeBorder = seuil[0].sizeBorder;\n        } else {\n          sizeBorder = this.defineSizeLink();\n        }\n      } else {\n        sizeBorder = this.defineSizeLink();\n      }\n    } else {\n      sizeBorder = this.defineSizeLink();\n    }\n\n    let index = 0;\n\n    seuil.forEach((level: LowerLimitClass) => {\n      let lowerLimitMin = 0;\n\n      if (level.lowerLimitMin === '') {\n        lowerLimitMin = 0;\n      } else {\n        lowerLimitMin = parseInt(level.lowerLimitMin.substring(1), 10);\n      }\n\n      if (lowerLimitMin === 0) {\n        if (valueMainMetric >= lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (this.props.seuil.length === index + 1) {\n        if (valueMainMetric > lowerLimitMin) {\n          sizeBorder = level.sizeBorder;\n        }\n      } else if (valueMainMetric > lowerLimitMin && valueMainMetric <= parseInt(level.lowerLimitMax, 10)) {\n        sizeBorder = level.sizeBorder;\n      }\n\n      index++;\n    });\n    return sizeBorder;\n  }\n\n  private defineMainMetric = (mainMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.valueGenerateObjectText.unit;\n    const decimal: string = this.props.textObject.valueGenerateObjectText.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(mainMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = mainMetric + ' ' + unit;\n    }\n    return result;\n  };\n\n  private defineAuxMetric = (auxMetric: string): string => {\n    let result = '';\n    const unit: string = this.props.textObject.generateAuxiliaryElement.unit;\n    const decimal: string = this.props.textObject.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n\n    if (decimal !== '') {\n      result = parseFloat(auxMetric).toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = auxMetric + ' ' + unit;\n    }\n    return result;\n  };\n\n  private defineTextObject = (mainMetric: string): JSX.Element => {\n    let htmlTextObject: JSX.Element[] = [];\n    let htmlMainMetric: JSX.Element[] = [];\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n\n    const styleLabel = {\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n      textAlign: 'center',\n      margin: 0,\n      padding: '0 5px',\n    } as CSSProperties;\n\n    const styleMainMetric = {\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n      margin: 0,\n      padding: 0,\n      whiteSpace: 'nowrap',\n    } as CSSProperties;\n\n    if (!dislayTextObjectInTooltip) {\n      htmlTextObject.push(\n        <p key={'contentTextObject1' + this.props.name} style={styleLabel}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n    if (displayMainMetric) {\n      if (!displayMainMetricInTooltip) {\n        if (legendMainMetric) {\n          htmlMainMetric.push(\n            <p key={'contentTextObject2' + this.props.name} style={styleMainMetric}>\n              {legendMainMetric}\n            </p>\n          );\n        }\n        // Condition Display NaN none Oriented Link\n        htmlMainMetric.push(\n          <p key={'contentTextObject3' + this.props.name} style={styleMainMetric}>\n            {!isNaN(parseFloat(this.defineMainMetric(mainMetric))) && this.defineMainMetric(mainMetric)}\n          </p>\n        );\n      }\n    }\n\n    let styleMainDiv = {\n      backgroundColor: backColoTextObject,\n      border: '1px solid black',\n    } as CSSProperties;\n\n    if (!displayMainMetric || (displayMainMetric && displayMainMetricInTooltip)) {\n      styleMainDiv = {\n        backgroundColor: backColoTextObject,\n      };\n    }\n\n    return (\n      <div style={styleMainDiv}>\n        {htmlTextObject}\n        <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>{htmlMainMetric}</div>\n      </div>\n    );\n  };\n\n  private defineHtmlLinkTooltip = (): JSX.Element => {\n    let result: JSX.Element = <div></div>;\n    if (this.props.linkUrl.hoveringTooltipText !== '') {\n      result = <a href={this.props.linkUrl.hoveringTooltipLink}>{this.props.linkUrl.hoveringTooltipText}</a>;\n    }\n    return result;\n  };\n\n  private defineValueTooptip = (typeLink: string, link?: string): JSX.Element | null => {\n    const contentTooltip: JSX.Element[] = [];\n    const contentTooltipMainMetric: JSX.Element[] = [];\n    const contentTooltipAuxMetric: JSX.Element[] = [];\n    const valueMainMetricA = this.props.valueMainMetricA;\n    const valueMainMetricB = this.props.valueMainMetricB;\n    const refMainMetricA = this.props.refMainMetricA;\n    const refMainMetricB = this.props.refMainMetricB;\n    const dislayTextObjectInTooltip: boolean = this.props.textObject.isTextTooltip;\n    const textColorTextObject: string = this.props.textObject.colorText;\n    const backColoTextObject: string = this.props.textObject.colorBack;\n    const displayMainMetric: boolean = this.props.textObject.generateObjectText;\n    const displayMainMetricInTooltip: boolean = this.props.textObject.valueGenerateObjectText.displayObjectInTooltip;\n    const addTextColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorTextElement;\n    const addBackColorMainMetric: boolean = this.props.textObject.valueGenerateObjectText.addColorBackElement;\n    const textColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorTextElement;\n    const backColorMainMetric: string = this.props.textObject.valueGenerateObjectText.colorBackElement;\n    const legendMainMetric: string = this.props.textObject.valueGenerateObjectText.legendElement;\n    const displayAuxMetricInTooltip: boolean = this.props.textObject.generateAuxiliaryElement.displayObjectInTooltip;\n    const addTextColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorTextElement;\n    const addBackColorAuxMetric: boolean = this.props.textObject.generateAuxiliaryElement.addColorBackElement;\n    const textColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorTextElement;\n    const backColorAuxMetric: string = this.props.textObject.generateAuxiliaryElement.colorBackElement;\n    const legendAuxMetric: string = this.props.textObject.generateAuxiliaryElement.legendElement;\n\n    const styleMainTitle = {\n      fontFamily: this.props.police,\n      fontSize: '11px',\n      marginBottom: '0px',\n      textAlign: 'center',\n      color: textColorTextObject,\n      backgroundColor: backColoTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleMainMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitleAuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitle2MainMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleTitle2AuxMetric = {\n      fontFamily: this.props.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentMainMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorMainMetric ? textColorMainMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    const styleContentAuxMetrics = {\n      fontFamily: this.props.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: addTextColorAuxMetric ? textColorAuxMetric : textColorTextObject,\n    } as React.CSSProperties;\n\n    if (dislayTextObjectInTooltip) {\n      contentTooltip.push(\n        <p key={'contentTooltip1' + this.props.name} style={styleMainTitle}>\n          {this.props.label || this.props.name.toUpperCase()}\n        </p>\n      );\n    }\n\n    if (displayMainMetric) {\n      if (displayMainMetricInTooltip) {\n        if (legendMainMetric) {\n          contentTooltipMainMetric.push(<p style={styleTitleMainMetric}>{legendMainMetric}</p>);\n        }\n        contentTooltipMainMetric.push(\n          <p key={'contentTooltip1' + this.props.name} style={styleTitleMainMetric}>\n            Main Metric\n          </p>\n        );\n\n        if (typeLink === 'bidirectional') {\n          if (link === 'A') {\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip2' + this.props.name} style={styleTitle2MainMetric}>\n                + Link A\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip3' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Reference : {refMainMetricA}\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip4' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Value : {this.defineMainMetric(valueMainMetricA)}\n              </p>\n            );\n          } else {\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip5' + this.props.name} style={styleTitle2MainMetric}>\n                + Link B\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip6' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Reference : {refMainMetricB}\n              </p>\n            );\n            contentTooltipMainMetric.push(\n              <p key={'contentTooltip7' + this.props.name} style={styleContentMainMetrics}>\n                {' '}\n                - Value : {this.defineMainMetric(valueMainMetricB)}\n              </p>\n            );\n          }\n        } else if (typeLink === 'monodirectional') {\n          contentTooltipMainMetric.push(\n            <p key={'contentTooltip8' + this.props.name} style={styleContentMainMetrics}>\n              {' '}\n              - Reference : {refMainMetricA}\n            </p>\n          );\n          contentTooltipMainMetric.push(\n            <p key={'contentTooltip9' + this.props.name} style={styleContentMainMetrics}>\n              {' '}\n              - Value : {this.defineMainMetric(valueMainMetricA)}\n            </p>\n          );\n        }\n      }\n    }\n\n    if (displayAuxMetricInTooltip) {\n      if (legendAuxMetric) {\n        contentTooltipAuxMetric.push(<p style={styleTitleAuxMetric}>{legendAuxMetric}</p>);\n      }\n      if (typeLink === 'bidirectional') {\n        if (link === 'A') {\n          if (this.props.auxiliaryMetrics.length > 0) {\n            contentTooltipAuxMetric.push(\n              <p key={'contentTooltip10' + this.props.name} style={styleTitleAuxMetric}>\n                Auxiliary Metric\n              </p>\n            );\n            let index = 1;\n            this.props.auxiliaryMetrics.forEach((metric) => {\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip11' + this.props.name} style={styleTitle2AuxMetric}>\n                  + Metric {index}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip12' + this.props.name} style={styleContentAuxMetrics}>\n                  - Reference : {metric.refId}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip13' + this.props.name} style={styleContentAuxMetrics}>\n                  - Value :{' '}\n                  {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1]))) &&\n                    this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1])}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip14' + this.props.name} style={styleContentAuxMetrics}>\n                  - Key : {metric.key}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip15' + this.props.name} style={styleContentAuxMetrics}>\n                  - KeyValue : {metric.keyValue}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip16' + this.props.name} style={styleContentAuxMetrics}>\n                  - Type : {metric.manageValue}\n                </p>\n              );\n              index++;\n            });\n          }\n        } else {\n          if (this.props.auxiliaryMetricsB.length > 0) {\n            contentTooltipAuxMetric.push(\n              <p key={'contentTooltip17' + this.props.name} style={styleTitleAuxMetric}>\n                Auxiliary Metric\n              </p>\n            );\n            let index = 1;\n            this.props.auxiliaryMetricsB.forEach((metricB) => {\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip18' + this.props.name} style={styleTitle2AuxMetric}>\n                  + Metric {index}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip19' + this.props.name} style={styleContentAuxMetrics}>\n                  - Reference : {metricB.refId}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip20' + this.props.name} style={styleContentAuxMetrics}>\n                  - Value :{' '}\n                  {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetricsB[index - 1]))) &&\n                    this.defineAuxMetric(this.props.valuesAuxiliaryMetricsB[index - 1])}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip21' + this.props.name} style={styleContentAuxMetrics}>\n                  - Key : {metricB.key}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip22' + this.props.name} style={styleContentAuxMetrics}>\n                  - KeyValue : {metricB.keyValue}\n                </p>\n              );\n              contentTooltipAuxMetric.push(\n                <p key={index.toString() + 'contentTooltip23' + this.props.name} style={styleContentAuxMetrics}>\n                  - Type : {metricB.manageValue}\n                </p>\n              );\n              index++;\n            });\n          }\n        }\n      } else if (typeLink === 'monodirectional') {\n        if (this.props.auxiliaryMetrics.length > 0) {\n          contentTooltipAuxMetric.push(\n            <p key={'contentTooltip24' + this.props.name} style={styleTitleAuxMetric}>\n              Auxiliary Metric\n            </p>\n          );\n          let index = 1;\n          this.props.auxiliaryMetrics.forEach((metric) => {\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip25' + this.props.name} style={styleTitle2AuxMetric}>\n                + Metric {index}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip26' + this.props.name} style={styleContentAuxMetrics}>\n                - Reference : {metric.refId}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip27' + this.props.name} style={styleContentAuxMetrics}>\n                - Value :{' '}\n                {!isNaN(parseFloat(this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1]))) &&\n                  this.defineAuxMetric(this.props.valuesAuxiliaryMetrics[index - 1])}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip28' + this.props.name} style={styleContentAuxMetrics}>\n                - Key : {metric.key}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip29' + this.props.name} style={styleContentAuxMetrics}>\n                - KeyValue : {metric.keyValue}\n              </p>\n            );\n            contentTooltipAuxMetric.push(\n              <p key={index.toString() + 'contentTooltip30' + this.props.name} style={styleContentAuxMetrics}>\n                - Type : {metric.manageValue}\n              </p>\n            );\n            index++;\n          });\n        }\n      }\n    }\n    if (contentTooltip.length === 0 && contentTooltipAuxMetric.length === 0 && contentTooltipMainMetric.length === 0) {\n      return null;\n    }\n    return (\n      <div style={{ border: '1px solid black', padding: 0 }}>\n        {contentTooltip}\n        <div style={{ backgroundColor: addBackColorMainMetric ? backColorMainMetric : backColoTextObject, padding: '0 5px' }}>\n          {contentTooltipMainMetric}\n        </div>\n        <div style={{ backgroundColor: addBackColorAuxMetric ? backColorAuxMetric : backColoTextObject, padding: '0 5px' }}>\n          {contentTooltipAuxMetric}\n        </div>\n        {this.defineHtmlLinkTooltip()}\n      </div>\n    );\n  };\n\n  private defineTextDecoration = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (): string => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (): any => {\n    const mainStyle: Style = this.props.textObject.style;\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineColorTextLabel = () => {\n    let result = '';\n    if (this.props.textObject.colorText) {\n      result = this.props.textObject.colorText;\n    } else {\n      result = 'black';\n    }\n    return result;\n  };\n\n  private defineSizeLink = (): string => {\n    let result = '';\n    if (this.props.size) {\n      const size: string = this.props.size || '';\n      // if (size === 'Small') {\n      //   result = '8';\n      // } else if (size === 'Medium') {\n      //   result = '9';\n      // } else if (size === 'Large') {\n      //   result = '10';\n      // }\n      result = size;\n    } else {\n      result = '9';\n    }\n    return result;\n  };\n\n  render() {\n    const xCoordinateA: number = this.synchroLinkX(parseInt(this.props.positionXADefault, 10), 'xA');\n    const yCoordinateA: number = this.synchroLinkY(parseInt(this.props.positionYADefault, 10), 'yA');\n    const xCoordinateB: number = this.synchroLinkX(parseInt(this.props.positionXBDefault, 10), 'xB');\n    const yCoordinateB: number = this.synchroLinkY(parseInt(this.props.positionYBDefault, 10), 'yB');\n    const xCoordinateC: number = this.synchroLinkX(parseInt(this.props.positionXCDefault, 10) || 0, 'xC');\n    const yCoordinateC: number = this.synchroLinkY(parseInt(this.props.positionYCDefault, 10) || 0, 'yC');\n    const orientationLink: string = this.props.orientationLink;\n\n    // rops.associatePointIn)\n    // rops.associatePointOut)\n    // rops.associateRegionIn)\n    // rops.associateRegionOut)\n    // const labelA: string = this.props.labelA;\n    // const labelB: string = this.props.labelB;\n    // const labelAPositionX: number = parseInt(this.props.labelAPositionX, 10);\n    // const labelAPositionY: number = parseInt(this.props.labelAPositionY, 10) * (-1);\n    // const labelBPositionX: number = parseInt(this.props.labelBPositionX, 10);\n    // const labelBPositionY: number = parseInt(this.props.labelBPositionY, 10) * (-1);\n    // const associatePointIn: SelectableValue<PointClass> = this.props.associatePointIn || {};\n    // const associatePointOut: SelectableValue<PointClass> = this.props.associatePointOut || {};\n    // const associateRegionIn: SelectableValue<RegionClass> = this.props.associateRegionIn || {};\n    // const associateRegionOut: SelectableValue<RegionClass> = this.props.associateRegionOut || {};\n    // const xMinAssociateRegionIn: number = parseInt(associateRegionIn.value?.coords.xMin || '0');\n    // const xMaxAssociateRegionIn: number = parseInt(associateRegionIn.value?.coords.xMax || '0');\n    // const xMinAssociateRegionOut: number = parseInt(associateRegionOut.value?.coords.xMin || '0');\n    // const xMaxAssociateRegionOut: number = parseInt(associateRegionOut.value?.coords.xMax || '0');\n    // const yMinAssociateRegionIn: number = parseInt(associateRegionIn.value?.coords.yMin || '0');\n    // const yMaxAssociateRegionIn: number = parseInt(associateRegionIn.value?.coords.yMax || '0');\n    // const yMinAssociateRegionOut: number = parseInt(associateRegionOut.value?.coords.yMin || '0');\n    // const yMaxAssociateRegionOut: number = parseInt(associateRegionOut.value?.coords.yMax || '0');\n    // const xRegionIn: number = this.synchroLinkX((xMaxAssociateRegionIn + xMinAssociateRegionIn) / 2, defineCenter);\n    // const yRegionIn: number = this.synchroLinkY((yMaxAssociateRegionIn + yMinAssociateRegionIn) / 2, defineCenter);\n    // const xRegionOut: number = this.synchroLinkX((xMaxAssociateRegionOut + xMinAssociateRegionOut) / 2, defineCenter);\n    // const yRegionOut: number = this.synchroLinkY((yMaxAssociateRegionOut + yMinAssociateRegionOut) / 2, defineCenter);\n\n    return (\n      <div>\n        {/* {this.state.pointTest} */}\n        {this.drawLink(xCoordinateA, yCoordinateA, xCoordinateB, yCoordinateB, xCoordinateC, yCoordinateC, orientationLink)}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { RegionClass } from 'Models/RegionClass';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { PointClass } from 'Models/PointClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { Button } from '@grafana/ui';\n\ninterface Legend {\n  hiddenLegend: boolean;\n  x: number;\n  y: number;\n}\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  // legend: Legend;\n  /** save data */\n  callBack: (event: any) => void;\n  callBackClose: () => void;\n}\n\ninterface State {\n  finalHTML: JSX.Element;\n  legend: Legend;\n}\n\n/**\n * def\n */\nclass LegendComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      finalHTML: <div></div>,\n      legend: this.props.options.legend,\n    };\n  }\n\n  /** async state */\n  setStateAsyncFinalHTML = (state: {\n    /** mew value */\n    finalHTML: JSX.Element;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** fill lowerlimit in JSX.Element */\n  fillLowerLimit = (lowerLimit: LowerLimitClass[], name: string): JSX.Element[] => {\n    const allLimit: JSX.Element[] = [];\n    let i = 0;\n    const max: number = lowerLimit.length - 1;\n\n    for (const lower of lowerLimit) {\n      allLimit.push(\n        <div key={name + 'LowerLimit' + i} className=\"LegendMatt\">\n          <span\n            style={{\n              padding: '5px',\n              // margin: '10px',\n              width: '130px',\n              //width: '3.5rem',\n              //borderRadius: '39%',\n              backgroundColor: lower.backColor,\n              border: lower.sizeBorder + 'px solid ' + lower.borderColor,\n              listStyleType: 'none',\n              display: 'inline-block',\n              textAlign: 'center',\n            }}\n          >\n            {lowerLimit.length > 1 && (\n              <span\n                style={{\n                  //display: 'inline-block',\n                  //verticalAlign: 'middle',\n                  //marginBottom: '1.25rem',\n                  fontSize: '10px',\n                  //fontWeight: 'bold',\n                }}\n              >\n                {i === 0 ? '-∞' : lower.lowerLimitMin} - {i === max ? '+∞' : lower.lowerLimitMax}\n              </span>\n            )}\n          </span>\n        </div>\n      );\n      ++i;\n    }\n    return allLimit;\n  };\n\n  /** get all lower limit for region */\n  fillRegion = () => {\n    const allRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    const rendu: JSX.Element[] = [];\n    for (const line of allRegion) {\n      const allLimit: JSX.Element[] = this.fillLowerLimit(line.lowerLimit, 'region');\n      const ownElement: JSX.Element = (\n        <div key={line.id + 'DisplayLegendRegion'}>\n          {line.label}\n          {allLimit}\n        </div>\n      );\n      rendu.push(ownElement);\n    }\n    return rendu;\n  };\n\n  closeLegend = (event: any) => {\n    this.props.callBackClose();\n    // const close = document.getElementById('iconclose');\n    // close?.addEventListener('click', () => {\n    //   console.log('goodzone');\n\n    //   const disapear = document.getElementById('L');\n    //   const appear = document.getElementById('legnd');\n    //   if (disapear) {\n    //     disapear.style.visibility = 'hidden';\n    //   }\n    //   appear?.addEventListener('click', () => {\n    //     if (disapear) {\n    //       console.log('dam');\n    //       disapear.style.visibility = 'visible';\n    //     }\n    //   });\n    // });\n  };\n\n  /** get all limit for point */\n  fillPoint = () => {\n    const allPoint: PointClass[] = this.props.options.arrayPoints;\n    const rendu: JSX.Element[] = [];\n\n    for (const line of allPoint) {\n      const allLimit: JSX.Element[] = this.fillLowerLimit(line.lowerLimit, 'point');\n      const name: string = line.label || line.name;\n      const ownElement: JSX.Element = (\n        <div key={name + 'DisplayLegendPoint'}>\n          {name}\n          {allLimit}\n        </div>\n      );\n      rendu.push(ownElement);\n    }\n    return rendu;\n  };\n\n  /** get all limit for orientedLink */\n  fillLink = () => {\n    const allLinks: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    const rendu: JSX.Element[] = [];\n\n    for (const line of allLinks) {\n      const allLimit: JSX.Element[] = this.fillLowerLimit(line.lowerLimit, 'link');\n      const name: string = line.label || line.name;\n      const ownElement: JSX.Element = (\n        <div key={name + 'DisplayLegendLink'}>\n          {name}\n          {allLimit}\n        </div>\n      );\n      rendu.push(ownElement);\n    }\n    return rendu;\n  };\n\n  /** generate legend */\n  renduState = async () => {\n    const value: JSX.Element = (\n      <div\n        key={'contentLegend'}\n        style={{\n          position: 'relative',\n          left: this.state.legend.x,\n          top: this.state.legend.y,\n          maxWidth: '100%',\n          zIndex: 'auto',\n        }}\n        hidden={this.state.legend.hiddenLegend}\n      >\n        <article\n          id=\"L\"\n          style={{\n            width: '200px',\n            position: 'absolute',\n            overflowY: 'scroll',\n            margin: '0',\n            height: '240px',\n            backgroundColor: '#FFF',\n            color: '#000',\n            border: '4px solid #299c46',\n            borderRadius: '4px',\n            // scrollbarColor: '#09090b #212124',\n            scrollbarColor: '#299c46',\n            scrollbarWidth: 'thin',\n            zIndex: 9999,\n            resize: 'both',\n          }}\n        >\n          <div key={'legendTitle'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n            <h5 style={{ width: '100%', fontSize: '20px', display: 'flex', padding: '10px' }}>\n              Legend\n              <Button onClick={this.closeLegend} style={{ marginLeft: 'auto' }} id=\"iconclose\">\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </Button>\n            </h5>\n            {/* <p style={{ color: '#d8d9da', fontSize: '15px', marginLeft: '14px', fontWeight: 'bold' }}>Region</p>\n            <p style={{ color: '#d8d9da', fontSize: '11px', marginLeft: '17px' }}>Label</p> */}\n\n            {/* <p style={{ fontSize: '15px', marginLeft: '14px', fontWeight: 'bold' }}>Region</p> */}\n            <div key={'legendTitleRegion'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n              <p style={{ fontSize: '15px', padding: '10px 0 10px 14px', fontWeight: 'bold', color: 'white' }}>Region</p>\n            </div>\n          </div>\n          <div key=\"regionLegend\" style={{ paddingLeft: '5px', lineHeight: '1.5' }}>\n            {this.fillRegion()}\n          </div>\n          <div key={'legendTitlePoint'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n            <p style={{ fontSize: '15px', padding: '10px 0 10px 14px', fontWeight: 'bold', color: 'white' }}>Point</p>\n          </div>\n          <div key=\"pointLegend\" style={{ paddingLeft: '5px', lineHeight: '1.5' }}>\n            {this.fillPoint()}\n          </div>\n          <div key={'legendTitleLink'} style={{ backgroundImage: 'linear-gradient(90deg, rgb(41, 42, 45), rgb(0, 0, 0))' }}>\n            <p style={{ fontSize: '15px', padding: '10px 0 10px 14px', fontWeight: 'bold', color: 'white' }}>Oriented Link</p>\n          </div>\n          <div key=\"linkLegend\" style={{ paddingLeft: '5px' }}>\n            {this.fillLink()}\n          </div>\n        </article>\n      </div>\n    );\n    await this.setStateAsyncFinalHTML({\n      finalHTML: value,\n    });\n  };\n\n  setStateLegendAsync = (state: { legend: Legend }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  /** update when legend is edited */\n  componentDidUpdate = async (prevProps: Props, prevState: State) => {\n    if (prevProps !== this.props || prevState.legend.hiddenLegend !== this.props.options.legend.hiddenLegend) {\n      await this.setStateLegendAsync({ legend: this.props.options.legend });\n      this.renduState();\n    }\n  };\n\n  /** fill state value when component is mounted */\n  componentDidMount = () => {\n    this.renduState();\n  };\n\n  /**\n   * result\n   */\n  render() {\n    // rip testMoi\n    return <div key={'contentHtmlLegend'}>{this.state.finalHTML}</div>;\n  }\n}\nexport default LegendComponent;\n","import React, { PureComponent } from 'react';\nimport { SimpleOptions, Background, Metric } from 'types';\n\nimport { PanelProps, SelectableValue } from '@grafana/data';\nimport { CustomScrollbar, Modal, Button } from '@grafana/ui';\n\nimport { PointClass } from 'Models/PointClass';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { TextObject } from 'Models/TextObjectClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\n\n//import { coordinateIsInInitialSpace } from 'Functions/coodinateIsInInitialSpace';\nimport { reqMetricPoint, reqMetricOrientedLink, reqMetricAuxOrientedLink, reqMetricAuxPoint, reqMetricAuxRegion } from 'Functions/fetchMetrics';\nimport { getResultQuery } from 'Functions/getResultQuery';\n\nimport AddCoordinate from 'components/CoordinateSpace/addCoordinate';\nimport DrawRectangle from './components/Draw/drawRectangle';\nimport DrawPoint from './components/Draw/drawPoint';\nimport DrawOrientedLink from './components/Draw/drawOrientedLink';\nimport LegendComponant from './components/legend';\n\nimport DrawRectangleExtend from 'components/Draw/drawRectangleExtend';\nimport { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\nimport { Style } from 'components/Parametrage/styleComponent';\n\ninterface Props extends PanelProps<SimpleOptions> {}\n\ninterface DataTooltipRegionSVG {\n  idSVG: string;\n  x: string;\n  y: string;\n}\n\ninterface Legend {\n  hiddenLegend: boolean;\n  x: number;\n  y: number;\n}\n\ninterface State {\n  // isUpdate: boolean;\n  // sizePanel: number;\n  valueButton: string;\n  /**\n   * manage button\n   * [0] -> addNode\n   * [1] -> addLink\n   * [2] -> positionLegend\n   * [3] -> addPoint\n   * [4] -> addIncurvedLink\n   */\n  buttonManage: boolean[];\n  numberClickDiv: number;\n  allActionButton: JSX.Element;\n  // valueLegend: JSX.Element;\n  // seuil: LowerLimitClass[];\n  nbClickButton: boolean;\n  legend: Legend;\n  // img: JSX.Element;\n  svg: string;\n  // loading: boolean;\n  // url: string;\n  displayRegion: JSX.Element;\n  idSVG: string;\n  tooltip: JSX.Element;\n  // check if button Add Oriented Link is active\n  buttonAddLinkIsActive: boolean;\n  // check if button Add Incurved Oriented Link is active\n  buttonAddIncurvedLinkIsActive: boolean;\n\n  dataTooltipSVG: DataTooltipRegionSVG;\n\n  hiddenLegend: boolean;\n\n  // value of image in Display to the initialisation\n  currentImage: string;\n}\n\n/**\n * Affichage\n */\nexport class SimplePanel extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      valueButton: '',\n      buttonManage: [false, false, false, false, false],\n      numberClickDiv: 0,\n      allActionButton: <div></div>,\n      nbClickButton: false,\n      legend: { hiddenLegend: true, x: 0, y: 0 },\n      svg: '',\n      displayRegion: <div></div>,\n      tooltip: <div>salut</div>,\n      idSVG: '',\n      buttonAddLinkIsActive: false,\n      buttonAddIncurvedLinkIsActive: false,\n      dataTooltipSVG: { idSVG: '', x: '0', y: '0' },\n      hiddenLegend: false,\n      currentImage: '',\n    };\n  }\n\n  /**\n   * Display limit (coordinateSpaceInitial)\n   * @returns JSX.Element\n   */\n  defineLimit = (): JSX.Element => {\n    const { coordinateSpaceInitial } = this.props.options;\n    let jsxItems: JSX.Element = <div></div>;\n    jsxItems = (\n      <DrawRectangle\n        key=\"limitCoor\"\n        color=\"orange\"\n        coordinateInitial={coordinateSpaceInitial}\n        id=\"initialSpace\"\n        onOptionsChange={this.props.onOptionsChange}\n        options={this.props.options}\n        data={this.props.data}\n        //isEnabled={!this.state.buttonManage[1]}\n        buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n        buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n      />\n    );\n\n    // if (this.props.options.baseMap.image === '' && !this.props.options.baseMap.modeSVG) {\n    //   jsxItems = (\n    //     <DrawRectangle\n    //       key=\"limitCoor\"\n    //       color=\"orange\"\n    //       coordinateInitial={coordinateSpaceInitial}\n    //       id=\"initialSpace\"\n    //       onOptionsChange={this.props.onOptionsChange}\n    //       options={this.props.options}\n    //       data={this.props.data}\n    //       //isEnabled={!this.state.buttonManage[1]}\n    //       buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n    //       buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n    //     />\n    //   );\n    // }\n    return jsxItems;\n  };\n\n  /**\n   * to do\n   */\n  getCoordinatesToDrawPointWithClick = (event: any) => {\n    // const widthPanel: number = parseInt(this.props.options.baseMap.width, 10);\n    // const heightPanel: number = parseInt(this.props.options.baseMap.height, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    //const defaultReferentiel: boolean = this.props.options.coordinateSpaceInitial.defaultReferentiel;\n    let positionX = 0;\n    let positionY = 0;\n    const paddingMarginLeftSimplePanel = 24;\n    //const spaceFromTop = 207;\n    const clickX = event.nativeEvent.clientX - paddingMarginLeftSimplePanel;\n    //const clickY = event.nativeEvent.clientY - spaceFromTop;\n    // const widthBackground: number = parseInt(this.props.options.baseMap.width, 10);\n    // const heightBackground: number = parseInt(this.props.options.baseMap.height, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n\n    // if (xMin < 0) {\n    //   //positionX = Math.round(clickX - xMin);\n    //   positionX = Math.round(clickX);\n    //   console.log(clickX);\n    //   console.log(positionX);\n    // } else {\n    // }\n    if (xMin > 0) {\n      positionX = Math.round(clickX - xMin);\n    } else {\n      positionX = Math.round(clickX);\n    }\n\n    if (yMax > parseInt(this.props.options.baseMap.height, 10)) {\n      //positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY - (yMax - parseInt(this.props.options.baseMap.height, 10)));\n      positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n      //positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n    } else {\n      positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n    }\n\n    // let xMinPx = 0;\n    // let xMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   xMinPx = (xMin + 100) * (widthPanel / 200);\n    //   xMaxPx = (xMax + 100) * (widthPanel / 200);\n    //   const widthInitialSpace: number = xMaxPx - xMinPx;\n    //   if (xMin < 0 && xMax < 0) {\n    //     positionX = Math.round((event.nativeEvent.offsetX - xMinPx - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2 * -1;\n    //   } else {\n    //     positionX = Math.round((event.nativeEvent.offsetX - xMinPx - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n    //   }\n    // } else {\n    //   xMinPx = xMin * (widthPanel / 100);\n    //   xMaxPx = xMax * (widthPanel / 100);\n    //   const widthInitialSpace: number = xMaxPx - xMinPx;\n    //   positionX = Math.round(((event.nativeEvent.offsetX - xMinPx) / widthInitialSpace) * 100);\n    // }\n\n    // let yMinPx = 0;\n    // let yMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   if (yMin < 0 && yMax < 0) {\n    //     yMinPx = (yMax + 100) * (heightPanel / 200);\n    //     yMaxPx = (yMin + 100) * (heightPanel / 200);\n    //   } else {\n    //     yMinPx = (yMin + 100) * (heightPanel / 200);\n    //     yMaxPx = (yMax + 100) * (heightPanel / 200);\n    //   }\n    //   const heightInitialSpace: number = yMaxPx - yMinPx;\n    //   positionY = Math.round((event.nativeEvent.offsetY - heightInitialSpace / 2 - (heightPanel - yMaxPx)) * (100 / heightInitialSpace)) * 2 * -1;\n    // } else {\n    //   yMinPx = yMin * (heightPanel / 100);\n    //   yMaxPx = yMax * (heightPanel / 100);\n    //   const heightInitialSpace: number = yMaxPx - yMinPx;\n    //   positionY = 100 - Math.round(((event.nativeEvent.offsetY - (heightPanel - yMaxPx)) / heightInitialSpace) * 100);\n    // }\n\n    if (\n      event.nativeEvent.target.id === 'initialSpace' ||\n      event.nativeEvent.target.id === 'mainPanel' ||\n      event.nativeEvent.target.id === 'Intent' ||\n      event.nativeEvent.target.id === 'oct' + this.props.options.baseMap.idSVG ||\n      event.nativeEvent.target.id === this.props.options.baseMap.idSVG\n    ) {\n      this.createPointToClick(positionX, positionY, widthInitialSpace, heightInitialSpace);\n    }\n  };\n\n  defineIdPoint = (): number => {\n    let id = 1;\n    if (this.props.options.arrayPoints.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayPoints[this.props.options.arrayPoints.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  /**\n   * to do\n   */\n  createPointToClick = (x: number, y: number, widthInitialSpace: number, heightInitialSpace: number) => {\n    const id: number = this.defineIdPoint();\n    const initTextObject: TextObject = new TextObject(\n      '',\n      false,\n      'white',\n      'black',\n      { bold: false, italic: false, underline: false },\n      true,\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: false,\n        // 'displayObjectPermanently': false,\n        addColorTextElement: false,\n        colorTextElement: 'white',\n        addColorBackElement: false,\n        colorBackElement: 'black',\n      },\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: true,\n        // 'displayObjectPermanently': false,\n        addColorTextElement: true,\n        colorTextElement: 'white',\n        addColorBackElement: true,\n        colorBackElement: 'black',\n      }\n    );\n    const linkUrl: LinkURLClass = new LinkURLClass('', '', '');\n    const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n    const newPoint: PointClass = new PointClass(\n      id,\n      linkUrl,\n      '',\n      [],\n      '',\n      initTextObject,\n      {\n        key: '',\n        unit: '',\n        format: '',\n        keyValue: '',\n        refId: '',\n        manageValue: 'avg',\n      },\n      [],\n      false,\n      false,\n      false,\n      positionParameter,\n      'point' + id.toString(),\n      '',\n      { label: 'Yes', value: 'true' },\n      { label: 'Circle', value: 'circle' },\n      //{ label: 'Medium', value: 'medium' },\n      '12',\n      { label: 'Medium', value: 'medium' },\n      '0',\n      x.toString(),\n      y.toString(),\n      'black',\n      [],\n      [],\n      widthInitialSpace.toString(),\n      heightInitialSpace.toString(),\n      x.toString(),\n      y.toString()\n    );\n\n    const newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.push(newPoint);\n\n    this.props.onOptionsChange({\n      ...this.props.options,\n      indexPoint: id,\n      arrayPoints: newArrayPoint,\n    });\n\n    this.props.options.newPoint = true;\n\n    // setTimeout(() => {\n    //   this.displayPoint(true);\n    // }, 100);\n  };\n\n  /**\n   * to do\n   */\n  displayPoint() {\n    const mapItems: JSX.Element[] = [];\n    let newArrayPoint: PointClass[] = this.props.options.arrayPoints;\n    newArrayPoint.forEach((line: PointClass) => {\n      //console.log(line);\n      const valueMainMetric = this.getValuesMainMetricPoint(line).toString();\n      this.updatePositionOrientedLink(line);\n      const valuesAuxiliaryMetrics: string[] = this.getValuesAuxiliaryMetricsPoint(line);\n      // const ratioX = parseInt(line.positionXDefault, 10) / parseInt(line.widthInitialSpaceDefault, 10);\n      // const ratioY = (parseInt(line.heightInitialSpaceDefault, 10) - parseInt(line.positionYDefault, 10)) / parseInt(line.heightInitialSpaceDefault, 10);\n      // const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n      // const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n      // const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n      // const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n      // const widthInitialSpace: number = xMaxInitialSpace - xMinInitialSpace;\n      // const heightInitialSpace: number = yMaxInitialSpace - yMinInitialSpace;\n      // let x = 0;\n      // let y = 0;\n\n      // if (this.props.options.pointIsUpdatedFromEditor) {\n      //   console.log('new coor');\n      //   x = xMinInitialSpace + parseInt(line.positionShapeX, 10);\n      //   this.props.options.loopDisplayPoint++;\n      // } else {\n      // if (parseInt(line.widthInitialSpaceDefault, 10) < widthInitialSpace) {\n      //   console.log('x >');\n      //   x = widthInitialSpace * ratioX;\n      // } else if (parseInt(line.widthInitialSpaceDefault, 10) > widthInitialSpace) {\n      //   console.log('x <');\n      //   x = xMinInitialSpace + widthInitialSpace * ratioX;\n      // } else if (parseInt(line.widthInitialSpaceDefault, 10) === widthInitialSpace) {\n      //   console.log('x =');\n      //   //x = widthInitialSpace * parseInt(line.positionShapeX, 10) / parseInt(line.widthInitialSpaceDefault, 10);\n      // }\n      //x = xMinInitialSpace + widthInitialSpace * ratioX;\n\n      // if (parseInt(line.heightInitialSpaceDefault, 10) < heightInitialSpace) {\n      //   console.log('y >');\n      //   y = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioY;\n      // } else if (parseInt(line.heightInitialSpaceDefault, 10) > heightInitialSpace) {\n      //   console.log('y <');\n      //   y = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioY;\n      // } else if (parseInt(line.heightInitialSpaceDefault, 10) === heightInitialSpace) {\n      //   console.log('y =');\n      //   y = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioY;\n      // }\n      //y = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioY;\n      //}\n\n      // const ratioX = parseInt(line.positionXDefault, 10) / parseInt(line.widthInitialSpaceDefault, 10);\n      // const ratioY =\n      //   (parseInt(line.heightInitialSpaceDefault, 10) - parseInt(line.positionYDefault, 10)) / parseInt(line.heightInitialSpaceDefault, 10);\n      // const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n      // const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n      // const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n      // const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n      // const widthInitialSpace: number = xMaxInitialSpace - xMinInitialSpace;\n      // const heightInitialSpace: number = yMaxInitialSpace - yMinInitialSpace;\n      // let x;\n\n      // if (parseInt(line.widthInitialSpaceDefault, 10) !== widthInitialSpace) {\n      //   x = xMinInitialSpace + widthInitialSpace * ratioX;\n      // } else {\n      //   x = (widthInitialSpace * parseInt(line.positionShapeX, 10)) / parseInt(line.widthInitialSpaceDefault, 10);\n      // }\n\n      // let y = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioY;\n\n      // line.positionShapeX = x.toString();\n      // line.positionShapeY = y.toString();\n\n      const item: JSX.Element = (\n        <DrawPoint\n          key={'point' + line.id.toString()}\n          drawGraphicMarker={line.drawGraphicMarker}\n          shape={line.shape}\n          size={line.sizeWidth}\n          positionShapeX={line.positionShapeX}\n          positionShapeY={line.positionShapeY}\n          label={line.label}\n          widthImage={parseInt(this.props.options.baseMap.width, 10)}\n          heightImage={parseInt(this.props.options.baseMap.height, 10)}\n          police={this.props.options.display.police}\n          sizePolice={this.props.options.display.size}\n          //style={this.props.options.display.style}\n          color={line.color}\n          idPoint={'point' + line.id.toString()}\n          name={line.name}\n          options={this.props.options}\n          onOptionsChange={this.props.onOptionsChange}\n          data={this.props.data}\n          textObject={line.textObj}\n          seuil={line.lowerLimit}\n          valueMainMetric={valueMainMetric}\n          refMainMetric={line.mainMetric.refId || ''}\n          associateOrientedLinkIn={line.associateOrientedLinksIn}\n          associateOrientedLinkOut={line.associateOrientedLinksOut}\n          labelPositionX={line.positionParameter.labelAPositionX}\n          labelPositionY={line.positionParameter.labelAPositionY}\n          tooltipPosition={line.positionParameter.tooltipPositionA}\n          auxiliaryMetrics={line.metrics}\n          valuesAuxiliaryMetrics={valuesAuxiliaryMetrics}\n          linkUrl={line.linkURL}\n          buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n          buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n          widthInitialSpaceDefault={line.widthInitialSpaceDefault}\n          heightInitialSpaceDefault={line.heightInitialSpaceDefault}\n          positionXDefault={line.positionXDefault}\n          positionYDefault={line.positionYDefault}\n        />\n      );\n      mapItems.push(item);\n      //console.log(this.props.options.loopDisplayPoint);\n      // if (this.props.options.loopDisplayPoint > 1) {\n      //   this.props.options.pointIsUpdatedFromEditor = false;\n      //   this.props.options.loopDisplayPoint = 0;\n      // }\n    });\n    // this.props.onOptionsChange({\n    //   ...this.props.options,\n    //   arrayPoints: newArrayPoint,\n    // });\n    //this.props.options.arrayPoints = newArrayPoint;\n    return <div>{mapItems}</div>;\n  }\n\n  private updatePositionOrientedLink = (point: PointClass) => {\n    const arrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    for (const orientedLink of arrayOrientedLink) {\n      for (const associateOrientedLinkIn of point.associateOrientedLinksIn) {\n        if (associateOrientedLinkIn.name === orientedLink.name) {\n          orientedLink.pointAPositionX = point.positionShapeX;\n          orientedLink.pointAPositionY = point.positionShapeY;\n        }\n      }\n      for (const associateOrientedLinkOut of point.associateOrientedLinksOut) {\n        if (associateOrientedLinkOut.name === orientedLink.name) {\n          orientedLink.pointBPositionX = point.positionShapeX;\n          orientedLink.pointBPositionY = point.positionShapeY;\n        }\n      }\n    }\n  };\n\n  /**\n   * to do\n   */\n  addAssociateOrientedLinkToPoint = (namePointIn: string, namePointOut: string, indexOrientedLinkAssociate: number) => {\n    let index = 0;\n    this.props.options.arrayPoints.forEach((point: PointClass) => {\n      const name: string = point.label || point.name;\n      if (namePointIn === name) {\n        this.props.options.arrayOrientedLinks.forEach((orientedLink: OrientedLinkClass) => {\n          if (orientedLink.id === indexOrientedLinkAssociate) {\n            this.props.options.arrayPoints[index].associateOrientedLinksIn.push({ label: orientedLink.label, name: orientedLink.name });\n          }\n        });\n      } else if (namePointOut === name) {\n        this.props.options.arrayOrientedLinks.forEach((orientedLink: OrientedLinkClass) => {\n          if (orientedLink.id === indexOrientedLinkAssociate) {\n            this.props.options.arrayPoints[index].associateOrientedLinksOut.push({ label: orientedLink.label, name: orientedLink.name });\n          }\n        });\n      }\n      index++;\n    });\n  };\n\n  /** update AssociateOrientedLinkIn of point for tootip  */\n  private updateAssociateOrientedLinkInToPoint = () => {\n    let indexPoint = 0;\n    this.props.options.arrayPoints.forEach((point) => {\n      let newAssociateLinkIn: any[] = [];\n      const namePoint: string = point.label || point.name;\n      this.props.options.arrayOrientedLinks.forEach((link) => {\n        if (link.pointIn === namePoint) {\n          newAssociateLinkIn.push({ label: link.label, name: link.name });\n        }\n      });\n      this.props.options.arrayPoints[indexPoint].associateOrientedLinksIn = newAssociateLinkIn;\n      indexPoint++;\n    });\n  };\n\n  /** update AssociateOrientedLinkOut of point for tootip  */\n  private updateAssociateOrientedLinkOutToPoint = () => {\n    let indexPoint = 0;\n    this.props.options.arrayPoints.forEach((point) => {\n      let newAssociateLinkIn: any[] = [];\n      const namePoint: string = point.label || point.name;\n      this.props.options.arrayOrientedLinks.forEach((link) => {\n        if (link.pointOut === namePoint) {\n          newAssociateLinkIn.push({ label: link.label, name: link.name });\n        }\n      });\n      this.props.options.arrayPoints[indexPoint].associateOrientedLinksOut = newAssociateLinkIn;\n      indexPoint++;\n    });\n  };\n\n  /**\n   * to do\n   */\n  resetCoordinatesToDrawLinkWithClick = () => {\n    this.props.options.coordinatesToDrawLinkWithClick[1].labelPoint = '';\n    this.props.options.coordinatesToDrawLinkWithClick[1].point = {};\n    this.props.options.coordinatesToDrawLinkWithClick[1].labelRegion = '';\n    this.props.options.coordinatesToDrawLinkWithClick[1].region = {};\n    this.props.options.coordinatesToDrawLinkWithClick[2].labelPoint = '';\n    this.props.options.coordinatesToDrawLinkWithClick[2].point = {};\n    this.props.options.coordinatesToDrawLinkWithClick[2].labelRegion = '';\n    this.props.options.coordinatesToDrawLinkWithClick[2].region = {};\n  };\n\n  /** get coordinate when use click in panel */\n  getCoordinatesToDrawOrientedLinkWithClick = (event: any) => {\n    const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n    const objectIn: any = coordinates[1];\n    const objectOut: any = coordinates[2];\n    const pointC: any = coordinates[3];\n    // const heightPanel: number = parseInt(this.props.options.baseMap.height, 10);\n    // const widthPanel: number = parseInt(this.props.options.baseMap.width, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    //const defaultReferentiel: boolean = this.props.options.coordinateSpaceInitial.defaultReferentiel;\n    // const widthInitialSpace: number = parseInt(this.props.options.baseMap.width, 10);\n    // const heightInitialSpace: number = parseInt(this.props.options.baseMap.height, 10);\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n\n    const paddingMarginLeftSimplePanel = 24;\n    let positionX = 0;\n    let positionY = 0;\n    if (xMin > 0) {\n      positionX = Math.round(event.nativeEvent.clientX - paddingMarginLeftSimplePanel - xMin);\n    } else {\n      positionX = Math.round(event.nativeEvent.clientX - paddingMarginLeftSimplePanel);\n    }\n    if (yMax > parseInt(this.props.options.baseMap.height, 10)) {\n      //positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY - (yMax - parseInt(this.props.options.baseMap.height, 10)));\n      positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n      //positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n    } else {\n      positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n    }\n    // let xMinPx = 0;\n    // let xMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   xMinPx = (xMin + 100) * (widthPanel / 200);\n    //   xMaxPx = (xMax + 100) * (widthPanel / 200);\n    //   // if (xMin < 0 && xMax < 0) {\n    //   //   xMinPx = (xMax + 100) * (widthPanel / 200);\n    //   //   xMaxPx = (xMin + 100) * (widthPanel / 200);\n    //   // }\n    // } else {\n    //   xMinPx = xMin * (widthPanel / 100);\n    //   xMaxPx = xMax * (widthPanel / 100);\n    // }\n\n    // let yMinPx = 0;\n    // let yMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   if (yMin < 0 && yMax < 0) {\n    //     yMinPx = (yMax + 100) * (heightPanel / 200);\n    //     yMaxPx = (yMin + 100) * (heightPanel / 200);\n    //   } else {\n    //     yMinPx = (yMin + 100) * (heightPanel / 200);\n    //     yMaxPx = (yMax + 100) * (heightPanel / 200);\n    //   }\n    // } else {\n    //   yMinPx = yMin * (heightPanel / 100);\n    //   yMaxPx = yMax * (heightPanel / 100);\n    // }\n\n    // const widthInitialSpace: number = xMaxPx - xMinPx;\n    // const heightInitialSpace: number = yMaxPx - yMinPx;\n\n    if (\n      event.nativeEvent.target.id === 'initialSpace' ||\n      event.nativeEvent.target.id === 'Intent' ||\n      event.nativeEvent.target.id === 'mainPanel' ||\n      event.nativeEvent.target.id === 'oct' + this.props.options.baseMap.idSVG ||\n      event.nativeEvent.target.id === this.props.options.baseMap.idSVG\n    ) {\n      // if (!defaultReferentiel) {\n      //   positionX = Math.round((event.nativeEvent.offsetX - xMinPx - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n      // } else {\n      //   positionX = Math.round(((event.nativeEvent.offsetX - xMinPx) / widthInitialSpace) * 100);\n      // }\n\n      // if (!defaultReferentiel) {\n      //   if (yMax < 0) {\n      //     positionY = Math.round((event.nativeEvent.offsetY - heightInitialSpace / 2 - (heightPanel - yMaxPx)) * (100 / heightInitialSpace)) * 2 * -1;\n      //   } else {\n      //     positionY = Math.round((event.nativeEvent.offsetY - (heightPanel - yMaxPx) - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2;\n      //   }\n      // } else {\n      //   positionY = 100 - Math.round(((event.nativeEvent.offsetY - (heightPanel - yMaxPx)) / heightInitialSpace) * 100);\n      //   //console.log(positionY);\n      // }\n\n      //positionY = Math.round((event.nativeEvent.offsetY - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2;\n      // if (yMax > 0 && yMax < 100) {\n      //   positionY = Math.round((event.nativeEvent.offsetY - (heightPanel - yMaxPx) - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2;\n      // }\n\n      if (coordinates[0].id === 0) {\n        objectIn.x = positionX;\n        //objectIn.y = yMin < 0 ? positionY * -1 : positionY;\n        objectIn.y = positionY;\n        coordinates[0].id++;\n      } else if (coordinates[0].id === 1) {\n        objectOut.x = positionX;\n        //objectOut.y = yMin < 0 ? positionY * -1 : positionY;\n        objectOut.y = positionY;\n        pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n        pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n        coordinates[0].id = 0;\n        this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n        this.resetCoordinatesToDrawLinkWithClick();\n      }\n    } else if (event.nativeEvent.target.id.startsWith('point')) {\n      const id: number = parseInt(event.nativeEvent.target.id.charAt(5) + event.nativeEvent.target.id.charAt(6), 10);\n      const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n\n      arrayPoint.forEach((point: PointClass) => {\n        if (point.id === id) {\n          const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n          const name: string = point.label || point.name;\n\n          if (coordinates[0].id === 0) {\n            objectIn.x = point.positionXDefault;\n            objectIn.y = point.positionYDefault;\n            objectIn.labelPoint = name;\n            objectIn.point = point;\n            coordinates[0].id++;\n          } else if (coordinates[0].id === 1) {\n            objectOut.x = point.positionXDefault;\n            objectOut.y = point.positionYDefault;\n            objectOut.labelPoint = name;\n            objectOut.point = point;\n            pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n            pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n            coordinates[0].id = 0;\n            this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n            this.resetCoordinatesToDrawLinkWithClick();\n          }\n        }\n      });\n    } else {\n      const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n      //let indexRegion = 0;\n      arrayRegion.forEach((region: RegionClass) => {\n        const xMin: number = parseInt(region.coords.xMin, 10);\n        const xMax: number = parseInt(region.coords.xMax, 10);\n        const yMin: number = parseInt(region.coords.yMin, 10);\n        const yMax: number = parseInt(region.coords.yMax, 10);\n\n        if (event.nativeEvent.target.id.startsWith('region')) {\n          const id: number = parseInt(event.nativeEvent.target.id.charAt(6) + event.nativeEvent.target.id.charAt(7), 10);\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n              pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else if (\n          (event.nativeEvent.target.id !== 'oct' + this.props.options.baseMap.idSVG && event.nativeEvent.target.id.startsWith('oct')) ||\n          (event.nativeEvent.target.id !== this.props.options.baseMap.idSVG &&\n            (event.nativeEvent.target.id.startsWith('path') ||\n              event.nativeEvent.target.id.startsWith('rect') ||\n              event.nativeEvent.target.id.startsWith('ellipse')))\n        ) {\n          let id = '';\n          if (this.props.options.baseMap.isUploaded) {\n            id = event.nativeEvent.target.id;\n          } else {\n            id = event.nativeEvent.target.id.substr(3);\n          }\n          if (id === region.idSVG) {\n            //console.log(region.idSVG);\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = 0;\n            positionY = 0;\n            // console.log(positionX);\n            // console.log(positionY);\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n              pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else {\n          const id: number = parseInt(event.nativeEvent.target.offsetParent.id.charAt(6) + event.nativeEvent.target.offsetParent.id.charAt(7), 10);\n\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              pointC.x = ((parseInt(objectIn.x, 10) + parseInt(objectOut.x, 10)) / 2).toString();\n              pointC.y = ((parseInt(objectIn.y, 10) + parseInt(objectOut.y, 10)) / 2).toString();\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'No', value: false }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        }\n        //indexRegion++;\n      });\n    }\n  };\n\n  getCoordinatesToDrawIncurvedOrientedLinkWithClick = (event: any) => {\n    const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n    const objectIn: any = coordinates[1];\n    const objectOut: any = coordinates[2];\n    const pointC: any = coordinates[3];\n    // const heightPanel: number = parseInt(this.props.options.baseMap.height, 10);\n    // const widthPanel: number = parseInt(this.props.options.baseMap.width, 10);\n    const initialSpace: Coord4D = this.props.options.coordinateSpaceInitial.coordinate;\n    const xMin: number = parseInt(initialSpace.xMin, 10);\n    const xMax: number = parseInt(initialSpace.xMax, 10);\n    const yMin: number = parseInt(initialSpace.yMin, 10);\n    const yMax: number = parseInt(initialSpace.yMax, 10);\n    //const defaultReferentiel: boolean = this.props.options.coordinateSpaceInitial.defaultReferentiel;\n    const widthInitialSpace: number = xMax - xMin;\n    const heightInitialSpace: number = yMax - yMin;\n\n    const paddingMarginLeftSimplePanel = 24;\n    let positionX = 0;\n    let positionY = 0;\n    if (xMin > 0) {\n      positionX = Math.round(event.nativeEvent.clientX - paddingMarginLeftSimplePanel - xMin);\n    } else {\n      positionX = Math.round(event.nativeEvent.clientX - paddingMarginLeftSimplePanel);\n    }\n    if (yMax > parseInt(this.props.options.baseMap.height, 10)) {\n      //positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY - (yMax - parseInt(this.props.options.baseMap.height, 10)));\n      positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n      //positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n    } else {\n      positionY = Math.round(heightInitialSpace - event.nativeEvent.layerY);\n    }\n    // let xMinPx = 0;\n    // let xMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   xMinPx = (xMin + 100) * (widthPanel / 200);\n    //   xMaxPx = (xMax + 100) * (widthPanel / 200);\n    //   // if (xMin < 0 && xMax < 0) {\n    //   //   xMinPx = (xMax + 100) * (widthPanel / 200);\n    //   //   xMaxPx = (xMin + 100) * (widthPanel / 200);\n    //   // }\n    // } else {\n    //   xMinPx = xMin * (widthPanel / 100);\n    //   xMaxPx = xMax * (widthPanel / 100);\n    // }\n\n    // let yMinPx = 0;\n    // let yMaxPx = 0;\n    // if (!defaultReferentiel) {\n    //   if (yMin < 0 && yMax < 0) {\n    //     yMinPx = (yMax + 100) * (heightPanel / 200);\n    //     yMaxPx = (yMin + 100) * (heightPanel / 200);\n    //   } else {\n    //     yMinPx = (yMin + 100) * (heightPanel / 200);\n    //     yMaxPx = (yMax + 100) * (heightPanel / 200);\n    //   }\n    // } else {\n    //   yMinPx = yMin * (heightPanel / 100);\n    //   yMaxPx = yMax * (heightPanel / 100);\n    // }\n\n    // const widthInitialSpace: number = xMaxPx - xMinPx;\n    // const heightInitialSpace: number = yMaxPx - yMinPx;\n\n    if (\n      event.nativeEvent.target.id === 'mainPanel' ||\n      event.nativeEvent.target.id === 'initialSpace' ||\n      event.nativeEvent.target.id === 'Intent' ||\n      event.nativeEvent.target.id === 'oct' + this.props.options.baseMap.idSVG ||\n      event.nativeEvent.target.id === this.props.options.baseMap.idSVG\n    ) {\n      // if (!defaultReferentiel) {\n      //   positionX = Math.round((event.nativeEvent.offsetX - xMinPx - widthInitialSpace / 2) * (100 / widthInitialSpace)) * 2;\n      // } else {\n      //   positionX = Math.round(((event.nativeEvent.offsetX - xMinPx) / widthInitialSpace) * 100);\n      // }\n\n      // if (!defaultReferentiel) {\n      //   if (yMax < 0) {\n      //     positionY = Math.round((event.nativeEvent.offsetY - heightInitialSpace / 2 - (heightPanel - yMaxPx)) * (100 / heightInitialSpace)) * 2 * -1;\n      //   } else {\n      //     positionY = Math.round((event.nativeEvent.offsetY - (heightPanel - yMaxPx) - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2;\n      //   }\n      // } else {\n      //   positionY = 100 - Math.round(((event.nativeEvent.offsetY - (heightPanel - yMaxPx)) / heightInitialSpace) * 100);\n      // }\n\n      // if (yMax > 0 && yMax < 100) {\n      //   positionY = Math.round((event.nativeEvent.offsetY - (heightPanel - yMaxPx) - heightInitialSpace / 2) * (100 / heightInitialSpace)) * 2;\n      // }\n\n      if (coordinates[0].id === 0) {\n        objectIn.x = positionX;\n        // objectIn.y = yMin < 0 ? positionY * -1 : positionY;\n        objectIn.y = positionY;\n        coordinates[0].id++;\n      } else if (coordinates[0].id === 1) {\n        objectOut.x = positionX;\n        // objectOut.y = yMin < 0 ? positionY * -1 : positionY;\n        objectOut.y = positionY;\n        coordinates[0].id++;\n      } else if (coordinates[0].id === 2) {\n        pointC.x = positionX;\n        //pointC.y = yMin < 0 ? positionY * -1 : positionY;\n        pointC.y = positionY;\n        coordinates[0].id = 0;\n        this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n        this.resetCoordinatesToDrawLinkWithClick();\n      }\n    } else if (event.nativeEvent.target.id.startsWith('point')) {\n      const id: number = parseInt(event.nativeEvent.target.id.charAt(5) + event.nativeEvent.target.id.charAt(6), 10);\n      const arrayPoint: PointClass[] = this.props.options.arrayPoints;\n\n      arrayPoint.forEach((point: PointClass) => {\n        if (point.id === id) {\n          const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n          const name: string = point.label || point.name;\n\n          if (coordinates[0].id === 0) {\n            objectIn.x = point.positionShapeX;\n            objectIn.y = point.positionShapeY;\n            objectIn.labelPoint = name;\n            objectIn.point = point;\n            coordinates[0].id++;\n          } else if (coordinates[0].id === 1) {\n            objectOut.x = point.positionShapeX;\n            objectOut.y = point.positionShapeY;\n            objectOut.labelPoint = name;\n            objectOut.point = point;\n            coordinates[0].id++;\n          } else if (coordinates[0].id === 2) {\n            pointC.x = point.positionShapeX;\n            pointC.y = point.positionShapeY;\n            coordinates[0].id = 0;\n            this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n            this.resetCoordinatesToDrawLinkWithClick();\n          }\n        }\n      });\n    } else {\n      const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n\n      arrayRegion.forEach((region: RegionClass) => {\n        const xMin: number = parseInt(region.coords.xMin, 10);\n        const xMax: number = parseInt(region.coords.xMax, 10);\n        const yMin: number = parseInt(region.coords.yMin, 10);\n        const yMax: number = parseInt(region.coords.yMax, 10);\n\n        if (event.nativeEvent.target.id.startsWith('region')) {\n          const id: number = parseInt(event.nativeEvent.target.id.charAt(6) + event.nativeEvent.target.id.charAt(7), 10);\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 2) {\n              pointC.x = positionX;\n              pointC.y = positionY;\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else if (\n          (event.nativeEvent.target.id !== 'oct' + this.props.options.baseMap.idSVG && event.nativeEvent.target.id.startsWith('oct')) ||\n          (event.nativeEvent.target.id !== this.props.options.baseMap.idSVG &&\n            (event.nativeEvent.target.id.startsWith('path') ||\n              event.nativeEvent.target.id.startsWith('rect') ||\n              event.nativeEvent.target.id.startsWith('ellipse')))\n        ) {\n          let id = '';\n          if (this.props.options.baseMap.isUploaded) {\n            id = event.nativeEvent.target.id;\n          } else {\n            id = event.nativeEvent.target.id.substr(3);\n          }\n          if (id === region.idSVG) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n            positionX = 0;\n            positionY = 0;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 2) {\n              pointC.x = positionX;\n              pointC.y = positionY;\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        } else {\n          const id: number = parseInt(event.nativeEvent.target.offsetParent.id.charAt(6) + event.nativeEvent.target.offsetParent.id.charAt(7), 10);\n\n          if (id === region.id) {\n            const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n\n            positionX = (xMin + xMax) / 2;\n            positionY = (yMax + yMin) / 2;\n            if (coordinates[0].id === 0) {\n              objectIn.x = positionX;\n              objectIn.y = positionY;\n              objectIn.labelRegion = region.label;\n              objectIn.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 1) {\n              objectOut.x = positionX;\n              objectOut.y = positionY;\n              objectOut.labelRegion = region.label;\n              objectOut.region = region;\n              coordinates[0].id++;\n            } else if (coordinates[0].id === 2) {\n              pointC.x = positionX;\n              pointC.y = positionY;\n              coordinates[0].id = 0;\n              this.createOrientedLinkToClick({ label: 'Yes', value: true }, widthInitialSpace.toString(), heightInitialSpace.toString());\n              this.resetCoordinatesToDrawLinkWithClick();\n            }\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * to do\n   */\n  defineIdOrientedLink = (): number => {\n    let id = 1;\n    if (this.props.options.arrayOrientedLinks.length === 0) {\n      return id;\n    } else {\n      id = this.props.options.arrayOrientedLinks[this.props.options.arrayOrientedLinks.length - 1].id + 1;\n      return id;\n    }\n  };\n\n  /**\n   * to do\n   */\n  createOrientedLinkToClick = (isIncurved: SelectableValue<boolean>, widthInitialSpace: string, heightInitialSpace: string) => {\n    const coordinates = this.props.options.coordinatesToDrawLinkWithClick;\n    const id: number = this.defineIdOrientedLink();\n    const name: string = 'orientedLink' + id.toString();\n    const zIndex: number = this.props.options.zIndexOrientedLink + 1;\n    const objectIn: any = coordinates[1];\n    const objectOut: any = coordinates[2];\n    const pointC: any = coordinates[3];\n    const initTextObject: TextObject = new TextObject(\n      '',\n      false,\n      'white',\n      'black',\n      { bold: false, italic: false, underline: false },\n      true,\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: false,\n        // 'displayObjectPermanently': false,\n        addColorTextElement: false,\n        colorTextElement: 'white',\n        addColorBackElement: false,\n        colorBackElement: 'black',\n      },\n      {\n        legendElement: '',\n        numericFormatElement: '5',\n        unit: '',\n        displayObjectInTooltip: true,\n        // 'displayObjectPermanently': false,\n        addColorTextElement: true,\n        colorTextElement: 'white',\n        addColorBackElement: true,\n        colorBackElement: 'black',\n      }\n    );\n    const parametrageMetric: LinkURLClass = new LinkURLClass('', '', '');\n    const positionParameter: PositionParameterClass = new PositionParameterClass('0', '0', '0', '0', {}, {});\n\n    const newOrientedLink: OrientedLinkClass = new OrientedLinkClass(\n      id,\n      parametrageMetric,\n      '',\n      [],\n      '',\n      initTextObject,\n      {\n        key: '',\n        unit: '',\n        format: '',\n        keyValue: '',\n        refId: '',\n        manageValue: 'avg',\n      },\n      [],\n      false,\n      false,\n      false,\n      positionParameter,\n      name,\n      { label: 'Monodirectional', value: 'AB' },\n      '9',\n      objectIn.x.toString(),\n      objectIn.y.toString(),\n      '#5794F2',\n      objectOut.x.toString(),\n      objectOut.y.toString(),\n      '#E54658',\n      '',\n      '',\n      objectIn.labelPoint,\n      objectOut.labelPoint,\n      objectIn.labelRegion,\n      objectOut.labelRegion,\n      zIndex,\n      pointC.x,\n      pointC.y,\n      isIncurved,\n      {\n        key: '',\n        unit: '',\n        format: '',\n        keyValue: '',\n        refId: '',\n        manageValue: 'avg',\n      },\n      [],\n      widthInitialSpace,\n      heightInitialSpace,\n      objectIn.x.toString(),\n      objectIn.y.toString(),\n      objectOut.x.toString(),\n      objectOut.y.toString(),\n      pointC.x,\n      pointC.y\n    );\n    const newArrayOrientedLink: OrientedLinkClass[] = this.props.options.arrayOrientedLinks;\n    newArrayOrientedLink.push(newOrientedLink);\n    //const newValue = true;\n    this.props.onOptionsChange({\n      ...this.props.options,\n      arrayOrientedLinks: newArrayOrientedLink,\n      indexOrientedLink: id,\n      zIndexOrientedLink: zIndex,\n      newOrientedLink: true,\n    });\n\n    this.props.options.newOrientedLink = true;\n\n    this.addAssociateOrientedLinkToPoint(objectIn.labelPoint || '', objectOut.labelPoint || '', newOrientedLink.id);\n\n    setTimeout(() => {\n      this.displayOrientedLink();\n    }, 100);\n  };\n\n  /**\n   * to do\n   */\n  displayOrientedLink() {\n    const arrayOrientedLink = this.props.options.arrayOrientedLinks;\n    const mapItems: JSX.Element[] = [];\n    let item: JSX.Element = <div></div>;\n    arrayOrientedLink.forEach((orientedLink: OrientedLinkClass) => {\n      //console.log(orientedLink);\n      const valueMainMetricA: string = this.getValuesMainMetricOrientedLink(orientedLink).toString();\n      const valueMainMetricB: string = this.getValuesMainMetricOrientedLinkB(orientedLink).toString();\n      this.getValuesMainMetricOrientedLinkB(orientedLink);\n      const valuesAuxiliaryMetrics: string[] = this.getValuesAuxiliaryMetricsOrientedLink(orientedLink);\n      const valuesAuxiliaryMetricsB: string[] = this.getValuesAuxiliaryMetricsOrientedLinkB(orientedLink);\n      // const ratioXA = parseInt(orientedLink.pointAPositionXDefault, 10) / parseInt(orientedLink.widthInitialSpaceDefault, 10);\n      // const ratioYA =\n      //   (parseInt(orientedLink.heightInitialSpaceDefault, 10) - parseInt(orientedLink.pointAPositionYDefault, 10)) /\n      //   parseInt(orientedLink.heightInitialSpaceDefault, 10);\n      // const ratioXB = parseInt(orientedLink.pointBPositionXDefault, 10) / parseInt(orientedLink.widthInitialSpaceDefault, 10);\n      // const ratioYB =\n      //   (parseInt(orientedLink.heightInitialSpaceDefault, 10) - parseInt(orientedLink.pointBPositionYDefault, 10)) /\n      //   parseInt(orientedLink.heightInitialSpaceDefault, 10);\n      // const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n      // const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n      // const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n      // const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n      // const widthInitialSpace: number = xMaxInitialSpace - xMinInitialSpace;\n      // const heightInitialSpace: number = yMaxInitialSpace - yMinInitialSpace;\n      // let xA;\n      // let xB;\n      // console.log(orientedLink);\n\n      // if (parseInt(orientedLink.widthInitialSpaceDefault, 10) !== widthInitialSpace) {\n      //   xA = xMinInitialSpace + widthInitialSpace * ratioXA;\n      //   xB = xMinInitialSpace + widthInitialSpace * ratioXB;\n      // } else {\n      //   xA = (widthInitialSpace * parseInt(orientedLink.pointAPositionX, 10)) / parseInt(orientedLink.widthInitialSpaceDefault, 10);\n      //   xB = (widthInitialSpace * parseInt(orientedLink.pointBPositionX, 10)) / parseInt(orientedLink.widthInitialSpaceDefault, 10);\n      // }\n\n      // let yA = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioYA;\n      // let yB = parseInt(this.props.options.baseMap.height, 10) - yMaxInitialSpace + heightInitialSpace * ratioYB;\n\n      // orientedLink.pointAPositionX = xA.toString();\n      // orientedLink.pointBPositionX = xB.toString();\n      // orientedLink.pointAPositionY = yA.toString();\n      // orientedLink.pointBPositionY = yB.toString();\n      // console.log(yA);\n      // console.log(yB);\n\n      item = (\n        <DrawOrientedLink\n          key={'orientedLink' + orientedLink.id.toString()}\n          id={orientedLink.id.toString()}\n          orientationLink={orientedLink.orientationLink.value || ''}\n          pointAPositionX={orientedLink.pointAPositionXDefault}\n          pointAPositionY={orientedLink.pointAPositionYDefault}\n          pointBPositionX={orientedLink.pointBPositionXDefault}\n          pointBPositionY={orientedLink.pointBPositionYDefault}\n          colorA={orientedLink.colorCoordinateA}\n          colorB={orientedLink.colorCoordinateB}\n          associatePointIn={orientedLink.pointIn}\n          associatePointOut={orientedLink.pointOut}\n          associateRegionIn={orientedLink.regionIn}\n          associateRegionOut={orientedLink.regionOut}\n          widthImage={parseInt(this.props.options.baseMap.width, 10)}\n          heightImage={parseInt(this.props.options.baseMap.height, 10)}\n          label={orientedLink.label}\n          name={orientedLink.name}\n          valueMainMetricA={valueMainMetricA}\n          valueMainMetricB={valueMainMetricB}\n          refMainMetricA={orientedLink.mainMetric.refId || ''}\n          refMainMetricB={orientedLink.mainMetricB.refId || ''}\n          options={this.props.options}\n          onOptionsChange={this.props.onOptionsChange}\n          data={this.props.data}\n          textObject={orientedLink.textObj}\n          seuil={orientedLink.lowerLimit}\n          traceBorder={orientedLink.traceBorder}\n          labelAPositionX={orientedLink.positionParameter.labelAPositionX}\n          labelAPositionY={orientedLink.positionParameter.labelAPositionY}\n          labelBPositionX={orientedLink.positionParameter.labelBPositionX}\n          labelBPositionY={orientedLink.positionParameter.labelBPositionY}\n          tooltipPositionA={orientedLink.positionParameter.tooltipPositionA}\n          tooltipPositionB={orientedLink.positionParameter.tooltipPositionB}\n          zIndex={orientedLink.zIndex}\n          pointCPositionX={orientedLink.pointCPositionX}\n          pointCPositionY={orientedLink.pointCPositionY}\n          isIncurved={orientedLink.isIncurved}\n          auxiliaryMetrics={orientedLink.metrics}\n          auxiliaryMetricsB={orientedLink.metricsB}\n          valuesAuxiliaryMetrics={valuesAuxiliaryMetrics}\n          valuesAuxiliaryMetricsB={valuesAuxiliaryMetricsB}\n          police={this.props.options.display.police}\n          sizePolice={this.props.options.display.size}\n          linkUrl={orientedLink.linkURL}\n          size={orientedLink.size}\n          widthInitialSpaceDefault={orientedLink.widthInitialSpaceDefault}\n          heightInitialSpaceDefault={orientedLink.heightInitialSpaceDefault}\n          positionXADefault={orientedLink.pointAPositionXDefault}\n          positionYADefault={orientedLink.pointAPositionYDefault}\n          positionXBDefault={orientedLink.pointBPositionXDefault}\n          positionYBDefault={orientedLink.pointBPositionYDefault}\n          positionXCDefault={orientedLink.pointCPositionXDefault}\n          positionYCDefault={orientedLink.pointCPositionYDefault}\n        />\n      );\n      mapItems.push(item);\n    });\n    this.updateAssociateOrientedLinkInToPoint();\n    this.updateAssociateOrientedLinkOutToPoint();\n    return <div>{mapItems}</div>;\n  }\n\n  /**\n   * to do\n   */\n  getValuesMainMetricPoint(point: PointClass) {\n    reqMetricPoint(point, this.props);\n    //this.getValuesMainMetric(point.mainMetric, undefined, point);\n    let result = 0;\n    // if(result = 0 || NaN){\n    //   console.log('zone1');\n    // } else{\n    //   console.log('lol'); // Pass in console\n    // }\n    result = getResultQuery(point.mainMetric) || NaN;\n    return result;\n  }\n\n  getValuesMainMetricOrientedLink(orientedLink: OrientedLinkClass): number {\n    reqMetricOrientedLink(orientedLink, this.props);\n    //this.getValuesMainMetric(orientedLink.mainMetric, orientedLink, undefined, false);\n    let result = 0;\n    // if(result = 0 || NaN){\n    //   console.log('zone2');\n    // } else{\n    //   console.log('lol'); // Pass in console\n    // }\n    result = getResultQuery(orientedLink.mainMetric) || NaN;\n    return result;\n  }\n\n  getValuesMainMetricOrientedLinkB(orientedLink: OrientedLinkClass) {\n    reqMetricOrientedLink(orientedLink, this.props);\n    //this.getValuesMainMetric(orientedLink.mainMetricB, orientedLink, undefined, true);\n    let result = 0;\n    // if(result = 0 || NaN){\n    //   console.log('zone3');\n    // } else{\n    //   console.log('lol'); // Pass in console\n    // }\n    result = getResultQuery(orientedLink.mainMetricB) || NaN;\n    return result;\n  }\n\n  /**\n   * to do\n   */\n  // getValuesMainMetric(mainMetric: Metric, orientedLink?: OrientedLinkClass, point?: PointClass, isBidirectionnal?: boolean) {\n  //   let valueMainMetric = 0;\n  //   let totalValuesCount = 0;\n  //   const key: string = mainMetric.key;\n  //   const keyValue: string = mainMetric.keyValue;\n  //   if (mainMetric.returnQuery && mainMetric.returnQuery.length > 0) {\n  //     mainMetric.returnQuery.forEach((line: DataFrame) => {\n  //       if (line.fields[0].labels) {\n  //         if (key !== '' && keyValue !== '') {\n  //           if (line.fields[0].labels[key] === keyValue) {\n  //             const countValues: number = line.fields[0].values.length;\n  //             for (let i = 0; i < countValues; i++) {\n  //               if (line.fields[0].values.get(i)) {\n  //                 totalValuesCount++;\n  //                 valueMainMetric += line.fields[0].values.get(i);\n  //               }\n  //             }\n  //           }\n  //         } else {\n  //           const countValues: number = line.fields[0].values.length;\n  //           for (let i = 0; i < countValues; i++) {\n  //             if (line.fields[0].values.get(i)) {\n  //               totalValuesCount++;\n  //               valueMainMetric += line.fields[0].values.get(i);\n  //             }\n  //           }\n  //         }\n  //       }\n  //     });\n  //     if (orientedLink) {\n  //       if (!isBidirectionnal) {\n  //         if (mainMetric.manageValue === 'avg') {\n  //           orientedLink.valueMainMetricA = (valueMainMetric / totalValuesCount).toString();\n  //         } else if (mainMetric.manageValue === 'sum') {\n  //           orientedLink.valueMainMetricA = valueMainMetric.toString();\n  //         } else if (mainMetric.manageValue === 'err') {\n  //           if (totalValuesCount > 1) {\n  //             orientedLink.valueMainMetricA = 'error';\n  //           } else {\n  //             orientedLink.valueMainMetricA = valueMainMetric.toString();\n  //           }\n  //         }\n  //       } else {\n  //         if (mainMetric.manageValue === 'avg') {\n  //           orientedLink.valueMainMetricB = (valueMainMetric / totalValuesCount).toString();\n  //         } else if (mainMetric.manageValue === 'sum') {\n  //           orientedLink.valueMainMetricB = valueMainMetric.toString();\n  //         } else if (mainMetric.manageValue === 'err') {\n  //           if (totalValuesCount > 1) {\n  //             orientedLink.valueMainMetricB = 'error';\n  //           } else {\n  //             orientedLink.valueMainMetricB = valueMainMetric.toString();\n  //           }\n  //         }\n  //       }\n  //     } else if (point) {\n  //       if (mainMetric.manageValue === 'avg') {\n  //         point.valueMetric = (valueMainMetric / totalValuesCount).toString();\n  //       } else if (mainMetric.manageValue === 'sum') {\n  //         point.valueMetric = valueMainMetric.toString();\n  //       } else if (mainMetric.manageValue === 'err') {\n  //         if (totalValuesCount > 1) {\n  //           point.valueMetric = 'error';\n  //         } else {\n  //           point.valueMetric = valueMainMetric.toString();\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n\n  getValuesAuxiliaryMetricsPoint = (point: PointClass): string[] => {\n    reqMetricAuxPoint(point, this.props);\n    return this.getValuesAuxiliaryMetrics(point.metrics, point.mainMetric);\n  };\n\n  getValuesAuxiliaryMetricsOrientedLink = (orientedLink: OrientedLinkClass): string[] => {\n    reqMetricAuxOrientedLink(orientedLink, this.props);\n    return this.getValuesAuxiliaryMetrics(orientedLink.metrics, orientedLink.mainMetric);\n  };\n\n  getValuesAuxiliaryMetricsOrientedLinkB = (orientedLink: OrientedLinkClass): string[] => {\n    reqMetricAuxOrientedLink(orientedLink, this.props);\n    return this.getValuesAuxiliaryMetrics(orientedLink.metricsB, orientedLink.mainMetricB);\n  };\n\n  getValuesAuxiliaryMetrics = (auxiliaryMetrics: Metric[], mainMetric: Metric): string[] => {\n    let valueAuxiliaryMetric: string[] = [];\n    //const countMetrics: number = auxiliaryMetrics.length;\n    if (auxiliaryMetrics.length < 1) {\n      auxiliaryMetrics.forEach((metric: Metric) => {\n        let countTotalValues = 0;\n        let resultTotalValues = 0;\n        let result = '';\n        if (metric.returnQuery && metric.returnQuery.length > 0) {\n          let numberLoop: number = metric.returnQuery?.length || 0;\n          if (metric.key !== '' && metric.keyValue !== '') {\n            for (let i = 0; i < numberLoop; i++) {\n              let line = metric.returnQuery[i];\n              if (line.fields[0].labels) {\n                if (mainMetric.refId !== '') {\n                  //console.log(mainMetric);\n                  if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                    if (line.fields[0].labels[metric.key] === metric.keyValue) {\n                      const countValues: number = line.fields[0].values.length;\n                      for (let i = 0; i < countValues; i++) {\n                        if (line.fields[0].values.get(i)) {\n                          resultTotalValues += line.fields[0].values.get(i);\n                          countTotalValues++;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (mainMetric.refId !== '') {\n              for (let i = 0; i < numberLoop; i++) {\n                let line = metric.returnQuery[i];\n                if (line.fields[0].labels) {\n                  if (line.fields[0].labels[mainMetric.key] === mainMetric.keyValue || (mainMetric.key === '' && mainMetric.keyValue === '')) {\n                    const countValues: number = line.fields[0].values.length;\n                    for (let i = 0; i < countValues; i++) {\n                      if (line.fields[0].values.get(i)) {\n                        resultTotalValues += line.fields[0].values.get(i);\n                        countTotalValues++;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (metric.manageValue === 'avg') {\n            result = (resultTotalValues / countTotalValues).toString();\n          } else if (metric.manageValue === 'sum') {\n            result = resultTotalValues.toString();\n          } else if (metric.manageValue === 'err') {\n            if (countTotalValues > 1) {\n              result = 'error';\n            } else {\n              result = resultTotalValues.toString();\n            }\n          }\n        }\n        if (result !== '') {\n          valueAuxiliaryMetric.push(result);\n        }\n      });\n    }\n    return valueAuxiliaryMetric;\n  };\n\n  changeValueButtonToLink = () => {\n    this.setState({\n      valueButton: 'link',\n    });\n  };\n\n  changeValueButtonToIncurvedLink = () => {\n    this.setState({\n      valueButton: 'incurvedLink',\n    });\n  };\n\n  changeValueButtonToPoint = () => {\n    this.setState({\n      valueButton: 'point',\n    });\n  };\n\n  getCoordinates = (event: any) => {\n    const valueButton = this.state.valueButton;\n\n    if (this.state.numberClickDiv === 0) {\n      return;\n    }\n    if (valueButton === 'link') {\n      this.getCoordinatesToDrawOrientedLinkWithClick(event);\n    } else if (valueButton === 'incurvedLink') {\n      this.getCoordinatesToDrawIncurvedOrientedLinkWithClick(event);\n    } else if (valueButton === 'point') {\n      this.getCoordinatesToDrawPointWithClick(event);\n    }\n  };\n  // Close Legend\n  callInFunc = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.resetButtonManage(2);\n  };\n\n  /**\n   * add button click to manage region, point, oriented link, position legend\n   */\n  updateButtonCss = () => {\n    const final: JSX.Element = (\n      <div id=\"allButton\" style={{ marginTop: '1%', marginBottom: '50px' }}>\n        <Button style={{ marginLeft: '5%' }} variant={this.state.buttonManage[0] ? 'danger' : 'primary'} className=\"button\" onClick={this.addNode}>\n          Add Region\n        </Button>\n\n        <Button style={{ marginLeft: '5%' }} variant={this.state.buttonManage[3] ? 'danger' : 'primary'} className=\"button\" onClick={this.addPoint}>\n          Add Point\n        </Button>\n\n        <Button style={{ marginLeft: '5%' }} variant={this.state.buttonManage[1] ? 'danger' : 'primary'} className=\"button\" onClick={this.addLink}>\n          Add Oriented Link\n        </Button>\n\n        <Button\n          style={{ marginLeft: '5%' }}\n          variant={this.state.buttonManage[4] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.addIncurvedLink}\n        >\n          Add Incurved Oriented Link\n        </Button>\n\n        <Button\n          id=\"legnd\"\n          style={{ marginLeft: '5%' }}\n          variant={this.state.buttonManage[2] ? 'danger' : 'primary'}\n          className=\"button\"\n          onClick={this.callInFunc} // Method Close legend\n        >\n          Position Legend\n        </Button>\n\n        <Button style={{ marginLeft: '4%' }} id=\"more\" onClick={this.ZoomIn} variant={'primary'}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n        </Button>\n        <Button id=\"less\" onClick={this.ZoomOut} variant={'primary'}>\n          <i className=\"fa fa-minus\" aria-hidden=\"true\"></i>\n        </Button>\n      </div>\n    );\n    this.setState({\n      allActionButton: final,\n    });\n  };\n\n  callMethod = async () => {\n    if (this.state.numberClickDiv === 0) {\n      this.setState({ numberClickDiv: 1 });\n    } else {\n      await this.setAsyncButtonManage({\n        buttonManage: [false, false, false, false, false],\n      });\n      this.setState({\n        numberClickDiv: 0,\n      });\n      this.updateButtonCss();\n    }\n  };\n\n  setAsyncButtonManage = (state: { buttonManage: boolean[] }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  };\n\n  resetButtonManage = async (index: number) => {\n    let tmp: boolean[] = this.state.buttonManage;\n    const oldValue: boolean = tmp[index];\n\n    tmp = [false, false, false, false, false];\n    if (oldValue) {\n      tmp[index] = false;\n      this.setState({\n        numberClickDiv: 0,\n      });\n    } else {\n      if (index === 2) {\n        this.setState({\n          hiddenLegend: false,\n          valueButton: '',\n        });\n      }\n      tmp[index] = true;\n      this.setState({\n        numberClickDiv: 1,\n      });\n    }\n    await this.setAsyncButtonManage({\n      buttonManage: tmp,\n    });\n    this.updateButtonCss();\n  };\n\n  addNode = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[0] ? false : true,\n    }));\n    this.resetButtonManage(0);\n    this.changeValueButtonToPoint();\n  };\n\n  addPoint = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[3] ? false : true,\n      valueButton: 'point',\n    }));\n    this.resetButtonManage(3);\n    this.changeValueButtonToPoint();\n  };\n\n  addLink = () => {\n    if (this.state.buttonAddIncurvedLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[1] ? false : true,\n      buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n    }));\n    this.resetButtonManage(1);\n    this.changeValueButtonToLink();\n  };\n\n  addIncurvedLink = () => {\n    if (this.state.buttonAddLinkIsActive) {\n      this.setState((prevState: State) => ({\n        buttonAddLinkIsActive: !prevState.buttonAddLinkIsActive,\n      }));\n    }\n    this.setState((prevState: State) => ({\n      nbClickButton: prevState.buttonManage[4] ? false : true,\n      buttonAddIncurvedLinkIsActive: !prevState.buttonAddIncurvedLinkIsActive,\n    }));\n    this.resetButtonManage(4);\n    this.changeValueButtonToIncurvedLink();\n  };\n\n  positionLegend = (e: any) => {\n    if (!this.state.buttonManage[2]) {\n      return;\n    }\n\n    const newLegend: Legend = this.state.legend;\n    const sizeTitlePanel = 28;\n\n    newLegend.x = e.nativeEvent.offsetX;\n    newLegend.y =\n      this.props.options.baseMap.height > e.nativeEvent.offsetY\n        ? parseInt(e.nativeEvent.offsetY, 10)\n        : parseInt(e.nativeEvent.offsetY, 10) - sizeTitlePanel;\n    newLegend.hiddenLegend = false;\n    this.setState({\n      legend: newLegend,\n    });\n    this.props.onOptionsChange({\n      ...this.props.options,\n      legend: newLegend,\n    });\n  };\n\n  // Close legend click on close\n  handleClick = (event: any): void => {\n    const newLegend: Legend = this.state.legend;\n\n    newLegend.hiddenLegend = !this.state.legend.hiddenLegend;\n    this.setState((prevState: State) => ({\n      legend: newLegend,\n    }));\n  };\n\n  // SVG check url\n  tt = () => {\n    const test = document.getElementById('path836');\n    if (test) {\n      test.style.fill = 'red';\n    }\n  };\n\n  chargeRegion = () => {\n    this.setState({\n      displayRegion: (\n        <DrawRectangle\n          key=\"limitCoor\"\n          color=\"orange\"\n          coordinateInitial={this.props.options.coordinateSpaceInitial}\n          id=\"initialSpace\"\n          onOptionsChange={this.props.onOptionsChange}\n          options={this.props.options}\n          data={this.props.data}\n          // isEnabled={!this.state.buttonManage[1]}\n          buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n          buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n        />\n      ),\n    });\n  };\n\n  editIdString = (str: string): string => {\n    const cpyString: string = str.slice();\n    let strSplit: string[] = cpyString.split('id=\"');\n    let newStr = '';\n\n    for (let i = 0; strSplit.length > i; i++) {\n      if (strSplit[i]) {\n        if (i > 0) {\n          const tt: string = strSplit[i];\n          strSplit[i] = 'id=\"oct' + tt;\n        }\n        newStr = newStr + strSplit[i];\n      }\n    }\n    return newStr;\n  };\n\n  /**\n   * update button css when mount component\n   */\n  // not display Button of Panel if it is in the mode View\n  checkIfDisplayButton = () => {\n    const url: string = window.location.href;\n    const arrayUrl: string[] = url.split('&');\n    let canDisplayButton = false;\n    for (const element of arrayUrl) {\n      if (element === 'edit') {\n        canDisplayButton = true;\n      }\n    }\n    if (!canDisplayButton) {\n      this.props.onOptionsChange({\n        ...this.props.options,\n        displayButton: false,\n      });\n    }\n  };\n\n  /**\n   * update button css when mount component\n   */\n  componentDidMount = async () => {\n    // console.log('mount Panel');\n\n    // not display Button of Panel if it is in the mode View\n    this.checkIfDisplayButton();\n\n    // save background in state\n    this.setState({\n      currentImage: this.props.options.baseMap.image,\n    });\n\n    // load backgroundSVG\n    if (this.props.options.baseMap.modeSVG && this.props.options.baseMap.image !== '') {\n      if (this.props.options.baseMap.isUploaded) {\n        let width = '';\n        let height = '';\n        const text = this.props.options.baseMap.image;\n        this.setState({ svg: text });\n        const result = /id=[\"']\\w*[\"']/i.exec(text);\n        const resultWidth = /width=[\"']\\w*[\"']/i.exec(text);\n        if (resultWidth && resultWidth.length > 0) {\n          width = resultWidth[0].split('\"')[1];\n        }\n        const resultHeight = /height=[\"']\\w*[\"']/i.exec(text);\n        if (resultHeight && resultHeight.length > 0) {\n          height = resultHeight[0].split('\"')[1];\n        }\n        if (result && result.length > 0) {\n          const id: string[] = result[0].split('\"');\n          if (id.length > 1) {\n            const newBaseMap: Background = this.props.options.baseMap;\n            newBaseMap.idSVG = id[1];\n            newBaseMap.layerImage = this.props.options.baseMap.image;\n            newBaseMap.width = parseInt(width || '0', 10).toString() || '';\n            newBaseMap.height = parseInt(height || '0', 10).toString() || '';\n            this.props.onOptionsChange({\n              ...this.props.options,\n              baseMap: newBaseMap,\n            });\n          }\n        }\n        this.chargeRegion();\n        // const newStr: string = this.editIdString(this.state.svg);\n        // const background: Background = this.props.options.baseMap;\n        // background.layerImage = newStr;\n        // this.props.onOptionsChange({ ...this.props.options, baseMap: background });\n      } else {\n        fetch(this.props.options.baseMap.image)\n          .then((res) => res.text())\n          .then((text) => {\n            this.setState({ svg: text });\n            const result = /id=[\"']\\w*[\"']/i.exec(text);\n            if (result && result.length > 0) {\n              const id: string[] = result[0].split('\"');\n              if (id.length > 1) {\n                const documentId = document.getElementById(id[1]);\n                if (documentId) {\n                  const newBaseMap: Background = this.props.options.baseMap;\n                  newBaseMap.idSVG = id[1];\n                  // newBaseMap.width = documentId.getAttribute('width') || '';\n                  // newBaseMap.height = documentId.getAttribute('height') || '';\n                  newBaseMap.width = parseInt(documentId.getAttribute('width') || '0', 10).toString() || '';\n                  newBaseMap.height = parseInt(documentId.getAttribute('height') || '0', 10).toString() || '';\n                  this.props.onOptionsChange({\n                    ...this.props.options,\n                    baseMap: newBaseMap,\n                  });\n                }\n              }\n            }\n          })\n          .then(() => this.chargeRegion())\n          .then(() => {\n            const newStr: string = this.editIdString(this.state.svg);\n            const background: Background = this.props.options.baseMap;\n            background.layerImage = newStr;\n            this.props.onOptionsChange({ ...this.props.options, baseMap: background });\n          });\n      }\n    } else {\n      this.chargeRegion();\n    }\n\n    //Set value initialSpace with width and height of background\n    this.props.options.coordinateSpaceInitial.coordinate.xMax = this.props.options.baseMap.width;\n    this.props.options.coordinateSpaceInitial.coordinate.yMax = this.props.options.baseMap.height;\n\n    this.updateButtonCss();\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.state.currentImage !== this.props.options.baseMap.image) {\n      this.componentDidMount();\n    }\n    //Set width initialSpace if new width in display\n    if (\n      this.props.options.baseMap.width !== this.props.options.coordinateSpaceInitial.coordinate.xMax &&\n      !this.props.options.updateOnlyInitialSpace\n    ) {\n      //console.log('newWidth');\n      this.props.options.coordinateSpaceInitial.coordinate.xMax = this.props.options.baseMap.width;\n    }\n    //Set height initialSpace if new height in display\n    if (\n      this.props.options.baseMap.height !== this.props.options.coordinateSpaceInitial.coordinate.yMax &&\n      !this.props.options.updateOnlyInitialSpace\n    ) {\n      //console.log('newHeight');\n      this.props.options.coordinateSpaceInitial.coordinate.yMax = this.props.options.baseMap.height;\n    }\n    // if (this.props.options.baseMap.image !== prevProps.options.baseMap.image) {\n    //   this.componentDidMount();\n    // }\n    if (this.props !== prevProps) {\n      this.chargeRegion();\n    }\n  }\n\n  // Zoom in Panel\n  /********************************  Zoom Panel*********************************** */\n\n  // Zoom Plus\n  ZoomIn = () => {\n    const intialfirst = document.getElementById('more');\n    intialfirst?.addEventListener('click', () => {\n      let elmnt = document.getElementById('mainPanel');\n      if (elmnt) {\n        elmnt.style.transform += 'scale(1.01,1.01)';\n      }\n    });\n  };\n\n  // Zoom Negative\n\n  ZoomOut = () => {\n    const intialsecond = document.getElementById('less');\n    intialsecond?.addEventListener('click', () => {\n      let elmnt = document.getElementById('mainPanel');\n      if (elmnt) {\n        elmnt.style.transform += 'scale(0.99,0.99)';\n      }\n      //console.log('-');\n    });\n  };\n  // Zoom Initial\n  // ZoomInitial = () => {\n\n  //   const intialsecond = document.getElementById('init');\n  //   intialsecond?.addEventListener('click', () => {\n  //     const elmnt = document.getElementById('mainPanel');\n\n  //     if(elmnt ){\n  //       elmnt.style.transform = 'scale(1,1)';\n  //     }\n\n  //   });\n  // };\n\n  private displayTooltipSVG = (event: any) => {\n    let idSVG = '';\n    if (this.props.options.baseMap.isUploaded) {\n      idSVG = event.target.id;\n    } else {\n      idSVG = event.target.id.substring(3);\n    }\n    const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n    let newDataSVG: DataTooltipRegionSVG = { idSVG: idSVG, x: '', y: '' };\n    for (const region of arrayRegions) {\n      if (region.idSVG === idSVG) {\n        let xSVG = 0;\n        let ySVG = 0;\n        let widthSVG = 0;\n        let heightSVG = 0;\n        let positionX = '';\n        let positionY = '';\n        //console.log(idSVG);\n        if (event.target.localName === 'rect') {\n          //console.log('rect');\n          xSVG = parseInt(event.target.attributes['x'].nodeValue, 10);\n          ySVG = parseInt(event.target.attributes['y'].nodeValue, 10);\n          widthSVG = parseInt(event.target.attributes['width'].nodeValue, 10);\n          heightSVG = parseInt(event.target.attributes['height'].nodeValue, 10);\n          positionX = (xSVG + widthSVG).toString();\n          positionY = (ySVG - heightSVG / 2).toString();\n        } else if (event.target.localName === 'ellipse') {\n          //console.log('ellipse');\n          xSVG = parseInt(event.target.attributes['cx'].nodeValue, 10);\n          ySVG = parseInt(event.target.attributes['cy'].nodeValue, 10);\n          widthSVG = parseInt(event.target.attributes['rx'].nodeValue, 10) * 2;\n          heightSVG = parseInt(event.target.attributes['ry'].nodeValue, 10) * 2;\n          positionX = xSVG.toString();\n          positionY = ySVG.toString();\n        } else if (event.target.localName === 'path') {\n          //console.log('path');\n          const allValues: string = event.target.attributes['d'].nodeValue;\n          const arrayAllValues: string[] = allValues.split(' ');\n          let iX = -2;\n          let xMin = 1000000;\n          let xMax = 0;\n          let iY = -1;\n          let yMin = 1000000;\n          let yMax = 0;\n          for (let i = 0; i < arrayAllValues.length; i++) {\n            let valueToCheck = parseInt(arrayAllValues[i], 10);\n            if (i === iX + 3) {\n              if (valueToCheck < xMin) {\n                xMin = valueToCheck;\n              }\n              if (valueToCheck > xMax) {\n                xMax = valueToCheck;\n              }\n              iX = i;\n            }\n            if (i === iY + 3) {\n              if (valueToCheck < yMin) {\n                yMin = valueToCheck;\n              }\n              if (valueToCheck > yMax) {\n                yMax = valueToCheck;\n              }\n              iY = i;\n            }\n          }\n          xSVG = xMin;\n          ySVG = yMin;\n          widthSVG = xMax - xMin;\n          // heightSVG = xMax - xMin;\n          positionX = (xSVG + widthSVG).toString();\n          positionY = ySVG.toString();\n        }\n        newDataSVG.x = positionX;\n        newDataSVG.y = positionY;\n        this.setState({\n          dataTooltipSVG: newDataSVG,\n        });\n        const tooltipSVG: any = document.getElementById('tooltipSVG');\n        if (tooltipSVG) {\n          tooltipSVG.style.display = 'initial';\n        }\n      }\n    }\n  };\n\n  private hideTooltipSVG = (event: any) => {\n    let idSVG = '';\n    if (this.props.options.baseMap.isUploaded) {\n      idSVG = event.target.id;\n    } else {\n      idSVG = event.target.id.substring(3);\n    }\n    const arrayRegions: RegionClass[] = this.props.options.regionCoordinateSpace;\n    for (const region of arrayRegions) {\n      if (region.idSVG === idSVG) {\n        const tooltipSVG: any = document.getElementById('tooltipSVG');\n        tooltipSVG.style.display = 'none';\n      }\n    }\n  };\n\n  // Tooltip in Svg\n  tooltip_SVG = () => {\n    const red = document.getElementById('part1');\n\n    red?.addEventListener('mouseenter', () => {\n      red.addEventListener('mouseover', () => {\n        const tooltip = document.createElement('span');\n        const texttest = document.createTextNode('rectanglered');\n        tooltip.appendChild(texttest);\n        red.appendChild(tooltip).style.position = 'absolute';\n        red.appendChild(tooltip).style.backgroundColor = '#000000';\n        red.appendChild(tooltip).style.padding = '8px';\n        red.appendChild(tooltip).style.float = 'top';\n        red.appendChild(tooltip).style.color = '#d8d9da';\n        red.appendChild(tooltip).style.boxShadow = '0 0 2px rgba(0, 0, 0, 0.5)';\n        red.appendChild(tooltip).style.borderRadius = '2px';\n        red.appendChild(tooltip).style.fontWeight = '500';\n        red.addEventListener('mouseout', () => {\n          red.appendChild(tooltip).style.visibility = 'hidden';\n        });\n      });\n      const yellow = document.getElementById('part2');\n      yellow?.addEventListener('mouseenter', () => {\n        yellow.addEventListener('mouseover', () => {\n          const tooltip = document.createElement('span');\n          const texttest = document.createTextNode('rectangleyellow');\n          tooltip.appendChild(texttest);\n          yellow.appendChild(tooltip).style.position = 'absolute';\n          yellow.appendChild(tooltip).style.backgroundColor = '#000000';\n          yellow.appendChild(tooltip).style.padding = '8px';\n          yellow.appendChild(tooltip).style.float = 'top';\n          yellow.appendChild(tooltip).style.color = '#d8d9da';\n          yellow.appendChild(tooltip).style.boxShadow = '0 0 2px rgba(0, 0, 0, 0.5)';\n          yellow.appendChild(tooltip).style.borderRadius = '2px';\n          yellow.appendChild(tooltip).style.fontWeight = '500';\n          yellow.addEventListener('mouseout', () => {\n            yellow.appendChild(tooltip).style.visibility = 'hidden';\n          });\n        });\n        const rect = document.getElementById('carre');\n        rect?.addEventListener('mouseenter', () => {\n          rect.addEventListener('mouseover', () => {\n            const tooltip = document.createElement('span');\n            const texttest = document.createTextNode('rectanglegreen');\n            tooltip.appendChild(texttest);\n            rect.appendChild(tooltip).style.position = 'absolute';\n            rect.appendChild(tooltip).style.backgroundColor = '#000000';\n            rect.appendChild(tooltip).style.padding = '8px';\n            rect.appendChild(tooltip).style.marginTop = '20%';\n            rect.appendChild(tooltip).style.color = '#d8d9da';\n            rect.appendChild(tooltip).style.boxShadow = '0 0 2px rgba(0, 0, 0, 0.5)';\n            rect.appendChild(tooltip).style.borderRadius = '2px';\n            rect.appendChild(tooltip).style.fontWeight = '500';\n            rect.addEventListener('mouseout', () => {\n              rect.appendChild(tooltip).style.visibility = 'hidden';\n            });\n          });\n        });\n      });\n    });\n  };\n\n  /*************************************test create tooltip **********************************************************/\n\n  SVG_PathImage = (event: any) => {\n    this.displayTooltipSVG(event);\n    const elementSVG: any = event.target;\n    const parentElementSVG: any = elementSVG.parentNode;\n    let idSVG = '';\n    if (this.props.options.baseMap.isUploaded) {\n      idSVG = event.target.id;\n    } else {\n      idSVG = event.target.id.substring(3);\n    }\n    const arrayRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n    for (const region of arrayRegion) {\n      if (region.idSVG === idSVG) {\n        const linkUrl: string = region.linkURL.followLink;\n        if (linkUrl && !document.getElementById('a' + idSVG) && !this.state.buttonAddIncurvedLinkIsActive && !this.state.buttonAddLinkIsActive) {\n          const aElement = document.createElementNS('http://www.w3.org/2000/svg', 'a');\n          aElement.setAttribute('id', 'a' + idSVG);\n          aElement.setAttribute('href', linkUrl);\n          aElement.appendChild(elementSVG);\n          parentElementSVG.appendChild(aElement);\n        }\n      }\n    }\n    // for (const line of this.props.options.regionCoordinateSpace) {\n    //   if (line.mode) {\n    //     const id: HTMLElement | null = document.getElementById('oct' + line.idSVG);\n    //     if (id) {\n    //       // const valueQuery = getResultQuery(line.mainMetric);\n    //       const test = document.getElementById('jeSuisLa' + line.id);\n    //       if (test) {\n    //         test.style.fill = 'red';\n    //       } else {\n    //         const textObj: TextObject = line.textObj;\n    //         if (\n    //           !textObj.isTextTooltip ||\n    //           (textObj.generateObjectText && textObj.valueGenerateObjectText && !textObj.valueGenerateObjectText.displayObjectInTooltip)\n    //         ) {\n    //           const title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n    //           title.setAttribute('fill', 'yellow');\n    //           title.setAttributeNS('http://www.w3.org/1999/xlink', 'fill', 'yellow');\n    //           title.setAttribute('fill', 'red');\n    //           title.setAttributeNS('title', 'fill', 'red');\n    //           const text = getInfoDisplayRegion(line, this.props);\n\n    //           title.innerHTML = text.tooltip.modeText || '';\n    //           // title.textContent = valueQuery ? valueQuery.toString() : '';\n    //           title.id = 'jeSuisLa' + line.id;\n    //           title.style.fill = 'red';\n    //           id.appendChild(title);\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  };\n\n  fillCoordinate = (): JSX.Element => {\n    const { options } = this.props;\n    const styleRegion = {\n      position: 'absolute',\n      width: options.baseMap.width + 'px',\n      height: options.baseMap.height + 'px',\n      top: '15%',\n      left: 0,\n    } as React.CSSProperties;\n    // const xMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMin, 10);\n    // const xMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.xMax, 10);\n    // const yMinInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMin, 10);\n    // const yMaxInitialSpace = parseInt(options.coordinateSpaceInitial.coordinate.yMax, 10);\n    let mapItems: JSX.Element[];\n\n    mapItems = options.regionCoordinateSpace.map((line: RegionClass, index: number) => (\n      <DrawRectangleExtend\n        key={'drawRectangleExtend' + index.toString()}\n        uneCoor={line}\n        useLimit={false}\n        limit={options.coordinateSpaceInitial.coordinate}\n        onOptionsChange={this.props.onOptionsChange}\n        options={this.props.options}\n        data={this.props.data}\n        id={'region' + line.id.toString()}\n        //isEnabled={true}\n        buttonAddLinkIsActive={this.state.buttonAddLinkIsActive}\n        buttonAddIncurvedLinkIsActive={this.state.buttonAddIncurvedLinkIsActive}\n        widthInitialSpaceDefault={line.widthInitialSpaceDefault}\n        heightInitialSpaceDefault={line.heightInitialSpaceDefault}\n      />\n    ));\n    return <ul style={styleRegion}>{mapItems}</ul>;\n  };\n\n  /*************************************** create link regionbyid**************************************** */\n\n  // CreateLinkArea = () => {\n  //   // All Id in SVG Test\n  //   const allidSvg = document.getElementById('octsvg12');\n  //   allidSvg?.addEventListener('click', () => {\n  //     const elms = allidSvg.querySelectorAll('[id]');\n  //     console.log(elms);\n  //   });\n\n  // Test Svg Christophe search ID corrrigé\n\n  // const allidSvg3 = document.getElementById('octsvg12');\n  // allidSvg3?.addEventListener('click', () => {\n  //   const elms = allidSvg3.querySelectorAll('[id]');\n  //   console.log(elms);\n  // });\n  // });\n  // All Region in SVG\n  // const allidSvg2 = document.getElementById('octsvg12');\n  // allidSvg2?.addEventListener('click', () => {\n  // this.props.options.regionCoordinateSpace.forEach(region => {\n  //   console.log(region.idSVG);\n  //   console.log(region.linkURL.followLink);\n  // const dam = allidSvg2.querySelectorAll('[id]');\n  // console.log(dam);\n  // console.log('loua');\n  // });\n  // });\n\n  // const elms = document.querySelectorAll('[id]');\n  // for (var i = 0; i < elms.length; i++) {\n  //   let lpo = document.getElementById('octsvg213');\n  //   lpo?.addEventListener('click', () => {\n  //     console.log('rer');\n  //   });\n  //   let lpo1 = document.getElementById('octsvg213');\n  //   lpo1?.addEventListener('click', () => {\n  //     console.log('rer1');\n  //   });\n  //   let lpo2 = document.getElementById('octsvg213');\n  //   lpo2?.addEventListener('click', () => {\n  //     console.log('rer2');\n  //   });\n  // }\n  // };\n\n  getValuesAuxiliaryMetricsRegionSVG = (region: RegionClass): string[] => {\n    reqMetricAuxRegion(region, this.props);\n    return this.getValuesAuxiliaryMetrics(region.metrics, region.mainMetric);\n  };\n\n  private getConvertValueAuxMetrics = (valueBrut: string, region: RegionClass): string => {\n    let result = '';\n    const decimal: string = region.textObj.generateAuxiliaryElement.numericFormatElement;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n    const unit: string = region.textObj.generateAuxiliaryElement.unit;\n    if (decimal !== '') {\n      result = parseFloat(valueBrut).toPrecision(roundValue);\n    } else {\n      result = valueBrut;\n    }\n    return result + ' ' + unit;\n  };\n\n  private displayAuxiliaryMetricsRegionSVG = (region: RegionClass): JSX.Element => {\n    let html: JSX.Element[] = [];\n    const valuesAuxMetrics: string[] = this.getValuesAuxiliaryMetrics(region.metrics, region.mainMetric);\n    const auxMetrics: Metric[] = region.metrics;\n    const addColorText: boolean = region.textObj.generateAuxiliaryElement.addColorTextElement;\n    const addColorBack: boolean = region.textObj.generateAuxiliaryElement.addColorBackElement;\n    const legend: string = region.textObj.generateAuxiliaryElement.legendElement;\n    let colorText = '';\n    let colorBack = '';\n\n    if (addColorText) {\n      colorText = region.textObj.generateAuxiliaryElement.colorTextElement;\n    } else {\n      colorText = 'white';\n    }\n\n    if (addColorBack) {\n      colorBack = region.textObj.generateAuxiliaryElement.colorBackElement;\n    } else {\n      colorBack = 'black';\n    }\n\n    const styleTitle = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleTitle2 = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '10px',\n      marginTop: '5px',\n      marginLeft: '5px',\n      marginBottom: '0px',\n      color: colorText,\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    const styleContent = {\n      fontFamily: this.props.options.display.police,\n      fontSize: '9px',\n      marginLeft: '10px',\n      marginBottom: '0px',\n      color: colorText,\n      whiteSpace: 'nowrap',\n      //backgroundColor: colorBack,\n    } as React.CSSProperties;\n\n    if (auxMetrics.length > 0) {\n      html.push(\n        <p key={region.id + 'contentToolTip1'} style={styleTitle}>\n          Auxiliary Metric\n        </p>\n      );\n      html.push(\n        <p key={region.idSVG + 'contentToolTip2'} style={styleTitle}>\n          {legend}\n        </p>\n      );\n      let index = 1;\n      for (const metric of auxMetrics) {\n        const valueAuxMetric: string = this.getConvertValueAuxMetrics(valuesAuxMetrics[index - 1], region);\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip3'} style={styleTitle2}>\n            + Metric {index}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip4'} style={styleContent}>\n            - Value : {valueAuxMetric}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip5'} style={styleContent}>\n            - Key : {metric.key}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip6'} style={styleContent}>\n            - KeyValue : {metric.keyValue}\n          </p>\n        );\n        html.push(\n          <p key={index + 'region' + region.idSVG + 'contentToolTip7'} style={styleContent}>\n            - Type : {metric.manageValue}\n          </p>\n        );\n        index++;\n      }\n    }\n    return <div style={{ backgroundColor: colorBack }}>{html}</div>;\n  };\n\n  private defineMainMetric = (region: RegionClass): string => {\n    let result = '';\n    const legend: string = region.textObj.valueGenerateObjectText.legendElement;\n    //console.log('legend-tooltip');\n    //console.log(region.textObj.valueGenerateObjectText);\n    //console.log(legend);\n    const unit: string = region.textObj.valueGenerateObjectText.unit;\n    const decimal: string = region.textObj.valueGenerateObjectText.numericFormatElement;\n    //const roundMetrics: number = parseInt(decimal, 10) || 1;\n    const roundValue: number = parseInt(decimal, 10) || 1;\n    const mainMetric: number = getResultQuery(region.mainMetric) || 0;\n\n    if (decimal !== '') {\n      result = mainMetric.toPrecision(roundValue) + ' ' + unit;\n    } else {\n      result = mainMetric + ' ' + unit;\n    }\n    if (legend) {\n      result = legend + ': ' + result;\n    }\n    return result;\n  };\n\n  private defineTextDecoration = (region: RegionClass): string => {\n    const mainStyle: Style = region.textObj.style;\n    let result = '';\n    if (mainStyle.underline) {\n      result = 'underline';\n    } else {\n      if (this.props.options.display.style.underline) {\n        result = 'underline';\n      } else {\n        result = 'none';\n      }\n    }\n    return result;\n  };\n\n  private defineFontStyle = (region: RegionClass): string => {\n    const mainStyle: Style = region.textObj.style;\n    let result = '';\n    if (mainStyle.italic) {\n      result = 'italic';\n    } else {\n      if (this.props.options.display.style.italic) {\n        result = 'italic';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n\n  private defineFontWeight = (region: RegionClass): any => {\n    const mainStyle: Style = region.textObj.style;\n    let result = '';\n    if (mainStyle.bold) {\n      result = 'bold';\n    } else {\n      if (this.props.options.display.style.bold) {\n        result = 'bold';\n      } else {\n        result = 'normal';\n      }\n    }\n    return result;\n  };\n  // Close Legend\n\n  private stopDisplayLegend = () => {\n    this.callInFunc();\n    this.setState({\n      hiddenLegend: true,\n    });\n  };\n\n  private htmlTooltipRegionSVG = (): JSX.Element => {\n    let regionSVG: RegionClass = initRegionCoordinateSpace(1000);\n    for (const region of this.props.options.regionCoordinateSpace) {\n      if (region.idSVG === this.state.dataTooltipSVG.idSVG) {\n        regionSVG = region;\n      }\n    }\n\n    const styleMainTooltipSVG = {\n      display: 'none',\n      position: 'absolute',\n      top: parseInt(this.state.dataTooltipSVG.y, 10),\n      left: parseInt(this.state.dataTooltipSVG.x, 10),\n      zIndex: 9999,\n      width: 'auto',\n      border: '1px solid black',\n      borderRadius: '5px',\n      backgroundColor: 'black',\n      padding: 5,\n    } as React.CSSProperties;\n\n    const styleLabelTooltipSVG = {\n      textDecoration: this.defineTextDecoration(regionSVG),\n      fontStyle: this.defineFontStyle(regionSVG),\n      fontWeight: this.defineFontWeight(regionSVG),\n      fontSize: this.props.options.display.size,\n      fontFamily: this.props.options.display.police,\n      color: regionSVG.textObj.colorText,\n      backgroundColor: regionSVG.textObj.colorBack,\n    } as React.CSSProperties;\n\n    const styleMainMetricTooltipSVG = {\n      textDecoration: this.defineTextDecoration(regionSVG),\n      fontStyle: this.defineFontStyle(regionSVG),\n      fontWeight: this.defineFontWeight(regionSVG),\n      color: regionSVG.textObj.valueGenerateObjectText.addColorTextElement ? regionSVG.textObj.valueGenerateObjectText.colorTextElement : 'white',\n      backgroundColor: regionSVG.textObj.valueGenerateObjectText.addColorBackElement\n        ? regionSVG.textObj.valueGenerateObjectText.colorBackElement\n        : 'black',\n      fontSize: this.props.options.display.size,\n      fontFamily: this.props.options.display.police,\n    } as React.CSSProperties;\n\n    const styleElementTooltipSVG = {\n      color: 'white',\n      fontSize: this.props.options.display.size,\n      fontFamily: this.props.options.display.police,\n    } as React.CSSProperties;\n\n    const html: JSX.Element = (\n      <div\n        id=\"tooltipSVG\"\n        style={styleMainTooltipSVG}\n        onMouseOver={(event: any) => {\n          const tooltipSVG: any = document.getElementById('tooltipSVG');\n          if (event.target.id === 'tooltipSVG' || event.target.parentElement.id === 'tooltipSVG') {\n            tooltipSVG.style.display = 'initial';\n          }\n        }}\n        onMouseOut={(event: any) => {\n          const tooltipSVG: any = document.getElementById('tooltipSVG');\n          if (event.target.id !== 'tooltipSVG' || event.target.parentElement.id !== 'tooltipSVG') {\n            tooltipSVG.style.display = 'none';\n          }\n        }}\n      >\n        {regionSVG.textObj.isTextTooltip && <p style={styleLabelTooltipSVG}>{regionSVG.label}</p>}\n        {regionSVG.textObj.generateObjectText && regionSVG.textObj.valueGenerateObjectText.displayObjectInTooltip && (\n          <p style={styleMainMetricTooltipSVG}>{this.defineMainMetric(regionSVG)}</p>\n        )}\n        {regionSVG.textObj.generateAuxiliaryElement.displayObjectInTooltip && this.displayAuxiliaryMetricsRegionSVG(regionSVG)}\n        <a style={styleElementTooltipSVG} href={regionSVG.linkURL.hoveringTooltipLink}>\n          {regionSVG.linkURL.hoveringTooltipText}\n        </a>\n      </div>\n    );\n    return html;\n  };\n\n  /*************************************** create link regionbyid**************************************** */\n\n  /*************************************test create tooltip **********************************************************/\n  //https://raw.githubusercontent.com/atosorigin/grafana-weathermap-panel/master/docs/resource/demo01-background.svg\n  /** render */\n  render() {\n    // console.log('simplePanel');\n    // console.log(this.props.options.regionCoordinateSpace);\n    let xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    let xMinMarginLeft = 0;\n    if (xMinInitialSpace < 0) {\n      xMinMarginLeft = xMinInitialSpace * -1;\n    }\n    if (isNaN(xMinInitialSpace)) {\n      xMinInitialSpace = 0;\n    }\n    let yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    let yMinMarginBottom = 0;\n    if (yMinInitialSpace < 0) {\n      yMinMarginBottom = yMinInitialSpace * -1;\n    }\n    if (isNaN(yMinInitialSpace)) {\n      yMinInitialSpace = 0;\n    }\n    let yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    let yMaxMarginTop = yMaxInitialSpace - parseInt(this.props.options.baseMap.height, 10);\n    if (isNaN(yMaxMarginTop)) {\n      yMaxMarginTop = 0;\n    }\n    let styleBackground;\n    if (this.props.options.baseMap.modeSVG) {\n      styleBackground = {\n        // position: 'absolute',\n        // textAlign: 'center',\n        // backgroundRepeat: 'no-repeat',\n        height: this.props.options.baseMap.height + 'px',\n        width: this.props.options.baseMap.width + 'px',\n        marginLeft: xMinMarginLeft,\n        marginTop: yMaxMarginTop,\n        marginBottom: yMinMarginBottom,\n        // opacity: 0.8,\n        // zIndex: 4,\n      } as React.CSSProperties;\n    } else {\n      styleBackground = {\n        position: 'absolute',\n        textAlign: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: 'url(' + this.props.options.baseMap.image + ')',\n        backgroundSize: this.props.options.baseMap.width + 'px' + ' ' + this.props.options.baseMap.height + 'px',\n        height: this.props.options.baseMap.height + 'px',\n        width: this.props.options.baseMap.width + 'px',\n        marginLeft: xMinMarginLeft,\n        marginTop: yMaxMarginTop,\n        marginBottom: yMinMarginBottom,\n        opacity: 0.8,\n        zIndex: 4,\n      } as React.CSSProperties;\n    }\n\n    const styleSVG = {\n      position: 'absolute',\n      zIndex: 2,\n    } as React.CSSProperties;\n\n    const styleSVG_2 = {\n      position: 'absolute',\n      textAlign: 'center',\n      backgroundRepeat: 'no-repeat',\n      height: this.props.options.baseMap.height + 'px',\n      width: this.props.options.baseMap.width + 'px',\n      marginLeft: xMinMarginLeft,\n      marginTop: yMaxMarginTop,\n      marginBottom: yMinMarginBottom,\n      opacity: 0,\n      zIndex: 2,\n    } as React.CSSProperties;\n\n    const defaultStyle = {\n      height: '100vh',\n      width: '100vw',\n      fontFamily: this.props.options.display.police,\n      fontSize: this.props.options.display.size,\n      fontStyle: this.props.options.display.style.italic ? 'italic' : 'normal',\n      fontWeight: this.props.options.display.style.bold ? 'bold' : 'normal',\n      textDecoration: this.props.options.display.style.underline ? 'underline' : 'none',\n    } as React.CSSProperties;\n\n    return (\n      <CustomScrollbar autoHide={false} hideHorizontalTrack>\n        <div\n          id=\"zoom\"\n          style={{\n            display: 'inline-flex',\n            marginTop: '-7px',\n            marginLeft: '86%',\n          }}\n        >\n          {/* <Button id=\"init\" onClick={this.ZoomInitial} variant={'secondary'}>\n            =\n          </Button> */}\n        </div>\n        <div style={{ textAlign: 'left', position: 'relative', display: 'inline-grid' }}>\n          {this.props.options.displayButton && this.state.allActionButton}\n        </div>\n        <section style={defaultStyle} onClick={this.positionLegend}>\n          <div>\n            {this.state.buttonManage[0] && (\n              <div\n                style={{\n                  width: '200px',\n                  position: 'absolute',\n                  overflowY: 'scroll',\n                  marginLeft: '20%',\n                  marginRight: '20%',\n                  marginTop: '20%',\n                  marginBottom: '20%',\n                  border: '5px solid aliceblue',\n                  height: '40%',\n                }}\n              >\n                <Modal title=\"Add Region\" onDismiss={this.addNode} onClickBackdrop={this.addNode} isOpen={this.state.nbClickButton}>\n                  <AddCoordinate\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={true}\n                    isPoint={false}\n                    isLink={false}\n                  />\n                </Modal>\n              </div>\n            )}\n            {!this.state.hiddenLegend && (\n              <LegendComponant\n                options={this.props.options}\n                onOptionsChange={this.props.onOptionsChange}\n                data={this.props.data}\n                // legend={this.props.options.legend}\n                {...this.props.options.legend}\n                callBack={this.handleClick}\n                callBackClose={this.stopDisplayLegend}\n              />\n            )}\n            <div onClick={this.callMethod}></div>\n            <div onClick={this.getCoordinates} id=\"coordinateSpaces\" style={styleBackground}>\n              {this.defineLimit()}\n              <div>\n                <div className=\"tooltip\" />\n                {/* {this.fillCoordinate()} */}\n                <div id=\"mainPanel\" style={{ position: 'absolute', zIndex: 1 }}>\n                  <div\n                    style={styleSVG}\n                    // onMouseOver={this.SVG_PathImage}\n                    dangerouslySetInnerHTML={{ __html: this.state.svg }}\n                  />\n                  <div\n                    id=\"Intent\"\n                    style={styleSVG_2}\n                    onMouseOver={this.SVG_PathImage}\n                    // && this.CreateLinkArea\n                    // && this.displayTooltipSVG\n                    // onMouseOver={event => {\n                    //   this.displayTooltipSVG(event);\n                    // }}\n                    onMouseOut={(event) => {\n                      this.hideTooltipSVG(event);\n                    }}\n                    dangerouslySetInnerHTML={{ __html: this.props.options.baseMap.layerImage }}\n                  />\n                  {/* <div onClick={this.CreateLinkArea}></div> */}\n                  {this.htmlTooltipRegionSVG()}\n                  {this.displayOrientedLink()}\n                  {this.fillCoordinate()}\n                  {this.displayPoint()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </CustomScrollbar>\n    );\n  }\n}\n","import React from 'react';\nimport { SimpleOptions, CoordinateSpaceInitial } from 'types';\n\nimport { FormField, Switch, FormLabel } from '@grafana/ui';\nimport { PanelEditorProps } from '@grafana/data';\n\nimport { editGoodParameter } from 'Functions/EditParameter/editGoodParameter';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** value to initial coordinate space */\n  arrayCoor: CoordinateSpaceInitial;\n}\n\n/**\n * initialize space for space coordinate\n */\nclass CoordinateSpaceInitialClass extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      arrayCoor: this.props.options.coordinateSpaceInitial,\n    };\n  }\n\n  /**\n   * Call parent to send arrayCoor data\n   */\n  callBack = () => {\n    this.props.onOptionsChange({\n      ...this.props.options,\n      coordinateSpaceInitial: this.state.arrayCoor,\n    });\n  };\n\n  /**\n   * Use function if value input change\n   * @param {string} currentTarget new value of input\n   * @param {string} name name of input\n   */\n  _handleChange(currentTarget: string, name: string) {\n    this.props.options.updateOnlyInitialSpace = true;\n    this.setState((prevState) => ({\n      arrayCoor: editGoodParameter(\n        name,\n        prevState.arrayCoor,\n        currentTarget,\n        parseInt(this.props.options.baseMap.width, 10),\n        parseInt(this.props.options.baseMap.height, 10)\n      ),\n    }));\n    this.callBack();\n  }\n\n  /**\n   * Get value of input with state.arrayCoor\n   * @param {number} id id of element\n   * @param {string} param name of input\n   * @returns {string} value of the array element\n   */\n  getGoodValue(id: number, param: string): string {\n    let value: string;\n\n    value = '';\n    if (param.startsWith('positionXMin')) {\n      value = this.state.arrayCoor.coordinate.xMin;\n    } else if (param.startsWith('positionXMax')) {\n      value = this.state.arrayCoor.coordinate.xMax;\n    } else if (param.startsWith('positionYMin')) {\n      value = this.state.arrayCoor.coordinate.yMin;\n    } else if (param.startsWith('positionYMax')) {\n      value = this.state.arrayCoor.coordinate.yMax;\n    }\n    return value;\n  }\n\n  /** change value for switch */\n  onChangeSwitchDisplayInitialSpace = () => {\n    const newInitialSpace: CoordinateSpaceInitial = this.state.arrayCoor;\n    newInitialSpace.displayArea = !newInitialSpace.displayArea;\n    this.setState({\n      arrayCoor: newInitialSpace,\n    });\n    this.callBack();\n  };\n\n  // onChangeSwitchDefaultInitialSpace = () => {\n  //   const newInitialSpace: CoordinateSpaceInitial = this.state.arrayCoor;\n  //   newInitialSpace.defaultReferentiel = !newInitialSpace.defaultReferentiel;\n  //   this.setState({\n  //     arrayCoor: newInitialSpace,\n  //   });\n  //   if (newInitialSpace.defaultReferentiel) {\n  //     this.props.options.coordinateSpaceInitial.coordinate = {\n  //       xMin: '0',\n  //       xMax: '100',\n  //       yMin: '0',\n  //       yMax: '100',\n  //     };\n  //   } else {\n  //     this.props.options.coordinateSpaceInitial.coordinate = {\n  //       xMin: '-100',\n  //       xMax: '100',\n  //       yMin: '-100',\n  //       yMax: '100',\n  //     };\n  //   }\n  //   this.callBack();\n  // };\n\n  // displayValueReferentiel = (): string => {\n  //   let result = '';\n  //   if (this.props.options.coordinateSpaceInitial.defaultReferentiel) {\n  //     result = '(0 : 100)';\n  //   } else {\n  //     result = '(-100 : 100)';\n  //   }\n  //   return result;\n  // };\n\n  componentDidMount = () => {\n    // console.log('initialSpace');\n    // this.props.options.coordinateSpaceInitial.coordinate.xMax = this.props.options.baseMap.width;\n    // this.props.options.coordinateSpaceInitial.coordinate.yMax = this.props.options.baseMap.height;\n  };\n\n  componentDidUpdate = () => {\n    // if (this.props.options.)\n    // console.log('update initialSPace');\n  };\n\n  /**\n   * HTML render\n   */\n  render() {\n    return (\n      <div className=\"coordinateSpaceInitial\">\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Display space initial</FormLabel>\n          <Switch label=\"\" checked={this.state.arrayCoor.displayArea} onChange={this.onChangeSwitchDisplayInitialSpace} />\n        </div>\n        {/* <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Default referentiel {this.displayValueReferentiel()}</FormLabel>\n          <Switch label=\"\" checked={this.state.arrayCoor.defaultReferentiel} onChange={this.onChangeSwitchDefaultInitialSpace} />\n        </div> */}\n        <FormField\n          label=\"X min\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"xMin\"\n          value={this.state.arrayCoor.coordinate.xMin}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionXMin')}\n          placeholder={'X minimum'}\n        />\n\n        <FormField\n          label=\"X max\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"xMax\"\n          value={this.state.arrayCoor.coordinate.xMax}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionXMax')}\n          placeholder={'X max'}\n        />\n\n        <FormField\n          label=\"Y min\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"yMin\"\n          value={this.state.arrayCoor.coordinate.yMin}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionYMin')}\n          placeholder={'Y minimum'}\n        />\n\n        <FormField\n          label=\"Y max\"\n          labelWidth={15}\n          inputWidth={20}\n          type=\"text\"\n          required={true}\n          name=\"yMax\"\n          value={this.state.arrayCoor.coordinate.yMax}\n          onChange={(event: {\n            /**\n             * get currentTarget in event element\n             */\n            currentTarget: HTMLInputElement;\n          }) => this._handleChange(event.currentTarget.value, 'positionYMax')}\n          placeholder={'Y max'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CoordinateSpaceInitialClass;\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions, ImportFile, Background } from '../types';\nimport { Button, FormField } from '@grafana/ui';\nimport ImportInput from 'components/importInput';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  selectedFile: any;\n  readerFile: FileReader;\n}\n\nclass DropZone extends React.Component<Props, State> {\n  fileReader: any = null;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      readerFile: new FileReader(),\n    };\n  }\n\n  onChangeHandler = (event: any) => {\n    this.setState({\n      selectedFile: event.target.files[0],\n      readerFile: new FileReader(),\n    });\n  };\n\n  upload = () => {\n    this.state.selectedFile.onload = function (event: any) {\n      if (event.target?.result != null) {\n        this.props.options.saveImportFile.push(this.state.readerFile.result as string);\n        this.props.onOptionsChange({ ...this.props.options, saveImportFile: this.props.options.saveImportFile });\n      }\n    };\n    const extensionFile = this.state.selectedFile.name.split('.')[1];\n    if (extensionFile === 'jpg' || extensionFile === 'png' || extensionFile === 'gif') {\n      this.state.readerFile.readAsDataURL(this.state.selectedFile);\n    } else {\n      this.state.readerFile.readAsText(this.state.selectedFile);\n    }\n  };\n\n  save = () => {\n    if (this.state.readerFile.result != null) {\n      this.props.options.saveImportFile.push({ name: this.state.selectedFile.name, content: this.state.readerFile.result as string });\n      let loader: ImportInput = new ImportInput(this.props);\n      this.props.options.saveImportFile.forEach((file) => {\n        if (file.name) {\n          const arrayFileName = file.name.split('.');\n          let newBaseMap: Background = this.props.options.baseMap;\n          if (arrayFileName[1] === 'svg') {\n            newBaseMap.image = file.content;\n            newBaseMap.modeSVG = true;\n            newBaseMap.isUploaded = true;\n          } else if (arrayFileName[1] === 'jpg' || arrayFileName[1] === 'png' || arrayFileName[1] === 'gif') {\n            newBaseMap.image = file.content;\n            newBaseMap.modeSVG = false;\n            newBaseMap.isUploaded = true;\n          }\n          this.props.onOptionsChange({\n            ...this.props.options,\n            baseMap: newBaseMap,\n          });\n        }\n\n        if (JSON.parse(file.content).hasOwnProperty('regions')) {\n          loader.loadMultiRegions(JSON.parse(file.content));\n          console.log('Load Region');\n        }\n        if (JSON.parse(file.content).hasOwnProperty('points')) {\n          loader.loadMultiPoints(JSON.parse(file.content));\n          console.log('Load Point');\n        }\n        if (JSON.parse(file.content).hasOwnProperty('links')) {\n          loader.loadMultiLinks(JSON.parse(file.content));\n          console.log('Load Links');\n        }\n      });\n    }\n    console.log(this.props.options.saveImportFile);\n  };\n\n  // load = () => {\n  //   let loader : ImportInput = new ImportInput(this.props);\n  // \tthis.props.options.saveImportFile.forEach(file => {\n  // \t\tif (JSON.parse(file.content).hasOwnProperty(\"regions\")){\n  //       loader.loadMultiRegions(JSON.parse(file.content));\n  //       console.log(\"Load Region\");\n  //     }\n  //     if (JSON.parse(file.content).hasOwnProperty(\"points\")){\n  //       loader.loadMultiPoints(JSON.parse(file.content));\n  //       console.log(\"Load Point\");\n  //     }\n  //     if (JSON.parse(file.content).hasOwnProperty(\"links\")){\n  //       loader.loadMultiLinks(JSON.parse(file.content));\n  //       console.log(\"Load Links\");\n  // \t\t}\n  // \t});\n  //   this.props.options.saveImportFile.forEach(element => {\n  //     console.log(JSON.parse(element.content));\n  //   });\n  // }\n\n  test = () => {\n    console.log(JSON.stringify(this.props));\n  };\n\n  onMultiListFileChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: ImportFile[] = this.props.options.saveImportFile.slice();\n    newData[parseInt(event.currentTarget.id, 10)].name = event.currentTarget.value;\n    this.props.options.saveImportFile = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveImportFile: this.props.options.saveImportFile });\n  };\n\n  multiDeletFile = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: ImportFile) => url === this.props.options.saveImportFile[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveImportFile.splice(this.props.options.saveImportFile.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveImportFile: this.props.options.saveImportFile });\n  };\n\n  multiUploadDisplay = (props: any): JSX.Element => {\n    if (props.file.lenght !== 0) {\n      const list = props.file.map((file: ImportFile, index: number) => (\n        <div\n          key={'MultiFileDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'MultiFile' + index.toString()}\n            label={'File'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onMultiListFileChanged.bind(this)}\n            type=\"string\"\n            value={file.name || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.multiDeletFile.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\n          <Button onClick={this.upload}>add</Button>\n          <Button onClick={this.save}>finish</Button>\n        </div>\n        <div>\n          <this.multiUploadDisplay file={this.props.options.saveImportFile} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default DropZone;\n","import React from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from '../types';\nimport { FormField, Button, Collapse } from '@grafana/ui';\n//import /*pointClassImport, regionClassImport, multiPointClassImport, multiRegionClassImport */ '../../config/testVariable';\n\nimport { PointClass } from '../Models/PointClass';\nimport { RegionClass } from 'Models/RegionClass';\nimport { OrientedLinkClass } from '../Models/OrientedLinkClass';\n//import { fetchConfFile } from '../Functions/importConfig';\nimport DropZone from '../Models/dropZone';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  collapseTotalUrl: boolean;\n  collapseMultiUrl: boolean;\n  // collapseMonoUrl: boolean;\n  collapseMultiUpload: boolean;\n}\n\n/*\n * TODO\n */\nclass ImportInput extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapseTotalUrl: false,\n      collapseMultiUrl: false,\n      // collapseMonoUrl: false,\n      collapseMultiUpload: true,\n    };\n  }\n  result: any[] = [];\n  totalResult: any[] = [];\n  /**************************************FETCH******************************************/\n\n  // fetchMono = () => {\n  //     console.log(this.props.options.saveImportUrl.mono)\n  //     this.result = fetchConfFile(this.props.options.saveImportUrl.mono);\n  // }\n\n  /**************************************CATCH******************************************/\n  PointValidator = (newSpace: PointClass) => {\n    let resultId = 0;\n    this.props.options.arrayPoints.forEach((point) => {\n      if (newSpace.id === point.id) {\n        if (newSpace.name === point.name) {\n          resultId = 2;\n        } else {\n          // console.error('Id of point named \"' + newSpace.name + '\" already given fail to load!');\n          resultId = 1;\n        }\n      }\n    });\n    return resultId;\n  };\n\n  RegionValidator = (newSpace: RegionClass) => {\n    let resultId = 0;\n    this.props.options.regionCoordinateSpace.forEach((region) => {\n      //Id\n      if (newSpace.id === region.id) {\n        if (newSpace.label === region.label) {\n          resultId = 2;\n        } else {\n          // console.error('Id of region labeled \"' + newSpace.label + '\" already given, fail to load!');\n          resultId = 1;\n        }\n      }\n    });\n    return resultId;\n  };\n\n  LinkValidator = (newSpace: OrientedLinkClass) => {\n    let resultId = 0;\n    this.props.options.arrayOrientedLinks.forEach((lien) => {\n      if (newSpace.id === lien.id) {\n        if (newSpace.name === lien.name) {\n          resultId = 2;\n        } else {\n          // console.error('Id of link named \"' + newSpace.name + '\" already given, fail to load!');\n          resultId = 1;\n        }\n      }\n    });\n    return resultId;\n  };\n\n  UrlValidator = (url: string) => {\n    let result = true;\n    for (let index in this.props.options.saveImportUrl.multi) {\n      if (this.props.options.saveImportUrl.multi[index] === url) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  };\n\n  /**************************************LOADER******************************************/\n  // Mono\n  pointUpdate = (updatedPoint: PointClass) => {\n    this.props.options.arrayPoints.forEach((point, index) => {\n      //Id\n      if (updatedPoint.id === point.id) {\n        if (updatedPoint.name === point.name) {\n          this.props.options.arrayPoints[index] = updatedPoint;\n          this.props.onOptionsChange({ ...this.props.options, arrayPoints: this.props.options.arrayPoints });\n        }\n      }\n    });\n  };\n  //Looking for a update after Point rework\n  loadMonoPoint = (point: any) => {\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const widthInitialSpaceDefault = (xMaxInitialSpace - xMinInitialSpace).toString();\n    const heightInitialSpaceDefault = (yMaxInitialSpace - yMinInitialSpace).toString();\n    const toLoad = new PointClass(\n      point.id,\n      point.linkURL,\n      point.meta,\n      point.lowerLimit,\n      point.label,\n      point.textObj,\n      point.mainMetric,\n      point.metrics,\n      point.colorMode,\n      point.traceBack,\n      point.traceBorder,\n      point.positionParameter,\n      point.name,\n      point.valueMetric,\n      point.drawGraphicMarker,\n      point.shape,\n      point.sizeWidth,\n      point.sizeHeight,\n      point.rotateArrow,\n      point.positionShapeX,\n      point.positionShapeY,\n      point.color,\n      point.associateOrientedLinksIn,\n      point.associateOrientedLinksOut,\n      widthInitialSpaceDefault,\n      heightInitialSpaceDefault,\n      point.positionXDefault,\n      point.positionYDefault\n    );\n    // console.log(toLoad);\n    let selector: number = this.PointValidator(toLoad);\n    // Do some test here to see if your already load a coordinatespace with this id\n    if (selector === 0) {\n      this.props.options.arrayPoints.push(toLoad);\n    }\n    if (selector === 2) {\n      this.pointUpdate(toLoad);\n    }\n  };\n\n  regionUpdate = (updatedRegion: RegionClass) => {\n    this.props.options.regionCoordinateSpace.forEach((region, index) => {\n      //Id\n      if (updatedRegion.id === region.id) {\n        if (updatedRegion.label === region.label) {\n          this.props.options.regionCoordinateSpace[index] = updatedRegion;\n          this.props.onOptionsChange({ ...this.props.options, regionCoordinateSpace: this.props.options.regionCoordinateSpace });\n        }\n      }\n    });\n  };\n  //Looking for a update after Region rework\n  loadMonoRegion = (region: any) => {\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const widthInitialSpaceDefault = (xMaxInitialSpace - xMinInitialSpace).toString();\n    const heightInitialSpaceDefault = (yMaxInitialSpace - yMinInitialSpace).toString();\n    const toLoad = new RegionClass(\n      region.id,\n      region.linkURL,\n      region.meta,\n      region.lowerLimit,\n      region.label,\n      region.textObj,\n      region.mainMetric,\n      region.metrics,\n      region.colorMode,\n      region.traceBack,\n      region.traceBorder,\n      region.positionParameter,\n      region.idSVG,\n      region.orientedLink,\n      region.coords,\n      region.coordsDefault,\n      region.mode,\n      region.img,\n      widthInitialSpaceDefault,\n      heightInitialSpaceDefault\n    );\n    // console.log(toLoad);\n    // Do some test here to see if your already load a coordinatespace with this id\n    let selector: number = this.RegionValidator(toLoad);\n    if (selector === 0) {\n      this.props.options.regionCoordinateSpace.push(toLoad);\n    }\n    if (selector === 2) {\n      this.regionUpdate(toLoad);\n    }\n  };\n\n  linkUpdate = (updatedLink: OrientedLinkClass) => {\n    this.props.options.arrayOrientedLinks.forEach((link, index) => {\n      //Id\n      if (updatedLink.id === link.id) {\n        if (updatedLink.name === link.name) {\n          this.props.options.arrayOrientedLinks[index] = updatedLink;\n          this.props.onOptionsChange({ ...this.props.options, arrayOrientedLinks: this.props.options.arrayOrientedLinks });\n        }\n      }\n    });\n  };\n  loadMonoLink = (link: any) => {\n    const xMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    const xMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10);\n    const yMinInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n    const yMaxInitialSpace = parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10);\n    const widthInitialSpaceDefault = (xMaxInitialSpace - xMinInitialSpace).toString();\n    const heightInitialSpaceDefault = (yMaxInitialSpace - yMinInitialSpace).toString();\n    const toLoad = new OrientedLinkClass(\n      link.id,\n      link.linkURL,\n      link.meta,\n      link.lowerLimit,\n      link.label,\n      link.textObj,\n      link.mainMetric,\n      link.metrics,\n      link.colorMode,\n      link.traceBack,\n      link.traceBorder,\n      link.positionParameter,\n      link.name,\n      link.orientationLink,\n      link.size,\n      link.pointAPositionX,\n      link.pointAPositionY,\n      link.colorCoordinateA,\n      link.pointBPositionX,\n      link.pointBPositionY,\n      link.colorCoordinateB,\n      link.valueMainMetricA,\n      link.valueMainMetricB,\n      link.pointIn,\n      link.pointOut,\n      link.regionIn,\n      link.regionOut,\n      link.zIndex,\n      link.pointCPositionX,\n      link.pointCPositionY,\n      link.isIncurved,\n      link.mainMetricB,\n      link.metricsB,\n      widthInitialSpaceDefault,\n      heightInitialSpaceDefault,\n      link.pointAPositionXDefault,\n      link.pointAPositionYDefault,\n      link.pointBPositionXDefault,\n      link.pointBPositionYDefault,\n      link.pointCPositionXDefault,\n      link.pointCPositionYDefault\n    );\n    // Do some test here to see if your already load a coordinatespace with this id\n    let selector: number = this.LinkValidator(toLoad);\n    if (selector === 0) {\n      this.props.options.arrayOrientedLinks.push(toLoad);\n    }\n    if (selector === 2) {\n      this.linkUpdate(toLoad);\n    }\n  };\n\n  //Multi\n  loadMultiPoints = (points: any) => {\n    points.points.forEach((point: any) => {\n      this.loadMonoPoint(point);\n    });\n  };\n\n  loadMultiRegions = (regions: any) => {\n    regions.regions.forEach((region: any) => {\n      this.loadMonoRegion(region);\n    });\n  };\n\n  loadMultiLinks = (links: any) => {\n    links.links.forEach((link: any) => {\n      this.loadMonoLink(link);\n    });\n  };\n\n  //Total\n  loadTotal = (panel: any) => {\n    //console.log(panel.imageUrl);\n    this.props.options.baseMap = panel.baseMap;\n    this.props.options.display.police = panel.texteSettings.police;\n    this.props.options.display.size = panel.texteSettings.size;\n    this.props.options.display.style = panel.texteSettings.style;\n    this.props.options.coordinateSpaceInitial = panel.coordinateSpaceInitial;\n    panel.regions.forEach((url: string) => {\n      if (this.UrlValidator(url) === true) {\n        this.props.options.saveImportUrl.multi.push(url);\n      }\n    });\n    panel.points.forEach((url: string) => {\n      if (this.UrlValidator(url) === true) {\n        this.props.options.saveImportUrl.multi.push(url);\n      }\n    });\n    panel.links.forEach((url: string) => {\n      if (this.UrlValidator(url) === true) {\n        this.props.options.saveImportUrl.multi.push(url);\n      }\n    });\n    this.fetchMulti();\n    // console.log('load total');\n  };\n\n  loaderTotal = async () => {\n    try {\n      let response = await fetch(this.props.options.totalUrlInput);\n      let file = await response.json();\n      this.loadTotal(file);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // fetchTotal = () => {\n  //   this.totalResult = fetchConfFile(this.props.options.saveImportUrl.total);\n  //   console.log('downloadTotal');\n  // };\n\n  // loaderSelector = () => {\n  //     // this.loadMultiRegions(multiRegionClassImport);\n  // \t// console.table(this.props.options.arrayCoordinateSpace);\n  // \tthis.result.forEach(file => {\n  // \t\tif (file.hasOwnProperty('regions')){\n  //             this.loadMultiRegions(file);\n  //             console.log('Load Region');\n  //         }\n  //         if (file.hasOwnProperty('points')){\n  //             this.loadMultiPoints(file);\n  //             console.log('Load Point');\n  //         }\n  //         if (file.hasOwnProperty('links')){\n  //             this.loadMultiLinks(file);\n  //             console.log('Load Links');\n  // \t\t}\n  // \t});\n  // }\n\n  fetchMulti = () => {\n    //this.result = fetchConfFile(this.props.options.saveImportUrl.multi);\n    this.props.options.saveImportUrl.multi.forEach(async (url) => {\n      try {\n        // console.log(url);\n        let file = {};\n        // console.log(file);\n        let response = await fetch(url);\n        file = await response.json();\n        if (file.hasOwnProperty('regions')) {\n          this.loadMultiRegions(file);\n          // console.log('Load Region');\n        }\n        if (file.hasOwnProperty('points')) {\n          this.loadMultiPoints(file);\n          // console.log('Load Point');\n        }\n        if (file.hasOwnProperty('links')) {\n          //console.log(file);\n          this.loadMultiLinks(file);\n          // console.log('Load Links');\n        }\n      } catch (error) {\n        // console.error(error);\n      }\n    });\n  };\n\n  /**************************************INPUT******************************************/\n\n  onToggleTotalUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseTotalUrl: isOpen,\n    });\n  };\n\n  onToggleMultiUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseMultiUrl: isOpen,\n    });\n  };\n\n  onToggleMultiUpload = (isOpen: boolean): void => {\n    this.setState({\n      collapseMultiUpload: isOpen,\n    });\n  };\n\n  // public onToggleMonoUrl = (isOpen: boolean): void => {\n  // \tthis.setState({\n  // \t\tcollapseMonoUrl: isOpen,\n  // \t});\n  // }\n\n  // saveUrl = (url: string, mode: number) => {\n  //   // if (mode === 0){\n  //   //     this.props.options.saveImportUrl.mono.push(url);\n  //   // }\n  //   if (mode === 1) {\n  //     this.props.options.saveImportUrl.multi.push(url);\n  //   }\n  //   if (mode === 2) {\n  //     this.props.options.saveImportUrl.total.push(url);\n  //   }\n  // };\n\n  onTotalUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, totalUrlInput: newData });\n  };\n\n  onTotalListUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: string[] = this.props.options.saveImportUrl.total.slice();\n    newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n    this.props.options.saveImportUrl.total = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  onMultiUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, multiUrlInput: newData });\n  };\n\n  onMultiListUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: string[] = this.props.options.saveImportUrl.multi.slice();\n    newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n    this.props.options.saveImportUrl.multi = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  // onMonoUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n  // \tlet newData: string = '';\n  // \tnewData = event.currentTarget.value;\n  // \tthis.props.onOptionsChange({ ...this.props.options, monoUrlInput: newData });\n  // }\n\n  // onMonoListUrlChanged = (event: {currentTarget: HTMLInputElement}) => {\n  //     let newData: string[] = this.props.options.saveImportUrl.mono.slice();\n  //     newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n  //     this.props.options.saveImportUrl.mono = newData;\n  //     this.props.onOptionsChange({...this.props.options, saveImportUrl: this.props.options.saveImportUrl})\n  // }\n\n  addTotalUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n    this.props.options.saveImportUrl.total.push(this.props.options.totalUrlInput);\n    this.props.options.totalUrlInput = '';\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  addMultiUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n    this.props.options.saveImportUrl.multi.push(this.props.options.multiUrlInput);\n    this.props.options.multiUrlInput = '';\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  // addMonoUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n  //     this.props.options.saveImportUrl.mono.push(this.props.options.monoUrlInput);\n  //     this.props.options.monoUrlInput = '';\n  //     this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl})\n  // }\n\n  totalDeletUrl = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: string) => url === this.props.options.saveImportUrl.total[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveImportUrl.total.splice(this.props.options.saveImportUrl.total.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  multiDeletUrl = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: string) => url === this.props.options.saveImportUrl.multi[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveImportUrl.multi.splice(this.props.options.saveImportUrl.multi.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  // monoDeletUrl = (onClick: { currentTarget: HTMLButtonElement}) => {\n  //     const isUrl = (url: string) => url === this.props.options.saveImportUrl.mono[parseInt(onClick.currentTarget.id, 10)];\n  //     this.props.options.saveImportUrl.mono.splice(this.props.options.saveImportUrl.mono.findIndex(isUrl), 1);\n  //     this.props.onOptionsChange({...this.props.options, saveImportUrl: this.props.options.saveImportUrl});\n  // }\n\n  tempo = () => {\n    // console.log(this.props.options.saveImportUrl);\n  };\n\n  totalUrlDisplay = (props: any): JSX.Element => {\n    if (props.list.total.lenght !== 0) {\n      const list = props.list.total.map((url: string, index: number) => (\n        <div\n          key={'TotalUrlDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'TotalUrl' + index.toString()}\n            label={'Url'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onTotalListUrlChanged.bind(this)}\n            type=\"string\"\n            value={url || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.totalDeletUrl.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  multiUrlDisplay = (props: any): JSX.Element => {\n    if (props.list.multi.lenght !== 0) {\n      const list = props.list.multi.map((url: string, index: number) => (\n        <div\n          key={'MultiUrlDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'MultiUrl' + index.toString()}\n            label={'Url'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onMultiListUrlChanged.bind(this)}\n            type=\"string\"\n            value={url || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.multiDeletUrl.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  // monoUrlDisplay = (props: any): JSX.Element => {\n  // \tif (props.list.multi.lenght !== 0) {\n  // \t\tconst list = props.list.mono.map((url: string, index: number) =>\n  // \t\t\t<div key={'MonoUrlDiv' + index.toString()}>\n  //                 <FormField id={index.toString()} key={'MonoUrl' + index.toString()}\n  // \t\t\t\t\tlabel={'Url'} labelWidth={5}\n  // \t\t\t\t\tinputWidth={20} onChange={this.onMonoListUrlChanged.bind(this)} type='string' value={url || ''} />\n  // \t\t\t\t<Button variant='danger' id={index.toString()} key={'ButtunDel' + index.toString()}\n  // \t\t\t\t\tonClick={this.monoDeletUrl.bind(this)}>Del</Button>\n  // \t\t\t</div>\n  // \t\t);\n  // \t\treturn (\n  // \t\t\t<div>{list}</div>\n  // \t\t);\n  // \t}\n  // \treturn (<div>No targets avalaible</div>);\n  // }\n\n  delAll = () => {\n    // this.props.options.arrayCoordinateSpace = [];\n    // this.props.options.arrayOrientedLinks = [];\n    // this.props.options.arrayPoints = [];\n    this.props.options.saveImportUrl.total = [];\n    this.props.options.saveImportUrl.multi = [];\n    // this.props.options.saveImportUrl.mono = [];\n    this.props.onOptionsChange({ ...this.props.options, saveImportUrl: this.props.options.saveImportUrl });\n  };\n\n  toDel = () => {\n    // console.log(this.props.options.saveImportUrl.multi);\n    // console.log(this.props.options.arrayPoints);\n  };\n\n  render() {\n    const { options } = this.props;\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapseTotalUrl} label=\"Global Url Import\" onToggle={this.onToggleTotalUrl}>\n          <FormField\n            label=\"Total Url\"\n            labelWidth={8}\n            key={'TotalUrl'}\n            inputWidth={20}\n            onChange={this.onTotalUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.totalUrlInput || ''}\n          />\n          {/* <Button key={'AddTotalUrl'} onClick={this.addTotalUrlInput}>Add</Button> */}\n          <div className=\"section gf-form-group\">\n            <Button onClick={this.loaderTotal}>Finish</Button>\n            <this.totalUrlDisplay list={options.saveImportUrl} />\n          </div>\n        </Collapse>\n        <Collapse isOpen={this.state.collapseMultiUrl} label=\"Multi Url Import\" onToggle={this.onToggleMultiUrl}>\n          <FormField\n            label=\"Multi Url\"\n            labelWidth={8}\n            key={'MultiUrl'}\n            inputWidth={20}\n            onChange={this.onMultiUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.multiUrlInput || ''}\n          />\n          <Button key={'AddMultiUrl'} onClick={this.addMultiUrlInput}>\n            Add\n          </Button>\n          <div className=\"section gf-form-group\">\n            <Button onClick={this.fetchMulti}>Finish</Button>\n            <this.multiUrlDisplay list={options.saveImportUrl} />\n          </div>\n        </Collapse>\n        <Collapse isOpen={this.state.collapseMultiUpload} label=\"Multi Local Import\" onToggle={this.onToggleMultiUpload}>\n          <div>\n            <DropZone options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n          </div>\n        </Collapse>\n        {/* <div className='section gf-form-group'>\n                    <Collapse isOpen={this.state.collapseMonoUrl}\n\t\t\t\t\t\tlabel='Mono Url' onToggle={this.onToggleMonoUrl}>\n                        <FormField label='Mono Url' labelWidth={8} key={'MonoUrl'}\n                            inputWidth={20} onChange={this.onMonoUrlChanged.bind(this)}\n                            type='string' value={options.monoUrlInput || ''} />\n                        <Button key={'AddMonoUrl'} onClick={this.addMonoUrlInput}>Add</Button>\n                        <div className='section gf-form-group'>\n                            <Button onClick={this.fetchMono}>Load</Button>\n\t\t\t\t\t        <this.monoUrlDisplay list={options.saveImportUrl} />\n\t\t\t\t        </div>\n\t\t\t\t\t</Collapse>\n                </div> */}\n        <div className=\"section gf-form-group\">\n          <Button key={'delAll'} onClick={this.delAll}>\n            Del all urls\n          </Button>\n        </div>\n        <Button onClick={this.toDel}>toDel</Button>\n      </div>\n    );\n  }\n}\nexport default ImportInput;\n","import React from 'react';\n\nimport { SimpleOptions } from 'types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Select, FormLabel } from '@grafana/ui';\n\nimport { RegionClass } from 'Models/RegionClass';\n\nimport CoordinateSpace from './coordinateSpace';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** array for select value with the coordianates space */\n  selectCoordinateSpace: Array<SelectableValue<RegionClass>>;\n  /** default select value */\n  selectCoordinateSpaceDefault: SelectableValue<RegionClass>;\n}\n\ninterface SelectRegion {\n  value: RegionClass;\n  /** label select */\n  label: string;\n}\n\n/**\n * manage coordinate space for simpleEditor\n */\nclass EditCoordinateSpace extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectCoordinateSpace: [],\n      selectCoordinateSpaceDefault: [],\n    };\n  }\n\n  /**\n   * save data in parent\n   */\n  callBack = (id: number, newCoordinate?: RegionClass): void => {\n    if (newCoordinate) {\n      const oldData: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          oldData[i] = newCoordinate;\n          break;\n        }\n        ++i;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        regionCoordinateSpace: oldData,\n      });\n    } else {\n      let find = false;\n      const oldData: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          find = true;\n          break;\n        }\n        ++i;\n      }\n      if (find) {\n        oldData.splice(i, 1);\n        this.props.onOptionsChange({\n          ...this.props.options,\n          regionCoordinateSpace: oldData,\n        });\n        this.fillSelectRegionSpace();\n      }\n    }\n  };\n\n  /** change select value to edit */\n  onChangeSelectCoordinate = (value: SelectableValue<RegionClass>) => {\n    this.setState({\n      selectCoordinateSpaceDefault: value,\n    });\n  };\n\n  /** fill select whith array region object */\n  fillSelectRegionSpace = () => {\n    let valueExist = false;\n    const valueSelect: SelectRegion[] = [];\n    const stockTmpCoordinatesSpace: RegionClass[] = this.props.options.regionCoordinateSpace.slice();\n\n    for (const line of stockTmpCoordinatesSpace) {\n      valueSelect.push({ value: line, label: line.label });\n    }\n    if (this.state.selectCoordinateSpaceDefault) {\n      for (const line of stockTmpCoordinatesSpace) {\n        if (line.id === this.state.selectCoordinateSpaceDefault.value?.id) {\n          valueExist = true;\n          break;\n        }\n      }\n    }\n    // dev\n    // this.setState(prevState => ({\n    //   selectCoordinateSpace: valueSelect,\n    //   selectCoordinateSpaceDefault: valueExist\n    //     ? prevState.selectCoordinateSpaceDefault\n    //     : valueSelect.length > 0\n    //     ? valueSelect[0]\n    //     : prevState.selectCoordinateSpaceDefault,\n    // }));\n    this.setState((prevState) => ({\n      selectCoordinateSpace: valueSelect,\n      selectCoordinateSpaceDefault: valueExist ? prevState.selectCoordinateSpaceDefault : valueSelect.length > 0 ? valueSelect[0] : [],\n    }));\n  };\n\n  /** fill data for select */\n  componentDidMount = () => {\n    this.fillSelectRegionSpace();\n  };\n\n  /** update state if value props change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.options.regionCoordinateSpace !== this.props.options.regionCoordinateSpace) {\n      this.fillSelectRegionSpace();\n    }\n  };\n\n  /** return html */\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Select Region</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectCoordinate(value)}\n            allowCustomValue={false}\n            options={this.state.selectCoordinateSpace}\n            width={10}\n            value={this.state.selectCoordinateSpaceDefault}\n          />\n        </div>\n        <br />\n        <div>\n          {this.state.selectCoordinateSpaceDefault.value ? (\n            <CoordinateSpace\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              coordinate={this.state.selectCoordinateSpaceDefault.value} // selectCoordinateSpaceDefault.value}\n              callBackToParent={this.callBack}\n              isAddCoordinate={false}\n            />\n          ) : (\n            <p\n              style={{\n                textAlign: 'center',\n                fontSize: '20px',\n                marginTop: '50px',\n              }}\n            >\n              Data not set\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default EditCoordinateSpace;\n","import React from 'react';\n\nimport { SimpleOptions } from '../../../types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Select, FormLabel } from '@grafana/ui';\n\nimport { PointClass } from '../../../Models/PointClass';\n\n// import { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n\nimport Point from './point';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** array for select value with the coordianates space */\n  selectCoordinateSpace: Array<SelectableValue<PointClass>>;\n  /** default select value */\n  selectCoordinateSpaceDefault: SelectableValue<PointClass>;\n}\n\ninterface SelectPoint {\n  value: PointClass;\n  /** label select */\n  label: string;\n}\n\n/**\n * manage coordinate space for simpleEditor\n */\nclass EditPoint extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectCoordinateSpace: [],\n      selectCoordinateSpaceDefault: [],\n    };\n  }\n\n  /**\n   * save data in parent\n   */\n  callBack = (id: number, newCoordinate?: PointClass): void => {\n    if (newCoordinate) {\n      const oldData: PointClass[] = this.props.options.arrayPoints.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          oldData[i] = newCoordinate;\n          break;\n        }\n        ++i;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayPoints: oldData,\n      });\n      //this.fillSelectPoint();\n    } else {\n      let find = false;\n      const oldData: PointClass[] = this.props.options.arrayPoints.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          find = true;\n          break;\n        }\n        ++i;\n      }\n      if (find) {\n        oldData.splice(i, 1);\n        this.props.onOptionsChange({\n          ...this.props.options,\n          arrayPoints: oldData,\n        });\n        this.fillSelectPoint();\n      }\n    }\n  };\n\n  /** change select value to edit */\n  onChangeSelectCoordinate = (value: SelectableValue<PointClass>) => {\n    this.setState({\n      selectCoordinateSpaceDefault: value,\n    });\n  };\n\n  /** fill select whith array region object */\n  fillSelectPoint = () => {\n    let valueExist = false;\n    const valueSelect: SelectPoint[] = [];\n    const stockTmpCoordinatesSpace: PointClass[] = this.props.options.arrayPoints.slice();\n\n    //valueSelect.push({ value: {}, label: 'No Data' });\n\n    for (const line of stockTmpCoordinatesSpace) {\n      let label = line.label || line.name;\n      valueSelect.push({ value: line, label: label });\n    }\n    if (this.state.selectCoordinateSpaceDefault) {\n      for (const line of stockTmpCoordinatesSpace) {\n        if (line.id === this.state.selectCoordinateSpaceDefault.value?.id) {\n          valueExist = true;\n          break;\n        }\n      }\n    }\n    // dev\n    // this.setState(prevState => ({\n    //   selectCoordinateSpace: valueSelect,\n    //   selectCoordinateSpaceDefault: valueExist\n    //     ? prevState.selectCoordinateSpaceDefault\n    //     : valueSelect.length > 0\n    //     ? valueSelect[0]\n    //     : prevState.selectCoordinateSpaceDefault,\n    // }));\n    this.setState((prevState) => ({\n      selectCoordinateSpace: valueSelect,\n      selectCoordinateSpaceDefault: valueExist ? prevState.selectCoordinateSpaceDefault : valueSelect.length > 0 ? valueSelect[0] : [],\n    }));\n    // final\n    // this.setState({\n    // \tselectCoordinateSpace: valueSelect,\n    // \tselectCoordinateSpaceDefault: (valueSelect.length > 0) ?\n    // \t\tvalueSelect[0] : this.state.selectCoordinateSpaceDefault,\n    // });\n  };\n\n  /** fill data for select */\n  componentDidMount = () => {\n    this.fillSelectPoint();\n  };\n\n  /** update state if value props change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.options.arrayPoints !== this.props.options.arrayPoints) {\n      this.fillSelectPoint();\n    }\n    // console.log(prevProps.options.newPoint);\n    if (prevProps.options.newPoint) {\n      this.fillSelectPoint();\n      this.props.options.newPoint = false;\n    }\n  };\n\n  /** return html */\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Select Point</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectCoordinate(value)}\n            allowCustomValue={false}\n            options={this.state.selectCoordinateSpace}\n            width={10}\n            value={this.state.selectCoordinateSpaceDefault}\n          />\n        </div>\n        <br />\n        <div>\n          {this.state.selectCoordinateSpaceDefault.value ? (\n            <Point\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              point={this.state.selectCoordinateSpaceDefault.value}\n              callBackToParent={this.callBack}\n              isAddPoint={false}\n            />\n          ) : (\n            <p\n              style={{\n                textAlign: 'center',\n                fontSize: '20px',\n                marginTop: '50px',\n              }}\n            >\n              Data not set\n            </p>\n          )}\n        </div>\n        {/* <Button onClick={() => console.log(this.props.options.regionCoordinateSpace)}>Info region</Button>\n\t\t\t\t<Button onClick={() => console.log(this.state.selectCoordinateSpaceDefault)}>Info region</Button> */}\n      </div>\n    );\n  }\n}\nexport default EditPoint;\n","import React from 'react';\n\nimport { SimpleOptions } from '../../../types';\n\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { Select, FormLabel } from '@grafana/ui';\n\nimport { OrientedLinkClass } from '../../../Models/OrientedLinkClass';\nimport OrientedLink from './orientedLink';\n\n// import { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** array for select value with the coordianates space */\n  selectCoordinateSpace: Array<SelectableValue<OrientedLinkClass>>;\n  /** default select value */\n  selectCoordinateSpaceDefault: SelectableValue<OrientedLinkClass>;\n}\n\ninterface SelectPoint {\n  value: OrientedLinkClass;\n  /** label select */\n  label: string;\n}\n\n/**\n * manage coordinate space for simpleEditor\n */\nclass EditOrientedLink extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectCoordinateSpace: [],\n      selectCoordinateSpaceDefault: [],\n    };\n  }\n\n  /**\n   * save data in parent\n   */\n  callBack = (id: number, newCoordinate?: OrientedLinkClass): void => {\n    if (newCoordinate) {\n      const oldData: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          oldData[i] = newCoordinate;\n          break;\n        }\n        ++i;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        arrayOrientedLinks: oldData,\n      });\n      //this.fillSelectPoint();\n    } else {\n      let find = false;\n      const oldData: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n      let i = 0;\n      for (const line of oldData) {\n        if (line.id === id) {\n          find = true;\n          break;\n        }\n        ++i;\n      }\n      if (find) {\n        oldData.splice(i, 1);\n        this.props.onOptionsChange({\n          ...this.props.options,\n          arrayOrientedLinks: oldData,\n        });\n        this.fillSelectPoint();\n      }\n    }\n  };\n\n  /** change select value to edit */\n  onChangeSelectCoordinate = (value: SelectableValue<OrientedLinkClass>) => {\n    this.setState({\n      selectCoordinateSpaceDefault: value,\n    });\n  };\n\n  /** fill select whith array region object */\n  fillSelectPoint = () => {\n    let valueExist = false;\n    const valueSelect: SelectPoint[] = [];\n    const stockTmpCoordinatesSpace: OrientedLinkClass[] = this.props.options.arrayOrientedLinks.slice();\n\n    for (const line of stockTmpCoordinatesSpace) {\n      let label = line.label || line.name;\n      valueSelect.push({ value: line, label: label });\n    }\n    if (this.state.selectCoordinateSpaceDefault) {\n      for (const line of stockTmpCoordinatesSpace) {\n        if (line.id === this.state.selectCoordinateSpaceDefault.value?.id) {\n          valueExist = true;\n          break;\n        }\n      }\n    }\n    // dev\n    // this.setState(prevState => ({\n    //   selectCoordinateSpace: valueSelect,\n    //   selectCoordinateSpaceDefault: valueExist\n    //     ? prevState.selectCoordinateSpaceDefault\n    //     : valueSelect.length > 0\n    //     ? valueSelect[0]\n    //     : prevState.selectCoordinateSpaceDefault,\n    // }));\n    this.setState((prevState) => ({\n      selectCoordinateSpace: valueSelect,\n      selectCoordinateSpaceDefault: valueExist ? prevState.selectCoordinateSpaceDefault : valueSelect.length > 0 ? valueSelect[0] : [],\n    }));\n    // final\n    // this.setState({\n    // \tselectCoordinateSpace: valueSelect,\n    // \tselectCoordinateSpaceDefault: (valueSelect.length > 0) ?\n    // \t\tvalueSelect[0] : this.state.selectCoordinateSpaceDefault,\n    // });\n  };\n\n  /** fill data for select */\n  componentDidMount = () => {\n    this.fillSelectPoint();\n  };\n\n  /** update state if value props change */\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.options.arrayOrientedLinks !== this.props.options.arrayOrientedLinks) {\n      this.fillSelectPoint();\n    }\n    // console.log(prevProps.options.newPoint);\n    if (prevProps.options.newOrientedLink) {\n      this.fillSelectPoint();\n      this.props.options.newOrientedLink = false;\n    }\n  };\n\n  /** return html */\n  render() {\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Select Oriented Link</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectCoordinate(value)}\n            allowCustomValue={false}\n            options={this.state.selectCoordinateSpace}\n            width={10}\n            value={this.state.selectCoordinateSpaceDefault}\n          />\n        </div>\n        <br />\n        <div>\n          {this.state.selectCoordinateSpaceDefault.value ? (\n            <OrientedLink\n              options={this.props.options}\n              onOptionsChange={this.props.onOptionsChange}\n              data={this.props.data}\n              orientedLink={this.state.selectCoordinateSpaceDefault.value}\n              callBackToParent={this.callBack}\n              isAddLink={false}\n            />\n          ) : (\n            <p\n              style={{\n                textAlign: 'center',\n                fontSize: '20px',\n                marginTop: '50px',\n              }}\n            >\n              Data not set\n            </p>\n          )}\n        </div>\n        {/* <Button onClick={() => console.log(this.props.options.regionCoordinateSpace)}>Info region</Button>\n\t\t\t\t<Button onClick={() => console.log(this.state.selectCoordinateSpaceDefault)}>Info region</Button> */}\n      </div>\n    );\n  }\n}\nexport default EditOrientedLink;\n","import React from 'react';\nimport { Tab, TabsBar, TabContent } from '@grafana/ui';\nimport { PanelEditorProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport EditCoordinateSpace from './editCoordinateSpace';\nimport EditPoint from './point/editPoint';\nimport EditOrientedLink from './orientedLink/editOrientedLink';\nimport AddCoordinate from './addCoordinate';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {\n  isRegion: boolean;\n  isPoint: boolean;\n  isLink: boolean;\n}\n\ninterface State {\n  /** manage tabs focus */\n  tabsVariable: boolean[];\n}\n\n/**\n * def class\n */\nclass ManageCoordinateSpace extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      tabsVariable: [false, true],\n    };\n  }\n\n  /** after save pass to edit mode */\n  returnEditMode = () => {\n    this.setState({\n      tabsVariable: [false, true],\n    });\n  };\n\n  /**\n   * switch tab\n   * @param {number} id id to to new tab\n   */\n  goToTab = (id: number): void => {\n    const oldValue: boolean[] = this.state.tabsVariable.slice();\n    const size: number = oldValue.length;\n    for (let i = 0; i < size; i++) {\n      oldValue[i] = i === id ? true : false;\n    }\n    this.setState({\n      tabsVariable: oldValue,\n    });\n  };\n\n  private contentTabEdit = (): JSX.Element => {\n    let result: JSX.Element = <div></div>;\n    if (this.props.isRegion) {\n      result = (\n        <div>\n          <EditCoordinateSpace onOptionsChange={this.props.onOptionsChange} options={this.props.options} data={this.props.data} />\n        </div>\n      );\n    } else if (this.props.isPoint) {\n      result = (\n        <div>\n          <EditPoint onOptionsChange={this.props.onOptionsChange} options={this.props.options} data={this.props.data} />\n        </div>\n      );\n    } else if (this.props.isLink) {\n      result = (\n        <div>\n          <EditOrientedLink onOptionsChange={this.props.onOptionsChange} options={this.props.options} data={this.props.data} />\n        </div>\n      );\n    }\n    return result;\n  };\n\n  /** result */\n  render() {\n    if (!this.props.isLink) {\n      return (\n        <div>\n          <TabsBar className=\"page-header tabs\" hideBorder={false}>\n            <Tab\n              key=\"tabDisplayCoordinateSpaceAdd\"\n              label=\"Add coordinate space\"\n              active={this.state.tabsVariable[0]}\n              onChangeTab={() => this.goToTab(0)}\n            />\n            <Tab\n              key=\"tabDisplayCoordinateSpaceEdit\"\n              label=\"Edit coordinate space\"\n              active={this.state.tabsVariable[1]}\n              onChangeTab={() => this.goToTab(1)}\n            />\n          </TabsBar>\n          <TabContent>\n            {this.state.tabsVariable[0] && (\n              <AddCoordinate\n                onOptionsChange={this.props.onOptionsChange}\n                options={this.props.options}\n                data={this.props.data}\n                returnEditMode={this.returnEditMode}\n                isRegion={this.props.isRegion}\n                isPoint={this.props.isPoint}\n                isLink={this.props.isLink}\n              />\n            )}\n            {this.state.tabsVariable[1] && this.contentTabEdit()}\n          </TabContent>\n          {/* <Button onClick={() => console.log(this.props.data.series)}>List all metrics</Button> */}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <TabsBar className=\"page-header tabs\" hideBorder={false}>\n            <Tab\n              key=\"tabDisplayCoordinateSpaceEdit\"\n              label=\"Edit coordinate space\"\n              active={this.state.tabsVariable[1]}\n              onChangeTab={() => this.goToTab(1)}\n            />\n          </TabsBar>\n          <TabContent>{this.state.tabsVariable[1] && this.contentTabEdit()}</TabContent>\n          {/* <Button onClick={() => console.log(this.props.data.series)}>List all metrics</Button> */}\n        </div>\n      );\n    }\n  }\n}\nexport default ManageCoordinateSpace;\n","import React, { FunctionComponent } from 'react';\nimport { Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\ntype InputSelectProps = {\n  _onChange: Function;\n  data: Array<SelectableValue<string>>;\n  defaultValue: SelectableValue<string>;\n};\n\nconst InputSelect: FunctionComponent<InputSelectProps> = ({ _onChange, data, defaultValue }) => (\n  <div>\n    <Select onChange={(value) => _onChange(value)} allowCustomValue={false} options={data} width={30} value={defaultValue} />\n  </div>\n);\n\nexport default InputSelect;\n","import React from 'react';\nimport { SimpleOptions, Background } from 'types';\n\nimport { SelectableValue, PanelEditorProps } from '@grafana/data';\nimport { FormField, Switch, FormLabel } from '@grafana/ui';\n\nimport InputSelect from 'Functions/Input/inputSelect';\nimport StyleComponent, { Style } from './Parametrage/styleComponent';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  /** police choice in select */\n  newPolice: SelectableValue<string>;\n  /** size variable for input */\n  size: string;\n  /** style variable for input */\n  style: Style;\n  /** background uploaded from computer */\n  imageUploaded: string;\n}\n\n/**\n * class to manage police, size and style\n */\nclass Display extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newPolice: {\n        value: this.props.options.display.police,\n        label: this.props.options.display.police,\n      },\n      size: this.props.options.display.size,\n      style: this.props.options.display.style,\n      imageUploaded: '',\n    };\n  }\n\n  /**\n   * call parent with new data\n   */\n  callParent = () => {\n    const { newPolice, size, style } = this.state;\n    const pPolice: string = newPolice.value || '';\n    const pSize = size;\n    const pStyle = style;\n\n    this.props.onOptionsChange({\n      ...this.props.options,\n      display: {\n        police: pPolice,\n        size: pSize,\n        style: pStyle,\n      },\n    });\n  };\n\n  /**\n   * set police state async\n   */\n  setStateAsyncPolice = (state: {\n    /** new police value */\n    newPolice: SelectableValue<string>;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      this.callParent();\n    });\n  };\n\n  /**\n   * set size state async\n   */\n  setStateAsyncsize = (state: {\n    /** new size value */\n    size: string;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      this.callParent();\n    });\n  };\n\n  /**\n   * set style state async\n   */\n  setStateAsyncStyle = (state: {\n    /** new style value */\n    style: Style;\n  }) => {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n      this.callParent();\n    });\n  };\n\n  /**\n   * edit size\n   */\n  handleChangesize = async (event: {\n    /** target to input element */\n    target: HTMLInputElement;\n  }) => {\n    await this.setStateAsyncsize({\n      size: event.target.value,\n    });\n    this.callParent();\n  };\n\n  // /**\n  //  * edit style\n  //  */\n  // handleChangeStyle = async (event: {\n  //   /** target to input element */\n  //   target: HTMLInputElement;\n  // }) => {\n  //   await this.setStateAsyncStyle({\n  //     style: event.target.value,\n  //   });\n  //   this.callParent();\n  // };\n\n  /**\n   * edit police\n   */\n  onChangePolice = async (value: SelectableValue<string>) => {\n    await this.setStateAsyncPolice({\n      newPolice: value,\n    });\n    this.callParent();\n  };\n\n  /**\n   * Change background picture\n   */\n  onImageChanged = (e: {\n    /**\n     * Get target element\n     */\n    target: HTMLInputElement;\n  }) => {\n    const newBaseMap: Background = this.props.options.baseMap;\n    const image = e.target.value;\n    const arrayImage = image.split('.');\n    newBaseMap.image = image;\n    if (image.split('.')[arrayImage.length - 1] === 'svg') {\n      newBaseMap.modeSVG = true;\n    } else {\n      newBaseMap.modeSVG = false;\n    }\n    this.props.onOptionsChange({\n      ...this.props.options,\n      baseMap: newBaseMap,\n    });\n    // this.props.onOptionsChange({ ...this.props.options, imageUrl: event.target.value });\n  };\n\n  /** edit modeSVG */\n  onChangeSwitchModeSVG = () => {\n    const { options, onOptionsChange } = this.props;\n    const oldValue: Background = options.baseMap;\n\n    oldValue.modeSVG = !oldValue.modeSVG;\n    onOptionsChange({ ...options, baseMap: oldValue });\n  };\n\n  /** edit modeSVG */\n  onChangeHeightBaseMap = (e: {\n    /** new value for height */\n    target: HTMLInputElement;\n  }) => {\n    this.props.options.updateOnlyInitialSpace = false;\n    const { options, onOptionsChange } = this.props;\n    const oldValue: Background = options.baseMap;\n\n    oldValue.height = e.target.value;\n    onOptionsChange({ ...options, baseMap: oldValue });\n  };\n\n  /** edit modeSVG */\n  onChangeWidthBaseMap = (e: {\n    /** new value for width */\n    target: HTMLInputElement;\n  }) => {\n    this.props.options.updateOnlyInitialSpace = false;\n    const { options, onOptionsChange } = this.props;\n    const oldValue: Background = options.baseMap;\n\n    oldValue.width = e.target.value;\n    onOptionsChange({ ...options, baseMap: oldValue });\n  };\n\n  saveStyleData = (style: Style): void => {\n    this.setStateAsyncStyle({ style: style });\n  };\n\n  uploadImage = (event: any) => {\n    const readerFile: FileReader = new FileReader();\n    const selectedFile: any = event.target.files[0];\n    const extensionFile = selectedFile.name.split('.')[1];\n    let file: any;\n    if (extensionFile === 'jpg' || extensionFile === 'png' || extensionFile === 'gif') {\n      readerFile.readAsDataURL(selectedFile);\n    } else {\n      readerFile.readAsText(selectedFile);\n    }\n    readerFile.onload = function () {\n      file = readerFile.result;\n    };\n\n    setTimeout(() => {\n      let newBaseMap: Background = this.props.options.baseMap;\n      if (extensionFile === 'svg') {\n        newBaseMap.image = file;\n        newBaseMap.modeSVG = true;\n        newBaseMap.isUploaded = true;\n        newBaseMap.nameUploadedImage = selectedFile.name;\n      } else if (extensionFile === 'jpg' || extensionFile === 'png' || extensionFile === 'gif') {\n        newBaseMap.image = file;\n        newBaseMap.modeSVG = false;\n        newBaseMap.isUploaded = true;\n        newBaseMap.nameUploadedImage = selectedFile.name;\n      }\n      this.props.onOptionsChange({\n        ...this.props.options,\n        baseMap: newBaseMap,\n      });\n    }, 1000);\n  };\n\n  defineValueImage = (): string => {\n    let result = '';\n    if (!this.props.options.baseMap.isUploaded) {\n      result = this.props.options.baseMap.image || '';\n    }\n    return result;\n  };\n\n  /**\n   * html\n   */\n  render() {\n    const { options } = this.props;\n\n    const police: Array<SelectableValue<string>> = [\n      { value: 'Helvetica', label: 'Helvetica' },\n      { value: 'Arial', label: 'Arial' },\n      { value: 'sans-serif', label: 'sans-serif' },\n      { value: 'mono', label: 'mono' },\n    ];\n\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div>\n        <div style={{ display: 'flex', marginBottom: 1 }}>\n          <FormLabel width={15}>Police</FormLabel>\n          <InputSelect _onChange={this.onChangePolice} data={police} defaultValue={this.state.newPolice} />\n        </div>\n\n        <FormField\n          label={l10n.textDefault.size}\n          labelWidth={15}\n          inputWidth={30}\n          required={true}\n          value={this.state.size}\n          onChange={this.handleChangesize}\n        />\n\n        <StyleComponent oldStyle={this.state.style} saveParent={this.saveStyleData} />\n        {/* \n        <FormField\n          label={l10n.textDefault.style}\n          labelWidth={10}\n          inputWidth={15}\n          required={true}\n          value={this.state.style}\n          onChange={this.handleChangeStyle}\n        /> */}\n\n        <div style={{ display: 'flex' }}>\n          <FormLabel width={15}>Use SVG</FormLabel>\n          <Switch labelClass=\"\" label=\"\" checked={options.baseMap.modeSVG} onChange={this.onChangeSwitchModeSVG} />\n        </div>\n        {/* {options.baseMap.modeSVG ? (\n          <FormField\n            label={l10n.simpleEditor.pictureLink}\n            labelWidth={10}\n            inputWidth={30}\n            type=\"text\"\n            onChange={this.onImageChanged}\n            value={options.baseMap.image || ''}\n          />\n        ) : ( */}\n        <div>\n          <FormField\n            label={'Image'}\n            labelWidth={15}\n            inputWidth={30}\n            placeholder={'URL'}\n            type=\"text\"\n            onChange={this.onImageChanged}\n            value={this.defineValueImage()}\n          />\n          <div style={{ display: 'flex', margin: '2px 0' }}>\n            <FormLabel width={15}>Upload Image</FormLabel>\n            <input\n              style={{ border: '1px solid #262628', borderRadius: '0 3px 3px 0', width: '416px' }}\n              type=\"file\"\n              name=\"file\"\n              onChange={this.uploadImage}\n            />\n            <p style={{ margin: '10px 0 0 10px', fontSize: '10px' }}>{this.props.options.baseMap.nameUploadedImage || ''}</p>\n          </div>\n          <FormField\n            label=\"Width\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            onChange={this.onChangeWidthBaseMap}\n            value={options.baseMap.width || ''}\n          />\n          <FormField\n            label=\"Height\"\n            labelWidth={15}\n            inputWidth={30}\n            type=\"text\"\n            onChange={this.onChangeHeightBaseMap}\n            value={options.baseMap.height || ''}\n          />\n        </div>\n        {/* )} */}\n      </div>\n    );\n  }\n}\n\nexport default Display;\n","//import { SimpleOptions, GlobalGabarit, GabaritFile, TemplateGabaritLink, TemplateGabaritPoint, TemplateGabaritRegion } from '../types';\n//import { Button } from '@grafana/ui';\n\nimport { Coord4D } from 'Models/RegionClass';\n\n// import { PointClass } from '../Models/PointClass';\n// import { RegionClass, Coord4D } from '../Models/RegionClass';\n// import { OrientedLinkClass } from '../Models/OrientedLinkClass';\n\nexport interface LabelCoord2D {\n  x: string;\n  y: string;\n}\n\nexport const coordParse = (coord: string) => {\n  let tmp: string[] = coord.split('#');\n  let result: LabelCoord2D = { x: '', y: '' };\n  result.x = tmp[0].split('|')[1];\n  result.y = tmp[1].split('|')[1];\n  return result;\n};\n\n// Coord Region\nexport const coordParseRegion = (coord: string) => {\n  let tt: string[] = coord.split('#');\n  let result: Coord4D = { xMin: '', xMax: '', yMin: '', yMax: '' };\n  result.xMin = tt[0].split('|')[1];\n  result.xMax = tt[1].split('|')[1];\n  result.yMin = tt[2].split('|')[1];\n  result.yMax = tt[3].split('|')[1];\n  return result;\n};\n\nexport interface Filtred {\n  label: string;\n  value: string;\n}\n\n// FilterParse Region\n\nexport const filterParseRegion = (filter: string) => {\n  let tt: string[] = filter.split('#');\n  let result: Filtred[] = [];\n  tt.forEach((element) => {\n    let split: string[] = element.split('|');\n    result.push({ label: split[0], value: split[1] });\n  });\n  return result;\n};\n\nexport const filterParse = (filter: string) => {\n  let tmp: string[] = filter.split('#');\n  let result: Filtred[] = [];\n  tmp.forEach((element) => {\n    let split: string[] = element.split('|');\n    result.push({ label: split[0], value: split[1] });\n  });\n  return result;\n};\n","import React from 'react';\nimport { PanelEditorProps, SelectableValue } from '@grafana/data';\nimport { SimpleOptions, GabaritFile, Metric, GlobalGabaritDefault } from '../types';\nimport { FormField, Button, Collapse, FormLabel, Select } from '@grafana/ui';\n//import /*pointClassImport, regionClassImport, gabaritPointClassImport, gabaritRegionClassImport */ '../../config/testVariable';\nimport { coordParse, LabelCoord2D, Filtred, filterParse, coordParseRegion, filterParseRegion } from '../Functions/loaderGabarit';\n//import { LinkURLClass } from 'Models/LinkURLClass';\n//import { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { LinkURLClass } from 'Models/LinkURLClass';\n//import { LowerLimitClass } from 'Models/LowerLimitClass';\n//import { TextObject } from 'Models/TextObjectClass';\n\nimport { PointClass } from 'Models/PointClass';\nimport { TextObject, GenerateTextObject } from 'Models/TextObjectClass';\nimport { Style } from 'components/Parametrage/styleComponent';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { initRegionCoordinateSpace } from 'Functions/initRegionCoordinateSpace';\n// import { LowerLimitClass } from 'Models/LowerLimitClass';\n// import { initPoint } from 'Functions/initPoint';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\n/*\n * TODO\n */\n\ninterface State {\n  selectQuerryID: Array<SelectableValue<string>>;\n  collapseSelectURL: boolean;\n  collapseGabarit: boolean;\n  gabaritDefaultUrlInput: string;\n}\n\n// interface SelectQueryID {\n//   value: string;\n//   label: string;\n// }\n\nclass Gabarit extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectQuerryID: [\n        { label: 'A', value: 'A' },\n        { label: 'B', value: 'B' },\n        { label: 'C', value: 'C' },\n        { label: 'D', value: 'D' },\n        { label: 'E', value: 'E' },\n        { label: 'F', value: 'F' },\n        { label: 'G', value: 'G' },\n        { label: 'H', value: 'H' },\n        { label: 'I', value: 'I' },\n        { label: 'J', value: 'J' },\n        { label: 'K', value: 'K' },\n        { label: 'L', value: 'L' },\n        { label: 'M', value: 'M' },\n        { label: 'N', value: 'N' },\n        { label: 'O', value: 'O' },\n        { label: 'P', value: 'P' },\n        { label: 'Q', value: 'Q' },\n        { label: 'R', value: 'R' },\n        { label: 'S', value: 'S' },\n        { label: 'T', value: 'T' },\n        { label: 'U', value: 'U' },\n        { label: 'V', value: 'V' },\n        { label: 'W', value: 'W' },\n        { label: 'X', value: 'X' },\n        { label: 'Y', value: 'Y' },\n        { label: 'Z', value: 'Z' },\n      ],\n      collapseSelectURL: false,\n      collapseGabarit: false,\n      gabaritDefaultUrlInput: '',\n    };\n  }\n  result: any[] = [];\n  /**************************************FETCH******************************************/\n\n  // fetchMono = () => {\n  //     console.log(this.props.options.saveGabaritURL.mono)\n  //     this.result = fetchConfFile(this.props.options.saveGabaritURL.mono);\n  // }\n\n  /**************************************CATCH******************************************/\n\n  onChangeSelectQuerryID = (value: SelectableValue<string>, index: number) => {\n    let newGabaritFile: GabaritFile[] = this.props.options.saveGabaritFile;\n    newGabaritFile[index].queryID = value.value!;\n    this.props.onOptionsChange({\n      ...this.props.options,\n      saveGabaritFile: newGabaritFile,\n    });\n  };\n\n  onToggleSelectUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseSelectURL: isOpen,\n    });\n  };\n\n  UrlValidator = (url: string) => {\n    let result = true;\n    for (let index in this.props.options.saveGabaritURL) {\n      if (this.props.options.saveGabaritURL[index] === url) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  };\n\n  GabaritValidator = (name: string) => {\n    let result = true;\n    this.props.options.saveGabaritFile.forEach((element) => {\n      if (element.fileName === name) {\n        console.log('LoadGabaritFileReject');\n        result = false;\n      }\n    });\n    return result;\n  };\n\n  /**************************************LOADER******************************************/\n\n  // quantile|0.5#slice|inner_eval\n  loadGabarit = (file: any, url: string) => {\n    let name = url.split('/');\n    if (this.GabaritValidator(name[name.length - 1])) {\n      let newGabarit: GabaritFile = {\n        queryID: 'null',\n        fileName: name[name.length - 1],\n        loaded: false,\n        globalGabarit: file.global,\n        templateGabaritPoint: [],\n        templateGabaritRegion: [],\n        templateGabaritLink: [],\n      };\n      file.templates.forEach((gab: any) => {\n        if (gab.type === 'point') {\n          newGabarit.templateGabaritPoint.push(gab);\n        }\n        if (gab.type === 'region') {\n          newGabarit.templateGabaritRegion.push(gab);\n        }\n        if (gab.type === 'link') {\n          newGabarit.templateGabaritLink.push(gab);\n        }\n      });\n      this.props.options.saveGabaritFile.push(newGabarit);\n    }\n  };\n\n  fillGlobalGabaritDefault = (file: any) => {\n    let defaultValue: GlobalGabaritDefault = {\n      colorMode: file.default.colorMode,\n      coords: file.default.coords,\n      linkURL: file.default.linkURL,\n      lowerLimit: file.default.lowerLimit,\n      mainMetric: file.default.mainMetric,\n      meta: file.default.meta,\n      metrics: file.default.metrics,\n      mode: file.default.mode,\n      orientedLink: file.default.orientedLink,\n      positionParameter: file.default.positionParameter,\n      textObj: file.default.textObj,\n      traceBack: file.default.traceBack,\n      traceBorder: file.default.traceBorder,\n    };\n    return defaultValue;\n  };\n\n  fetchUrl = async (url: string) => {\n    try {\n      let file = {};\n      // console.log(file);\n      let response = await fetch(url);\n\n      file = await response.json();\n      return file;\n    } catch (error) {\n      console.error(error);\n    }\n    return null;\n  };\n\n  loadDefaultGabarit = async (file: any, url: string) => {\n    let name = url.split('/');\n    let newGabarit: GabaritFile = {\n      queryID: 'null',\n      fileName: name[name.length - 1],\n      loaded: false,\n      globalGabarit: file.global,\n      templateGabaritPoint: [],\n      templateGabaritRegion: [],\n      templateGabaritLink: [],\n    };\n    let regions: any = [];\n    let points: any = [];\n    let links: any = [];\n    const defaultValue: GlobalGabaritDefault = this.fillGlobalGabaritDefault(file);\n\n    for (const region of file.templates.regions) {\n      try {\n        let file = {};\n        // console.log(file);\n        let response = await fetch(region);\n\n        file = await response.json();\n        regions.push(file);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    for (const point of file.templates.points) {\n      try {\n        let file = {};\n        // console.log(file);\n        let response = await fetch(point);\n\n        file = await response.json();\n        points.push(file);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    for (const link of file.templates.links) {\n      try {\n        let file = {};\n        // console.log(file);\n        let response = await fetch(link);\n\n        file = await response.json();\n        links.push(file);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    console.log(newGabarit);\n    this.fetchDataGabaritDefault(defaultValue, regions, points, links);\n\n    // this.props.options.saveDefaultGabaritFile = newGabarit;\n    // this.loaderGabarit(newGabarit, null);\n    // this.props.options.saveDefaultGabaritFile.loaded = true;\n  };\n\n  fillRegionDefault = (uneRegion: any, defaultValue: GlobalGabaritDefault, id: number) => {\n    let newRegion: RegionClass = initRegionCoordinateSpace(id);\n\n    const coor: Coord4D = {\n      xMin: uneRegion.coords.xMin.toString(),\n      xMax: uneRegion.coords.xMax.toString(),\n      yMin: uneRegion.coords.yMin.toString(),\n      yMax: uneRegion.coords.yMax.toString(),\n    };\n    //console.log(coor);\n\n    // add real value region and if is null replace by default gabarit\n    newRegion.linkURL = uneRegion.linkURL ? uneRegion.linkURL : defaultValue.linkURL;\n    newRegion.linkURL = uneRegion.meta ? uneRegion.meta : defaultValue.meta;\n    newRegion.linkURL = uneRegion.lowerLimitClass ? uneRegion.lowerLimitClass : defaultValue.lowerLimit;\n    newRegion.label = uneRegion.label;\n    newRegion.textObj = uneRegion.textObj ? uneRegion.textObj : defaultValue.textObj;\n    newRegion.mainMetric = uneRegion.mainMetric ? uneRegion.mainMetric : defaultValue.mainMetric;\n    newRegion.metrics = uneRegion.metrics ? uneRegion.metrics : defaultValue.metrics;\n    newRegion.colorMode = uneRegion.colorMode; // ? uneRegion.colorMode : defaultValue.colorMode;\n    newRegion.traceBack = uneRegion.traceBack; // ? uneRegion.traceBack : defaultValue.traceBack;\n    newRegion.traceBorder = uneRegion.traceBorder; // ? uneRegion.traceBorder : defaultValue.traceBorder;\n    newRegion.positionParameter = uneRegion.positionParameter ? uneRegion.positionParameter : defaultValue.positionParameter;\n    newRegion.idSVG = uneRegion.idSVG;\n    newRegion.orientedLink = uneRegion.orientedLink ? uneRegion.orientedLink : defaultValue.orientedLink;\n    newRegion.coords = coor;\n\n    newRegion.coordsDefault = coor;\n    newRegion.mode = uneRegion.mode;\n    newRegion.img = uneRegion.img;\n    newRegion.widthInitialSpaceDefault = uneRegion.widthInitialSpaceDefault;\n    newRegion.heightInitialSpaceDefault = uneRegion.heightInitialSpaceDefault;\n\n    //console.log(newRegion);\n\n    const newAllRegion: RegionClass[] = this.props.options.regionCoordinateSpace.concat(newRegion);\n\n    this.props.onOptionsChange({\n      ...this.props.options,\n      regionCoordinateSpace: newAllRegion,\n    });\n    //console.log(newAllRegion);\n  };\n\n  fillPointDefault = (unPoint: any, defaultValue: GlobalGabaritDefault, id: number) => {\n    // let newPoint: PointClass = initPoint(id);\n    // linkURL: LinkURLClass,\n    // meta: string,\n    // lowerLimitClass: LowerLimitClass[],\n    // label: string,\n    // textObj: TextObject,\n    // mainMetric: Metric,\n    // metrics: Metric[],\n    // colorMode: boolean,\n    // traceBack: boolean,\n    // traceBorder: boolean,\n    // positionParameter: PositionParameterClass,\n    // name: string,\n    // valueMetric: string,\n    // drawGraphicMarker: SelectableValue<string>,\n    // shape: SelectableValue<string>,\n    // //sizeWidth: SelectableValue<string>,\n    // sizeWidth: string,\n    // sizeHeight: SelectableValue<string>,\n    // rotateArrow: string,\n    // positionShapeX: string,\n    // positionShapeY: string,\n    // color: string,\n    // associateOrientedLinksIn: any[],\n    // associateOrientedLinksOut: any[],\n    // widthInitialSpaceDefault: string,\n    // heightInitialSpaceDefault: string,\n    // positionXDefault: string,\n    // positionYDefault: string\n  };\n\n  fillLinkDefault = (unLink: any, defaultValue: GlobalGabaritDefault) => {\n    // console.log(unLink);\n  };\n\n  fetchDataGabaritDefault = (defaultValue: GlobalGabaritDefault, regions: any, points: any, links: any) => {\n    // regions\n\n    let id = 0;\n    for (const line of this.props.options.regionCoordinateSpace) {\n      if (id < line.id) {\n        id = line.id;\n      }\n    }\n\n    for (const line of regions) {\n      for (const uneRegion of line.regions) {\n        this.fillRegionDefault(uneRegion, defaultValue, id);\n        ++id;\n      }\n    }\n\n    // points\n\n    let idPoint = 0;\n    for (const line of this.props.options.arrayPoints) {\n      if (idPoint < line.id) {\n        idPoint = line.id;\n      }\n    }\n    idPoint += 1;\n\n    for (const line of points) {\n      for (const unPoint of line.points) {\n        this.fillPointDefault(unPoint, defaultValue, idPoint);\n        ++idPoint;\n      }\n    }\n\n    // links\n    for (const line of links) {\n      for (const unLink of line.links) {\n        this.fillLinkDefault(unLink, defaultValue);\n      }\n    }\n  };\n\n  fetchGabarit = () => {\n    //this.result = fetchConfFile(this.props.options.saveGabaritURL);\n    this.props.options.saveGabaritURL.forEach(async (url) => {\n      try {\n        // console.log(url);\n        let file = {};\n        // console.log(file);\n        let response = await fetch(url);\n        file = await response.json();\n        this.loadGabarit(file, url);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  };\n\n  /**************************************INPUT******************************************/\n\n  onToggleGabaritUrl = (isOpen: boolean): void => {\n    this.setState({\n      collapseSelectURL: isOpen,\n    });\n  };\n\n  onToggleGabarit = (isOpen: boolean): void => {\n    this.setState({\n      collapseGabarit: isOpen,\n    });\n  };\n\n  onGabaritUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n    newData = event.currentTarget.value;\n    this.props.onOptionsChange({ ...this.props.options, gabaritUrlInput: newData });\n  };\n\n  /*\n   * add url for default gabarit\n   */\n  onGabaritDefaultUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData = '';\n\n    newData = event.currentTarget.value;\n    this.setState({\n      gabaritDefaultUrlInput: newData,\n    });\n  };\n\n  onGabaritListUrlChanged = (event: { currentTarget: HTMLInputElement }) => {\n    let newData: string[] = this.props.options.saveGabaritURL.slice();\n    newData[parseInt(event.currentTarget.id, 10)] = event.currentTarget.value;\n    this.props.options.saveGabaritURL = newData;\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n  };\n\n  addGabaritUrlInput = (onClick: { currentTarget: HTMLButtonElement }) => {\n    let valid = true;\n    this.props.options.saveGabaritURL.forEach((element) => {\n      if (this.props.options.gabaritUrlInput === element) {\n        valid = false;\n      }\n    });\n    if (valid === true) {\n      this.props.options.saveGabaritURL.push(this.props.options.gabaritUrlInput);\n      this.props.options.gabaritUrlInput = '';\n      this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n    }\n  };\n\n  addGabaritDefaultUrlInput = async (onClick: { currentTarget: HTMLButtonElement }) => {\n    this.props.onOptionsChange({\n      ...this.props.options,\n      saveGabaritDefaultUrl: this.state.gabaritDefaultUrlInput,\n    });\n    try {\n      const url = this.state.gabaritDefaultUrlInput;\n      let file = {};\n      let response = await fetch(this.state.gabaritDefaultUrlInput);\n\n      file = await response.json();\n      this.loadDefaultGabarit(file, url);\n    } catch (error) {\n      console.log('Default gabarit error:');\n      console.error(error);\n    }\n  };\n\n  gabaritDeletUrl = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isUrl = (url: string) => url === this.props.options.saveGabaritURL[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveGabaritURL.splice(this.props.options.saveGabaritURL.findIndex(isUrl), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n  };\n\n  gabaritDeletFile = (onClick: { currentTarget: HTMLButtonElement }) => {\n    const isGabarit = (gabarit: GabaritFile) => gabarit === this.props.options.saveGabaritFile[parseInt(onClick.currentTarget.id, 10)];\n    this.props.options.saveGabaritFile.splice(this.props.options.saveGabaritFile.findIndex(isGabarit), 1);\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritFile: this.props.options.saveGabaritFile });\n  };\n\n  tempo = () => {\n    // console.log(this.props.options.saveGabaritURL);\n  };\n\n  /**************************************LOADER******************************************/\n\n  checkLoaderGabarit = (onClick: { currentTarget: HTMLButtonElement }) => {\n    if (!this.props.options.saveGabaritFile[parseInt(onClick.currentTarget.id, 10)].loaded) {\n      this.loaderGabarit(this.props.options.saveGabaritFile[parseInt(onClick.currentTarget.id, 10)], parseInt(onClick.currentTarget.id, 10));\n    } else {\n      console.log('loadGabaritReject');\n    }\n  };\n\n  // loadGabaritDefault = (gab)\n\n  loaderGabarit = (gab: GabaritFile, idx: number | null) => {\n    let tmpLabelAPosition: LabelCoord2D;\n    let tmpLabelBPosition: LabelCoord2D;\n    let tmpToolTipA: SelectableValue<string>;\n    let tmpToolTipB: SelectableValue<string>;\n    /* Point */\n    //template\n    let filterPoint: Filtred[][] = [];\n    let posPoint: LabelCoord2D[] = [];\n    let namePoint: string[] = [];\n    let metaPoint: string[] = [];\n    let labelPoint: string[] = [];\n    let positionParameterPoint: PositionParameterClass[] = [];\n    let mainMetricPoint: Metric[] = [];\n    let metricPoint: Metric[][] = [];\n    let linkURLPoint: LinkURLClass[] = [];\n    let valueMetricPoint: string[] = [];\n    let drawGraphicMarkerPoint: Array<SelectableValue<string>> = [];\n    let shapePoint: Array<SelectableValue<string>> = [];\n    //let sizeWidthPoint: Array<SelectableValue<string>> = [];\n    let sizeWidthPoint: string[] = [];\n    let sizeHeightPoint: Array<SelectableValue<string>> = [];\n    let colorPoint: string[] = [];\n    let associateOrientedLinksInPoint: OrientedLinkClass[][] = [];\n    let associateOrientedLinksOutPoint: OrientedLinkClass[][] = [];\n    //global\n    //let lowerLimit: LowerLimitClass;\n    let colorMode: boolean;\n    let traceBack: boolean;\n    let traceBorder: boolean;\n    let textObj: TextObject;\n    let style: Style;\n    let generateValue: GenerateTextObject;\n    let generateAux: GenerateTextObject;\n\n    let initialWidth: number =\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.xMin, 10);\n    let initialHeight: number =\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMax, 10) -\n      parseInt(this.props.options.coordinateSpaceInitial.coordinate.yMin, 10);\n\n    /* Region */\n    //Template\n\n    const gabaritFileTmp: GabaritFile = gab;\n    colorMode = Boolean(gabaritFileTmp.globalGabarit.colorMode);\n    traceBack = Boolean(gabaritFileTmp.globalGabarit.traceBack);\n    traceBorder = Boolean(gabaritFileTmp.globalGabarit.traceBorder);\n\n    ////// Text Object\n    generateValue = {\n      legendElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.legendElement,\n      numericFormatElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.numericFormatElement,\n      unit: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.unit,\n      displayObjectInTooltip: Boolean(gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.displayObjectInTooltip),\n      addColorTextElement: Boolean(gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.addColorTextElement),\n      colorTextElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.colorTextElement,\n      addColorBackElement: Boolean(gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.addColorBAckElement),\n      colorBackElement: gabaritFileTmp.globalGabarit.textObject.valueGenerateObjectText.colorBackElement,\n    };\n\n    generateAux = {\n      legendElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.legendElement,\n      numericFormatElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.numericFormatElement,\n      unit: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.unit,\n      displayObjectInTooltip: Boolean(gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.displayObjectInTooltip),\n      addColorTextElement: Boolean(gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.addColorTextElement),\n      colorTextElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.colorTextElement,\n      addColorBackElement: Boolean(gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.addColorBAckElement),\n      colorBackElement: gabaritFileTmp.globalGabarit.textObject.generateAuxiliaryElement.colorBackElement,\n    };\n\n    style = {\n      bold: Boolean(gabaritFileTmp.globalGabarit.textObject.style.bold),\n      italic: Boolean(gabaritFileTmp.globalGabarit.textObject.style.italic),\n      underline: Boolean(gabaritFileTmp.globalGabarit.textObject),\n    };\n\n    textObj = new TextObject(\n      gabaritFileTmp.globalGabarit.textObject.value,\n      Boolean(gabaritFileTmp.globalGabarit.textObject.isTextTooltip),\n      gabaritFileTmp.globalGabarit.textObject.colorBack,\n      gabaritFileTmp.globalGabarit.textObject.colorText,\n      style,\n      Boolean(gabaritFileTmp.globalGabarit.textObject.generateObjectText),\n      generateValue,\n      generateAux\n    );\n\n    gabaritFileTmp.templateGabaritPoint.forEach((point, index) => {\n      if (point.labelfix.toString() === 'false') {\n        posPoint.push(coordParse(point.xylabel));\n      } else {\n        posPoint.push(coordParse(point.xylabelfix));\n      }\n      filterPoint.push(filterParse(point.filtered));\n      namePoint.push(point.name);\n      metaPoint.push(point.meta);\n      labelPoint.push(point.label); // c'est le label du point qui est afficher pour la selection\n      mainMetricPoint.push({\n        key: point.mainMetric.key,\n        unit: point.mainMetric.unit,\n        format: point.mainMetric.format,\n        keyValue: '',\n        filter: filterPoint[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: point.mainMetric.manageValue,\n      });\n      if (mainMetricPoint[index].refId === null) {\n        mainMetricPoint[index].refId = 'A';\n      }\n      point.metrics.forEach((element) => {\n        metricPoint[index].push(element);\n      });\n      valueMetricPoint.push(point.valueMetric);\n      drawGraphicMarkerPoint.push({\n        label: point.drawGraphicMarker.label,\n        value: point.drawGraphicMarker.value,\n      });\n      shapePoint.push(point.shape);\n      sizeWidthPoint.push(point.sizeWidth);\n      sizeHeightPoint.push(point.sizeHeight);\n      if (point.color.length !== 0) {\n        colorPoint.push(point.color);\n      } else {\n        colorPoint.push(gabaritFileTmp.globalGabarit.defaultColor);\n      }\n      associateOrientedLinksInPoint.push(point.associateOrientedLinksIn);\n      associateOrientedLinksOutPoint.push(point.associateOrientedLinksOut);\n      tmpToolTipA = { label: point.positionParameter.tooltipA, value: point.positionParameter.tooltipA };\n      tmpToolTipB = { label: point.positionParameter.tooltipB, value: point.positionParameter.tooltipB };\n      tmpLabelAPosition = coordParse(point.positionParameter.xylabelA);\n      tmpLabelBPosition = coordParse(point.positionParameter.xylabelB);\n      positionParameterPoint.push(\n        new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n      );\n      linkURLPoint.push(new LinkURLClass(point.linkURL.followLink, point.linkURL.hoveringTooltipLink, point.linkURL.hoveringTooltipText));\n    });\n    // console.log('posPoint:')\n    // console.log(posPoint) //\n    // console.log('filterPoint:')\n    // console.log(filterPoint) //\n    // console.log('namePoint:')\n    // console.log(namePoint) //\n    // console.log('metaPoint:')\n    // console.log(metaPoint) //\n    // console.log('labelPoint:')\n    // console.log(labelPoint) //\n    // console.log('mainMetricPoint:')\n    // console.log(mainMetricPoint) //\n    // console.log('metricPoint:')\n    // console.log(metricPoint) // ----fail\n    // console.log('valueMetricPoint:')\n    // console.log(valueMetricPoint) //\n    // console.log('drawGraphicMarkerPoint:')\n    // console.log(drawGraphicMarkerPoint) //\n    // console.log('shapePoint:')\n    // console.log(shapePoint) //\n    // console.log('sizeWidthPoint:')\n    // console.log(sizeWidthPoint) //\n    // console.log('sizeHeightPoint')\n    // console.log(sizeHeightPoint) //\n    // console.log('colorPoint')\n    // console.log(colorPoint) //\n    // console.log('associateOrientedLinksOutPoint:')\n    // console.log(associateOrientedLinksOutPoint) // --------fail\n    // console.log('associateOrientedLinksInPoint:')\n    // console.log(associateOrientedLinksInPoint) // ---------fail\n    // console.log('colorMode:')\n    // console.log(colorMode) //\n    // console.log('traceBack:')\n    // console.log(traceBack) //\n    // console.log('traceBorder:')\n    // console.log(traceBorder) //\n    // console.log('linkURLPoint')\n    // console.log(linkURLPoint) // ------------------fail\n    // console.log('positionParameterPoint')\n    // console.log(positionParameterPoint) //\n\n    let newID = 0;\n    this.props.options.arrayPoints.forEach((element) => {\n      newID++;\n    });\n\n    let labelCoordX: string[] = [];\n    let labelCoordY: string[] = [];\n    let labelCoord: LabelCoord2D[] = [];\n\n    posPoint.forEach((pos, index) => {\n      if (gabaritFileTmp.templateGabaritPoint[index].labelfix.toString() === 'false') {\n        this.props.data.series.forEach((element) => {\n          const nameQuery: string[] =\n            element.name?.split(',').map((value) => {\n              return value.replace(/[\\\"{}]/gm, '');\n            }) || [];\n\n          for (const oneQuery of nameQuery) {\n            if (nameQuery && nameQuery.length > 0) {\n              const keyValue: string[] = oneQuery.split('=');\n              if (keyValue[0] === pos.x) {\n                labelCoordX.push(keyValue[1]);\n              }\n              if (keyValue[0] === pos.y) {\n                labelCoordY.push(keyValue[1]);\n              }\n            }\n          }\n        });\n        if (labelCoordX.length > labelCoordY.length) {\n          labelCoordX.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        } else {\n          labelCoordY.forEach((element, index) => {\n            if (!labelCoordX[index]) {\n              labelCoordX[index] = pos.x;\n            }\n            if (!labelCoordY[index]) {\n              labelCoordY[index] = pos.y;\n            }\n          });\n        }\n      }\n    });\n    labelCoordX.forEach((element, index) => {\n      labelCoord.push({ x: labelCoordX[index], y: labelCoordY[index] });\n    });\n\n    if (labelCoord.length > 0) {\n      for (const pos of labelCoord) {\n        filterPoint.forEach((element, index) => {\n          if (metricPoint.length > 0) {\n            let toLoad: PointClass = new PointClass(\n              newID + 1,\n              linkURLPoint[index],\n              metaPoint[index],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelPoint[index] + newID,\n              textObj,\n              mainMetricPoint[index],\n              metricPoint[index],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterPoint[index],\n              namePoint[index] + newID,\n              valueMetricPoint[index],\n              drawGraphicMarkerPoint[index],\n              shapePoint[index],\n              sizeWidthPoint[index],\n              sizeHeightPoint[index],\n              '',\n              pos.x,\n              pos.y,\n              colorPoint[index],\n              associateOrientedLinksInPoint[index],\n              associateOrientedLinksOutPoint[index],\n              initialWidth.toString(),\n              initialHeight.toString(),\n              pos.x,\n              pos.y\n            );\n            newID++;\n            this.props.options.arrayPoints.push(toLoad);\n          } else {\n            let toLoad: PointClass = new PointClass(\n              newID + 1,\n              linkURLPoint[index],\n              metaPoint[index],\n              gabaritFileTmp.globalGabarit.lowerLimit,\n              labelPoint[index] + newID,\n              textObj,\n              mainMetricPoint[index],\n              [],\n              colorMode,\n              traceBack,\n              traceBorder,\n              positionParameterPoint[index],\n              namePoint[index] + newID,\n              valueMetricPoint[index],\n              drawGraphicMarkerPoint[index],\n              shapePoint[index],\n              sizeWidthPoint[index],\n              sizeHeightPoint[index],\n              '',\n              pos.x,\n              pos.y,\n              colorPoint[index],\n              associateOrientedLinksInPoint[index],\n              associateOrientedLinksOutPoint[index],\n              initialWidth.toString(),\n              initialHeight.toString(),\n              pos.x,\n              pos.y\n            );\n            newID++;\n            this.props.options.arrayPoints.push(toLoad);\n          }\n        });\n      }\n    } else {\n      filterPoint.forEach((element, index) => {\n        if (metricPoint.length > 0) {\n          let toLoad: PointClass = new PointClass(\n            newID + 1,\n            linkURLPoint[index],\n            metaPoint[index],\n            gabaritFileTmp.globalGabarit.lowerLimit,\n            labelPoint[index] + newID,\n            textObj,\n            mainMetricPoint[index],\n            metricPoint[index],\n            colorMode,\n            traceBack,\n            traceBorder,\n            positionParameterPoint[index],\n            namePoint[index] + newID,\n            valueMetricPoint[index],\n            drawGraphicMarkerPoint[index],\n            shapePoint[index],\n            sizeWidthPoint[index],\n            sizeHeightPoint[index],\n            '',\n            posPoint[index].x,\n            posPoint[index].y,\n            colorPoint[index],\n            associateOrientedLinksInPoint[index],\n            associateOrientedLinksOutPoint[index],\n            initialWidth.toString(),\n            initialHeight.toString(),\n            posPoint[index].x,\n            posPoint[index].y\n          );\n          newID++;\n          this.props.options.arrayPoints.push(toLoad);\n        } else {\n          let toLoad: PointClass = new PointClass(\n            newID + 1,\n            linkURLPoint[index],\n            metaPoint[index],\n            gabaritFileTmp.globalGabarit.lowerLimit,\n            labelPoint[index] + newID,\n            textObj,\n            mainMetricPoint[index],\n            [],\n            colorMode,\n            traceBack,\n            traceBorder,\n            positionParameterPoint[index],\n            namePoint[index] + newID,\n            valueMetricPoint[index],\n            drawGraphicMarkerPoint[index],\n            shapePoint[index],\n            sizeWidthPoint[index],\n            sizeHeightPoint[index],\n            '',\n            posPoint[index].x,\n            posPoint[index].y,\n            colorPoint[index],\n            associateOrientedLinksInPoint[index],\n            associateOrientedLinksOutPoint[index],\n            initialWidth.toString(),\n            initialHeight.toString(),\n            posPoint[index].x,\n            posPoint[index].y\n          );\n          newID++;\n          this.props.options.arrayPoints.push(toLoad);\n        }\n      });\n    }\n\n    /* Link */\n    //Template\n    let filterLink: Filtred[][] = []; //\n    let posALink: LabelCoord2D[] = []; //\n    let posBLink: LabelCoord2D[] = []; //\n    let posCLink: LabelCoord2D[] = []; //\n    let nameLink: string[] = []; //\n    let metaLink: string[] = []; //\n    let labelLink: string[] = []; //\n    let positionParameterLink: PositionParameterClass[] = []; //\n    let mainMetricALink: Metric[] = []; //\n    let metricALink: Metric[][] = []; //\n    let mainMetricBLink: Metric[] = []; //\n    let metricBLink: Metric[][] = []; //\n    let linkURLLink: LinkURLClass[] = []; //\n    let orientationLink: Array<SelectableValue<string>> = []; //\n    let sizeLink: string[] = []; //\n    let colorALink: string[] = []; //\n    let colorBLink: string[] = []; //\n    let valueMetricALink: string[] = []; //\n    let valueMetricBLink: string[] = []; //\n    let pointInLink: string[] = []; //\n    let pointOutLink: string[] = []; //\n    let regionInLink: string[] = []; //\n    let regionOutLink: string[] = []; //\n    let isIncurvedLink: Array<SelectableValue<boolean>> = []; //\n\n    gabaritFileTmp.templateGabaritLink.forEach((link, index) => {\n      if (link.labelfix.toString() === 'false') {\n        posALink.push(coordParse(link.xylabelA));\n        posBLink.push(coordParse(link.xylabelB));\n        posCLink.push(coordParse(link.xylabelC));\n      } else {\n        posALink.push(coordParse(link.xylabelfixA));\n        posBLink.push(coordParse(link.xylabelfixB));\n        posCLink.push(coordParse(link.xylabelfixC));\n      }\n      filterLink.push(filterParse(link.filtered));\n      nameLink.push(link.name);\n      metaLink.push(link.meta);\n      labelLink.push(link.label);\n      mainMetricALink.push({\n        key: link.mainMetric.key,\n        unit: link.mainMetric.unit,\n        format: link.mainMetric.format,\n        keyValue: '',\n        filter: filterLink[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: link.mainMetric.manageValue,\n      });\n      if (mainMetricALink[index].refId === null) {\n        mainMetricALink[index].refId = 'A';\n      }\n      link.metrics.forEach((element) => {\n        metricALink[index].push(element);\n      });\n      mainMetricBLink.push({\n        key: link.mainMetricB.key,\n        unit: link.mainMetricB.unit,\n        format: link.mainMetricB.format,\n        keyValue: '',\n        filter: filterLink[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: link.mainMetricB.manageValue,\n      });\n      if (mainMetricALink[index].refId === null) {\n        mainMetricBLink[index].refId = 'A';\n      }\n      link.metricsB.forEach((element) => {\n        metricBLink[index].push(element);\n      });\n      valueMetricALink.push(link.valueMainMetricA);\n      valueMetricBLink.push(link.valueMainMetricB);\n      sizeLink.push(link.size);\n      if (link.colorCoordinateA.length !== 0) {\n        colorALink.push(link.colorCoordinateA);\n        colorBLink.push(link.colorCoordinateB);\n      } else {\n        colorALink.push(gabaritFileTmp.globalGabarit.defaultColor);\n        colorBLink.push(gabaritFileTmp.globalGabarit.defaultColor);\n      }\n      tmpToolTipA = { label: link.positionParameter.tooltipA, value: link.positionParameter.tooltipA };\n      tmpToolTipB = { label: link.positionParameter.tooltipB, value: link.positionParameter.tooltipB };\n      tmpLabelAPosition = coordParse(link.positionParameter.xylabelA);\n      tmpLabelBPosition = coordParse(link.positionParameter.xylabelB);\n      positionParameterLink.push(\n        new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n      );\n      linkURLLink.push(new LinkURLClass(link.linkURL.followlink, link.linkURL.hoveringTooltiplink, link.linkURL.hoveringTooltipTex));\n      orientationLink.push(link.orientationLink);\n      pointInLink.push(link.pointIn);\n      pointOutLink.push(link.pointOut);\n      regionInLink.push(link.regionIn);\n      regionOutLink.push(link.regionOut);\n      isIncurvedLink.push({ label: link.isIncurved.label, value: Boolean(link.isIncurved.value) });\n    });\n\n    newID = 0;\n    this.props.options.arrayPoints.forEach((element) => {\n      newID++;\n    });\n\n    filterLink.forEach((element, index) => {\n      let maA = metricALink.length;\n      let maB = metricBLink.length;\n      if (maA > 0 && maB > 0) {\n        console.log('1');\n        let toLoad: OrientedLinkClass = new OrientedLinkClass(\n          newID + 1,\n          linkURLLink[index],\n          metaLink[index],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelLink[index],\n          textObj,\n          mainMetricALink[index],\n          metricALink[index],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterLink[index],\n          nameLink[index],\n          orientationLink[index],\n          sizeLink[index],\n          posALink[index].x,\n          posALink[index].y,\n          colorALink[index],\n          posBLink[index].x,\n          posBLink[index].y,\n          colorBLink[index],\n          valueMetricALink[index],\n          valueMetricBLink[index],\n          pointInLink[index],\n          pointOutLink[index],\n          regionInLink[index],\n          regionOutLink[index],\n          1, /// à revoir\n          posCLink[index].x,\n          posCLink[index].y,\n          isIncurvedLink[index],\n          mainMetricBLink[index],\n          metricBLink[index],\n          initialWidth.toString(),\n          initialHeight.toString(),\n          posALink[index].x,\n          posALink[index].y,\n          posBLink[index].x,\n          posBLink[index].y,\n          posCLink[index].x,\n          posCLink[index].y\n        );\n        newID++;\n        this.props.options.arrayOrientedLinks.push(toLoad);\n      }\n      if (!(maA > 0) && maB > 0) {\n        console.log('2');\n\n        let toLoad: OrientedLinkClass = new OrientedLinkClass(\n          newID + 1,\n          linkURLLink[index],\n          metaLink[index],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelLink[index],\n          textObj,\n          mainMetricALink[index],\n          [],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterLink[index],\n          nameLink[index],\n          orientationLink[index],\n          sizeLink[index],\n          posALink[index].x,\n          posALink[index].y,\n          colorALink[index],\n          posBLink[index].x,\n          posBLink[index].y,\n          colorBLink[index],\n          valueMetricALink[index],\n          valueMetricBLink[index],\n          pointInLink[index],\n          pointOutLink[index],\n          regionInLink[index],\n          regionOutLink[index],\n          1, /// à revoir\n          posCLink[index].x,\n          posCLink[index].y,\n          isIncurvedLink[index],\n          mainMetricBLink[index],\n          metricBLink[index],\n          initialWidth.toString(),\n          initialHeight.toString(),\n          posALink[index].x,\n          posALink[index].y,\n          posBLink[index].x,\n          posBLink[index].y,\n          posCLink[index].x,\n          posCLink[index].y\n        );\n        newID++;\n        this.props.options.arrayOrientedLinks.push(toLoad);\n      } else if (maA > 0 && !(maB > 0)) {\n        console.log('3');\n\n        let toLoad: OrientedLinkClass = new OrientedLinkClass(\n          newID + 1,\n          linkURLLink[index],\n          metaLink[index],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelLink[index],\n          textObj,\n          mainMetricALink[index],\n          metricALink[index],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterLink[index],\n          nameLink[index],\n          orientationLink[index],\n          sizeLink[index],\n          posALink[index].x,\n          posALink[index].y,\n          colorALink[index],\n          posBLink[index].x,\n          posBLink[index].y,\n          colorBLink[index],\n          valueMetricALink[index],\n          valueMetricBLink[index],\n          pointInLink[index],\n          pointOutLink[index],\n          regionInLink[index],\n          regionOutLink[index],\n          1, /// à revoir\n          posCLink[index].x,\n          posCLink[index].y,\n          isIncurvedLink[index],\n          mainMetricBLink[index],\n          [],\n          initialWidth.toString(),\n          initialHeight.toString(),\n          posALink[index].x,\n          posALink[index].y,\n          posBLink[index].x,\n          posBLink[index].y,\n          posCLink[index].x,\n          posCLink[index].y\n        );\n        newID++;\n        this.props.options.arrayOrientedLinks.push(toLoad);\n      } else {\n        // console.log('4');\n        // console.log(posALink);\n        // console.log(posALink[index]);\n        // console.log(posBLink);\n        // console.log(posBLink[index]);\n        // console.log(posCLink);\n        // console.log(posCLink[index]);\n        let toLoad: OrientedLinkClass = new OrientedLinkClass(\n          newID + 1,\n          linkURLLink[index],\n          metaLink[index],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelLink[index],\n          textObj,\n          mainMetricALink[index],\n          [],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterLink[index],\n          nameLink[index],\n          orientationLink[index],\n          sizeLink[index],\n          posALink[index].x,\n          posALink[index].y,\n          colorALink[index],\n          posBLink[index].x,\n          posBLink[index].y,\n          colorBLink[index],\n          valueMetricALink[index],\n          valueMetricBLink[index],\n          pointInLink[index],\n          pointOutLink[index],\n          regionInLink[index],\n          regionOutLink[index],\n          1, /// à revoir\n          posCLink[index].x,\n          posCLink[index].y,\n          isIncurvedLink[index],\n          mainMetricBLink[index],\n          [],\n          initialWidth.toString(),\n          initialHeight.toString(),\n          posALink[index].x,\n          posALink[index].y,\n          posBLink[index].x,\n          posBLink[index].y,\n          posCLink[index].x,\n          posCLink[index].y\n        );\n        newID++;\n        //console.log(toLoad);\n        this.props.options.arrayOrientedLinks.push(toLoad);\n      }\n    });\n\n    /*  */\n    //Template\n    let filterRegion: Filtred[][] = []; //\n    let posRegion: Coord4D[] = []; //\n\n    let metaRegion: string[] = []; //\n    let labelRegion: string[] = []; //\n    let positionParameterRegion: PositionParameterClass[] = []; //\n    let mainMetricRegion: Metric[] = []; //\n    let metricRegion: Metric[][] = []; //\n    let linkURLRegion: LinkURLClass[] = [];\n    let idSVGRegion: string[] = [];\n    let modeRegion: boolean[] = [];\n    let imgRegion: string[] = [];\n    let orientedLinkAssociate: OrientedLinkClass[][] = [];\n\n    gabaritFileTmp.templateGabaritRegion.forEach((region, index) => {\n      if (region.labelfix.toString() === 'false') {\n        posRegion.push(coordParseRegion(region.xylabel));\n      } else {\n        posRegion.push(coordParseRegion(region.xylabelfix));\n      }\n      filterRegion.push(filterParseRegion(region.filtered));\n      linkURLRegion.push(region.linkURL);\n      metaRegion.push(region.meta);\n      labelRegion.push(region.label);\n      mainMetricRegion.push({\n        key: region.mainMetric.key,\n        unit: region.mainMetric.unit,\n        format: region.mainMetric.format,\n        keyValue: '',\n        filter: filterRegion[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: region.mainMetric.manageValue,\n      });\n      if (mainMetricRegion[index].refId === null) {\n        mainMetricRegion[index].refId = 'A';\n      }\n      region.metrics.forEach((element) => {\n        metricRegion[index].push(element);\n      });\n      mainMetricRegion.push({\n        key: region.mainMetric.key,\n        unit: region.mainMetric.unit,\n        format: region.mainMetric.format,\n        keyValue: '',\n        filter: filterRegion[index],\n        refId: gabaritFileTmp.queryID,\n        expr: '',\n        returnQuery: [],\n        manageValue: region.mainMetric.manageValue,\n      });\n      if (mainMetricRegion[index].refId === null) {\n        mainMetricRegion[index].refId = 'A';\n      }\n      region.metrics.forEach((element) => {\n        metricRegion[index].push(element);\n      });\n      modeRegion.push(region.mode);\n      idSVGRegion.push(region.idSVG);\n      imgRegion.push(region.img);\n\n      tmpToolTipA = { label: region.positionParameter.tooltipA, value: region.positionParameter.tooltipA };\n      tmpToolTipB = { label: region.positionParameter.tooltipB, value: region.positionParameter.tooltipB };\n      tmpLabelAPosition = coordParse(region.positionParameter.xylabelA);\n      tmpLabelBPosition = coordParse(region.positionParameter.xylabelB);\n      positionParameterRegion.push(\n        new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n      );\n      orientedLinkAssociate.push(region.orientedLink);\n    });\n\n    newID = 0;\n    this.props.options.regionCoordinateSpace.forEach((element) => {\n      newID++;\n    });\n\n    filterRegion.forEach((element, index) => {\n      if (metricRegion.length > 0) {\n        console.log('1');\n        let toLoad: RegionClass = new RegionClass(\n          newID + 1,\n          linkURLRegion[index],\n          metaRegion[index],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelRegion[index],\n          textObj,\n          mainMetricRegion[index],\n          metricRegion[index],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterRegion[index],\n          idSVGRegion[index],\n          orientedLinkAssociate[index],\n          posRegion[index],\n          posRegion[index],\n          modeRegion[index],\n          imgRegion[index],\n          initialWidth.toString(),\n          initialHeight.toString()\n        );\n        newID++;\n        this.props.options.regionCoordinateSpace.push(toLoad);\n      } else {\n        console.log('2');\n        let toLoad: RegionClass = new RegionClass(\n          newID + 1,\n          linkURLRegion[index],\n          metaRegion[index],\n          gabaritFileTmp.globalGabarit.lowerLimit,\n          labelRegion[index],\n          textObj,\n          mainMetricRegion[index],\n          [],\n          colorMode,\n          traceBack,\n          traceBorder,\n          positionParameterRegion[index],\n          idSVGRegion[index],\n          orientedLinkAssociate[index],\n          posRegion[index],\n          posRegion[index],\n          modeRegion[index],\n          imgRegion[index],\n          initialWidth.toString(),\n          initialHeight.toString()\n        );\n        newID++;\n        this.props.options.regionCoordinateSpace.push(toLoad);\n      }\n    });\n  };\n\n  // gabaritFileTmp.templateGabaritRegion.forEach((region, index) => {\n  //   if (region.labelfix.toString() === 'false') {\n  //     posARegion.push(coordParse(region.xylabel));\n  //     posBRegion.push(coordParse(region.xylabel0));\n  //   } else {\n  //     posARegion.push(coordParse(region.xylabelfix));\n  //     posBRegion.push(coordParse(region.xylabelfix0));\n  //   }\n  //   filterRegion.push(filterParse(region.filtered));\n  //   metaRegion.push(region.meta);\n  //   labelRegion.push(region.label);\n  //   mainMetricRegion.push({\n  //     key: region.mainMetric.key,\n  //     unit: region.mainMetric.unit,\n  //     format: region.mainMetric.format,\n  //     keyValue: '',\n  //     filter: filterRegion[index],\n  //     refId: gabaritFileTmp.queryID,\n  //     expr: '',\n  //     returnQuery: [],\n  //     manageValue: region.mainMetric.manageValue,\n  //   });\n  //   if (mainMetricPoint[index].refId === null) {\n  //     mainMetricPoint[index].refId = 'A';\n  //   }\n  //   region.metrics.forEach(element => {\n  //     metricRegion[index].push(element);\n  //   });\n  //   //metric todo\n  //   tmpToolTipA = { label: region.positionParameter.tooltipA, value: region.positionParameter.tooltipA };\n  //   tmpToolTipB = { label: region.positionParameter.tooltipB, value: region.positionParameter.tooltipB };\n  //   tmpLabelAPosition = coordParse(region.positionParameter.xylabelA);\n  //   tmpLabelBPosition = coordParse(region.positionParameter.xylabelB);\n  //   positionParameterRegion.push(\n  //     new PositionParameterClass(tmpLabelAPosition.x, tmpLabelAPosition.y, tmpLabelBPosition.x, tmpLabelBPosition.y, tmpToolTipA, tmpToolTipB)\n  //   );\n  //   linkURLRegion.push(new LinkURLClass(region.linkURL.followRegion, region.linkURL.hoveringTooltipRegion, region.linkURL.hoveringTooltipTex));\n  //   idSVGRegion.push(region.idSVG);\n  //   modeRegion.push(Boolean(region.mode));\n  //   imgRegion.push(region.img);\n  //   const coor: Coord4D = { xMax: '', xMin: '', yMax: '', yMin: '' };\n  //   let id = -1;\n  //   for (const line of this.props.options.regionCoordinateSpace) {\n  //     if (line.id > id) {\n  //       id = line.id;\n  //     }\n  //   }\n  //   id += 1;\n\n  //   const mainMetricRR: Metric = { key: '', keyValue: '', refId: '', expr: '', manageValue: 'avg', format: '', unit: '', returnQuery: [] };\n\n  //     let regionPush: RegionClass = new RegionClass(\n  //       id,\n  //     linkURL,\n  //     meta,\n  //     uneRegion.lowerLimitClass,\n  //     uneRegion.label,\n  //     uneRegion.textObj,\n  //     uneRegion.mainMetric,\n  //     uneRegion.metrics,\n  //     uneRegion.colorMode,\n  //     uneRegion.traceBack,\n  //     uneRegion.traceBorder,\n  //     uneRegion.positionParameter,\n  //     uneRegion.idSVG,\n  //     uneRegion.orientedLink,\n  //     {\n  //     xMin: uneRegion.coords.xMin.toString(),\n  //     xMax: uneRegion.coords.xMax.toString(),\n  //     yMin: uneRegion.coords.yMin.toString(),\n  //     yMax: uneRegion.coords.yMax.toString(),\n  // },\n  // {\n  //     xMin: uneRegion.coords.xMin.toString(),\n  //     xMax: uneRegion.coords.xMax.toString(),\n  //     yMin: uneRegion.coords.yMin.toString(),\n  //     yMax: uneRegion.coords.yMax.toString(),\n  // },\n  // uneRegion.mode,\n  // uneRegion.img,\n  // uneRegion.widthInitialSpaceDefault,\n  // uneRegion.heightInitialSpaceDefault\n  // );\n  //     );\n  //     console.log(regionPush);\n\n  //     const newRegion: RegionClass[] = this.props.options.regionCoordinateSpace;\n  //     newRegion.push(regionPush);\n  //     this.props.onOptionsChange({\n  //       ...this.props.options,\n  //       regionCoordinateSpace: newRegion,\n  //     });\n  //   });\n  //   if (idx) {\n  //     this.props.options.saveGabaritFile[idx].loaded = true;\n  //   }\n  // };\n\n  //   const nn: RegionClass = new RegionClass(\n  //     id,\n  //     uneRegion.linkURL,\n  //     uneRegion.meta,\n  //     uneRegion.lowerLimitClass,\n  //     uneRegion.label,\n  //     uneRegion.textObj,\n  //     uneRegion.mainMetric,\n  //     uneRegion.metrics,\n  //     uneRegion.colorMode,\n  //     uneRegion.traceBack,\n  //     uneRegion.traceBorder,\n  //     uneRegion.positionParameter,\n  //     uneRegion.idSVG,\n  //     uneRegion.orientedLink,\n  //     {\n  //     xMin: uneRegion.coords.xMin.toString(),\n  //     xMax: uneRegion.coords.xMax.toString(),\n  //     yMin: uneRegion.coords.yMin.toString(),\n  //     yMax: uneRegion.coords.yMax.toString(),\n  // },\n  // {\n  //     xMin: uneRegion.coords.xMin.toString(),\n  //     xMax: uneRegion.coords.xMax.toString(),\n  //     yMin: uneRegion.coords.yMin.toString(),\n  //     yMax: uneRegion.coords.yMax.toString(),\n  // },\n  // uneRegion.mode,\n  // uneRegion.img,\n  // uneRegion.widthInitialSpaceDefault,\n  // uneRegion.heightInitialSpaceDefault\n  // );\n\n  gabaritUrlDisplay = (props: any): JSX.Element => {\n    if (props.list.lenght !== 0) {\n      const list = props.list.map((url: string, index: number) => (\n        <div\n          key={'GabaritUrlDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'GabaritUrl' + index.toString()}\n            label={'Url'}\n            labelWidth={5}\n            inputWidth={20}\n            onChange={this.onGabaritListUrlChanged.bind(this)}\n            type=\"string\"\n            value={url || ''}\n          />\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.gabaritDeletUrl.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  gabaritDisplay = (props: any): JSX.Element => {\n    if (props.list.lenght !== 0) {\n      const list = props.list.map((gabarit: GabaritFile, index: number) => (\n        <div\n          key={'GabaritDiv' + index.toString()}\n          style={{\n            display: 'flex',\n          }}\n        >\n          <FormField\n            id={index.toString()}\n            key={'Gabarit' + index.toString()}\n            label={'Gabarit'}\n            labelWidth={5}\n            inputWidth={20}\n            type=\"string\"\n            value={gabarit.fileName || ''}\n            readOnly\n          />\n          <FormLabel width={15}>Querry ID</FormLabel>\n          <Select\n            onChange={(value) => this.onChangeSelectQuerryID(value, index)}\n            allowCustomValue={false}\n            options={this.state.selectQuerryID}\n            width={10}\n            value={{ label: this.props.options.saveGabaritFile[index].queryID, value: this.props.options.saveGabaritFile[index].queryID }}\n          />\n          <Button id={index.toString()} key={'ButtunLoad' + index.toString()} onClick={this.checkLoaderGabarit.bind(this)}>\n            Load\n          </Button>\n          <Button variant=\"danger\" id={index.toString()} key={'ButtunDel' + index.toString()} onClick={this.gabaritDeletFile.bind(this)}>\n            Del\n          </Button>\n        </div>\n      ));\n      return <div>{list}</div>;\n    }\n    return <div>No targets avalaible</div>;\n  };\n\n  delAll = () => {\n    // this.props.options.arrayCoordinateSpace = [];\n    // this.props.options.arrayOrientedLinks = [];\n    // this.props.options.arrayPoints = [];\n    this.props.options.saveGabaritURL = [];\n    this.props.options.saveGabaritURL = [];\n    // this.props.options.saveGabaritURL.mono = [];\n    this.props.onOptionsChange({ ...this.props.options, saveGabaritURL: this.props.options.saveGabaritURL });\n  };\n\n  toDel = () => {\n    console.log(this.props.options.arrayPoints);\n    // console.log(this.props.options.arrayPoints);\n  };\n\n  render() {\n    const { options } = this.props;\n    return (\n      <div>\n        <div className=\"defaultGabarit\">\n          <FormField\n            label=\"Gabarit Default Url\"\n            labelWidth={10}\n            key={'GabaritDefaultUrl'}\n            inputWidth={18}\n            onChange={this.onGabaritDefaultUrlChanged.bind(this)}\n            type=\"string\"\n            value={this.state.gabaritDefaultUrlInput || ''}\n          />\n          <Button key={'AddGabaritDefaultUrl'} onClick={this.addGabaritDefaultUrlInput}>\n            Add\n          </Button>\n        </div>\n        <Collapse isOpen={this.state.collapseSelectURL} label=\"Url List\" onToggle={this.onToggleSelectUrl}>\n          <FormField\n            label=\"Gabarit Url\"\n            labelWidth={8}\n            key={'GabaritUrl'}\n            inputWidth={20}\n            onChange={this.onGabaritUrlChanged.bind(this)}\n            type=\"string\"\n            value={options.gabaritUrlInput || ''}\n          />\n          <Button key={'AddGabaritUrl'} onClick={this.addGabaritUrlInput}>\n            Add\n          </Button>\n          <div className=\"section gf-form-group\">\n            <Button onClick={this.fetchGabarit}>Finish</Button>\n            <this.gabaritUrlDisplay list={options.saveGabaritURL} />\n            <Button key={'delAll'} onClick={this.delAll}>\n              Del all urls\n            </Button>\n          </div>\n          <Button onClick={this.toDel}>toDel</Button>\n        </Collapse>\n        <Collapse isOpen={this.state.collapseGabarit} label=\"Gabarit List\" onToggle={this.onToggleGabarit}>\n          <this.gabaritDisplay list={options.saveGabaritFile} />\n        </Collapse>\n      </div>\n    );\n  }\n}\nexport default Gabarit;\n","import React from 'react';\n\nimport { SimpleOptions } from './types';\n\nimport { PanelEditorProps } from '@grafana/data';\nimport { Tab, TabsBar, TabContent } from '@grafana/ui';\n\nimport CoordinateSpaceInitialClass from 'components/coordinateSpaceInitial';\nimport ImportInput from 'components/importInput';\nimport ManageCoordinateSpace from 'components/CoordinateSpace/manageCoordinateSpace';\n\nimport Display from 'components/display';\nimport Gabarit from 'components/gabarit';\n\nimport 'style/SimpleEditor.css';\n\ninterface Props extends PanelEditorProps<SimpleOptions> {}\n\ninterface State {\n  collapseDashboardData: boolean;\n  collapseTimeSelector: boolean;\n  collapsePanelData: boolean;\n\n  /**\n   * index\n   */\n  collapsePrincipalTarget: boolean;\n\n  tabsVariable: boolean[];\n\n  tabsCoordinateSpace: boolean[];\n}\n\n/**\n * class SimpleEditor\n */\nexport class SimpleEditor extends React.PureComponent<PanelEditorProps<SimpleOptions>, State, Props> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapseDashboardData: false,\n      collapsePanelData: false,\n      collapseTimeSelector: false,\n      collapsePrincipalTarget: false,\n      tabsVariable: [true, false, false, false, false],\n      tabsCoordinateSpace: [true, false, false, false],\n    };\n  }\n  /********************* Display Button in relation to View or Edit */\n\n  // /**\n  //  * edit default text\n  //  */\n  // myCallBackDefaultText = (datafromChild: {\n  // \t/**\n  // \t * new police\n  // \t */\n  // \tpolice: string,\n  // \t/**\n  // \t * new size\n  // \t */\n  // \tsize: string,\n  // \t/**\n  // \t * new style (italic, bold, ...)\n  // \t */\n  // \tstyle: string,\n  // }) => {\n  // \tthis.props.onOptionsChange({\n  // \t\t...this.props.options,\n  // \t\tpolice: datafromChild.police,\n  // \t\tsize: datafromChild.size,\n  // \t\tstyle: datafromChild.style,\n  // \t});\n  // }\n\n  /// Adrien\n  // onInfoChanged = ({ target }: any) => {\n  // \tthis.props.onOptionsChange({ ...this.props.options, info: target.value });\n  // }\n\n  onRefreshChanged = ({ target }: any) => {\n    this.props.onOptionsChange({ ...this.props.options, refresh: target.value });\n  };\n\n  onTimeZoneChanged = ({ target }: any) => {\n    this.props.onOptionsChange({ ...this.props.options, timezone: target.value });\n  };\n\n  onPanelChanged = ({ target }: any, index: any) => {\n    this.props.onOptionsChange({ ...this.props.options, Id: target.value });\n  };\n\n  onToggleDashboardData = (isOpen: boolean): void => {\n    this.setState({\n      collapseDashboardData: isOpen,\n    });\n  };\n\n  onToggleTimeSelector = (isOpen: boolean): void => {\n    this.setState({\n      collapseTimeSelector: isOpen,\n    });\n  };\n\n  onTogglePanelData = (isOpen: boolean): void => {\n    this.setState({\n      collapsePanelData: isOpen,\n    });\n  };\n\n  onTogglePrincipalTargets = (isOpen: boolean): void => {\n    this.setState({\n      collapsePrincipalTarget: isOpen,\n    });\n  };\n\n  /**\n   * switch tab\n   * @param {number} id id to to new tab\n   */\n  private goToTab = (id: number) => {\n    const oldValue: boolean[] = this.state.tabsVariable.slice();\n    const size: number = oldValue.length;\n    for (let i = 0; i < size; i++) {\n      oldValue[i] = i === id ? true : false;\n    }\n    this.setState({\n      tabsVariable: oldValue,\n    });\n  };\n\n  /**\n   * swtith tab Coordinate space\n   */\n  private goToTabCoordinateSpace = (id: number) => {\n    const oldValue: boolean[] = this.state.tabsCoordinateSpace.slice();\n    const size: number = oldValue.length;\n    for (let i = 0; i < size; i++) {\n      oldValue[i] = i === id ? true : false;\n    }\n    this.setState({\n      tabsCoordinateSpace: oldValue,\n    });\n  };\n\n  componentDidMount = async () => {\n    // console.log('mount Editor');\n\n    // delete data if new dashboard\n    const url: string = window.location.pathname;\n    const arrayUrl: string[] = url.split('/');\n    // console.log('currentDashboard : ' + this.props.options.currentDashboard);\n    for (const element of arrayUrl) {\n      if (element === 'new' && !this.props.options.currentDashboard) {\n        // console.log('new dashboard');\n        this.props.onOptionsChange({\n          ...this.props.options,\n          arrayPoints: [],\n          arrayOrientedLinks: [],\n          regionCoordinateSpace: [],\n          saveImportUrl: { total: [], mono: [], multi: [] },\n          saveImportFile: [],\n          totalUrlInput: '',\n          multiUrlInput: '',\n          monoUrlInput: '',\n          baseMap: { image: '', layerImage: '', modeSVG: true, idSVG: '', width: '', height: '', isUploaded: false },\n        });\n      }\n    }\n\n    // display Button of Panel if is mode Edit\n    await Promise.resolve('Success').then(() => {\n      this.props.onOptionsChange({\n        ...this.props.options,\n        displayButton: true,\n        currentDashboard: false,\n      });\n    });\n  };\n\n  componentWillUnmount = async () => {\n    // console.log('unMount Editor');\n\n    // not display Button of Panel if is mode View\n    await Promise.resolve('Success').then(() => {\n      this.props.onOptionsChange({\n        ...this.props.options,\n        displayButton: false,\n        currentDashboard: true,\n      });\n    });\n  };\n\n  /**\n   * HTML code\n   */\n  render() {\n    const l10n = require('Localization/en.json');\n\n    return (\n      <div className=\"divSimpleEditor\">\n        <TabsBar className=\"page-header tabs\" hideBorder={false}>\n          <Tab key=\"tabDisplay\" label={l10n.simpleEditor.display} active={this.state.tabsVariable[0]} onChangeTab={() => this.goToTab(0)} />\n          <Tab\n            key=\"tabSpaceInitialVisualisation\"\n            label={l10n.simpleEditor.spaceInitialVisualisation}\n            active={this.state.tabsVariable[1]}\n            onChangeTab={() => this.goToTab(1)}\n          />\n          <Tab\n            key=\"tabCoordinateSpace\"\n            label={l10n.simpleEditor.CoordinateSpace}\n            active={this.state.tabsVariable[2]}\n            onChangeTab={() => this.goToTab(2)}\n          />\n          {/* <Tab key='tabMetricsSettings'\n\t\t\t\t\t\tlabel={l10n.simpleEditor.metricsSettings}\n\t\t\t\t\t\tactive={this.state.tabsVariable[3]}\n\t\t\t\t\t\tonChangeTab={() => this.goToTab(3)}\n\t\t\t\t\t/> */}\n          <Tab key=\"tabGabarit\" label=\"Gabarit\" active={this.state.tabsVariable[3]} onChangeTab={() => this.goToTab(3)} />\n          <Tab key=\"tabImportInput\" label=\"Import Files\" active={this.state.tabsVariable[4]} onChangeTab={() => this.goToTab(4)} />\n        </TabsBar>\n        <TabContent>\n          {this.state.tabsVariable[0] && <Display options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />}\n          {this.state.tabsVariable[1] && (\n            <CoordinateSpaceInitialClass options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n          )}\n          {this.state.tabsVariable[2] && (\n            <div>\n              <TabsBar className=\"page-header tabs\" hideBorder={false}>\n                <Tab\n                  key=\"tabDisplayManageCoordinateSpace\"\n                  label=\"Region\"\n                  active={this.state.tabsCoordinateSpace[0]}\n                  onChangeTab={() => this.goToTabCoordinateSpace(0)}\n                />\n                <Tab\n                  key=\"tabDisplayPoint\"\n                  label=\"Point\"\n                  active={this.state.tabsCoordinateSpace[1]}\n                  onChangeTab={() => this.goToTabCoordinateSpace(1)}\n                />\n                {/* <Tab key='tabDisplayLink'\n\t\t\t\t\t\t\t\t\tlabel='Link'\n\t\t\t\t\t\t\t\t\tactive={this.state.tabsCoordinateSpace[2]}\n\t\t\t\t\t\t\t\t\tonChangeTab={() => this.goToTabCoordinateSpace(2)}\n\t\t\t\t\t\t\t\t/> */}\n                <Tab\n                  key=\"tabDisplayOrientedLink\"\n                  label=\"OrientedLink\"\n                  active={this.state.tabsCoordinateSpace[3]}\n                  onChangeTab={() => this.goToTabCoordinateSpace(3)}\n                />\n              </TabsBar>\n              <TabContent>\n                {this.state.tabsCoordinateSpace[0] && (\n                  <ManageCoordinateSpace\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={true}\n                    isPoint={false}\n                    isLink={false}\n                  />\n                )}\n                {this.state.tabsCoordinateSpace[1] && (\n                  <ManageCoordinateSpace\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={false}\n                    isPoint={true}\n                    isLink={false}\n                  />\n                )}\n                {this.state.tabsCoordinateSpace[3] && (\n                  <ManageCoordinateSpace\n                    options={this.props.options}\n                    onOptionsChange={this.props.onOptionsChange}\n                    data={this.props.data}\n                    isRegion={false}\n                    isPoint={false}\n                    isLink={true}\n                  />\n                )}\n              </TabContent>\n            </div>\n          )}\n          {/*\n\t\t\t\t\t\tthis.state.tabsVariable[3] &&\n\n\t\t\t\t\t\t<div className='adrien'>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapseDashboardData}\n\t\t\t\t\t\t\t\tlabel='Dashboard Data Display' onToggle={this.onToggleDashboardData}>\n\t\t\t\t\t\t\t\t<DashboardData options={this.props.options}\n\t\t\t\t\t\t\t\t\tonOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapseTimeSelector}\n\t\t\t\t\t\t\t\tlabel='Time Selector Display' onToggle={this.onToggleTimeSelector}>\n\t\t\t\t\t\t\t\t<TimeSelector options={this.props.options}\n\t\t\t\t\t\t\t\t\tonOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapsePrincipalTarget}\n\t\t\t\t\t\t\t\tlabel='Metrics Principal' onToggle={this.onTogglePrincipalTargets}>\n\t\t\t\t\t\t\t\t<MainTarget options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.collapsePanelData} label='Metrics Aux' onToggle={this.onTogglePanelData}>\n\t\t\t\t\t\t\t\t<PanelData options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} */}\n          {this.state.tabsVariable[3] && (\n            <div>\n              <Gabarit options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n            </div>\n          )}\n          {this.state.tabsVariable[4] && (\n            <div>\n              <ImportInput options={this.props.options} onOptionsChange={this.props.onOptionsChange} data={this.props.data} />\n            </div>\n          )}\n        </TabContent>\n      </div>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { SimpleOptions, defaults } from './types';\nimport { SimplePanel } from 'SimplePanel';\nimport { SimpleEditor } from 'SimpleEditor';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setDefaults(defaults).setEditor(SimpleEditor);\n","import { SelectableValue, DataFrame } from '@grafana/data';\nimport { LowerLimitClass } from 'Models/LowerLimitClass';\nimport { PointClass } from 'Models/PointClass';\nimport { LinkClass } from 'Models/LinkClass';\nimport { OrientedLinkClass } from 'Models/OrientedLinkClass';\nimport { RegionClass, Coord4D } from 'Models/RegionClass';\nimport { Style } from 'components/Parametrage/styleComponent';\n//import { TextObject } from 'Models/TextObjectClass';\nimport { Filtred } from 'Functions/loaderGabarit';\nimport { PositionParameterClass } from 'Models/PositionParameterClass';\nimport { TextObject } from 'Models/TextObjectClass';\n\n/**\n * interface to save texte settings (police, size, style)\n */\nexport interface TexteSettings {\n  /** police simple panel */\n  police: string;\n  /** size simple panel */\n  size: string;\n  /** style simple panel */\n  style: Style;\n}\n\nexport interface LowerLimit {\n  id: number;\n  lowerLimitMin: string;\n  lowerLimitMax: string;\n  backColor: string;\n  borderColor: string;\n  sizeBorder: string;\n}\n\nexport interface GlobalGabaritDefault {\n  colorMode: boolean;\n  coords: Coord4D;\n  linkURL: any[];\n  lowerLimit: LowerLimit[];\n  mainMetric: Metric;\n  meta: string;\n  metrics: Metric[];\n  mode: boolean;\n  orientedLink: OrientedLinkClass[];\n  positionParameter: PositionParameterClass;\n  textObj: TextObject;\n  traceBack: boolean;\n  traceBorder: boolean;\n}\n\nexport interface GabaritFile {\n  fileName: string;\n  queryID: string;\n  loaded: boolean;\n  globalGabarit: GlobalGabarit;\n  templateGabaritPoint: TemplateGabaritPoint[];\n  templateGabaritRegion: TemplateGabaritRegion[];\n  templateGabaritLink: TemplateGabaritLink[];\n}\n\nexport interface GlobalGabarit {\n  lowerLimit: any[];\n  textObject: any;\n  defaultColor: string;\n  colorMode: boolean;\n  traceBack: boolean;\n  traceBorder: boolean;\n}\n\nexport interface TemplateGabaritPoint {\n  filtered: string;\n  labelfix: boolean;\n  xylabel: string;\n  xylabelfix: string;\n  type: string;\n  name: string;\n  meta: string;\n  label: string;\n  positionParameter: any;\n  mainMetric: Metric;\n  metrics: Metric[];\n  linkURL: any;\n  valueMetric: string;\n  drawGraphicMarker: SelectableValue<string>;\n  shape: SelectableValue<string>;\n  // sizeWidth: SelectableValue<string>;\n  sizeWidth: string;\n  sizeHeight: SelectableValue<string>;\n  color: string;\n  associateOrientedLinksIn: OrientedLinkClass[];\n  associateOrientedLinksOut: OrientedLinkClass[];\n}\n\nexport interface TemplateGabaritRegion {\n  filtered: string;\n  labelfix: string;\n  xylabel: string;\n  //xylabel0: string;\n  xylabelfix: string;\n  //xylabelfix0: string;\n  type: string;\n  meta: string;\n  label: string;\n  positionParameter: any;\n  mainMetric: Metric;\n  metrics: Metric[];\n  linkURL: any;\n  idSVG: string;\n  mode: boolean;\n  img: string;\n  orientedLink: OrientedLinkClass[];\n}\n\nexport interface TemplateGabaritLink {\n  filtered: string;\n  labelfix: boolean;\n  xylabelA: string;\n  xylabelB: string;\n  xylabelC: string;\n  xylabelfixA: string;\n  xylabelfixB: string;\n  xylabelfixC: string;\n  type: string;\n  name: string;\n  meta: string;\n  label: string;\n  positionParameter: any;\n  mainMetric: Metric;\n  metrics: Metric[];\n  mainMetricB: Metric;\n  metricsB: Metric[];\n  linkURL: any;\n  orientationLink: SelectableValue<string>;\n  size: string;\n  colorCoordinateA: string;\n  colorCoordinateB: string;\n  valueMainMetricA: string;\n  valueMainMetricB: string;\n  pointIn: string;\n  pointOut: string;\n  regionIn: string;\n  regionOut: string;\n  zIndex: string;\n  isIncurved: SelectableValue<boolean>;\n}\n\nexport declare type TManageValue = 'avg' | 'sum' | 'err';\n\nexport interface Metric {\n  key: string;\n  unit: string;\n  /** ecriture scientifique */\n  format: string;\n  keyValue: string;\n  filter?: Filtred[];\n  refId?: string;\n  expr?: string;\n  returnQuery?: DataFrame[];\n  /** avg, count, error */\n  manageValue: TManageValue;\n}\n\nexport interface MetricSettings {\n  /**\n   * fond is active (color)\n   */\n  fondIsActive: boolean;\n  /**\n   * contour is active\n   */\n  contourIsActive: boolean;\n  /**\n   * seuil for variable color\n   */\n  lowerLimit: LowerLimitClass[];\n  /**\n   * color mode for parametresGeneriques\n   */\n  colorMode: boolean;\n}\n\nexport interface MetricQuery {\n  __name__: string;\n  job: string;\n  //key: string,\n}\n\nexport interface ResultQuery {\n  metric: any;\n  value: any[];\n}\n\nexport interface DataQuery {\n  resultType: string;\n  result: ResultQuery[];\n}\n\nexport interface ReturnQuery {\n  status: string;\n  data: DataQuery;\n}\n\nexport interface Target {\n  expr: string;\n  refId?: string;\n}\n\nexport interface Background {\n  /** background image */\n  image: string;\n  /** layer image */\n  layerImage: string;\n  /** use image svg or value get by user */\n  modeSVG: boolean;\n  /** size width image or get by user */\n  width: string;\n  /** size height image or get by user */\n  height: string;\n  /** id svg for tag */\n  idSVG: string;\n  /** check if is Url or Uploaded from computer */\n  isUploaded: boolean;\n  /** name of uploaded file if image is uploaded from computer */\n  nameUploadedImage?: string;\n}\n\nexport interface TimeRange {\n  from: string;\n  to: string;\n}\n\nexport interface UrlList {\n  total: string[];\n  multi: string[];\n  mono: string[];\n}\n\nexport interface ImportFile {\n  name: string;\n  content: string;\n}\n\nexport interface CoordinateSpaceInitial {\n  /** coordinate for initial space */\n  coordinate: Coord4D;\n  /** display zone in SimplePanel (orange rectangle) */\n  displayArea: boolean;\n  /** if true use default coor 0-100 else use -100-100 */\n  //defaultReferentiel: boolean;\n}\n\ninterface Legend {\n  hiddenLegend: boolean;\n  x: number;\n  y: number;\n}\n\n/**\n * Stock the values between SimpleEditor and SimplePanel\n */\n// tslint:disable-next-line:interface-name\nexport interface SimpleOptions extends MetricSettings {\n  /** legend */\n  legend: Legend;\n\n  /** display: police, size and style text */\n  display: TexteSettings;\n  /****to do */\n  displayButton: boolean;\n  /**\n   * Espace de visualisation initial\n   */\n  coordinateSpaceInitial: CoordinateSpaceInitial;\n\n  /**\n   * Espace de coordonnees\n   */\n  regionCoordinateSpace: RegionClass[];\n\n  /**\n   * Liste des points générés depuis l'onglet Point\n   */\n  arrayPoints: PointClass[];\n\n  /**\n   * Liste des liens générés depuis l'onglet Link\n   */\n  arrayLinks: LinkClass[];\n\n  /**\n   * Liste des liens orientés générés depuis l'onglet OrientedLink\n   */\n  arrayOrientedLinks: OrientedLinkClass[];\n\n  /**\n   * Raw format of dashboard's json\n   */\n  contentJson: string;\n  /**\n   * Object format of dashboard's json\n   */\n  Json: any;\n  /**\n   * Id of dashboard\n   */\n  Id: number;\n  /**\n   * Uid of dashboard\n   */\n  uid: string;\n  /**\n   * Title of dashboard\n   */\n  title: string;\n  /**\n   * Style of dashboard\n   */\n  style: string;\n  /**\n   * True of false is the dashboard is editable\n   */\n  editable: string;\n  /**\n   * Version number of the dashboard\n   */\n  version: number;\n  /**\n   * Refresh time that is picked\n   */\n  refresh: SelectableValue<string>;\n  /**\n   * Shemas version number of the dashboard\n   */\n  shemaVersion: number;\n  /**\n   * Timezone of the dashboard\n   */\n  timezone: string;\n  /**\n   * Actual panel selected in \"Time selector display\"\n   */\n  actualPanel: SelectableValue<string>;\n  /**\n   * List of panel selectable in the dashboard\n   */\n  panelList: Array<SelectableValue<string>>;\n  /**\n   * Id of the selected panel\n   */\n  panelId: number;\n  /**\n   * Type of the selected panel\n   */\n  panelType: string;\n  /**\n   * List of targets in the selected panel\n   */\n  panelTargets: Target[];\n  /**\n   * List of targets loaded for fetch data\n   */\n  promTargets: Target[];\n  /**\n   * List of target load at init for fetch data\n   */\n  promGlobalTargets: Target[];\n  /**\n   * Time range selected for fetch data\n   */\n  timeRange: TimeRange;\n  /**\n   * Input of editable target\n   */\n  personalTarget: Target;\n  /**\n   * Time instant selected for fetch data\n   */\n  timeQuery: string;\n  /**\n   * Input of prometheus server url\n   */\n  promUrl: string;\n  /**\n   * List of query that will be send to the server\n   */\n  queryProm: string[];\n  /**\n   * List of iniot query that will be send to the server\n   */\n  queryPromGlobal: string[];\n  /**\n   * List of range query that will be send to the server\n   */\n  queryPromRange: string[];\n  /**\n   * List of time that can be picked in \"Time selector display\"\n   */\n  listStep: Array<SelectableValue<string>>;\n  /**\n   * Return of the prometheus's API call\n   */\n  jsonQueryReturn: ReturnQuery[];\n  /**\n   * Return of the init prometheus's API call\n   */\n  jsonGlobalQueryReturn: ReturnQuery[];\n  /**\n   * TODO\n   */\n  mainTarget: Target;\n  /**\n   * TODO\n   */\n  mainQueryProm: string;\n  /**\n   * TODO\n   */\n  mainQueryReturn: ReturnQuery;\n\n  testMainQueryReturn: any;\n\n  coordinatesToDrawLinkWithClick: [\n    {\n      id: number;\n    },\n    {\n      x: number;\n      y: number;\n      labelPoint: string;\n      point: any;\n      labelRegion: string;\n      region: any;\n    },\n    {\n      x: number;\n      y: number;\n      labelPoint: string;\n      point: any;\n      labelRegion: string;\n      region: any;\n    },\n    {\n      x: number;\n      y: number;\n      labelPoint: string;\n      point: any;\n      labelRegion: string;\n      region: any;\n    }\n  ];\n\n  indexOrientedLink: number;\n\n  indexPoint: number;\n\n  indexRegion: number;\n\n  listCollapsePoint: boolean[];\n\n  listCollapseOrientedLink: boolean[];\n  /** background image with property */\n  baseMap: Background;\n  saveImportUrl: UrlList;\n  saveImportFile: ImportFile[];\n  totalUrlInput: string;\n  multiUrlInput: string;\n  monoUrlInput: string;\n\n  zIndexOrientedLink: number;\n  orientedLinkToUpgrade: SelectableValue<OrientedLinkClass>;\n  orientedLinkToDowngrade: SelectableValue<OrientedLinkClass>;\n  checkIndexMultiLink: number;\n\n  newPoint: boolean;\n  newOrientedLink: boolean;\n\n  currentDashboard: boolean;\n\n  gabaritUrlInput: string;\n\n  saveGabaritDefaultUrl: string;\n\n  saveGabaritURL: string[];\n  saveGabaritFile: GabaritFile[];\n  saveDefaultGabaritFile: GabaritFile | null;\n  gabaritDefault: GabaritFile;\n\n  updateOnlyInitialSpace: boolean;\n\n  loopDrawOrientedLink: number;\n}\n\nexport const defaults: SimpleOptions = {\n  saveGabaritDefaultUrl: '',\n  saveDefaultGabaritFile: null,\n  legend: { hiddenLegend: true, x: 0, y: 0 },\n  baseMap: { image: '', layerImage: '', modeSVG: true, width: '', height: '', idSVG: '', isUploaded: false },\n  // imageUrl: 'https://upload.wikimedia.org/wikipedia/en/b/be/Locator_Grid.png',\n  coordinateSpaceInitial: {\n    coordinate: {\n      xMin: '0',\n      xMax: '0',\n      yMin: '0',\n      yMax: '0',\n    },\n    displayArea: true,\n  },\n  displayButton: false,\n  regionCoordinateSpace: [],\n  arrayPoints: [],\n  arrayLinks: [],\n  arrayOrientedLinks: [],\n  display: {\n    police: 'Helvetica',\n    size: '1em',\n    style: { italic: false, bold: false, underline: false },\n  },\n  fondIsActive: true,\n  contourIsActive: true,\n  lowerLimit: [],\n  colorMode: true,\n  contentJson: 'contenu du dashboard',\n  Id: 0,\n  uid: '',\n  title: '',\n  style: '',\n  editable: '',\n  version: 0,\n  refresh: { value: '0', label: '0' },\n  shemaVersion: 0,\n  timezone: '',\n  actualPanel: { value: '0', label: '0' },\n  panelList: [{ value: '0', label: '0' }],\n  panelId: 0,\n  panelType: '',\n  panelTargets: [],\n  promTargets: [],\n  promGlobalTargets: [],\n  Json: {},\n  timeRange: { from: '2020-01-02 00:00:00', to: '2020-01-02 00:00:00' },\n  personalTarget: { expr: '' },\n  timeQuery: '2020-01-02 00:00:00',\n  promUrl: 'http://localhost:9090/api/v1/',\n  queryProm: [],\n  queryPromGlobal: [],\n  queryPromRange: [],\n  listStep: [{ value: '0', label: '0' }],\n  jsonQueryReturn: [],\n  jsonGlobalQueryReturn: [],\n  mainTarget: { expr: '' },\n  mainQueryProm: '',\n  mainQueryReturn: {\n    status: '',\n    data: {\n      resultType: '',\n      result: [\n        {\n          metric: {\n            __name__: '',\n            job: '',\n            //key: '',\n          },\n          value: [],\n        },\n      ],\n    },\n  },\n  testMainQueryReturn: {},\n  coordinatesToDrawLinkWithClick: [\n    {\n      id: 0,\n    },\n    {\n      x: 0,\n      y: 0,\n      labelPoint: '',\n      point: {},\n      labelRegion: '',\n      region: {},\n    },\n    {\n      x: 0,\n      y: 0,\n      labelPoint: '',\n      point: {},\n      labelRegion: '',\n      region: {},\n    },\n    {\n      x: 0,\n      y: 0,\n      labelPoint: '',\n      point: {},\n      labelRegion: '',\n      region: {},\n    },\n  ],\n  indexOrientedLink: 0,\n  indexPoint: 0,\n  indexRegion: 0,\n  listCollapsePoint: [],\n  listCollapseOrientedLink: [],\n  saveImportUrl: {\n    total: [],\n    multi: [],\n    mono: [],\n  },\n  saveImportFile: [],\n  totalUrlInput: '',\n  multiUrlInput: '',\n  monoUrlInput: '',\n  zIndexOrientedLink: 1,\n  orientedLinkToUpgrade: {},\n  orientedLinkToDowngrade: {},\n  checkIndexMultiLink: 0,\n  newPoint: true,\n  newOrientedLink: true,\n  currentDashboard: false,\n  loopDrawOrientedLink: 0,\n  gabaritUrlInput: '',\n  saveGabaritURL: [],\n  saveGabaritFile: [],\n  gabaritDefault: {\n    queryID: 'A',\n    fileName: 'default',\n    loaded: false,\n    globalGabarit: {\n      lowerLimit: [\n        {\n          id: 0,\n          lowerLimitMin: '0',\n          lowerLimitMax: '0',\n          backColor: 'blue',\n          borderColor: 'red',\n          sizeBorder: '1px',\n        },\n      ],\n      textObject: {\n        value: 'default',\n        isTextTooltip: false,\n        colorBack: 'blue',\n        colorText: 'black',\n        style: {\n          bold: false,\n          italic: false,\n          underline: false,\n        },\n        generateObjectText: false,\n        valueGenerateObjectText: {\n          legendElement: 'default',\n          numericFormatElement: 'default',\n          unit: 'default',\n          displayObjectInTooltip: false,\n          addColorTextElement: false,\n          colorTextElement: 'black',\n          addColorBackElement: false,\n          colorBackElement: 'white',\n        },\n        generateAuxiliaryElement: {\n          legendElement: 'default',\n          numericFormatElement: 'default',\n          unit: 'default',\n          displayObjectInTooltip: false,\n          addColorTextElement: false,\n          colorTextElement: 'black',\n          addColorBackElement: false,\n          colorBackElement: 'white',\n        },\n      },\n      defaultColor: 'black',\n      colorMode: true,\n      traceBack: true,\n      traceBorder: true,\n    },\n    templateGabaritPoint: [],\n    templateGabaritRegion: [],\n    templateGabaritLink: [],\n  },\n  updateOnlyInitialSpace: false,\n};\n"],"sourceRoot":""}